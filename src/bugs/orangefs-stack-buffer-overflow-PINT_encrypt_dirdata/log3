---executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 12
----- directly resend shmid 12
----- executor 3 write_call_output, size 19043, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 19043, flag collect 0
----- executor 3 signal number : 842
----- completed 17
execute_call 0, 10139, 0, 0
execute_one loop: 0, 0, 10139
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10156, 0, 0
execute_one loop: 0, 0, 10156
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 831 tid 831

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 831, pid 831, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 02:59:27] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 10179, 0
execute_one time: 0, 10179
2023/03/25 03:59:27 for select break: 1
2023/03/25 03:59:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 43, 10180, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1730
----- executor 2 executes write_coverage_signal cov->size 12078, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3395
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 284
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 536
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1553
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 10179, 0
execute_one time: 0, 10179
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1487
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 46, flag collect 0
----- executor 1 signal number : 17
executor 1 server cover_cnt 4 output_pos_value 1618
----- executor 2 signal number : 127
----- executor 2 executes write_coverage_signal cov->size 1861, flag collect 0
----- executor 2 signal number : 564
----- executor 2 executes write_coverage_signal cov->size 1863, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 2 signal number : 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 42, 10183, 0
before receive testcase: 0 1
----- executor 0 signal number : 173
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 148
----- executor 0 executes write_coverage_signal cov->size 1883, flag collect 0
----- executor 0 signal number : 14
----- executor 0 executes write_coverage_signal cov->size 1883, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
executor 0 server cover_cnt 12 output_pos_value 5789
time breakdown 0: 41, 10185, 0
before receive testcase: 0 1
2023/03/25 03:59:27 for select break: 1
2023/03/25 03:59:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 03:59:27 for select break: 1
2023/03/25 03:59:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 03:59:27 for select break: 1
2023/03/25 03:59:27 --------- executor 2 receive reply, reply.done 1
2023/03/25 03:59:27 wg wait finish
2023/03/25 03:59:27 ------ all executors finish execution
2023/03/25 03:59:27 exec time: 10227
2023/03/25 03:59:27 ----- PS len: 4
2023/03/25 03:59:27 [CLIENT] executor 3 has 20 replies
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 1023 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 972 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 288 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 842 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 03:59:27 [SERVER] executor 0 has 12 replies
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 3395 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 1553 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 173 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 148 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 03:59:27 [SERVER] executor 1 has 4 replies
2023/03/25 03:59:27 ------- fuzzer executor 1 receive 1487 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/25 03:59:27 [SERVER] executor 2 has 11 replies
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 1730 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 127 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 564 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 03:59:27 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 03:59:27 fsMds: [map[] map[] map[] map[]]
executor 2 server cover_cnt 11 output_pos_value 3280
time breakdown 2: 42, 10187, 0
before receive testcase: 0 0
2023/03/25 03:59:27 ----- no new client coverage: false, true
2023/03/25 03:59:27 ----- enqueue testcases with server coveraged
2023/03/25 03:59:27 disable threaded and collide
2023/03/25 03:59:27 prog length: 6
2023/03/25 03:59:27 prog length: 20
2023/03/25 03:59:27 HasCrashFail:true HasNetFail:false
03:59:27 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x40800, 0x40)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1f79810e9", 0x7}, {&(0x7f0000000440)}, {&(0x7f0000000540)="119a66f8e9fca5365d5bc3740504dd07ec9f97693656f80fb49f32bdd6c1875d8fe83e80b29e372b8d9c54074df48093364c0f0b75d2431e3b35e922d57dc83641319d99b0539d0750857f434a5bb519ca0b30d7aee2e63ff66827457653821da53db40298cf8f103226ff268175c8772f83ed37bdc05501b83495a0d5251e0b341f6af6cd4d54b74074b90f8595894e25dc241b96a26ce887e883e84c99c367f47857e01e7f1f3857fc62188f59cc9dc711cc3f30baba1b3ebbf1360815971b87d2608c0dd732c19ad4c718ee7f8b32bd9b7c5424f368237b4a82186ba158113723faf45649f743817f108c1f", 0xed}], 0x3, 0xf7, 0x7)
r2 = dup(r0)
fstat(r2, &(0x7f0000000680))
r3 = fcntl$dupfd(r1, 0x406, r1)
r4 = open$dir(&(0x7f0000000440)='./file0\x00', 0x40, 0x14a)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f0000000700))
fsetxattr$security_smack_transmute(r3, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r5 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r5, 0x40b, &(0x7f00000000c0))
pwritev(r5, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xfffffee6}], 0x3, 0x6, 0x9)
fsetxattr$user(r5, &(0x7f0000000740), &(0x7f0000000780)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x2)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r3, &(0x7f0000000380), &(0x7f0000000480)=ANY=[@ANYBLOB="05030200000000000000000009c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5d334a890a271256f13fea94df6557edf579d8e83a30133f37c637174454e2e54f6b477149a5c0cbf1c7a2"], 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4248
remove dir: /root/orangefs-client/dfs-0-66
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 02:59:27] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[D 03/25/2023 02:59:27] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 02:59:27] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 02:59:27] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 02:59:27] Error: Could not initialize server subsystems
[E 03/25/2023 02:59:27] Error: Could not initialize server; aborting.
[E 03/25/2023 02:59:29] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:31] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:33] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:35] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:37] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:37] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 02:59:37] *** Out of retries.
[E 03/25/2023 02:59:37] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 02:59:37] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 02:59:37] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:39] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:41] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:43] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:45] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:47] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:47] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 02:59:47] *** Out of retries.
[E 03/25/2023 02:59:47] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 02:59:47] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 02:59:47] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:49] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:51] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:53] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:55] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
lstat(/root/orangefs-client/dfs-0-66/file0) failedremove dir time 30097
-----finish removing dir
mkdir time 17
executor 3 create dir /root/orangefs-client/dfs-0-67 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-67
receive_execute: 6, 30114
receive_execute: 4, 30114
receive_execute: 8, 30114
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 30115
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
[E 03/25/2023 02:59:57] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 02:59:57] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 02:59:57] *** Out of retries.
[E 03/25/2023 02:59:57] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 02:59:57] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
----- executor 3 write_call_output, size 6391, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6391, flag collect 1
----- executor 3 cover number : 1748, signal number : 2059
----- completed 7
execute_call 0, 10038, 0, 2
execute_one loop: 0, 0, 10040
cover_reset in execute_call
-----executor 0 collect shmids 13
----- directly resend shmid 13
----- executor 3 write_call_output, size 9277, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 9277, flag collect 1
----- executor 3 cover number : 2244, signal number : 1109
----- completed 8
execute_call 0, 10, 0, 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 2 collect shmids 21
----- directly resend shmid 21
-----executor 2 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 2 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 25
----- directly resend shmid 25
-----executor 2 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 20
----- directly resend shmid 20
----- executor 3 write_call_output, size 32765, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 2610, signal number : 980
----- completed 17
execute_call 0, 10143, 0, 4
execute_one loop: 0, 0, 10147
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20204, 0, 0
execute_one loop: 0, 0, 20204
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 847 tid 847

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 847, pid 847, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:00:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20226, 1
execute_one time: 0, 20227
2023/03/25 04:00:17 for select break: 1
2023/03/25 04:00:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 30126, 20227, 0
before receive testcase: 0 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 20227, 0
execute_one time: 0, 20227
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 719, signal number : 899
executor 1 server cover_cnt 1 output_pos_value 1622
----- executor 0 cover number : 2484, signal number : 3092
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 04:00:17 for select break: 1
2023/03/25 04:00:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 cover number : 2281, signal number : 2853
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1305, signal number : 1533
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 892, signal number : 1027
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 30122, 20233, 0
before receive testcase: 0 0
----- executor 0 cover number : 116, signal number : 142
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 282, signal number : 281
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 42, signal number : 34
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 1
----- executor 0 cover number : 727, signal number : 119
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 1
----- executor 0 cover number : 727, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 1
----- executor 2 cover number : 100, signal number : 75
----- executor 2 executes write_coverage_signal cov->size 1821, flag collect 1
----- executor 0 cover number : 727, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 2 cover number : 727, signal number : 124
----- executor 2 executes write_coverage_signal cov->size 1823, flag collect 1
----- executor 0 cover number : 312, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 2 cover number : 727, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 0 cover number : 312, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 0 cover number : 312, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 2 cover number : 316, signal number : 9
----- executor 2 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 2 cover number : 316, signal number : 6
----- executor 2 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 0 cover number : 312, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 0 cover number : 312, signal number : 2
----- executor 2 cover number : 316, signal number : 6
----- executor 2 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 2 cover number : 316, signal number : 6
----- executor 2 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 2 cover number : 316, signal number : 6
executor 2 server cover_cnt 11 output_pos_value 11030
executor 0 server cover_cnt 12 output_pos_value 12669
2023/03/25 04:00:17 for select break: 1
2023/03/25 04:00:17 for select break: 1
2023/03/25 04:00:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:00:17 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:00:17 wg wait finish
2023/03/25 04:00:17 ------ all executors finish execution
2023/03/25 04:00:17 exec time: 50364
2023/03/25 04:00:17 ----- PS len: 4
2023/03/25 04:00:17 [CLIENT] executor 3 has 20 replies
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 30118, 20249, 0
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 2059 signal and 1748 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 1109 signal and 2244 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 [SERVER] executor 1 has 1 replies
2023/03/25 04:00:17 ------- fuzzer executor 1 receive 899 signal and 719 cover from userspace component
2023/03/25 04:00:17 [SERVER] executor 2 has 11 replies
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 2853 signal and 2281 cover from userspace component
time breakdown 0: 30120, 20249, 0
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 1027 signal and 892 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 281 signal and 282 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 75 signal and 100 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 124 signal and 727 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 14 signal and 727 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 9 signal and 316 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 6 signal and 316 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 6 signal and 316 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 6 signal and 316 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 2 receive 6 signal and 316 cover from userspace component
2023/03/25 04:00:17 [SERVER] executor 0 has 12 replies
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 3092 signal and 2484 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 1533 signal and 1305 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 142 signal and 116 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 34 signal and 42 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 119 signal and 727 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 7 signal and 727 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 6 signal and 727 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 3 signal and 312 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 2 signal and 312 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 2 signal and 312 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 2 signal and 312 cover from userspace component
2023/03/25 04:00:17 ------- fuzzer executor 0 receive 2 signal and 312 cover from userspace component
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 980 signal and 2610 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:17 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 04:00:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:00:17 ----- triage return due to empty signal extra
2023/03/25 04:00:17 mutate testcase with failures
2023/03/25 04:00:17 ----- insertCall()
2023/03/25 04:00:17 ----- generateCall 170 dup dup
2023/03/25 04:00:17 ----- insertCall()
2023/03/25 04:00:17 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/25 04:00:17 ----- insertCall()
2023/03/25 04:00:17 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 04:00:17 ----- insertCall()
2023/03/25 04:00:17 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 04:00:17 ----- insertCall()
2023/03/25 04:00:17 ----- generateCall 187 faccessat faccessat
2023/03/25 04:00:17 ----- mutateArg()
2023/03/25 04:00:17 ----- insertCall()
2023/03/25 04:00:17 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/25 04:00:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:00:17 disable threaded and collide
2023/03/25 04:00:17 prog length: 6
2023/03/25 04:00:17 prog length: 10
2023/03/25 04:00:17 HasCrashFail:true HasNetFail:false
04:00:17 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$trusted_overlay_origin(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x2)
open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x1)
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200400, 0x8)
faccessat(r0, &(0x7f0000000280)='./file0\x00', 0x40)
dup(r0)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f00000003c0)={0x0, 0xfb, 0x98, 0x6, 0xff, "987c5cea9e64df2956f93bb78d28d473", "fecb452582cdb99d89c84a22ab8d3e65a6304c32eab1632694ecb828887334626683cf7a5f57beffecb1784bfe6bf1935fe77858bec35e74543afca5fb5aafcf46c44a2e7ca53b508fb47fab702acb7d8c0990e388a2cbfa6ede26ce31f7299fdbc41c851bd0520195939fc00a3d30e50e4f648cbb6cac9f823590bfd1020c82129a23"}, 0x98, 0x2)
setxattr$trusted_overlay_nlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)={'U+', 0xef9a}, 0x16, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2192
remove dir: /root/orangefs-client/dfs-0-67
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 03:00:17] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Broken pipe
[D 03/25/2023 03:00:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:00:17] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:00:17] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:00:17] Error: Could not initialize server subsystems
[E 03/25/2023 03:00:17] Error: Could not initialize server; aborting.
[E 03/25/2023 03:00:19] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:21] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:23] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:25] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:27] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:27] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 03:00:27] *** Out of retries.
[E 03/25/2023 03:00:27] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 03:00:27] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 03:00:27] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:29] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:31] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:33] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:35] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:37] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:37] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 03:00:37] *** Out of retries.
[E 03/25/2023 03:00:37] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 03:00:37] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 03:00:37] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:39] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:41] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:43] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:45] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
lstat(/root/orangefs-client/dfs-0-67/file0) failedremove dir time 30119
-----finish removing dir
[E 03/25/2023 03:00:47] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:00:47] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 03:00:47] *** Out of retries.
[E 03/25/2023 03:00:47] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 03:00:47] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
mkdir time 36
executor 3 create dir /root/orangefs-client/dfs-0-68 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-68
receive_execute: 23, 30155
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 30155
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 17, 30155
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 2, 30155
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 18170, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 18170, flag collect 0
----- executor 3 signal number : 3074
----- completed 2
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 0 signal number : 43
executor 0 server cover_cnt 3 output_pos_value 208
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1075 tid 1075

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1075, pid 1075, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:00:47] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 0, 30
2023/03/25 04:00:47 for select break: 1
2023/03/25 04:00:47 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 30178, 31, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17800, flag collect 0
----- executor 2 signal number : 2230
----- executor 2 executes write_coverage_signal cov->size 20666, flag collect 0
2023/03/25 04:00:47 for select break: 1
2023/03/25 04:00:47 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 30172, 32, 0
----- executor 2 signal number : 1261
----- executor 2 executes write_coverage_signal cov->size 1992, flag collect 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 2240, flag collect 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 29, 0
execute_one time: 0, 30
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1134
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 signal number : 1
executor 0 server cover_cnt 7 output_pos_value 1361
----- executor 2 signal number : 78
time breakdown 0: 30157, 33, 0
executor 2 server cover_cnt 4 output_pos_value 3875
2023/03/25 04:00:47 for select break: 1
2023/03/25 04:00:47 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:00:47 for select break: 1
2023/03/25 04:00:47 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:00:47 wg wait finish
2023/03/25 04:00:47 ------ all executors finish execution
2023/03/25 04:00:47 exec time: 30189
2023/03/25 04:00:47 ----- PS len: 4
2023/03/25 04:00:47 [CLIENT] executor 3 has 10 replies
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:47 [SERVER] executor 0 has 7 replies
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 1134 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/25 04:00:47 [SERVER] executor 1 has 0 replies
before receive testcase: 0 1
2023/03/25 04:00:47 [SERVER] executor 2 has 4 replies
2023/03/25 04:00:47 ------- fuzzer executor 2 receive 2230 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 2 receive 1261 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/25 04:00:47 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:00:47 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:00:47 ----- no new client coverage: false, true
2023/03/25 04:00:47 ----- enqueue testcases with server coveraged
time breakdown 2: 30157, 34, 0
before receive testcase: 0 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
2023/03/25 04:00:47 disable threaded and collide
2023/03/25 04:00:47 prog length: 6
2023/03/25 04:00:47 prog length: 10
2023/03/25 04:00:47 HasCrashFail:true HasNetFail:false
04:00:47 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$trusted_overlay_origin(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x2)
open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x1)
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200400, 0x8)
faccessat(r0, &(0x7f0000000280)='./file0\x00', 0x40)
dup(r0)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f00000003c0)={0x0, 0xfb, 0x98, 0x6, 0xff, "987c5cea9e64df2956f93bb78d28d473", "fecb452582cdb99d89c84a22ab8d3e65a6304c32eab1632694ecb828887334626683cf7a5f57beffecb1784bfe6bf1935fe77858bec35e74543afca5fb5aafcf46c44a2e7ca53b508fb47fab702acb7d8c0990e388a2cbfa6ede26ce31f7299fdbc41c851bd0520195939fc00a3d30e50e4f648cbb6cac9f823590bfd1020c82129a23"}, 0x98, 0x2)
setxattr$trusted_overlay_nlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)={'U+', 0xef9a}, 0x16, 0x3)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2192
remove dir: /root/orangefs-client/dfs-0-68
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:00:47] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:00:47] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2042
-----finish removing dir
mkdir time 17
executor 3 create dir /root/orangefs-client/dfs-0-69 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-69
receive_execute: 1, 2060
receive_execute: 3, 2059
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 2059
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 2059
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6339, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 cover number : 1748, signal number : 2059
----- completed 1
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 18146, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 18146, flag collect 1
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7283, flag collect 1
----- executor 3 cover number : 2536, signal number : 1022
----- completed 2
execute_call 0, 16, 0, 7
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 cover number : 1455, signal number : 1715
----- executor 0 executes write_coverage_signal cov->size 12191, flag collect 1
----- executor 0 cover number : 963, signal number : 1080
----- executor 0 executes write_coverage_signal cov->size 1536, flag collect 1
----- executor 0 cover number : 347, signal number : 348
----- executor 0 executes write_coverage_signal cov->size 791, flag collect 1
----- executor 0 cover number : 101, signal number : 77
executor 0 server cover_cnt 4 output_pos_value 6099
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1091 tid 1091

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1091, pid 1091, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:00:49] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 55, 0
execute_one time: 3, 55
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 57, 0
execute_one time: 0, 57
2023/03/25 04:00:49 for select break: 1
2023/03/25 04:00:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2065, 58, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2061, 60, 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
2023/03/25 04:00:49 for select break: 1
2023/03/25 04:00:49 --------- executor 1 receive reply, reply.done 1
-----executor 0 collect shmids 1
----- directly resend shmid 1
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14880, flag collect 1
----- executor 2 cover number : 1908, signal number : 2307
----- executor 2 executes write_coverage_signal cov->size 8771, flag collect 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 2 cover number : 837, signal number : 939
----- executor 2 executes write_coverage_signal cov->size 3715, flag collect 1
before receive testcase: 0 0
----- executor 2 cover number : 483, signal number : 484
----- executor 2 executes write_coverage_signal cov->size 1719, flag collect 1
----- executor 2 cover number : 100, signal number : 75
executor 2 server cover_cnt 4 output_pos_value 7146
2023/03/25 04:00:49 for select break: 1
2023/03/25 04:00:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2062, 64, 0
before receive testcase: 0 0
----- executor 0 cover number : 1841, signal number : 1714
----- executor 0 executes write_coverage_signal cov->size 12239, flag collect 1
----- executor 0 cover number : 970, signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 1793, flag collect 1
----- executor 0 cover number : 352, signal number : 411
----- executor 0 executes write_coverage_signal cov->size 863, flag collect 1
----- executor 0 cover number : 106, signal number : 119
executor 0 server cover_cnt 8 output_pos_value 12743
2023/03/25 04:00:49 for select break: 1
2023/03/25 04:00:49 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:00:49 wg wait finish
2023/03/25 04:00:49 ------ all executors finish execution
2023/03/25 04:00:49 exec time: 2132
2023/03/25 04:00:49 ----- PS len: 4
2023/03/25 04:00:49 [CLIENT] executor 3 has 10 replies
2023/03/25 04:00:49 fuzzer receive 2059 signal and 1748 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 1022 signal and 2536 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:49 [SERVER] executor 0 has 8 replies
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 1715 signal and 1455 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 1080 signal and 963 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 348 signal and 347 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 77 signal and 101 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 1714 signal and 1841 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 1119 signal and 970 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 411 signal and 352 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 0 receive 119 signal and 106 cover from userspace component
2023/03/25 04:00:49 [SERVER] executor 2 has 4 replies
2023/03/25 04:00:49 [SERVER] executor 1 has 0 replies
2023/03/25 04:00:49 ------- fuzzer executor 2 receive 2307 signal and 1908 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 2 receive 939 signal and 837 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 2 receive 484 signal and 483 cover from userspace component
2023/03/25 04:00:49 ------- fuzzer executor 2 receive 75 signal and 100 cover from userspace component
2023/03/25 04:00:49 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 2063, 73, 0
before receive testcase: 0 0
2023/03/25 04:00:49 ----- triage return due to empty signal extra
2023/03/25 04:00:49 mutate testcase with failures
2023/03/25 04:00:49 ----- insertCall()
2023/03/25 04:00:49 ----- generateCall 2723 pread64 pread64
2023/03/25 04:00:49 HasCrashFail: true, .HasNetFail: true
2023/03/25 04:00:49 disable threaded and collide
2023/03/25 04:00:49 prog length: 6
2023/03/25 04:00:49 prog length: 6
2023/03/25 04:00:49 prog length: 6
2023/03/25 04:00:49 prog length: 10
2023/03/25 04:00:49 HasCrashFail:true HasNetFail:true
04:00:49 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x4, 0x3)
syz_failure_sync(0x1, 0x3)
syz_failure_sync(0x5, 0x3)
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x3, 0x3)
r0 = open(&(0x7f0000000000)='./file1\x00', 0x1, 0x20)
pread64(r0, &(0x7f0000000040)=""/245, 0xf5, 0x214)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 560
----- executor 3 receive testcase
executor 3: prog_data_offset 2368, prog_size 1064
remove dir: /root/orangefs-client/dfs-0-69
[E 03/25/2023 03:00:49] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:00:49] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2034
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-70 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-70
receive_execute: 3, 2046
receive_execute: 15, 2045
receive_execute: 12, 2046
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 17, 2047
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2023, 0, 1
execute_one loop: 0, 0, 2024
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2024, 0, 0
execute_one loop: 0, 0, 2024
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 32765, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 546
----- completed 2
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2035, 0, 0
execute_one loop: 0, 0, 2035
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 30480, flag collect 0
----- executor 0 signal number : 2631
----- executor 0 executes write_coverage_signal cov->size 20000, flag collect 0
----- executor 0 signal number : 1132
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 13227, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4150
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2046, 0, 0
execute_one loop: 0, 0, 2046
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1486, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 2390, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 10802, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 4 output_pos_value 493
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1106 tid 1106

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1106, pid 1106, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:00:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 6
----- directly resend shmid 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2073, 0
execute_one time: 0, 2073
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 2 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 3
----- directly resend shmid 3
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 520 tid 520

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 520, pid 520, value 1

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 03:00:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 2088, 0
execute_one time: 0, 2088
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 03:00:53] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:00:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:00:53] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:00:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:00:54] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 03:00:54] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:00:54] Error: Could not initialize server subsystems
[E 03/25/2023 03:00:54] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 4629, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 4629, flag collect 0
----- executor 3 signal number : 225
----- completed 7
execute_call 0, 2009, 0, 0
execute_one loop: 0, 0, 2009
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2064, 0, 0
execute_one loop: 0, 0, 2064
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 6102, 0
execute_one time: 0, 6102
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
cover_reset in execute_call
----- executor 3 write_call_output, size 22328, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 22328, flag collect 0
----- executor 3 signal number : 552
----- completed 9
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 6110, 0
execute_one time: 0, 6110
2023/03/25 04:00:58 for select break: 1
2023/03/25 04:00:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2064, 6111, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:00:58 for select break: 1
2023/03/25 04:00:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2061, 6113, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 300
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 823
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 11
executor 0 server cover_cnt 9 output_pos_value 5326
2023/03/25 04:00:58 for select break: 1
2023/03/25 04:00:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2049, 6117, 0
before receive testcase: 0 0
2023/03/25 04:00:58 for select break: 1
2023/03/25 04:00:58 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:00:58 wg wait finish
2023/03/25 04:00:58 ------ all executors finish execution
2023/03/25 04:00:58 exec time: 8172
2023/03/25 04:00:58 ----- PS len: 4
2023/03/25 04:00:58 [CLIENT] executor 3 has 10 replies
2023/03/25 04:00:58 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 546 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 225 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 552 signal and 0 cover from executor 3
2023/03/25 04:00:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:00:58 [SERVER] executor 0 has 9 replies
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 2631 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 1132 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 300 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 823 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 877
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 221
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 645
----- executor 2 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 2438, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 10928, flag collect 0
----- executor 2 signal number : 0
executor 2 server cover_cnt 12 output_pos_value 2279
time breakdown 2: 2058, 6126, 0
before receive testcase: 0 0
2023/03/25 04:00:58 [SERVER] executor 1 has 0 replies
2023/03/25 04:00:58 [SERVER] executor 2 has 12 replies
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 877 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 221 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 645 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 04:00:58 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 04:00:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:00:58 ----- no new client coverage: false, true
2023/03/25 04:00:58 mutate testcase with failures
2023/03/25 04:00:58 ----- insertCall()
2023/03/25 04:00:58 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/25 04:00:58 ----- mutateArg()
2023/03/25 04:00:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:00:58 disable threaded and collide
2023/03/25 04:00:58 prog length: 6
2023/03/25 04:00:58 prog length: 9
2023/03/25 04:00:58 HasCrashFail:true HasNetFail:false
04:00:58 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x1, 0x3)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
fcntl$F_GET_RW_HINT(r0, 0x40b, &(0x7f0000000040))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1112
remove dir: /root/orangefs-client/dfs-0-70
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-71 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-71
receive_execute: 1, 41
receive_execute: 14, 41
receive_execute: 9, 41
receive_execute: 14, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6371, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6371, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 6032, 0, 0
execute_one loop: 0, 0, 6032
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6033, 0, 0
execute_one loop: 0, 0, 6033
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2727
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1221
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4333
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:01:04] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 437
----- completed 4
execute_call 0, 20104, 0, 1
execute_one loop: 0, 0, 20105
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20105, 0, 0
execute_one loop: 0, 0, 20106
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1122 tid 1122

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1122, pid 1122, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:01:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 26166, 0
execute_one time: 1, 26166
[D 03/25/2023 03:01:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
2023/03/25 04:01:26 for select break: 1
2023/03/25 04:01:26 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2009, 0, 0
execute_one loop: 0, 0, 2009
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 28176, 0
execute_one time: 0, 28176
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 55, 28177, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 198
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:01:26 for select break: 1
2023/03/25 04:01:26 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 2: 42, 28178, 0
before receive testcase: 0 0
----- executor 0 signal number : 136
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:01:26 for select break: 1
2023/03/25 04:01:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 55, 28178, 0
before receive testcase: 0 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 9 output_pos_value 4714
2023/03/25 04:01:26 for select break: 1
2023/03/25 04:01:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 50, 28180, 0
before receive testcase: 0 0
2023/03/25 04:01:26 wg wait finish
2023/03/25 04:01:26 ------ all executors finish execution
2023/03/25 04:01:26 exec time: 28222
2023/03/25 04:01:26 ----- PS len: 4
2023/03/25 04:01:26 [CLIENT] executor 3 has 9 replies
2023/03/25 04:01:26 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 437 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:26 [SERVER] executor 0 has 9 replies
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 2727 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 1221 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 198 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 136 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 04:01:26 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:01:26 [SERVER] executor 1 has 0 replies
2023/03/25 04:01:26 [SERVER] executor 2 has 0 replies
2023/03/25 04:01:26 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:01:26 ----- no new client coverage: false, true
2023/03/25 04:01:26 mutate testcase with failures
2023/03/25 04:01:26 ----- insertCall()
2023/03/25 04:01:26 ----- generateCall 2808 removexattr removexattr
2023/03/25 04:01:26 HasCrashFail: false, .HasNetFail: false
2023/03/25 04:01:26 prog length: 3
2023/03/25 04:01:26 HasCrashFail:false HasNetFail:false
04:01:26 ---executing program 0:
---
---
---
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
removexattr(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="627472e673de2e4000"])
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
remove dir: /root/orangefs-client/dfs-0-71
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 57
-----finish removing dir
receive_execute: 3, 70
receive_execute: 5, 70
receive_execute: 4, 71
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-72 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-72
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2598
----- completed 1
execute_call 0, 4042, 0, 2
execute_one loop: 0, 0, 4044
cover_reset in execute_call
----- executor 3 write_call_output, size 10972, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 10972, flag collect 0
----- executor 3 signal number : 243
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 18
----- completed 3
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 4053, 0
execute_one time: 1, 4053
time breakdown 3: 77, 4059, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 2605
----- executor 0 executes write_coverage_signal cov->size 28670, flag collect 0
----- executor 0 signal number : 1141
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:01:30 for select break: 1
2023/03/25 04:01:30 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 75, 4061, 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 24613, flag collect 0
----- executor 0 signal number : 83
2023/03/25 04:01:30 for select break: 1
2023/03/25 04:01:30 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 4133
time breakdown 1: 75, 4062, 0
2023/03/25 04:01:30 for select break: 1
2023/03/25 04:01:30 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:01:30 for select break: 1
time breakdown 0: 73, 4063, 0
2023/03/25 04:01:30 --------- executor 3 receive reply, reply.done 1
2023/03/25 04:01:30 wg wait finish
2023/03/25 04:01:30 ------ all executors finish execution
2023/03/25 04:01:30 exec time: 4134
2023/03/25 04:01:30 ----- PS len: 4
2023/03/25 04:01:30 [CLIENT] executor 3 has 3 replies
2023/03/25 04:01:30 fuzzer receive 2598 signal and 0 cover from executor 3
2023/03/25 04:01:30 fuzzer receive 243 signal and 0 cover from executor 3
2023/03/25 04:01:30 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:01:30 [SERVER] executor 0 has 4 replies
2023/03/25 04:01:30 ------- fuzzer executor 0 receive 2605 signal and 0 cover from userspace component
2023/03/25 04:01:30 ------- fuzzer executor 0 receive 1141 signal and 0 cover from userspace component
2023/03/25 04:01:30 [SERVER] executor 1 has 0 replies
2023/03/25 04:01:30 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:01:30 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:01:30 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 04:01:30 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:01:30 ----- no new client coverage: false, true
2023/03/25 04:01:30 mutate testcase with failures
2023/03/25 04:01:30 ----- mutateArg()
2023/03/25 04:01:30 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:01:30 disable threaded and collide
2023/03/25 04:01:30 prog length: 6
2023/03/25 04:01:30 prog length: 17
2023/03/25 04:01:30 HasCrashFail:true HasNetFail:false
04:01:30 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffffff, &(0x7f0000000b00)='./file0/file1\x00', 0x2000, 0x14a)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5544
remove dir: /root/orangefs-client/dfs-0-72
remove dir time 18
-----finish removing dir
mkdir time 12177
executor 3 create dir /root/orangefs-client/dfs-0-73 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-73
receive_execute: 1, 12196
receive_execute: 4, 12196
receive_execute: 2, 12196
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 12196
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16336, flag collect 0
----- executor 0 signal number : 1415
----- executor 0 executes write_coverage_signal cov->size 6144, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2091
Terminated
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:01:42] PVFS2 server got signal 15 (server_status_flag: 2080767)
execute_call 0, 10041, 0, 0
execute_one loop: 0, 0, 10041
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10040, 0, 0
execute_one loop: 0, 0, 10040
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1140 tid 1140

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1140, pid 1140, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:01:52] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 309
----- completed 9
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10079, 0
execute_one time: 0, 10079
[D 03/25/2023 03:01:52] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 12686, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 12686, flag collect 0
----- executor 3 signal number : 31
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 12115, 0
execute_one time: 0, 12115
2023/03/25 04:01:54 for select break: 1
2023/03/25 04:01:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12201, 12116, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 234
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:01:54 for select break: 1
2023/03/25 04:01:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12198, 12118, 0
before receive testcase: 0 1
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:01:54 for select break: 1
2023/03/25 04:01:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12200, 12118, 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 17388, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2521
2023/03/25 04:01:54 for select break: 1
2023/03/25 04:01:54 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:01:54 wg wait finish
2023/03/25 04:01:54 ------ all executors finish execution
2023/03/25 04:01:54 exec time: 24316
2023/03/25 04:01:54 ----- PS len: 4
2023/03/25 04:01:54 [CLIENT] executor 3 has 17 replies
2023/03/25 04:01:54 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:01:54 [SERVER] executor 0 has 9 replies
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 1415 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 234 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 04:01:54 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:01:54 [SERVER] executor 1 has 0 replies
2023/03/25 04:01:54 [SERVER] executor 2 has 0 replies
time breakdown 0: 12197, 12119, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 04:01:54 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:01:54 ----- no new client coverage: false, true
2023/03/25 04:01:54 mutate testcase with failures
2023/03/25 04:01:54 ----- insertCall()
2023/03/25 04:01:54 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/25 04:01:54 ----- mutateArg()
2023/03/25 04:01:54 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:01:54 disable threaded and collide
2023/03/25 04:01:54 prog length: 6
2023/03/25 04:01:54 prog length: 19
2023/03/25 04:01:54 HasCrashFail:true HasNetFail:false
04:01:54 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file1\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
r1 = open$dir(&(0x7f0000000880)='./file0/file0\x00', 0x800, 0x60)
fcntl$F_GET_RW_HINT(r1, 0x40b, &(0x7f00000008c0))
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)=ANY=[@ANYBLOB="747275737465642e6f7665726c61792e72656469726563741000"], 0x1a, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4200
remove dir: /root/orangefs-client/dfs-0-73
remove dir time 19
-----finish removing dir
mkdir time 14184
executor 3 create dir /root/orangefs-client/dfs-0-74 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-74
receive_execute: 8, 14202
receive_execute: 7, 14202
receive_execute: 8, 14202
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 14204
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 884 tid 884

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 884, pid 884, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:02:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 37, 0
execute_one time: 1, 37
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6343, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6343, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 56, 0
execute_one time: 0, 56
2023/03/25 04:02:09 for select break: 1
2023/03/25 04:02:09 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 0 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:02:09 for select break: 1
2023/03/25 04:02:09 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 16799, flag collect 0
time breakdown 2: 14210, 60, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4691, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4497, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
2023/03/25 04:02:09 for select break: 1
2023/03/25 04:02:09 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:02:09 for select break: 1
2023/03/25 04:02:09 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:02:09 wg wait finish
2023/03/25 04:02:09 ------ all executors finish execution
2023/03/25 04:02:09 exec time: 14264
2023/03/25 04:02:09 ----- PS len: 4
2023/03/25 04:02:09 [CLIENT] executor 3 has 19 replies
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 14209, 61, 0
2023/03/25 04:02:09 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 04:02:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:09 [SERVER] executor 0 has 4 replies
2023/03/25 04:02:09 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:02:09 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:02:09 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:02:09 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:02:09 [SERVER] executor 1 has 1 replies
2023/03/25 04:02:09 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:02:09 [SERVER] executor 2 has 0 replies
2023/03/25 04:02:09 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:02:09 ----- no new client coverage: false, true
2023/03/25 04:02:09 mutate testcase with failures
2023/03/25 04:02:09 ----- mutateArg()
2023/03/25 04:02:09 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:02:09 disable threaded and collide
2023/03/25 04:02:09 prog length: 6
2023/03/25 04:02:09 prog length: 13
2023/03/25 04:02:09 HasCrashFail:true HasNetFail:false
04:02:09 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000440)='./file0/file0\x00', 0x10142, 0x100)
syz_failure_sync(0x0, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
syz_failure_sync(0x1, 0x3)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 3: 14213, 57, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2856
remove dir: /root/orangefs-client/dfs-0-74
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 14210, 62, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 29
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:02:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:02:08] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:02:08] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:02:08] Error: Could not initialize server subsystems
[E 03/25/2023 03:02:08] Error: Could not initialize server; aborting.
receive_execute: 1, 12242
receive_execute: 2, 12243
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 12213
executor 3 create dir /root/orangefs-client/dfs-0-75 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-75
receive_execute: 4, 12244
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 1, 12243
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 6357, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 2065
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1536, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2078
Terminated
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1158 tid 1158

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1158, pid 1158, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:02:21] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 38, 0
execute_one time: 0, 38
2023/03/25 04:02:21 for select break: 1
2023/03/25 04:02:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12248, 40, 0
executor 1 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:02:21 for select break: 1
2023/03/25 04:02:21 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12245, 42, 0
before receive testcase: 0 0
2023/03/25 04:02:21 for select break: 1
2023/03/25 04:02:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12243, 42, 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 38, 0
execute_one time: 1, 38
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 920
----- executor 0 executes write_coverage_signal cov->size 1572, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 646, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 8 output_pos_value 3040
2023/03/25 04:02:21 for select break: 1
2023/03/25 04:02:21 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:02:21 wg wait finish
2023/03/25 04:02:21 ------ all executors finish execution
2023/03/25 04:02:21 exec time: 12286
2023/03/25 04:02:21 ----- PS len: 4
2023/03/25 04:02:21 [CLIENT] executor 3 has 13 replies
2023/03/25 04:02:21 [SERVER] executor 0 has 8 replies
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 04:02:21 [SERVER] executor 2 has 0 replies
2023/03/25 04:02:21 [SERVER] executor 1 has 0 replies
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 04:02:21 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 920 signal and 0 cover from userspace component
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 04:02:21 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:02:21 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:02:21 ----- no new client coverage: false, true
2023/03/25 04:02:21 mutate testcase with failures
2023/03/25 04:02:21 ----- insertCall()
2023/03/25 04:02:21 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/25 04:02:21 ----- insertCall()
2023/03/25 04:02:21 ----- insertCall()
2023/03/25 04:02:21 ----- insertCall()
2023/03/25 04:02:21 ----- insertCall()
2023/03/25 04:02:21 ----- mutateArg()
2023/03/25 04:02:21 ----- insertCall()
before receive testcase: 0 0
2023/03/25 04:02:21 ----- mutateArg()
2023/03/25 04:02:21 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:02:21 disable threaded and collide
2023/03/25 04:02:21 prog length: 6
2023/03/25 04:02:21 prog length: 20
2023/03/25 04:02:21 HasCrashFail:true HasNetFail:false
04:02:21 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000002e80)='./file0/file0\x00', 0x1800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
syz_failure_sync(0x0, 0x3)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x1, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fsetxattr$smack_xattr_label(r3, &(0x7f0000002e00)='security.SMACK64IPIN\x00', &(0x7f0000002e40)=ANY=[@ANYBLOB="73797374656d5f753a6f626a6563745f723a646c6d5f636f6e74726f7c1145570f839a705f743a73300000"], 0x2b, 0x0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4632
remove dir: /root/orangefs-client/dfs-0-75
time breakdown 0: 12245, 42, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:02:21] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:02:21] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2034
-----finish removing dir
mkdir time 2023
executor 3 create dir /root/orangefs-client/dfs-0-76 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-76
receive_execute: 1, 4057
receive_execute: 1, 4057
receive_execute: 2, 4057
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 4057
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 2065
----- completed 3
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 902 tid 902

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 902, pid 902, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:02:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 15
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 26, 0
execute_one time: 6, 26
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 47, 0
execute_one time: 1, 47
2023/03/25 04:02:25 for select break: 1
2023/03/25 04:02:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4060, 49, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32678, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:02:25 for select break: 1
2023/03/25 04:02:25 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4059, 51, 0
before receive testcase: 0 0
2023/03/25 04:02:25 for select break: 1
2023/03/25 04:02:25 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4058, 51, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 04:02:25 for select break: 1
2023/03/25 04:02:25 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:02:25 wg wait finish
2023/03/25 04:02:25 ------ all executors finish execution
2023/03/25 04:02:25 exec time: 4111
2023/03/25 04:02:25 ----- PS len: 4
2023/03/25 04:02:25 [CLIENT] executor 3 has 20 replies
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 [SERVER] executor 0 has 4 replies
2023/03/25 04:02:25 [SERVER] executor 1 has 1 replies
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 04:02:25 [SERVER] executor 2 has 0 replies
2023/03/25 04:02:25 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:25 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 12236, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3730, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2125
time breakdown 0: 4058, 54, 0
2023/03/25 04:02:25 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:02:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:02:25 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:02:25 ----- no new client coverage: false, true
2023/03/25 04:02:25 mutate testcase with failures
2023/03/25 04:02:25 ----- insertCall()
2023/03/25 04:02:25 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/25 04:02:25 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:02:25 disable threaded and collide
2023/03/25 04:02:25 prog length: 6
2023/03/25 04:02:25 prog length: 5
2023/03/25 04:02:25 HasCrashFail:true HasNetFail:false
04:02:25 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x0)
lchown(&(0x7f0000000140)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000180)={0x0, 0xfb, 0xe7, 0x7, 0x7, "68e733c8bc59abbe2640f4fa4eb3c984", "90bffc25d7714f4e7b76d8a6432186f7a938ed1746985ee1d42884a25b716af9006892bef7141797ca2bea19bd2013dc6a82533ba2c73b0236a4684c29f8bf7948d39f15b64679fd1b9f786b24cf08d11e83636549c37f61b0389ab98d5a622da35660932eedd3062d5116801e67633b8344984f73e22b3d7bb18c6253917eab75c18b48606063bf1ea9a57bed37e9791efd640ea8f52124e2bf22b962aa22abb017dd8c8bdfb9e5c302d210616d3a365de01f5a037e411650216a9cb089f5acc6d996ee3b0dccc9ca75a965c19a77828674"}, 0xe7, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1160
remove dir: /root/orangefs-client/dfs-0-76
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 15
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:02:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:02:25] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:02:25] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:02:25] Error: Could not initialize server subsystems
[E 03/25/2023 03:02:25] Error: Could not initialize server; aborting.
receive_execute: 0, 10090
mkdir time 10075
executor 3 create dir /root/orangefs-client/dfs-0-77 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-77
receive_execute: 3, 10091
receive_execute: 4, 10091
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 6, 10093
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1176 tid 1176

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1176, pid 1176, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:02:35] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 21, 0
execute_one time: 0, 21
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:02:35] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:02:35] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2088
----- completed 3
execute_call 0, 2017, 0, 1
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 15866, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 15866, flag collect 0
----- executor 3 signal number : 1111
----- completed 4
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
2023/03/25 04:02:37 for select break: 1
2023/03/25 04:02:37 --------- executor 3 receive reply, reply.done 1
executor 3, execute_one inner time: 0, 2042, 0
execute_one time: 0, 2042
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 10099, 2043, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:02:37 for select break: 1
2023/03/25 04:02:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10095, 2046, 0
before receive testcase: 0 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14339, flag collect 0
----- executor 0 signal number : 109
executor 0 server cover_cnt 5 output_pos_value 1625
2023/03/25 04:02:37 for select break: 1
2023/03/25 04:02:37 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:02:37 for select break: 1
2023/03/25 04:02:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:02:37 wg wait finish
2023/03/25 04:02:37 ------ all executors finish execution
2023/03/25 04:02:37 exec time: 12139
2023/03/25 04:02:37 ----- PS len: 4
2023/03/25 04:02:37 [CLIENT] executor 3 has 5 replies
2023/03/25 04:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:37 fuzzer receive 2088 signal and 0 cover from executor 3
2023/03/25 04:02:37 fuzzer receive 1111 signal and 0 cover from executor 3
2023/03/25 04:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:02:37 [SERVER] executor 0 has 5 replies
2023/03/25 04:02:37 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 04:02:37 [SERVER] executor 1 has 0 replies
2023/03/25 04:02:37 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:02:37 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 04:02:37 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
time breakdown 0: 10090, 2048, 0
2023/03/25 04:02:37 ------- fuzzer executor 0 receive 109 signal and 0 cover from userspace component
2023/03/25 04:02:37 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 04:02:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:02:37 ----- no new client coverage: false, true
2023/03/25 04:02:37 mutate testcase with failures
2023/03/25 04:02:37 ----- insertCall()
2023/03/25 04:02:37 ----- generateCall 2462 openat openat
2023/03/25 04:02:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:02:37 disable threaded and collide
2023/03/25 04:02:37 prog length: 6
2023/03/25 04:02:37 prog length: 18
2023/03/25 04:02:37 HasCrashFail:true HasNetFail:false
04:02:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
openat(r1, &(0x7f0000000b00)='./file0/file0\x00', 0x0, 0x80)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5728
remove dir: /root/orangefs-client/dfs-0-77
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 10094, 2047, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 2025
executor 3 create dir /root/orangefs-client/dfs-0-78 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-78
receive_execute: 1, 2055
receive_execute: 1, 2055
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 2055
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 3, 2055
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- executor 3 write_call_output, size 6339, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6363, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6363, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12254, flag collect 0
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 4620, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1373, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 1251, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2103
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:02:39] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10035, 0, 0
execute_one loop: 0, 0, 10035
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 309
----- completed 6
execute_call 0, 10033, 0, 1
execute_one loop: 0, 0, 10034
cover_reset in execute_call
execute_call 0, 30124, 0, 0
execute_one loop: 0, 0, 30124
----- executor 3 write_call_output, size 32765, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 108
----- completed 7
execute_call 0, 10042, 0, 13
execute_one loop: 0, 0, 10055
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1193 tid 1193

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1193, pid 1193, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:03:09] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30168, 0
execute_one time: 0, 30168
[D 03/25/2023 03:03:09] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2026, 0, 0
execute_one loop: 0, 0, 2026
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 13
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 12678, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 12678, flag collect 0
----- executor 3 signal number : 33
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 32210, 0
execute_one time: 0, 32210
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 2058, 32214, 0
before receive testcase: 0 1
2023/03/25 04:03:11 for select break: 1
2023/03/25 04:03:11 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:03:11 for select break: 1
2023/03/25 04:03:11 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 17367, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 9 output_pos_value 2693
2023/03/25 04:03:11 for select break: 1
2023/03/25 04:03:11 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2056, 32218, 0
before receive testcase: 0 0
executor 2 write_server_output
time breakdown 1: 2056, 32216, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:03:11 for select break: 1
2023/03/25 04:03:11 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:03:11 wg wait finish
2023/03/25 04:03:11 ------ all executors finish execution
2023/03/25 04:03:11 exec time: 34279
2023/03/25 04:03:11 ----- PS len: 4
2023/03/25 04:03:11 [CLIENT] executor 3 has 18 replies
2023/03/25 04:03:11 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:11 [SERVER] executor 1 has 0 replies
2023/03/25 04:03:11 [SERVER] executor 0 has 9 replies
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:03:11 [SERVER] executor 2 has 0 replies
2023/03/25 04:03:11 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
time breakdown 2: 2058, 32223, 0
2023/03/25 04:03:11 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:03:11 ----- no new client coverage: false, true
2023/03/25 04:03:11 mutate testcase with failures
2023/03/25 04:03:11 ----- insertCall()
2023/03/25 04:03:11 ----- generateCall 3761 stat stat
2023/03/25 04:03:11 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:03:11 disable threaded and collide
2023/03/25 04:03:11 prog length: 6
2023/03/25 04:03:11 prog length: 10
2023/03/25 04:03:11 HasCrashFail:true HasNetFail:false
04:03:11 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f00000014c0)='./file0\x00', &(0x7f0000001500))
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1728
remove dir: /root/orangefs-client/dfs-0-78
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 2034
executor 3 create dir /root/orangefs-client/dfs-0-79 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-79
receive_execute: 8, 2064
receive_execute: 7, 2063
receive_execute: 0, 2063
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 2065
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 923 tid 923

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 923, pid 923, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:03:13] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 45, 0
execute_one time: 0, 45
----- executor 3 write_call_output, size 0, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 492, write pid:492
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 51, 0
execute_one time: 0, 51
2023/03/25 04:03:13 for select break: 1
2023/03/25 04:03:13 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2075, 52, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:03:13 for select break: 1
2023/03/25 04:03:13 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2063, 54, 0
before receive testcase: 0 0
2023/03/25 04:03:13 for select break: 1
2023/03/25 04:03:13 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32672, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 12332, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3549, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2121
2023/03/25 04:03:13 for select break: 1
2023/03/25 04:03:13 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:03:13 wg wait finish
2023/03/25 04:03:13 ------ all executors finish execution
2023/03/25 04:03:13 exec time: 2120
2023/03/25 04:03:13 ----- PS len: 4
2023/03/25 04:03:13 [CLIENT] executor 3 has 10 replies
2023/03/25 04:03:13 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:13 [SERVER] executor 0 has 4 replies
2023/03/25 04:03:13 [SERVER] executor 1 has 1 replies
2023/03/25 04:03:13 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:13 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:03:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:13 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:03:13 [SERVER] executor 2 has 0 replies
time breakdown 0: 2070, 57, 0
before receive testcase: 0 0
2023/03/25 04:03:13 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 04:03:13 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:03:13 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:03:13 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:03:13 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:03:13 ----- no new client coverage: false, true
2023/03/25 04:03:13 mutate testcase with failures
2023/03/25 04:03:13 ----- insertCall()
2023/03/25 04:03:13 ----- generateCall 2458 open open
2023/03/25 04:03:13 ----- mutateArg()
2023/03/25 04:03:13 HasCrashFail: false, .HasNetFail: false
2023/03/25 04:03:13 prog length: 3
2023/03/25 04:03:13 HasCrashFail:false HasNetFail:false
04:03:13 ---executing program 0:
---
---
---
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
open(&(0x7f0000000000)='./file1\x00', 0x40400, 0x118)
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 488
remove dir: /root/orangefs-client/dfs-0-79
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 2072, 55, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 24
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:03:13] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:03:13] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:03:13] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:03:13] Error: Could not initialize server subsystems
[E 03/25/2023 03:03:13] Error: Could not initialize server; aborting.
receive_execute: 1, 6065
mkdir time 6040
executor 3 create dir /root/orangefs-client/dfs-0-80 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-80
receive_execute: 3, 6064
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 6066
receive_execute: 4, 6066
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 32765, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2605
----- completed 1
execute_call 0, 10042, 0, 1
execute_one loop: 0, 0, 10043
cover_reset in execute_call
----- executor 3 write_call_output, size 12424, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 12424, flag collect 0
----- executor 3 signal number : 437
----- completed 2
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 23
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 10053, 0
execute_one time: 0, 10053
2023/03/25 04:03:30 for select break: 1
2023/03/25 04:03:30 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6071, 10054, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 2004
----- executor 0 executes write_coverage_signal cov->size 26584, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:03:30 for select break: 1
2023/03/25 04:03:30 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6067, 10057, 0
before receive testcase: 0 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:03:30 for select break: 1
2023/03/25 04:03:30 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 6070, 10056, 0
before receive testcase: 0 0
----- executor 0 signal number : 78
executor 0 server cover_cnt 4 output_pos_value 2721
2023/03/25 04:03:30 for select break: 1
2023/03/25 04:03:30 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:03:30 wg wait finish
2023/03/25 04:03:30 ------ all executors finish execution
2023/03/25 04:03:30 exec time: 16123
2023/03/25 04:03:30 ----- PS len: 4
2023/03/25 04:03:30 [CLIENT] executor 3 has 3 replies
2023/03/25 04:03:30 fuzzer receive 2605 signal and 0 cover from executor 3
2023/03/25 04:03:30 fuzzer receive 437 signal and 0 cover from executor 3
2023/03/25 04:03:30 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/25 04:03:30 [SERVER] executor 0 has 4 replies
2023/03/25 04:03:30 ------- fuzzer executor 0 receive 2004 signal and 0 cover from userspace component
2023/03/25 04:03:30 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
time breakdown 0: 6066, 10058, 0
2023/03/25 04:03:30 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 04:03:30 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/25 04:03:30 [SERVER] executor 1 has 0 replies
2023/03/25 04:03:30 [SERVER] executor 2 has 0 replies
2023/03/25 04:03:30 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:03:30 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 04:03:30 mutate testcase with failures
2023/03/25 04:03:30 ----- mutateArg()
2023/03/25 04:03:30 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:03:30 disable threaded and collide
2023/03/25 04:03:30 prog length: 6
2023/03/25 04:03:30 prog length: 22
2023/03/25 04:03:30 HasCrashFail:true HasNetFail:false
04:03:30 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(0xffffffffffffffff, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 3: prog_data_offset 1576, prog_size 4832
remove dir: /root/orangefs-client/dfs-0-80
----- executor 1 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 8054
executor 3 create dir /root/orangefs-client/dfs-0-81 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-81
receive_execute: 2, 8073
receive_execute: 1, 8073
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 8073
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 3, 8072
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:03:38] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2007
----- completed 8
execute_call 0, 10046, 0, 2
execute_one loop: 0, 0, 10048
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10049, 0, 0
execute_one loop: 0, 0, 10049
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1212 tid 1212

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1212, pid 1212, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:03:48] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 495, write pid:495
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 10080, 0
execute_one time: 0, 10080
2023/03/25 04:03:48 for select break: 1
2023/03/25 04:03:48 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 8076, 10081, 0
before receive testcase: 0 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10080, 0
execute_one time: 0, 10080
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1256
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:03:48 for select break: 1
2023/03/25 04:03:48 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8074, 10082, 0
2023/03/25 04:03:48 for select break: 1
2023/03/25 04:03:48 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8075, 10083, 0
2023/03/25 04:03:48 for select break: 1
2023/03/25 04:03:48 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:03:48 wg wait finish
2023/03/25 04:03:48 ------ all executors finish execution
2023/03/25 04:03:48 exec time: 18156
2023/03/25 04:03:48 ----- PS len: 4
2023/03/25 04:03:48 [SERVER] executor 0 has 4 replies
2023/03/25 04:03:48 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
time breakdown 1: 8075, 10084, 0
2023/03/25 04:03:48 [SERVER] executor 2 has 0 replies
2023/03/25 04:03:48 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 04:03:48 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 04:03:48 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:03:48 [SERVER] executor 1 has 0 replies
2023/03/25 04:03:48 [CLIENT] executor 3 has 22 replies
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 2007 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:03:48 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:03:48 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 04:03:48 mutate testcase with failures
2023/03/25 04:03:48 ----- insertCall()
2023/03/25 04:03:48 ----- generateCall 216 fdatasync fdatasync
2023/03/25 04:03:48 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:03:48 disable threaded and collide
2023/03/25 04:03:48 prog length: 6
2023/03/25 04:03:48 prog length: 4
2023/03/25 04:03:48 HasCrashFail:true HasNetFail:false
04:03:48 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 384
remove dir: /root/orangefs-client/dfs-0-81
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 03:03:48] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2027
-----finish removing dir
receive_execute: 2, 2039
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-82 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-82
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 2039
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 2039
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 1, 2038
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:03:50] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2014
----- completed 3
execute_call 0, 10039, 0, 1
execute_one loop: 0, 0, 10040
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10041, 0, 0
execute_one loop: 0, 0, 10041
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1228 tid 1228

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1228, pid 1228, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:04:00] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
executor 3, execute_one inner time: 0, 10072, 0
execute_one time: 0, 10072
2023/03/25 04:04:00 for select break: 1
2023/03/25 04:04:00 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2042, 10073, 0
before receive testcase: 0 0
2023/03/25 04:04:00 for select break: 1
2023/03/25 04:04:00 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10072, 0
execute_one time: 0, 10072
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1256
2023/03/25 04:04:00 for select break: 1
2023/03/25 04:04:00 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2041, 10075, 0
before receive testcase: 0 0
2023/03/25 04:04:00 for select break: 1
2023/03/25 04:04:00 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:04:00 wg wait finish
2023/03/25 04:04:00 ------ all executors finish execution
2023/03/25 04:04:00 exec time: 12115
2023/03/25 04:04:00 ----- PS len: 4
2023/03/25 04:04:00 [SERVER] executor 0 has 4 replies
2023/03/25 04:04:00 [CLIENT] executor 3 has 4 replies
2023/03/25 04:04:00 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 04:04:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:00 fuzzer receive 2014 signal and 0 cover from executor 3
2023/03/25 04:04:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:00 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 04:04:00 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 04:04:00 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 04:04:00 [SERVER] executor 2 has 0 replies
2023/03/25 04:04:00 [SERVER] executor 1 has 0 replies
2023/03/25 04:04:00 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:04:00 ----- no new client coverage: false, true
2023/03/25 04:04:00 mutate testcase with failures
2023/03/25 04:04:00 ----- insertCall()
2023/03/25 04:04:00 ----- generateCall 3764 symlink symlink
2023/03/25 04:04:00 ----- mutateArg()
2023/03/25 04:04:00 ----- insertCall()
2023/03/25 04:04:00 ----- generateCall 2343 link link
2023/03/25 04:04:00 ----- insertCall()
2023/03/25 04:04:00 ----- generateCall 2458 open open
2023/03/25 04:04:00 ----- insertCall()
2023/03/25 04:04:00 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/25 04:04:00 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:04:00 disable threaded and collide
2023/03/25 04:04:00 prog length: 6
2023/03/25 04:04:00 prog length: 13
2023/03/25 04:04:00 HasCrashFail:true HasNetFail:false
04:04:00 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
open(&(0x7f0000001580)='./file1\x00', 0x8000, 0xd3)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$smack_xattr_label(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001600)='security.SMACK64IPOUT\x00', &(0x7f00000017c0)={'system_u:object_r:pinentry_exec_t:s0\x00'}, 0x26, 0x3)
syz_failure_sync(0x1, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000001540)='./file1\x00')
symlink(&(0x7f0000000480)='./file0\x00', &(0x7f00000014c0)='./file0\x00')
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f0000001500)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000001640)=ANY=[@ANYBLOB="6274ff66732e062a5c003192a6518628258154ec921ac4a3971694cf771b204e6bc68de015954241e23ed5188048ca662e235395e0193131d6689426dee3a07dd729bb6cdabb959b6f6a97631e68eba06fa8aa068df133aa4993c93a81e65d55db73315b5e0fd3bf55d672b8f2d23b4ef5e65d2e6979a51ea53b4580ccde8aa4021acb55b6a5cfbf36b6fb877a999b6065796ac121d0436ea58971495199f871cc860e270e2f506ad5843f0e33cc399ef1658c7dcc2b68786fadf968de1e753b6747ef8711da4711b812149efd2d9c4cbba3750d5442843c8fa58f784bfba48fe08b9eba0e7f132b43e6c0be4fa27f3077070cf886e9d59b1c50c84cca81803041e1ba3b07b8de26556c3b47c14fec9242dfeb3fb57fe38190e97a58d284e99afdc932a16cd329c8635a2d9275c569129431d52cbabfa2ff0aa1a57a9237cc5445"], &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2688
remove dir: /root/orangefs-client/dfs-0-82
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2039, 10076, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 2: 2040, 10074, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 03:04:00] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2028
-----finish removing dir
mkdir time 2031
executor 3 create dir /root/orangefs-client/dfs-0-83 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-83
receive_execute: 2, 4059
receive_execute: 1, 4060
receive_execute: 3, 4059
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 4060
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 6347, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6347, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6347, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6347, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 944 tid 944

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 944, pid 944, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:04:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 40, 0
execute_one time: 0, 40
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 6347, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:04:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:04:04] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:04:04] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:04:04] Error: Could not initialize server subsystems
[E 03/25/2023 03:04:04] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 6347, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 4069, 0, 0
execute_one loop: 0, 0, 4069
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 334
----- completed 10
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 4672, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 4672, flag collect 0
----- executor 3 signal number : 53
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4672, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 4672, flag collect 0
----- executor 3 signal number : 18
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4136, 0
execute_one time: 0, 4136
2023/03/25 04:04:08 for select break: 1
2023/03/25 04:04:08 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1951
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:04:08 for select break: 1
2023/03/25 04:04:08 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 4062, 4139, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 301
----- executor 0 executes write_coverage_signal cov->size 26135, flag collect 0
----- executor 0 signal number : 83
----- executor 1 signal number : 231
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 4064, 4137, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 3475
2023/03/25 04:04:08 for select break: 1
2023/03/25 04:04:08 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 89
----- executor 1 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 1 signal number : 47
executor 1 server cover_cnt 5 output_pos_value 1287
2023/03/25 04:04:08 for select break: 1
2023/03/25 04:04:08 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:04:08 wg wait finish
2023/03/25 04:04:08 ------ all executors finish execution
2023/03/25 04:04:08 exec time: 8202
2023/03/25 04:04:08 ----- PS len: 4
2023/03/25 04:04:08 [CLIENT] executor 3 has 13 replies
2023/03/25 04:04:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 334 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:04:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:08 [SERVER] executor 0 has 4 replies
2023/03/25 04:04:08 ------- fuzzer executor 0 receive 1951 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 0 receive 301 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 4061, 4141, 0
before receive testcase: 0 0
2023/03/25 04:04:08 [SERVER] executor 1 has 5 replies
2023/03/25 04:04:08 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 1 receive 231 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 1 receive 89 signal and 0 cover from userspace component
2023/03/25 04:04:08 ------- fuzzer executor 1 receive 47 signal and 0 cover from userspace component
2023/03/25 04:04:08 [SERVER] executor 2 has 0 replies
2023/03/25 04:04:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:04:08 ----- no new client coverage: false, true
2023/03/25 04:04:08 mutate testcase with failures
2023/03/25 04:04:08 ----- mutateArg()
2023/03/25 04:04:08 ----- mutateArg()
2023/03/25 04:04:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:04:08 disable threaded and collide
2023/03/25 04:04:08 prog length: 6
2023/03/25 04:04:08 prog length: 19
2023/03/25 04:04:08 HasCrashFail:true HasNetFail:false
04:04:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x40800, 0x40)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1f79810e9", 0x7}, {&(0x7f0000000440)}, {&(0x7f0000000540)="119a66f8e9fca5365d5bc3740504dd07ec9f97693656f80fb49f32bdd6c1875d8fe83e80b29e372b8d9c54074df48093364c0f0b75d2431e3b35e922d57dc83641319d99b0539d0750857f434a5bb519ca0b30d7aee2e63ff66827457653821da53db40298cf8f103226ff268175c8772f83ed37bdc05501b83495a0d5251e0b341f6af6cd4d54b74074b90f8595894e25dc241b96a26ce887e883e84c99c367f47857e01e7f1f3857fc62188f59cc9dc711cc3f30baba1b3ebbf1360815971b87d2608c0dd732c19ad4c718ee7f8b32bd9b7c5424f368237b4a82186ba158113723faf45649f743817f108c1f", 0xed}], 0x3, 0xf7, 0x7)
r2 = dup(r0)
open$dir(&(0x7f0000000440)='./file0\x00', 0x400, 0x1c0)
openat(r2, &(0x7f0000000700)='./file0\x00', 0x0, 0x0)
fstat(r0, &(0x7f0000000740))
r3 = fcntl$dupfd(r1, 0x406, r1)
fsetxattr$security_smack_transmute(r3, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r4 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f00000000c0))
pwritev(r4, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xfffffee6}], 0x3, 0x6, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r3, &(0x7f0000000380), &(0x7f0000000480)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a271256f13fea94df6557edf579d8e83a30133f37c637174454e2e54f6b477149a5c0cbf1c7a2"], 0x63, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4032
remove dir: /root/orangefs-client/dfs-0-83
time breakdown 1: 4061, 4142, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 23
-----finish removing dir
receive_execute: 3, 6066
receive_execute: 5, 6066
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 6043
executor 3 create dir /root/orangefs-client/dfs-0-84 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-84
receive_execute: 2, 6068
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 6075
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 30, 0, 0
execute_one loop: 0, 0, 30
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 30, 0, 0
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6357, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6357, flag collect 0
----- executor 3 signal number : 2065
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 18191, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 18191, flag collect 0
----- executor 3 signal number : 1023
----- completed 7
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 10058, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 10058, flag collect 0
----- executor 3 signal number : 406
----- completed 10
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
----- executor 3 write_call_output, size 32765, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1394
----- completed 17
execute_call 0, 10128, 0, 0
execute_one loop: 0, 1, 10128
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10166, 0, 0
execute_one loop: 0, 0, 10166
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 960 tid 960

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 960, pid 960, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:04:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
[D 03/25/2023 03:04:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 10213, 0
execute_one time: 0, 10213
time breakdown 3: 6081, 10215, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:04:24 for select break: 1
2023/03/25 04:04:24 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 3339
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 6071, 10225, 0
before receive testcase: 0 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 10217, 0
execute_one time: 2, 10217
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 1548
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:04:24 for select break: 1
2023/03/25 04:04:24 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:04:24 for select break: 1
2023/03/25 04:04:24 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 434
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 171
----- executor 0 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 0 signal number : 146
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 14
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 2
executor 0 server cover_cnt 11 output_pos_value 5700
2023/03/25 04:04:24 for select break: 1
2023/03/25 04:04:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:04:24 wg wait finish
2023/03/25 04:04:24 ------ all executors finish execution
2023/03/25 04:04:24 exec time: 16294
2023/03/25 04:04:24 ----- PS len: 4
2023/03/25 04:04:24 [CLIENT] executor 3 has 19 replies
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 6069, 10228, 0
before receive testcase: 0 0
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 1023 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 406 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 1394 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:04:24 [SERVER] executor 0 has 11 replies
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 3339 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 1548 signal and 0 cover from userspace component
2023/03/25 04:04:24 [SERVER] executor 2 has 0 replies
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 434 signal and 0 cover from userspace component
2023/03/25 04:04:24 [SERVER] executor 1 has 1 replies
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 171 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 146 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 04:04:24 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
time breakdown 1: 6071, 10222, 0
before receive testcase: 0 1
2023/03/25 04:04:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:04:24 ----- no new client coverage: false, true
2023/03/25 04:04:24 mutate testcase with failures
2023/03/25 04:04:24 ----- insertCall()
2023/03/25 04:04:24 ----- generateCall 2458 open open
2023/03/25 04:04:24 ----- insertCall()
2023/03/25 04:04:24 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/25 04:04:24 ----- mutateArg()
2023/03/25 04:04:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:04:24 disable threaded and collide
2023/03/25 04:04:24 prog length: 6
2023/03/25 04:04:24 prog length: 15
2023/03/25 04:04:24 HasCrashFail:true HasNetFail:false
04:04:24 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fdatasync(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f0000000440)='./file0\x00', 0x40, 0x6b)
fcntl$setstatus(r0, 0x4, 0x800)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r2 = fcntl$dupfd(r1, 0x406, r1)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f00000000c0))
pwritev(r3, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000480)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b7832a920a9a5cfa3495aca450a712f3fc8c1d0606dcb3795f06d5a219f779f7d628cb32d36a7040bf34f4bdb97667d02ef3beb7ed04726e8b4c57d902e4c7302f6c10f54aa1299ce76db9802e01ccc354a445112acd6631c7e064590e1d2ee5a649e1b17cbe2f76689b76ae2aad2783fdb128d910f07cf651f3fbf853ee07a29b0b4b8f50fabfd6df58a4387093c63593e7f1d49838a9c04d443480ca617a21fd2278f10bf8bb2dfedd349ec60ec3895d885a7bd4ed582810b3e7f074f4a457ab55d27dd3c33814b01878b070ef", 0x189}], 0x3, 0x101, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r2, &(0x7f0000000380), &(0x7f00000003c0)=ANY=[@ANYBLOB="05030200000003005ad8ee1f05000000f4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b31861e4ca9a494e9d1a91a0bbacd93a1d2fed47af1f2b95590e917fd7959aea85ce09000000000000003d4c350b74a2f7f7e9f912261636657e41b7"], 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3120
remove dir: /root/orangefs-client/dfs-0-84
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 03:04:24] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:04:24] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:04:24] Error: Could not initialize server subsystems
[E 03/25/2023 03:04:24] Error: Could not initialize server; aborting.
[E 03/25/2023 03:04:24] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:24] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:26] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:26] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:28] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:28] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:30] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:30] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:32] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:32] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:34] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:34] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:34] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.7:3334 failed: Connection refused
[E 03/25/2023 03:04:34] *** Out of retries.
[E 03/25/2023 03:04:34] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 03:04:34] *** Out of retries.
[E 03/25/2023 03:04:34] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 03:04:34] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 03:04:34] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:34] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:36] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:36] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:38] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:38] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:40] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:40] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:42] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:42] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:44] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:44] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:44] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.7:3334 failed: Connection refused
[E 03/25/2023 03:04:44] *** Out of retries.
[E 03/25/2023 03:04:44] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 03:04:44] *** Out of retries.
[E 03/25/2023 03:04:44] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 03:04:44] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 03:04:44] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:44] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:48] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:48] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:50] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:50] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:52] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:52] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
lstat(/root/orangefs-client/dfs-0-84/file0) failedremove dir time 30082
-----finish removing dir
[E 03/25/2023 03:04:54] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 03:04:54] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 03:04:54] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.7:3334 failed: Connection refused
[E 03/25/2023 03:04:54] *** Out of retries.
[E 03/25/2023 03:04:54] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 03:04:54] *** Out of retries.
[E 03/25/2023 03:04:54] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 03:04:54] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
receive_execute: 5, 38149
receive_execute: 8, 38150
mkdir time 8068
executor 3 create dir /root/orangefs-client/dfs-0-85 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-85
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 38151
receive_execute: 8, 38151
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2815
----- completed 5
execute_call 0, 20120, 0, 1
execute_one loop: 0, 0, 20121
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9852, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 9852, flag collect 0
----- executor 3 signal number : 493
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 12
----- directly resend shmid 12
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20136, 0, 0
execute_one loop: 0, 0, 20136
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 976 tid 976

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 976, pid 976, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:05:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20163, 0
execute_one time: 0, 20163
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 20162, 0
execute_one time: 0, 20162
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 38159, 20164, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1999
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 833
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 78
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 265
executor 0 server cover_cnt 5 output_pos_value 3482
time breakdown 2: 38158, 20165, 0
before receive testcase: 0 0
time breakdown 1: 38158, 20165, 0
before receive testcase: 0 0
time breakdown 0: 38154, 20168, 0
before receive testcase: 0 1
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:05:23 wg wait finish
2023/03/25 04:05:23 ------ all executors finish execution
2023/03/25 04:05:23 exec time: 58333
2023/03/25 04:05:23 ----- PS len: 4
2023/03/25 04:05:23 [CLIENT] executor 3 has 15 replies
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 2815 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 493 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 [SERVER] executor 0 has 5 replies
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 1999 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 833 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 265 signal and 0 cover from userspace component
2023/03/25 04:05:23 [SERVER] executor 2 has 0 replies
2023/03/25 04:05:23 [SERVER] executor 1 has 1 replies
2023/03/25 04:05:23 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:05:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:05:23 ----- no new client coverage: false, true
2023/03/25 04:05:23 mutate testcase with failures
2023/03/25 04:05:23 ----- insertCall()
2023/03/25 04:05:23 ----- mutateFailPos()
2023/03/25 04:05:23 insert call 16 at pos 17
2023/03/25 04:05:23 ----- insertCall()
2023/03/25 04:05:23 ----- removeCall()
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:05:23 disable threaded and collide
2023/03/25 04:05:23 prog length: 6
2023/03/25 04:05:23 prog length: 21
2023/03/25 04:05:23 HasCrashFail:true HasNetFail:false
04:05:23 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040), 0x4, 0x3)
r0 = dup(0xffffffffffffffff)
r1 = dup(r0)
fsetxattr$security_ima(r1, &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x5, 0x1, 0x12, 0x1, 0xed, "d29a1001177e33a19d7319821fe973bb7633e17071fabd9eb5aa5eaa47e32823d58998b63865d4a04531b9b9e351be677e639824ee1b0cd36237e12df640af1a100c82713235c1f77b35cc3f97d60284c301beb38b367ed271fb38e801247de6abe91e0ba39fb8ef6d450c690eae759a95ba97b322f994b7d5c96e50962cff19d02adbd4defe239857db4ea35bc6055d7bcca6992e85f9bd6dd73c52c1d0c684ca6b74f355b541d6e8f42ad5dd8a766485590244000f45a48d9edcd5106f73b4cfbfccf5110a7d517cb4ca42c102cfca061be33d06369859dcd9c72dd2e327edee5eb31f7d3b0905ae45ca3b55"}, 0xf6, 0x3)
r2 = dup(0xffffffffffffffff)
write$binfmt_aout(r2, &(0x7f0000000200)={{0xcc, 0x5, 0x8d, 0x73, 0x1f3, 0x0, 0x4b, 0xaa55}, "bc6879c31f3c48df6675c132b9e18bdb4c919fdbb40612cc06fea00e626cbbd428641fafc03dd0b70d439fa4c8691104bb3890a01d4f1d024c966b666e00bfae80d99c15b89eb1e2f89ce374195308b9f75e2757f2da81cda3350e9ea6952a13a26b3bf0414bb85170c28aa451e0bdf4cd023e2ac4ca52467a04d85658169cb19709ddc6ed982dd1308b27be84c40a1b44e43b2e459919dc105613cc7174a5df6a7a3af9f25407231af77658fed072f7eb5a94f4e5df39c3e0354f0b1e0173", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x6df)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000900), &(0x7f0000000940)='./file0\x00', 0x8, 0x3)
r3 = dup(r1)
fstat(r3, &(0x7f0000000980))
fsetxattr$user(r0, &(0x7f0000000a00), &(0x7f0000000a40)='security.ima\x00', 0xd, 0x2)
syz_failure_sync(0x0, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000a80))
fcntl$setpipe(r2, 0x407, 0x8dc)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000b00)='security.SMACK64EXEC\x00', &(0x7f0000000b40)={'trusted.overlay.redirect\x00'}, 0x1a, 0x2)
r4 = dup(0xffffffffffffffff)
fcntl$setpipe(r4, 0x407, 0x400000080)
syz_failure_sync(0x1, 0x3)
r5 = fcntl$dupfd(r0, 0x406, r0)
fstat(r5, &(0x7f0000000b80))
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000c00)={'#! ', './file0', [{0x20, 'trusted.overlay.redirect\x00'}], 0xa, "1672feaee405846305df55af3b2024dc6d26024234863d02217a536581f58bb6c960439dc442b3ecd97bd5fd479bb5148065a5889b163df5356cf95e9fd6dc975e27d951eea67ea6aaf9718d760a454e18f816ec5ffe689bd21f032eedc492f4c37adf9ca79a1c8710dbe5863e06bf7b8b141f362ab35fe610c719ab45bebcdab1b8f2"}, 0xa8)
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000cc0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5896
remove dir: /root/orangefs-client/dfs-0-85
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-86 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-86
receive_execute: 16, 57
receive_execute: 18, 57
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 17, 58
receive_execute: 19, 57
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 9191, flag collect 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 1 signal number : 88
executor 1 server cover_cnt 1 output_pos_value 92
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 992 tid 992

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 992, pid 992, value 1

----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:05:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20, 0
execute_one time: 0, 20
time breakdown 3: 76, 21, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 412, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 75, 23, 0
before receive testcase: 0 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 20, 0
execute_one time: 0, 20
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1502
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 10
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 1 signal number : 14
executor 1 server cover_cnt 5 output_pos_value 1630
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 73, 23, 0
before receive testcase: 0 0
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 75, 23, 0
before receive testcase: 0 0
2023/03/25 04:05:23 for select break: 1
2023/03/25 04:05:23 --------- executor 3 receive reply, reply.done 1
2023/03/25 04:05:23 wg wait finish
2023/03/25 04:05:23 ------ all executors finish execution
2023/03/25 04:05:23 exec time: 82
2023/03/25 04:05:23 ----- PS len: 4
2023/03/25 04:05:23 [CLIENT] executor 3 has 21 replies
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 [SERVER] executor 1 has 5 replies
2023/03/25 04:05:23 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 [SERVER] executor 0 has 3 replies
2023/03/25 04:05:23 [SERVER] executor 2 has 0 replies
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:23 ------- fuzzer executor 1 receive 1502 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 1 receive 10 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 04:05:23 ------- fuzzer executor 1 receive 14 signal and 0 cover from userspace component
2023/03/25 04:05:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:05:23 ----- no new client coverage: false, true
2023/03/25 04:05:23 mutate testcase with failures
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 ----- insertCall()
2023/03/25 04:05:23 ----- generateCall 516 getxattr getxattr
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 ----- mutateArg()
2023/03/25 04:05:23 ----- splice()
2023/03/25 04:05:23 ----- insertCall()
2023/03/25 04:05:23 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/25 04:05:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:05:23 disable threaded and collide
2023/03/25 04:05:23 prog length: 6
2023/03/25 04:05:23 prog length: 7
2023/03/25 04:05:23 HasCrashFail:true HasNetFail:false
04:05:23 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_selinux(&(0x7f0000000100)='.\x00', 0x0, 0x0, 0xfffffffffffffd8d, 0x0)
getxattr(&(0x7f0000000140)='./file0/file0\x00', &(0x7f0000000040)=@known='trusted.syz\x00', &(0x7f0000000080)=""/42, 0xb)
getxattr(&(0x7f0000000000)='./file0/file0\x00', 0x0, 0x0, 0x4)
setxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)=@v1={0x2, "708148409842"}, 0x7, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0\x00', 0x0, 0x0, 0x0, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1216
remove dir: /root/orangefs-client/dfs-0-86
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 13
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:05:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:05:23] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:05:23] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:05:23] Error: Could not initialize server subsystems
[E 03/25/2023 03:05:23] Error: Could not initialize server; aborting.
[D 03/25/2023 03:05:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:05:23] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:05:23] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:05:23] Error: Could not initialize server subsystems
[E 03/25/2023 03:05:23] Error: Could not initialize server; aborting.
receive_execute: 3, 2034
receive_execute: 2, 2035
mkdir time 2021
executor 3 create dir /root/orangefs-client/dfs-0-87 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-87
receive_execute: 3, 2034
receive_execute: 5, 2034
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 6359, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6359, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6359, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6359, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6359, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6359, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12252, flag collect 0
----- executor 0 signal number : 1411
----- executor 0 executes write_coverage_signal cov->size 4575, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2087
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1259 tid 1259

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1259, pid 1259, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:05:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 41, 0
execute_one time: 1, 41
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:05:25] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:05:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
2023/03/25 04:05:27 for select break: 1
2023/03/25 04:05:27 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
executor 3, execute_one inner time: 0, 2056, 0
execute_one time: 1, 2056
time breakdown 3: 2039, 2057, 0
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 709
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:05:27 for select break: 1
2023/03/25 04:05:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2037, 2058, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 13532, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2993
time breakdown 2: 2038, 2058, 0
before receive testcase: 0 1
2023/03/25 04:05:27 for select break: 1
2023/03/25 04:05:27 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:05:27 for select break: 1
2023/03/25 04:05:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:05:27 wg wait finish
2023/03/25 04:05:27 ------ all executors finish execution
2023/03/25 04:05:27 exec time: 4094
2023/03/25 04:05:27 ----- PS len: 4
2023/03/25 04:05:27 [CLIENT] executor 3 has 7 replies
2023/03/25 04:05:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:27 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:05:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:05:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:27 [SERVER] executor 0 has 9 replies
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 1411 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 709 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 04:05:27 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
time breakdown 0: 2037, 2060, 0
2023/03/25 04:05:27 [SERVER] executor 1 has 0 replies
2023/03/25 04:05:27 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 04:05:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:05:27 ----- no new client coverage: false, true
2023/03/25 04:05:27 mutate testcase with failures
2023/03/25 04:05:27 ----- insertCall()
2023/03/25 04:05:27 ----- generateCall 2343 link link
2023/03/25 04:05:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:05:27 disable threaded and collide
2023/03/25 04:05:27 prog length: 6
2023/03/25 04:05:27 prog length: 18
2023/03/25 04:05:27 HasCrashFail:true HasNetFail:false
04:05:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
syz_failure_sync(0x1, 0x3)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
link(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0)='./file0\x00')
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4136
remove dir: /root/orangefs-client/dfs-0-87
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 2020
executor 3 create dir /root/orangefs-client/dfs-0-88 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-88
receive_execute: 1, 2049
receive_execute: 2, 2049
receive_execute: 1, 2049
receive_execute: 4, 2049
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:05:29] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2004
----- completed 2
execute_call 0, 10035, 0, 1
execute_one loop: 0, 0, 10036
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10036, 0, 0
execute_one loop: 0, 0, 10038
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1275 tid 1275

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1275, pid 1275, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:05:39] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10064, 0
execute_one time: 0, 10064
[D 03/25/2023 03:05:39] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2017, 0, 0
execute_one loop: 0, 0, 2017
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 137
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 346
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 20
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 20
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 20
----- completed 12
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 20
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6383, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6383, flag collect 0
----- executor 3 signal number : 20
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12101, 0
execute_one time: 0, 12101
time breakdown 3: 2053, 12102, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:05:41 for select break: 1
2023/03/25 04:05:41 --------- executor 3 receive reply, reply.done 1
2023/03/25 04:05:41 for select break: 1
2023/03/25 04:05:41 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:05:41 for select break: 1
2023/03/25 04:05:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2050, 12104, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2051, 12103, 0
before receive testcase: 0 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 16590, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1547
2023/03/25 04:05:41 for select break: 1
2023/03/25 04:05:41 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:05:41 wg wait finish
2023/03/25 04:05:41 ------ all executors finish execution
2023/03/25 04:05:41 exec time: 14164
2023/03/25 04:05:41 ----- PS len: 4
2023/03/25 04:05:41 [CLIENT] executor 3 has 18 replies
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 [SERVER] executor 0 has 5 replies
2023/03/25 04:05:41 [SERVER] executor 1 has 0 replies
2023/03/25 04:05:41 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 04:05:41 [SERVER] executor 2 has 0 replies
2023/03/25 04:05:41 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:05:41 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 04:05:41 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 04:05:41 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 04:05:41 fuzzer receive 2004 signal and 0 cover from executor 3
time breakdown 0: 2050, 12105, 10
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:05:41 ----- no new client coverage: false, true
2023/03/25 04:05:41 mutate testcase with failures
2023/03/25 04:05:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:05:41 disable threaded and collide
2023/03/25 04:05:41 prog length: 6
2023/03/25 04:05:41 prog length: 17
2023/03/25 04:05:41 HasCrashFail:true HasNetFail:false
04:05:41 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000000880)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea96111225479340343d8a3cc1d5ecc4eba552deb3fa50d9b88cc0790508c7a16e8a2c36dd115ea5b64616683a724ef9c1acce01e1008a7c003a487a5aaa1705d759ea33068e098895553730aa5904e9a424813d8afe3c8d77f2220a1b438b6d317f9d6fc4db0032461280626ee97dda50d7d5dff9731a2ec12258938be6683941c27e8cbe47888beded4b12a7f2eaa0b4bce9dbca78b240935ab75561b147184fba28b8fd7"], 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3952
remove dir: /root/orangefs-client/dfs-0-88
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
receive_execute: 0, 6062
mkdir time 6046
executor 3 create dir /root/orangefs-client/dfs-0-89 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-89
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 13, 6062
receive_execute: 14, 6062
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 12, 6062
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6395, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 6395, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6744, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6744, flag collect 0
----- executor 3 signal number : 97
----- completed 4
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 38, 0, 0
execute_one loop: 0, 0, 38
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1012 tid 1012

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1012, pid 1012, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:05:47] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 61, 0
execute_one time: 0, 61
2023/03/25 04:05:47 for select break: 1
2023/03/25 04:05:47 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6076, 62, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 15262, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4096, flag collect 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 59, 0
execute_one time: 2, 59
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4044, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
time breakdown 2: 6075, 63, 0
2023/03/25 04:05:47 for select break: 1
2023/03/25 04:05:47 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 1: 6074, 64, 0
2023/03/25 04:05:47 for select break: 1
2023/03/25 04:05:47 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:05:47 for select break: 1
2023/03/25 04:05:47 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:05:47 wg wait finish
2023/03/25 04:05:47 ------ all executors finish execution
2023/03/25 04:05:47 exec time: 6126
2023/03/25 04:05:47 ----- PS len: 4
2023/03/25 04:05:47 [CLIENT] executor 3 has 17 replies
2023/03/25 04:05:47 [SERVER] executor 1 has 1 replies
2023/03/25 04:05:47 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:05:47 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:47 [SERVER] executor 2 has 0 replies
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 6062, 64, 0
before receive testcase: 0 0
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 [SERVER] executor 0 has 4 replies
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:47 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:05:47 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:05:47 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:05:47 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:05:47 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:05:47 ----- no new client coverage: false, true
2023/03/25 04:05:47 mutate testcase with failures
2023/03/25 04:05:47 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:05:47 disable threaded and collide
2023/03/25 04:05:47 prog length: 6
2023/03/25 04:05:47 prog length: 17
2023/03/25 04:05:47 HasCrashFail:true HasNetFail:false
04:05:47 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000000880)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b91a4d52dc0bc1bba915a2508b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea96111225479340385f0865f824fa4eb756a5f1293ca735295f2ae175ab5247183a219b241e8ddef65a60da9414003dda1ead09f8255a5e576ed9743974e30ffbc800bddfef5acc6da4d8122ae4b735d59d6fa30796debab2157dd1a5cd488cc4d38a76faee533d0b6dbac3c4bdf0b76a0f11fd9f737bc9df1d35d558431a4823183bf783e6b3e5083b2372100e2cd903159f7712763c0d1c5c061fd1896fc27d9938e430d2563c70bd6"], 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3960
remove dir: /root/orangefs-client/dfs-0-89
remove dir time 17
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:05:47] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:05:47] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:05:47] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:05:47] Error: Could not initialize server subsystems
[E 03/25/2023 03:05:47] Error: Could not initialize server; aborting.
mkdir time 10055
executor 3 create dir /root/orangefs-client/dfs-0-90 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-90
receive_execute: 1, 10071
receive_execute: 2, 10072
receive_execute: 1, 10072
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 2, 10073
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 12774, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 12774, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 1, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 15250, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3890, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 3990, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2107
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1293 tid 1293

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1293, pid 1293, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:05:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 50, 0
execute_one time: 0, 50
2023/03/25 04:05:57 for select break: 1
2023/03/25 04:05:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10075, 51, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 10073, 52, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 50, 0
execute_one time: 1, 50
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 15274, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4147, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 4098, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 8 output_pos_value 2178
-----executor 0 collect shmids 4
----- directly resend shmid 4
2023/03/25 04:05:57 for select break: 1
2023/03/25 04:05:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10074, 53, 0
2023/03/25 04:05:57 for select break: 1
2023/03/25 04:05:57 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:05:57 for select break: 1
2023/03/25 04:05:57 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:05:57 wg wait finish
2023/03/25 04:05:57 ------ all executors finish execution
2023/03/25 04:05:57 exec time: 10125
before receive testcase: 0 0
2023/03/25 04:05:57 ----- PS len: 4
2023/03/25 04:05:57 [CLIENT] executor 3 has 17 replies
2023/03/25 04:05:57 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 [SERVER] executor 1 has 0 replies
2023/03/25 04:05:57 [SERVER] executor 2 has 0 replies
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:05:57 [SERVER] executor 0 has 8 replies
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 04:05:57 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/25 04:05:57 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:05:57 ----- no new client coverage: false, true
2023/03/25 04:05:57 mutate testcase with failures
2023/03/25 04:05:57 ----- insertCall()
2023/03/25 04:05:57 ----- insertCall()
2023/03/25 04:05:57 ----- generateCall 170 dup dup
2023/03/25 04:05:57 ----- insertCall()
2023/03/25 04:05:57 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 04:05:57 ----- insertCall()
2023/03/25 04:05:57 ----- generateCall 516 getxattr getxattr
2023/03/25 04:05:57 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:05:57 disable threaded and collide
2023/03/25 04:05:57 prog length: 6
2023/03/25 04:05:57 prog length: 8
2023/03/25 04:05:57 HasCrashFail:true HasNetFail:false
04:05:57 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
r1 = dup(r0)
write$binfmt_script(r1, &(0x7f0000000080)={'#! ', './file0', [{0x20, ':.!)\b]+{R'}, {0x20, ')'}, {}, {0x20, '(@]:'}, {}, {0x20, '.\''}, {}, {}], 0xa, "ae67474d069d6518058e59d6b595e5ef63f5db8aa58cb24a5f3b39fa4fbfb54020fd75674a7fdffde12cd63b97ad365548b2044880e74f53ff1d0f9bf71091c583fd2d622cff46419bb41d6d07d23b20cfe5024434ac37e2d422238a9fa2867f46bc44217692fc483987ad85cf7e5895b709c5d20e23db97f2a3188dd65b230d13aa0d65f96e677600644652b75778a71f4d13d43ffddb717e4f98e6eb6667ca6d908a2b320826ac908c3736de95edfd9e5b30b75b96543656e752ebd07034e312d0b4de448ac7a2bc62aad4d2"}, 0xf0)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=@known='com.apple.FinderInfo\x00', &(0x7f0000000200)=""/57, 0x39)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1784
remove dir: /root/orangefs-client/dfs-0-90
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 10072, 54, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:05:57] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:05:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2026
-----finish removing dir
mkdir time 4017
executor 3 create dir /root/orangefs-client/dfs-0-91 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-91
receive_execute: 1, 6044
receive_execute: 1, 6044
receive_execute: 3, 6043
receive_execute: 3, 6044
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6387, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 4023, 0, 0
execute_one loop: 0, 0, 4023
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4024, 0, 0
execute_one loop: 0, 0, 4024
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2603
----- executor 0 executes write_coverage_signal cov->size 26005, flag collect 0
----- executor 0 signal number : 1137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 24355, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4127
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 333
----- completed 3
execute_call 0, 36, 0, 1
execute_one loop: 0, 0, 37
cover_reset in execute_call
----- executor 3 write_call_output, size 6252, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 6252, flag collect 0
----- executor 3 signal number : 368
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 38, 0, 0
execute_one loop: 0, 0, 38
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1309 tid 1309

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1309, pid 1309, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:06:07] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 4083, 0
execute_one time: 0, 4083
[E 03/25/2023 03:06:07] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:06:07] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 101
----- completed 8
execute_call 0, 29, 0, 1
execute_one loop: 0, 0, 30
executor 3, execute_one inner time: 0, 4113, 0
execute_one time: 0, 4113
2023/03/25 04:06:07 for select break: 1
2023/03/25 04:06:07 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 26041, flag collect 0
2023/03/25 04:06:07 for select break: 1
2023/03/25 04:06:07 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 6047, 4114, 0
before receive testcase: 0 0
time breakdown 1: 6046, 4115, 0
before receive testcase: 0 0
2023/03/25 04:06:07 for select break: 1
2023/03/25 04:06:07 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 87
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 24427, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 4542
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 6045, 4115, 0
before receive testcase: 0 0
2023/03/25 04:06:07 for select break: 1
2023/03/25 04:06:07 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:06:07 wg wait finish
2023/03/25 04:06:07 ------ all executors finish execution
2023/03/25 04:06:07 exec time: 10161
2023/03/25 04:06:07 ----- PS len: 4
2023/03/25 04:06:07 [CLIENT] executor 3 has 8 replies
2023/03/25 04:06:07 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 368 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:07 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/25 04:06:07 [SERVER] executor 0 has 8 replies
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 2603 signal and 0 cover from userspace component
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 1137 signal and 0 cover from userspace component
2023/03/25 04:06:07 [SERVER] executor 2 has 0 replies
2023/03/25 04:06:07 [SERVER] executor 1 has 0 replies
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 6045, 4118, 0
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 87 signal and 0 cover from userspace component
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 04:06:07 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:06:07 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:06:07 ----- no new client coverage: false, true
2023/03/25 04:06:07 mutate testcase with failures
2023/03/25 04:06:07 ----- insertCall()
2023/03/25 04:06:07 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/25 04:06:07 ----- mutateArg()
2023/03/25 04:06:07 ----- mutateArg()
2023/03/25 04:06:07 ----- insertCall()
2023/03/25 04:06:07 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 04:06:07 ----- insertCall()
2023/03/25 04:06:07 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:06:07 disable threaded and collide
2023/03/25 04:06:07 prog length: 6
2023/03/25 04:06:07 prog length: 20
2023/03/25 04:06:07 HasCrashFail:true HasNetFail:false
04:06:07 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = open(&(0x7f0000000c00)='./file0/file1\x00', 0x200201, 0x0)
fcntl$dupfd(r1, 0x406, 0xffffffffffffffff)
r2 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r2, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f0000000c40)=ANY=[@ANYBLOB="04149f0727bfd15d6113ed8fd3b81fd59e673666360ebb7ebe22b68b67d1b8d3dfabca757ee219fccedd4c9bf7ab7b05c95a1e7b6d625110fac0cc0227fcdb27bed14f1051b7d9f01fe7196b4858fd1f6e41c315248052ff0f0e8f5f07b2052e18dd0514e514c0336814a1f5b918f843b89d223e3f65003cfcc0ec81961da440039b68e66c76a5d169ecfc5f3b249204fe21d2c46536ea3666ba72455628efdf5bc18860e51e53ae682334721cc7cec03a00f46cba8cacae63263e1ab016b14392040a7c3004de69fcbc750e"], 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
setxattr$security_ima(&(0x7f0000000b00)='./file0/file1\x00', &(0x7f0000000b40), &(0x7f0000000b80)=ANY=[@ANYBLOB="8901100000007f00450498afabf6bbd10000000859180000000000009a186f9cca0b51a4be422aee2a012efc8fc60b117a27c578c19500"/70], 0x4e, 0x0)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6248
remove dir: /root/orangefs-client/dfs-0-91
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 2040
-----finish removing dir
receive_execute: 2, 12203
receive_execute: 4, 12204
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 10164
executor 3 create dir /root/orangefs-client/dfs-0-92 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-92
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 12205
receive_execute: 4, 12204
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 10
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1326 tid 1326

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1326, pid 1326, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:06:20] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 34, 0
execute_one time: 1, 34
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:06:20] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:06:20] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2014
----- completed 3
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 12796, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 12796, flag collect 0
----- executor 3 signal number : 427
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 12
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 15
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 20
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2084, 0
execute_one time: 0, 2084
2023/03/25 04:06:22 for select break: 1
2023/03/25 04:06:22 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12210, 2085, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:06:22 for select break: 1
2023/03/25 04:06:22 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:06:22 for select break: 1
2023/03/25 04:06:22 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1298
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 12208, 2087, 0
before receive testcase: 0 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 18314, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1792
2023/03/25 04:06:22 for select break: 1
2023/03/25 04:06:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:06:22 wg wait finish
2023/03/25 04:06:22 ------ all executors finish execution
2023/03/25 04:06:22 exec time: 14295
2023/03/25 04:06:22 ----- PS len: 4
2023/03/25 04:06:22 [CLIENT] executor 3 has 20 replies
2023/03/25 04:06:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 2014 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 427 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 [SERVER] executor 1 has 0 replies
2023/03/25 04:06:22 [SERVER] executor 0 has 5 replies
2023/03/25 04:06:22 ------- fuzzer executor 0 receive 1298 signal and 0 cover from userspace component
2023/03/25 04:06:22 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:06:22 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 04:06:22 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 04:06:22 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 04:06:22 [SERVER] executor 2 has 0 replies
2023/03/25 04:06:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:06:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:06:22 ----- no new client coverage: false, true
2023/03/25 04:06:22 mutate testcase with failures
2023/03/25 04:06:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:06:22 disable threaded and collide
2023/03/25 04:06:22 prog length: 6
2023/03/25 04:06:22 prog length: 19
2023/03/25 04:06:22 HasCrashFail:true HasNetFail:false
04:06:22 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=ANY=[@ANYBLOB="73797374656d2e736563ffffffff00006c696e757800"], &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
time breakdown 2: 12208, 2086, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4280
remove dir: /root/orangefs-client/dfs-0-92
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 0: 12205, 2090, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
receive_execute: 2, 6065
receive_execute: 4, 6065
receive_execute: 5, 6065
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 6039
executor 3 create dir /root/orangefs-client/dfs-0-93 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-93
receive_execute: 5, 6066
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 2067
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1034 tid 1034

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1034, pid 1034, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:06:28] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 41, 0
execute_one time: 1, 41
----- executor 3 write_call_output, size 0, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6418, pid 519, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6418, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 47, 0
execute_one time: 0, 47
2023/03/25 04:06:28 for select break: 1
2023/03/25 04:06:28 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 6071, 47, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32673, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:06:28 for select break: 1
2023/03/25 04:06:28 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 12224, flag collect 0
time breakdown 2: 6070, 48, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
2023/03/25 04:06:28 for select break: 1
2023/03/25 04:06:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6067, 49, 0
before receive testcase: 0 0
2023/03/25 04:06:28 for select break: 1
2023/03/25 04:06:28 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:06:28 wg wait finish
2023/03/25 04:06:28 ------ all executors finish execution
2023/03/25 04:06:28 exec time: 6116
2023/03/25 04:06:28 ----- PS len: 4
2023/03/25 04:06:28 [CLIENT] executor 3 has 19 replies
2023/03/25 04:06:28 [SERVER] executor 0 has 4 replies
2023/03/25 04:06:28 [SERVER] executor 1 has 1 replies
2023/03/25 04:06:28 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:06:28 [SERVER] executor 2 has 0 replies
2023/03/25 04:06:28 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:06:28 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:06:28 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:06:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 2067 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:06:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:06:28 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:06:28 ----- no new client coverage: false, true
2023/03/25 04:06:28 mutate testcase with failures
2023/03/25 04:06:28 ----- insertCall()
2023/03/25 04:06:28 ----- generateCall 2459 open$dir open$dir
2023/03/25 04:06:28 ----- insertCall()
2023/03/25 04:06:28 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/25 04:06:28 ----- mutateArg()
2023/03/25 04:06:28 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:06:28 disable threaded and collide
2023/03/25 04:06:28 prog length: 6
2023/03/25 04:06:28 prog length: 7
2023/03/25 04:06:28 HasCrashFail:true HasNetFail:false
04:06:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
lremovexattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000100)=@random={'user.', 'trusted.overlay.opaque\x00'})
syz_failure_sync(0x0, 0x3)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
open$dir(&(0x7f0000000080)='./file0\x00', 0x200842, 0x8)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 872
remove dir: /root/orangefs-client/dfs-0-93
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 6069, 52, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 32
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:06:28] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:06:28] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:06:28] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:06:28] Error: Could not initialize server subsystems
[E 03/25/2023 03:06:28] Error: Could not initialize server; aborting.
receive_execute: 3, 4084
mkdir time 4052
executor 3 create dir /root/orangefs-client/dfs-0-94 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-94
receive_execute: 1, 4084
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 4085
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 4084
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
----- executor 3 write_call_output, size 32765, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2612
----- completed 1
execute_call 0, 2019, 0, 1
execute_one loop: 0, 0, 2020
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2021, 0, 0
execute_one loop: 0, 0, 2021
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 30473, flag collect 0
----- executor 0 signal number : 2629
----- executor 0 executes write_coverage_signal cov->size 19976, flag collect 0
----- executor 0 signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 13281, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4142
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 32765, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 311
----- completed 4
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 6268, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 6268, flag collect 0
----- executor 3 signal number : 246
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 104
----- completed 6
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 50, 0, 0
execute_one loop: 0, 0, 50
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1344 tid 1344

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1344, pid 1344, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:06:34] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 521, write pid:521
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 2090, 0
execute_one time: 0, 2090
2023/03/25 04:06:34 for select break: 1
2023/03/25 04:06:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 4090, 2091, 0
before receive testcase: 0 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2090, 0
execute_one time: 1, 2090
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 20024, flag collect 0
----- executor 0 signal number : 89
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 13407, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 4571
time breakdown 2: 4088, 2094, 0
before receive testcase: 0 1
2023/03/25 04:06:34 for select break: 1
2023/03/25 04:06:34 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:06:34 for select break: 1
2023/03/25 04:06:34 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:06:34 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:06:34 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 4085, 2096, 0
before receive testcase: 0 0
2023/03/25 04:06:34 wg wait finish
2023/03/25 04:06:34 ------ all executors finish execution
2023/03/25 04:06:34 exec time: 6181
2023/03/25 04:06:34 ----- PS len: 4
2023/03/25 04:06:34 [CLIENT] executor 3 has 7 replies
2023/03/25 04:06:34 fuzzer receive 2612 signal and 0 cover from executor 3
2023/03/25 04:06:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:34 fuzzer receive 311 signal and 0 cover from executor 3
2023/03/25 04:06:34 fuzzer receive 246 signal and 0 cover from executor 3
2023/03/25 04:06:34 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/25 04:06:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:34 [SERVER] executor 0 has 8 replies
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 2629 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 1126 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 89 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 04:06:34 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 04:06:34 [SERVER] executor 1 has 0 replies
2023/03/25 04:06:34 [SERVER] executor 2 has 0 replies
2023/03/25 04:06:34 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:06:34 ----- no new client coverage: false, true
2023/03/25 04:06:34 mutate testcase with failures
2023/03/25 04:06:34 ----- insertCall()
2023/03/25 04:06:34 ----- splice()
2023/03/25 04:06:34 ----- insertCall()
2023/03/25 04:06:34 ----- insertCall()
2023/03/25 04:06:34 ----- mutateFailPos()
2023/03/25 04:06:34 insert call 0 at pos 0
2023/03/25 04:06:34 ----- insertCall()
2023/03/25 04:06:34 ----- insertCall()
2023/03/25 04:06:34 ----- mutateArg()
2023/03/25 04:06:34 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:06:34 disable threaded and collide
2023/03/25 04:06:34 prog length: 6
2023/03/25 04:06:34 prog length: 20
2023/03/25 04:06:34 HasCrashFail:true HasNetFail:false
04:06:34 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file2\x00', &(0x7f0000000200), &(0x7f0000000240)=']@\xbbzz\xff\x00', 0x7, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000001d40)=ANY=[@ANYBLOB="00fb7e02022c2c74ebac19623bce919df3e8c5d10a46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023d8f35785e593d71e31c0f96a10300000088f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb89c6ae11c715b10548b64be43707000000000000000000bf39d29e783bf16330d576227f0b2b1fafc30883fb476424d5f263ea7865b0b24cc0331075dbcc44e33c666e7bada5295136626dc5c01f810667452e0d259d26f73a5402e27fa12b179c66e393ccb39712d8c60f92407d4b961e475d7df9a639dac5cf11d7b666977f3626b49980b697ffefe55ab562b92e4d432eb898fd5014f16e84e1727fd8774a66cb624bf0329cf88e726cc4822a2105b3b2b3bc5bec6e825de8e41f5c0186eca924daec09b40501a0b8423861bd838102d957b70d960c84defe3e416f43456b026d0587da61"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=@ng={0x4, 0x13, "1c01d88f9abef4373c2e5c3ff42111"}, 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4728
remove dir: /root/orangefs-client/dfs-0-94
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 4087, 2094, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[E 03/25/2023 03:06:34] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:06:34] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2047
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-95 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-95
receive_execute: 4, 2060
receive_execute: 1, 2061
receive_execute: 5, 2061
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 4, 2060
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:06:36] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2007
----- completed 4
execute_call 0, 10043, 0, 2
execute_one loop: 0, 0, 10045
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10065, 0, 0
execute_one loop: 0, 0, 10065
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20109, 0, 0
execute_one loop: 0, 0, 20109
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1360 tid 1360

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1360, pid 1360, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:06:56] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20134, 0
execute_one time: 0, 20134
[D 03/25/2023 03:06:56] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2017, 0, 0
execute_one loop: 0, 0, 2017
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 360
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 12802, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 12802, flag collect 0
----- executor 3 signal number : 36
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 18
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 18
----- completed 13
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 18
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 18
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 523, write pid:523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 22172, 0
execute_one time: 0, 22173
2023/03/25 04:06:58 for select break: 1
2023/03/25 04:06:58 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 2066, 22174, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:06:58 for select break: 1
2023/03/25 04:06:58 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2064, 22175, 0
----- executor 0 signal number : 939
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:06:58 for select break: 1
2023/03/25 04:06:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2062, 22176, 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 15960, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1561
2023/03/25 04:06:58 for select break: 1
2023/03/25 04:06:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:06:58 wg wait finish
2023/03/25 04:06:58 ------ all executors finish execution
2023/03/25 04:06:58 exec time: 24238
2023/03/25 04:06:58 ----- PS len: 4
2023/03/25 04:06:58 [CLIENT] executor 3 has 20 replies
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 2007 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 360 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 [SERVER] executor 1 has 0 replies
2023/03/25 04:06:58 [SERVER] executor 2 has 0 replies
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:06:58 [SERVER] executor 0 has 5 replies
2023/03/25 04:06:58 ------- fuzzer executor 0 receive 939 signal and 0 cover from userspace component
2023/03/25 04:06:58 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:06:58 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 04:06:58 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 04:06:58 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 2064, 22178, 0
before receive testcase: 0 0
2023/03/25 04:06:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:06:58 ----- no new client coverage: false, true
2023/03/25 04:06:58 mutate testcase with failures
2023/03/25 04:06:58 ----- insertCall()
2023/03/25 04:06:58 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/25 04:06:58 ----- insertCall()
2023/03/25 04:06:58 ----- generateCall 516 getxattr getxattr
2023/03/25 04:06:58 ----- mutateArg()
2023/03/25 04:06:58 ----- insertCall()
2023/03/25 04:06:58 ----- generateCall 2343 link link
2023/03/25 04:06:58 ----- mutateArg()
2023/03/25 04:06:58 ----- insertCall()
2023/03/25 04:06:58 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
before receive testcase: 0 0
2023/03/25 04:06:58 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 04:06:58 ----- mutateArg()
2023/03/25 04:06:58 ----- mutateArg()
2023/03/25 04:06:58 ----- insertCall()
2023/03/25 04:06:58 ----- generateCall 2346 listxattr listxattr
2023/03/25 04:06:58 ----- mutateArg()
2023/03/25 04:06:58 ----- insertCall()
2023/03/25 04:06:58 ----- generateCall 2343 link link
2023/03/25 04:06:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:06:58 disable threaded and collide
2023/03/25 04:06:58 prog length: 6
2023/03/25 04:06:58 prog length: 16
2023/03/25 04:06:58 HasCrashFail:true HasNetFail:false
04:06:58 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000014c0)='./file0\x00', &(0x7f0000001500), &(0x7f0000001540)=@v2={0x2000000, [{0x20, 0x36d}, {0x4, 0x5}]}, 0x14, 0x3)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000001680)='./file0\x00', &(0x7f0000001780)='./file0\x00')
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
getxattr(&(0x7f0000001580)='./file0\x00', &(0x7f00000015c0)=@known='system.advise\x00', &(0x7f0000001600)=""/107, 0x6b)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
listxattr(&(0x7f00000016c0)='./file0\x00', &(0x7f00000017c0)=""/61, 0x3d)
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=ANY=[@ANYBLOB="62639eac0818080072"], &(0x7f00000004c0)=""/4096, 0x1000)
syz_failure_sync(0x1, 0x3)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
link(&(0x7f0000001800)='./file1\x00', &(0x7f0000001840)='./file0\x00')
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000001700), &(0x7f0000001740)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3016
remove dir: /root/orangefs-client/dfs-0-95
remove dir time 22
-----finish removing dir
mkdir time 10176
executor 3 create dir /root/orangefs-client/dfs-0-96 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-96
receive_execute: 4, 10198
receive_execute: 5, 10199
receive_execute: 7, 10197
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 10198
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6643, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6643, flag collect 0
----- executor 3 signal number : 28
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6431, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6431, flag collect 0
----- executor 3 signal number : 20
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6393, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6393, flag collect 0
----- executor 3 signal number : 17
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6393, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6393, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6393, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6393, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1056 tid 1056

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1056, pid 1056, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:07:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6393, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6393, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 78, 0
execute_one time: 1, 78
2023/03/25 04:07:09 for select break: 1
2023/03/25 04:07:09 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10206, 79, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 18351, flag collect 0
----- executor 0 signal number : 315
----- executor 0 executes write_coverage_signal cov->size 5492, flag collect 0
2023/03/25 04:07:09 for select break: 1
2023/03/25 04:07:09 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 5007, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2127
2023/03/25 04:07:09 for select break: 1
2023/03/25 04:07:09 --------- executor 1 receive reply, reply.done 1
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 76, 0
execute_one time: 0, 76
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 1: 10204, 81, 0
2023/03/25 04:07:09 for select break: 1
2023/03/25 04:07:09 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:07:09 wg wait finish
2023/03/25 04:07:09 ------ all executors finish execution
2023/03/25 04:07:09 exec time: 10280
2023/03/25 04:07:09 ----- PS len: 4
2023/03/25 04:07:09 [CLIENT] executor 3 has 16 replies
2023/03/25 04:07:09 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:09 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 10204, 81, 0
before receive testcase: 0 0
2023/03/25 04:07:09 [SERVER] executor 0 has 4 replies
2023/03/25 04:07:09 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:07:09 ------- fuzzer executor 0 receive 315 signal and 0 cover from userspace component
2023/03/25 04:07:09 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:07:09 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 04:07:09 [SERVER] executor 1 has 1 replies
2023/03/25 04:07:09 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
time breakdown 0: 10202, 82, 0
before receive testcase: 0 0
2023/03/25 04:07:09 [SERVER] executor 2 has 0 replies
2023/03/25 04:07:09 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:07:09 ----- no new client coverage: false, true
2023/03/25 04:07:09 mutate testcase with failures
2023/03/25 04:07:09 ----- insertCall()
2023/03/25 04:07:09 ----- generateCall 171 dup2 dup2
2023/03/25 04:07:09 ----- insertCall()
2023/03/25 04:07:09 ----- mutateArg()
2023/03/25 04:07:09 ----- insertCall()
2023/03/25 04:07:09 ----- mutateArg()
2023/03/25 04:07:09 ----- mutateArg()
2023/03/25 04:07:09 ----- insertCall()
2023/03/25 04:07:09 ----- insertCall()
2023/03/25 04:07:09 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 04:07:09 ----- mutateArg()
2023/03/25 04:07:09 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:07:09 disable threaded and collide
2023/03/25 04:07:09 prog length: 6
2023/03/25 04:07:09 prog length: 20
2023/03/25 04:07:09 HasCrashFail:true HasNetFail:false
04:07:09 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f0000002e00), &(0x7f0000000100)=0x1cb0, 0x8, 0x2)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
dup2(0xffffffffffffffff, 0xffffffffffffffff)
faccessat(0xffffffffffffffff, &(0x7f00000000c0)='./file0/file0\x00', 0x1)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r1 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r1, &(0x7f00000019c0)=[{&(0x7f0000002e40)=""/236, 0xec}, {&(0x7f0000000500)=""/87, 0x57}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4082, 0xff2}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r2, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@known='security.selinux\x00', &(0x7f0000001c80)=""/4096, 0x1000)
dup2(r1, r2)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4336
remove dir: /root/orangefs-client/dfs-0-96
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 20
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:07:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:07:09] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:07:09] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:07:09] Error: Could not initialize server subsystems
[E 03/25/2023 03:07:09] Error: Could not initialize server; aborting.
receive_execute: 4, 2038
receive_execute: 4, 2038
receive_execute: 5, 2038
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 2018
executor 3 create dir /root/orangefs-client/dfs-0-97 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-97
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 2040
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 2063
----- completed 2
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 13
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1072 tid 1072

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1072, pid 1072, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:07:11] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 40, 0
execute_one time: 1, 40
----- executor 3 write_call_output, size 0, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 528, write pid:528
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 0, 47, 0
execute_one time: 0, 47
2023/03/25 04:07:11 for select break: 1
2023/03/25 04:07:11 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2046, 48, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32630, flag collect 0
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 12224, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2121
----- executor 1 signal number : 899
before receive testcase: 0 0
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:07:11 for select break: 1
2023/03/25 04:07:11 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2042, 51, 0
before receive testcase: 0 0
2023/03/25 04:07:11 for select break: 1
2023/03/25 04:07:11 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2043, 51, 0
2023/03/25 04:07:11 for select break: 1
2023/03/25 04:07:11 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:07:11 wg wait finish
2023/03/25 04:07:11 ------ all executors finish execution
2023/03/25 04:07:11 exec time: 2090
2023/03/25 04:07:11 ----- PS len: 4
2023/03/25 04:07:11 [CLIENT] executor 3 has 20 replies
2023/03/25 04:07:11 [SERVER] executor 1 has 1 replies
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:07:11 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 [SERVER] executor 0 has 4 replies
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 04:07:11 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:07:11 [SERVER] executor 2 has 0 replies
2023/03/25 04:07:11 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:07:11 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:11 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:07:11 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 04:07:11 mutate testcase with failures
2023/03/25 04:07:11 ----- insertCall()
2023/03/25 04:07:11 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/25 04:07:11 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:07:11 disable threaded and collide
2023/03/25 04:07:11 prog length: 6
2023/03/25 04:07:11 prog length: 20
2023/03/25 04:07:11 HasCrashFail:true HasNetFail:false
04:07:11 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
syz_failure_sync(0x0, 0x3)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
setxattr$security_selinux(&(0x7f0000002e00)='./file0/file1\x00', &(0x7f0000002e40), &(0x7f0000002e80)='system_u:object_r:modules_dep_t:s0\x00', 0x23, 0x1)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4640
remove dir: /root/orangefs-client/dfs-0-97
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 2042, 52, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 18
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:07:11] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:07:11] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:07:11] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:07:11] Error: Could not initialize server subsystems
[E 03/25/2023 03:07:11] Error: Could not initialize server; aborting.
receive_execute: 2, 6057
receive_execute: 1, 6057
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 6038
executor 3 create dir /root/orangefs-client/dfs-0-98 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-98
receive_execute: 4, 6058
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 1, 6057
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 2063
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 15
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1087 tid 1087

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1087, pid 1087, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:07:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 50, 0
execute_one time: 9, 50
----- executor 3 write_call_output, size 6405, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 529, write pid:529
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 65, 0
execute_one time: 0, 65
2023/03/25 04:07:17 for select break: 1
2023/03/25 04:07:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 6062, 67, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:07:17 for select break: 1
2023/03/25 04:07:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 6058, 69, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:07:17 for select break: 1
2023/03/25 04:07:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6058, 70, 0
before receive testcase: 0 1
2023/03/25 04:07:17 for select break: 1
2023/03/25 04:07:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:07:17 wg wait finish
2023/03/25 04:07:17 ------ all executors finish execution
2023/03/25 04:07:17 exec time: 6127
2023/03/25 04:07:17 ----- PS len: 4
2023/03/25 04:07:17 [CLIENT] executor 3 has 20 replies
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:07:17 [SERVER] executor 2 has 0 replies
2023/03/25 04:07:17 [SERVER] executor 1 has 1 replies
2023/03/25 04:07:17 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 13782, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4325, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3807, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
2023/03/25 04:07:17 [SERVER] executor 0 has 4 replies
time breakdown 0: 6059, 70, 0
2023/03/25 04:07:17 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:07:17 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:07:17 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:07:17 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:07:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:07:17 ----- no new client coverage: false, true
2023/03/25 04:07:17 mutate testcase with failures
2023/03/25 04:07:17 ----- insertCall()
2023/03/25 04:07:17 ----- generateCall 170 dup dup
2023/03/25 04:07:17 ----- insertCall()
2023/03/25 04:07:17 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 04:07:17 ----- insertCall()
2023/03/25 04:07:17 ----- generateCall 2750 pwritev pwritev
2023/03/25 04:07:17 ----- insertCall()
2023/03/25 04:07:17 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/25 04:07:17 ----- mutateFailPos()
2023/03/25 04:07:17 insert call 5 at pos 0
2023/03/25 04:07:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:07:17 disable threaded and collide
2023/03/25 04:07:17 prog length: 6
2023/03/25 04:07:17 prog length: 17
2023/03/25 04:07:17 HasCrashFail:true HasNetFail:false
04:07:17 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r0, &(0x7f00000009c0)=[{&(0x7f0000000440)="53a52cce030048665cb7be5968c1713d284d0aab2be454e2adc33c29d9f135cddd3c3fdc232b0ead23779fa9348cd584feb817f5d5d6954b56a5336d90c29082e333583e44de28182b831e3a74ded8c069ac398ba3a1c0d9b9533dce93d7b6dc321989b9cddceaa4b137d7ddf5b3ca0e15e6cbfa3072e670b58ed8fa4656e03b0520d2603110841f4864c3e2c099b02aecb8800008dfcc2017065316312fca8b3edbea995b7294c9a8", 0xa9}, {&(0x7f0000000500)="c71b86304e292bf74ad9143493f74c4e6eacf644681653fe63d3280b556d30d4bb1f45ad1146704058417e556237645a4995efb7c2be6b1cadb93bae8b51a8b382b705c58485f56bc9ed8fdf900149b47692504ee81e13c713c57b10d5879e297bcde741e49017ecac00e6177d99d2ffe8baf626f8662a0f991bf1f22c33bc8f40ad83f05a416505dd435ef3da10e121266b063818d2754c0cd2c420fd4324c6a6b6ee37678935c6562802f328e99957f3ade84aee8d252da41ae27e89c251e78c6105908702eb9c4b99c47b129bcfa1e36ba2eb", 0xd4}, {&(0x7f0000000600)="eca48a302af69ecb046afb693e37afd0adf4bbd8f72e4820a797e1cc9d2873d7a091a560300295a2645389ca17801c9f80f4da20cbaf6e61f2c757989894687cbb667e24d05c0ded895566b44cd64044e43ca23686ccfd57bd653a844685e17a8d15e63014fb177b2dae93207ecbdf4484aa91081a6bd866e2968a38b4c510ccdf0e27a713221c6e39aecd6d4b1f53ad8208351a564d79e98e2a228e479c41e46c28c9d482dc5e7b6715c789981581ed7ae798d9982768bf281e4ec12e9038192cb7b4812b0879a493181420143481582099b9aa981214186633876042dc945838c69f8e5faae742011865eb11", 0xed}, {&(0x7f0000000700)="5112f8fd8f42c6eb2bd8c22ee2ccc6de0fc75a47e7f3b145032db9efa1a43b89c3c339d686d02a0b5bc6fa7d4d728fee148c1cd3037a4d83", 0x38}, {&(0x7f0000000740)="a1354962ff7b41517f19843f64353b0966fd3109d66d5ddf7ed102874b57a59265ae7e5f63ad2d4deeda5f340833e035a1b96ca9a076f4c1c17eeb8fdf1857166570fe05e1826ce206481b4f2ead5d781f5f5ab6789ff73e5ab0dd3ead2efd1cbb86def00717b8225c3a0a6e6bdce5", 0x6f}, {&(0x7f00000007c0)="6173521055314070c47e4ea4ae6fd0a08e0c823caea71e36b941b9c5fd057f4c57819e9b33234764eacf1b41e0241345b486a3e21a4693112d512e1a256863093348496be615ca8020b03d94341bc845d2f4800438adb60cf87ce62abb0f8be377c208d26c04eb2ac3fe552cd95cb2882431cbbb53264e21f8d4d36b6f33f1087319889596885ad3caf4f1b112b531e5d7a756443c8e0ffced13a476436fba90c36f90a39624d009dbd627f097419aedff1da52106215b906dd1282ec3477d89426c4c07385d78e5782b38732f4a73d9683c569531", 0xd5}, {&(0x7f00000008c0)="c70c3777f923b48ee4d6a67228cc1309ddbdb3813728909f7cfa366d7917090a1e3e31758696b54fef5bab6e96ddf3b848f8f8c04399f1e916a6588eb28cb80d6d1b3bb4df33b55681089a9722debc1a4e356f67581e844b2b9b06482c3b3db23d50b2b1cc19d9d8568065b20ac159b52e9b8bdde892b3835ce0ca51a1016c18fa093f68b7c2626586b661a9cd0c2f936b74e4fcf245a7a165643df06a469d12928226747a9a8b42c13d5d826fd452579b9c67eb8090482689cb3a214f40216ce8e35b243973f70e792fdf1de3cbedbae42f15bddc2e805389fcc0a39c93b413cfc60200b2c62366b4dd2c6d7c4d09", 0xef}], 0x7, 0x5, 0x6)
r1 = dup(r0)
r2 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f00000000c0))
pwritev(r3, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$user(r1, &(0x7f0000000a40), &(0x7f0000000a80)='(/\x00', 0x3, 0x0)
fcntl$dupfd(r3, 0x0, r3)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r2, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5528
remove dir: /root/orangefs-client/dfs-0-98
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 17
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:07:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:07:17] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:07:17] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:07:17] Error: Could not initialize server subsystems
[E 03/25/2023 03:07:17] Error: Could not initialize server; aborting.
receive_execute: 0, 6053
mkdir time 6036
executor 3 create dir /root/orangefs-client/dfs-0-99 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-99
receive_execute: 2, 6053
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 6054
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 2, 6053
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 2063
----- completed 6
execute_call 0, 30142, 0, 1
execute_one loop: 0, 0, 30143
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 9283, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 9283, flag collect 0
----- executor 3 signal number : 1111
----- completed 7
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 6
----- directly resend shmid 6
----- executor 3 write_call_output, size 5785, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 5785, flag collect 0
----- executor 3 signal number : 53
----- completed 13
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30162, 0, 0
execute_one loop: 0, 0, 30162
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1103 tid 1103

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1103, pid 1103, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:07:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 531, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 30200, 0
execute_one time: 0, 30200
time breakdown 3: 6057, 30201, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1997
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 30191, 1
execute_one time: 9, 30192
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:07:53 for select break: 1
2023/03/25 04:07:53 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:07:53 for select break: 1
2023/03/25 04:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:07:53 for select break: 1
2023/03/25 04:07:53 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 6055, 30203, 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/25 04:07:53 for select break: 1
2023/03/25 04:07:53 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:07:53 wg wait finish
2023/03/25 04:07:53 ------ all executors finish execution
2023/03/25 04:07:53 exec time: 36261
2023/03/25 04:07:53 ----- PS len: 4
2023/03/25 04:07:53 [CLIENT] executor 3 has 17 replies
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 1111 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:07:53 [SERVER] executor 2 has 0 replies
2023/03/25 04:07:53 [SERVER] executor 0 has 6 replies
2023/03/25 04:07:53 ------- fuzzer executor 0 receive 1997 signal and 0 cover from userspace component
2023/03/25 04:07:53 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/25 04:07:53 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 04:07:53 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 04:07:53 [SERVER] executor 1 has 1 replies
2023/03/25 04:07:53 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:07:53 ------- fuzzer executor 0 receive 621 signal and 0 cover from userspace component
2023/03/25 04:07:53 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
----- executor 0 signal number : 77
----- executor 0 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 0 signal number : 621
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 6 output_pos_value 3341
time breakdown 0: 6053, 30207, 0
before receive testcase: 0 0
2023/03/25 04:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:07:53 ----- no new client coverage: false, true
time breakdown 1: 6055, 30203, 0
before receive testcase: 0 0
2023/03/25 04:07:53 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/25 04:07:53 ----- generateCall 3765 symlinkat symlinkat
2023/03/25 04:07:53 ----- generateCall 171 dup2 dup2
2023/03/25 04:07:53 ----- generateCall 171 dup2 dup2
2023/03/25 04:07:53 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/25 04:07:53 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/25 04:07:53 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/25 04:07:53 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/25 04:07:53 ----- generateCall 248 fstat fstat
2023/03/25 04:07:53 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 04:07:53 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/25 04:07:53 map[./file0:true ./file1:true]
2023/03/25 04:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/25 04:07:53 prog length: 20
2023/03/25 04:07:53 HasCrashFail:false HasNetFail:false
04:07:53 ---executing program 0:
---
---
---
fcntl$setstatus(0xffffffffffffffff, 0x4, 0x800)
symlinkat(&(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00')
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x2040, 0x8)
r1 = dup2(0xffffffffffffffff, r0)
r2 = fcntl$dupfd(r0, 0x0, r0)
r3 = dup2(r1, r2)
fstat(r0, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r4=>0x0, <r5=>0x0})
fstat(r0, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r6=>0x0, <r7=>0x0})
fstat(r1, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r8=>0x0})
fstat(r2, &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r9=>0x0, <r10=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r11=>0x0})
stat(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r12=>0x0})
setxattr$system_posix_acl(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='system.posix_acl_access\x00', &(0x7f00000004c0)={{}, {}, [{0x2, 0x2, 0xee00}, {0x2, 0x4, r4}, {0x2, 0x7, r6}, {0x2, 0x7}, {0x2, 0xa}, {0x2, 0x1, r8}, {0x2, 0x1, r9}], {0x4, 0x3}, [{0x8, 0x5, 0xffffffffffffffff}, {0x8, 0x5, r11}, {0x8, 0x0, 0xee00}, {0x8, 0x2, 0xee00}, {0x8, 0x5, r12}], {0x10, 0x2}, {0x20, 0x1}}, 0x84, 0x1)
fcntl$setstatus(r0, 0x4, 0x400)
lsetxattr$smack_xattr_label(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0)='security.SMACK64IPOUT\x00', &(0x7f0000000600)={'-!:'}, 0x4, 0x1)
fstat(r1, &(0x7f0000000680)={0x0, 0x0, 0x0, 0x0, 0x0, <r13=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000640)='system.posix_acl_default\x00', &(0x7f0000000700)={{}, {0x1, 0x2}, [{0x2, 0x5, 0xee01}, {0x2, 0x1, r9}], {0x4, 0x1}, [{0x8, 0x3, r10}, {0x8, 0x7, r13}, {0x8, 0x1, r5}, {0x8, 0x0, r11}, {0x8, 0x6, r7}], {0x10, 0x1}, {0x20, 0x1}}, 0x5c, 0x3)
fstat(r3, &(0x7f0000000780))
lgetxattr(&(0x7f0000000800)='./file0\x00', &(0x7f0000000840)=@known='trusted.overlay.metacopy\x00', &(0x7f0000000880)=""/9, 0x9)
fsetxattr$user(r3, &(0x7f00000008c0), &(0x7f0000000900)='system.posix_acl_access\x00', 0x18, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6912
remove dir: /root/orangefs-client/dfs-0-99
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 43
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:07:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:07:53] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:07:53] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:07:53] Error: Could not initialize server subsystems
[E 03/25/2023 03:07:53] Error: Could not initialize server; aborting.
receive_execute: 5, 10242
receive_execute: 5, 10242
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
mkdir time 10198
executor 3 create dir /root/orangefs-client/dfs-0-100 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-100
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 10242
receive_execute: 7, 10242
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 32765, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2601
----- completed 2
execute_call 0, 4034, 0, 4
execute_one loop: 0, 0, 4038
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 311
----- completed 3
execute_call 0, 56, 0, 1
execute_one loop: 0, 0, 57
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 98
----- completed 11
execute_call 0, 32, 0, 1
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 98
----- completed 12
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 98
----- completed 13
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 533, write pid:533
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4179, 0
execute_one time: 1, 4179
2023/03/25 04:08:07 for select break: 1
2023/03/25 04:08:07 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10249, 4182, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:08:07 for select break: 1
2023/03/25 04:08:07 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10247, 4183, 0
2023/03/25 04:08:07 for select break: 1
2023/03/25 04:08:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10247, 4184, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2603
----- executor 0 executes write_coverage_signal cov->size 27346, flag collect 0
----- executor 0 signal number : 1140
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 24647, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4130
2023/03/25 04:08:07 for select break: 1
2023/03/25 04:08:07 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:08:07 wg wait finish
2023/03/25 04:08:07 ------ all executors finish execution
2023/03/25 04:08:07 exec time: 14430
2023/03/25 04:08:07 ----- PS len: 4
2023/03/25 04:08:07 [CLIENT] executor 3 has 20 replies
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 2601 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 311 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 [SERVER] executor 1 has 0 replies
2023/03/25 04:08:07 [SERVER] executor 2 has 0 replies
2023/03/25 04:08:07 [SERVER] executor 0 has 4 replies
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:07 ------- fuzzer executor 0 receive 2603 signal and 0 cover from userspace component
2023/03/25 04:08:07 ------- fuzzer executor 0 receive 1140 signal and 0 cover from userspace component
time breakdown 0: 10244, 4188, 0
2023/03/25 04:08:07 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:08:07 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 04:08:07 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:08:07 ----- no new client coverage: false, true
2023/03/25 04:08:07 mutate testcase with failures
2023/03/25 04:08:07 ----- insertCall()
2023/03/25 04:08:07 ----- insertCall()
2023/03/25 04:08:07 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 04:08:07 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:08:07 disable threaded and collide
2023/03/25 04:08:07 prog length: 6
2023/03/25 04:08:07 prog length: 22
2023/03/25 04:08:07 HasCrashFail:true HasNetFail:false
04:08:07 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", "c6d62a15ec1c9e7d8c93336fefb0987defe85a910e7ad1c791bdfeca4774b01024050b6413756a947a4c87137c78124a6dc01495073c2cdf4c9f7b9a709f20ce2286d9b125f2abfa7e0b8c5e413f0d5a8ef843d15b67f0a553b41a4386c04e00d5e464c65523332be4cc3422870e13eacab6667062630260b063cd7ca06171ba895cd378179b78b3a5bfa3de5c73f85d9588ad2c09b6e66744c00ce696e6ea482a011b575f30d917a82fccbaa0edb49fe7e1918bcac0d65736c1df95d1abf64d81bf107eec4844fc2f39008f0ed64de782a61925b14339e98c3f2034daa10cbf0f7676b4906d5240dd5b70e8491ddc7c9c72bb50f0c33f44d66da56f95e0821b92e62ec825c5aa556c0c822aaaa925e86f948f64d7dbccd9b323a0f295bd85a76c48bce9cf57f280a714c23550b6e43d4fa44caf998883a3ef7cef8f2ef128cdd50274be00c57809d80f91b39595e2a0d41ec1c20ef5b6e51ec8aa857d0bc9ae5d2452f6af38331da569092c7dc7fe1409a813fb1f39f09b40953867052ca9c30544d5e904b6cc42650c001ba091cd7baddb0d172ea0c846fc4a42603870ec04fc841950fbff40d2538bc4355025419578c5b666dc33aa53f6b42576bd07a0c84858f10ed6c26b257857c1070c241bbfa0a2c91d4c5c68e032a3bc5fc9049b3c06b7607b2dd29b8d78d503e0282bf1f21f11b28383b5bc0992ab7fa5e7377b574cbba7c3d283617f3a584b389c1d3c9459db04564a6e42b3a4eb3796de07d1454891613e60a08c9c116d3c3c8bd59386df41b6b34a76a397ff1aac69f19e337c75ba5e28df92bc8f3ea4a8431f6abd9b55315f38583dff66df57783738d3e8a976fe33aedead734379513899351589b997b7b660708000c4daa33451a02ed72219140d27718ace6be8c8a8b5e0187716841adadc26319518e1e0a671bbc160ef02868c3309d99a475189a8839f45ca7afd3f5675b8eba594876dcf4bf59f251679dc8b0c8a0f5f8f1f2ad6ac85d0f26b7faec85471d9231b8845d362697edea41c731ae0b9c5100da0d68118d3c16231c4b3e369321439e04e85bb9ac612731cf43a6911b35dcd64385f661f929cd76338de477283a8db98401aed1de3926bbe536a5af09f8f6b71eda47a466c2cee54ec61b712829a8a19dc31a117dd9794a3fd55f547209cb680f26f03f686cd1bcfee310b4eeb1ed792fce4133e23a285508184fa84fd02936b72628223e15dbc573e06630a89ab8626671943cd57babdf60154a085b76301a7d89cd98407856c27c765c3a6aff52ebde7d757d6a609e64c19f9d9dba19f3b6e2873933c069e61340dc3499b29c0bfb90ffc0e258f69f4279f4f3605adeb094afd909a4c12f4b32ebf8cd8ab467aaba0245892dcd92e94f7b05498cd0a3d1b8828896174f436f98b7f298b4980820c0c57e336ba89bfc65eb6dd04df6872e68c6b12ba0cbf08a7ebe2aaa046455eb0c3185dd6232632641fbb29ec1d34eece53ef0121f941fe520b611c88a64d07709e14aa03444a0868f50c4cdde4e41e2803efdf11ca42cf8ab3b5afd879fcdca5492c7114ea2e0124678b96f4ddd24d9e11ea481caf5c6036df2b85db45f33fb63757aaf9602ab3a304e99f44c4ab15479793a355cea2ea409c37b707eafc5bfa00c28506ca233a01e1e2258da3386b846c62901b774163a43b7e78313118a1051bc6a1abcb0fef47d833417127499c04380b4895433a18228bdf55b0a786aeb0e3ee31e23b7bea17cd43cdb4493514e59368cd0d72f5504519128a30beffa056fd69cffa1c355426fb120c5d95231bc95e95ff66d600533ac49d0c52bdcb0e066efa3a5eb0ace51f21c86eb72a56a4edd0eeef095bf4189ee3ce847e5ef6580a5799c3648a7720a36e7f7cfd416c5d15107496c3d606ad3a2ca9f0b50ff91efe7688aa79d8dcb5eb7eed1fc18cd7c940dda99391a68605645d46d2087886ade6de2cd765ff42c71f8a4986767ad45eb1a4dbd1f0668d18079066a0b2c75e352e24c935bb3266368e3ef22dfe2787b2dcec6fc57c8d983e0aef12ee7479c10ffe805175cf3f19c7b325bf79fc2f34ab0d787d48c48c29cc4786de964cfbd2cfc26b514e15edfef70e24e080db680a87568880c7b6e9c0e711de320773633e63d2cd6bbfa4b37bdb9d5f12eb65d25d3a0f7e70fc0b01ba968934bf5ba88655e2d4d95aa424f63ff47bd913d31100a8d45904ff948770a45f14deaea019fda50144122880cce28a89104e386652889b12e132e0fa3758c171ac23980ac57dc3786a6cf3aa504c96cd0bf00aadcf1e81e0aa6a8943b739e084a1cd298e6506ea878d593a7fb6b7d9eb24208633f03d665401d6e04dd1a7fe94d380a7d22dc38244fcc54edf163b6ff60e13dd438596e587391d03dafffd02f1ea43edcaa7fb042dfc095e84b0aa8fbda6958607cb46c75f21e9c86d252b9f50a6dfab9abef06febe3642276a9ee3fccd03025235af8101a67560fa61db8d83f9346dce76ad7c40587180e8692d924c1c9f403c0aaaccfc3d0345e8637e5171f171bd7441d7e736355d51f1cc81bf0026ebc763183f122591adf22f0e85f0e62805b2fc47b97af58b74735e1d0035abb2d57ab62ea4f128b95acdf36f2c132d0a222d968255129f10f4a01db176cace76dbf2ff69fe9988dd6ff6b5a8050a0d091a9fc5d6b9a2d884ea5a5e7f3631e00a5693ce1b9bcabd8587b4844daabd078cff2a50591e79570ab9b9944d849c8a10352fca41399219755715c11b61ce8a922b70393537eb5e4fdc1c87db3dcb2ed6fd763ae577ec5450aa59cef2a37b0f31aed688e7f52f4ad3e4dc12e6d67f3bfdbf0662215934e208fbe3613dd3607475c37d0d8eab92e3f3e308ccad984ef667d8573da0ff28aa1f1f7de8a132b182fb1dbe278396cbbce4321aa2dc551accb45d795d473512a80dbd31de4a8f1e737894c53c22c56c0e5c56b2e37dde6561d8660db0a2d851f05e1380febcb90ea6c995f5f1fc629b3e559006c83ea6d9ccf2fb40e3e3b838b387080460ddcd203351c2d1ad77cf5cb6c6731a39050c0441caaa57d0e5e146e868c4d3a2d5798c333de530a55de5fbdefea81fc14266534e1c60759f78d2cfa76a38c95d09c9abb74c49b5dc221d7118b04481bac5e4de9f4992d65d3b2d45e604f86057fb6946054bb9965c8b54106539e452453a70422d514a12059cce5a6f6831e9b93d66bfcc63f82c293e598d84be6dd9e4c4e4c2c155b397a566fd040675c420b8cc7db75d9aa6a501ad6131f86aa507b8f35a2e8bfc437e2aebe00ccddb80c8fcf5965a252abf17153c4e23d0de5fd4ac6d3e8bdb868af6faebb3d71283bd4124cf0b525ea63624846e1f18aa71ef0bfa2c5ef51b3609d200acb96ec8419b887a469018db4eb06f82bbdafe6e10d909c0e28cdd572f2925e9ec99f4fe64c89218bef5f22c577d969f8a60d6c26cec22e0a30b253f08b8ab6f5a5f1ea539ccab7eed55836d6049f707f48b61e09c1a567ad3d49812834f491fcabba65e88b70a39cfcfe1d7b9d968bd06edf5dac05f46df9e3d59406bef77a1e8460195ecfe689fffe787cf1c8baa6b141625652911c6274dd9e0dff193c27d62c072f2dbc42ef546937f54fcd5fcdcdd424b53e2925bfbe687ac9e5b00d19a8999b582a2c473fa6c6e59603ac2dc66100b3ae0a2b7a3afc374c257d42111387e71303cccc1b1027fdda2f1aef39875a68e97caf58c89eecd0df1ca370d73d57386b937c9efc7bd2cdde1f028f42155976876430a6c3e54df515cdd28b80db6c7de830c1b42b7445000f045ebf45558bf48a8414527ac1ff72467ca92553e3977dc6124e5fddaef99a1b1eed50eaaa7c1e58d64454094ea15c7228658b12deab02d4ef8f8a07b2447f417e9e554fcc0ef17727cd192f00f35d411bc8201aa5e9e4dd65e9fa4021c591a7087359c84d597d425004e0cbfbb065335943f921b134de3bd8fadf27edfe0e9813d29b76fe48ad3e933376d8ef4da1532b8f7d32327fa2328404c42ea57553c9ce857e16d6cee99feef770519ae7aae8bbaba4cc869247a7aa3128c70d1168331264ff05a4f91fbf5feaaa6b685f732af08b54698ff62ba950d9f2645465c746b9c60ec1f2136b58f23dcc198bb075b69de43a71f1d45a42651d3c35933eb3986878c3fdd49f4fbaf615bffff2472dbec76c0d2ff410c965b2c0e865c7b2b49830e00c6d99c489086d303f1e8073e9ecce7e8b70f475120bdcf0fcdcadb7a3e926136c843d9c5ae9b6fc1f2716db1154b37130b4ed95ad405d73563bbbf0527f0792a189134cf6510334ac284b5277e59893fe10bdf24b6896eccf97bad0099b095de269a0faebfd449aa046d42b4790c047c72d72aa0313261ea31975eb4cbfcec9260802a05effdf8af93228884ae7cf8d7cf9355b2f03fdbeddfa51995f27da83654a7ec8f49ef93b4d8a3beab075332ba127dbd0004fed1b2c9abfd1976879bdea2137631ae0e77afeb123bde0912b6ad427698bafc4831e840cbf51960cb9491100d3f188084c90977732ca8bd815ab89d684bbb35287c230d026ef225dd8b6a694895cf945150b8887519791d13ba0b849c5d2301c840b2dbaf14e5208ef5ec1a1ca6bfd773b83b4e229a3cd70bcb29447f0bb848aab6b27946c17ea16b373b78540e2203255b0ee183a2e36cf292de68421901209a063115a22e66d95d3e87da88cdc4b21adeaf61d39164331019570c115a3cfda8ccfa1528b546cc62e1697933c64212ae0404ea40dd22d6787eee4cbf1e77ec4e9d9ca1bf7b930535b2955ca53b39e7f08dd89d8aab6ccb96ad3a5177f5c03cd98d8633b894a82c348cfa19f6f890e938364f41be86125c2f8f6f01da0da969ee4aca9a3267686af16aa80aaf6522a9ebbf3701ff36a3a51b85e1698921b98323a7558a4889afe9d3c15b02dd0a47b123c312e9930991a12e92d20358ab4054a1e076fdcec19de4b974961aa5d302b22595125b96b6604efec29d0b27525ad629477b84821dc3b35e87faf68e73f757aa06a6a19db9ad5b282c0a2ab950947d2f23d15b5caeec667af359a7f49aa997f3adf8192ce0cd23c145e59721e9fe72812aac6a3d5dcff6a456d19ad5d708c85d7abf6b82e9ca920375eca8429e9a57f9d377b0995605234fa2978f718e83981f89502156d6e9fc8e6593913bd9e1c346cd77543a9b452d6174d3d45116a594867391f3766d1da430b0ffc144a739c35b2277e69073521f48c1efff3beffda7528ddded12c715e553c93a3b6062556285c98eec1b8539114d51da8946087b9926e8800938f381031c9de3c8bfed0f3692e69ccee6ac70293d0d34f5898a595ecc51db99299cdaa09b56c71ca360df4ae41de5de50a0173be39fe29a3a4fe2efaf32befea12acb451e0725633249a92fc3dd03b9009fdf8ad6928552b078f4e5ddd7ac4664d5cc00107677e60527ac61d8a679a72e02014c19ad6ff23dd1c1622abc78cf047a24dbb1cd9b50969e1fb37f1fe4063cf18b25c93eee40a66491cfa2f8c50b537cc2f7b61e0ad99882af2d9e50af025fbda0472b06402c5f008bfc91f62f5ae59ede6536b870e53e9e044e517098caa8cd3980859a2a239796b9d7d7500cc8c3b359ca9e270eaf0da3cc3c44ff3f8d68b5cc4b97f925df66aa4a55e06e6719977850cfce87a3427f16354526ad1c38add12fc58016b7dac140d6477ce2385b44f908afa8ac0f1ef322f4479986ec0df09207cc1b43616671d60acafa2b1fd514f45532b1c5096bc"}, 0x1015, 0x1)
stat(&(0x7f0000001980)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
syz_failure_sync(0x0, 0x3)
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=ANY=[@ANYBLOB="73080009006974792e81656375726974792eaa0041434b36345452414e534d55544500"], &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001b80)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e5365637572697479002073656375726974792e534d41434b36345452414e534d5554450081d3b7a792ff6638dbdb986cdeec2219f552335e726118b65541fa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde4587b1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f9929fbf4b2f8d163f1a19c705a5412d1b09cc7980f5f02ccbeca3c64a77040600000000000000235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0ac119e114f99b59c764e088b697a23732cbba7aea9fd9d29a2adee7ae793dc057a98183df37c04ef62cea44f4c4f716eb6611587f3c5c85bc1de59a305ae419bb601a6e5f8227b6957d8a8e62f2af1b48a64ecc3c1c39e8a87118798d0c1b05de20763ef671893c6446a1c677335d89b2ec4f3ba461874ab6af7be3fa0750b19d7c07d7ace3f107e2a9711f9a01886ef3939a8de7e8886000f4fa0246f425fe4f7b640d55c7896ee64e08a3105d4c5fa3628ee89f8dd0a8edc54c80ff7bf4385ae866aaa73b37b649fd8346837e387b07db05f614a9d3aaa347739fcf789344e00e9c045fcb1fcf10468832f23ee9c2b5f1b1221ac1a5df35dc3660a4e1c6d06d580c8d55f7689e5c3ffc5d52a05aad8680a6c84ac52dd29c3c"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8728
remove dir: /root/orangefs-client/dfs-0-100
remove dir time 17
-----finish removing dir
mkdir time 2018
executor 3 create dir /root/orangefs-client/dfs-0-101 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-101
receive_execute: 2, 2035
receive_execute: 7, 2035
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 2035
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
receive_execute: 7, 2035
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6405, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16336, flag collect 0
----- executor 0 signal number : 1415
----- executor 0 executes write_coverage_signal cov->size 6100, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2091
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:08:09] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10033, 0, 0
execute_one loop: 0, 0, 10033
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10032, 0, 0
execute_one loop: 0, 0, 10032
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1389 tid 1389

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1389, pid 1389, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:08:20] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10062, 0
execute_one time: 0, 10062
cover_reset in execute_call
[D 03/25/2023 03:08:20] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:08:22 for select break: 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:08:22 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 2042, 12081, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 234
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 14832, flag collect 0
time breakdown 1: 2042, 12081, 0
before receive testcase: 0 1
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2521
time breakdown 0: 2037, 12082, 0
before receive testcase: 0 1
----- executor 3 signal number : 412
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 535, write pid:535
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12078, 0
execute_one time: 1, 12078
time breakdown 3: 2043, 12080, 0
before receive testcase: 0 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:08:22 wg wait finish
2023/03/25 04:08:22 ------ all executors finish execution
2023/03/25 04:08:22 exec time: 14126
2023/03/25 04:08:22 ----- PS len: 4
2023/03/25 04:08:22 [CLIENT] executor 3 has 22 replies
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 [SERVER] executor 1 has 0 replies
2023/03/25 04:08:22 [SERVER] executor 2 has 0 replies
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 412 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 [SERVER] executor 0 has 9 replies
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 1415 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 234 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:08:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:08:22 ----- no new client coverage: false, true
2023/03/25 04:08:22 mutate testcase with failures
2023/03/25 04:08:22 ----- insertCall()
2023/03/25 04:08:22 ----- mutateArg()
2023/03/25 04:08:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:08:22 disable threaded and collide
2023/03/25 04:08:22 prog length: 6
2023/03/25 04:08:22 prog length: 22
2023/03/25 04:08:22 HasCrashFail:true HasNetFail:false
04:08:22 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
syz_failure_sync(0x1, 0x3)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001980)={'#! ', './file0', [{0x20, 'com.apple.system.Security\x00'}, {0x20, 'security.SMACK64TRANSMUTE\x00'}, {}], 0xa, "4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"}, 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8808
remove dir: /root/orangefs-client/dfs-0-101
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 63
-----finish removing dir
mkdir time 7
executor 3 create dir /root/orangefs-client/dfs-0-102 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-102
receive_execute: 11, 70
receive_execute: 9, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 12, 71
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
receive_execute: 11, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 2063
----- completed 3
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1123 tid 1123

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1123, pid 1123, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:08:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 27, 0
execute_one time: 1, 27
----- executor 3 write_call_output, size 6409, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6417, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6417, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 537, write pid:537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 46, 0
execute_one time: 0, 46
time breakdown 3: 83, 47, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28651, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 10711, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3160, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2955, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2121
before receive testcase: 0 1
time breakdown 2: 82, 49, 0
before receive testcase: 0 1
time breakdown 1: 81, 50, 0
before receive testcase: 0 1
time breakdown 0: 80, 50, 0
before receive testcase: 0 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:08:22 for select break: 1
2023/03/25 04:08:22 --------- executor 3 receive reply, reply.done 1
2023/03/25 04:08:22 wg wait finish
2023/03/25 04:08:22 ------ all executors finish execution
2023/03/25 04:08:22 exec time: 124
2023/03/25 04:08:22 ----- PS len: 4
2023/03/25 04:08:22 [CLIENT] executor 3 has 22 replies
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:08:22 [SERVER] executor 0 has 4 replies
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:08:22 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:08:22 [SERVER] executor 1 has 1 replies
2023/03/25 04:08:22 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:08:22 [SERVER] executor 2 has 0 replies
2023/03/25 04:08:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:08:22 ----- no new client coverage: false, true
2023/03/25 04:08:22 mutate testcase with failures
2023/03/25 04:08:22 ----- insertCall()
2023/03/25 04:08:22 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 04:08:22 ----- insertCall()
2023/03/25 04:08:22 ----- insertCall()
2023/03/25 04:08:22 ----- generateCall 2374 mkdirat mkdirat
2023/03/25 04:08:22 ----- mutateArg()
2023/03/25 04:08:22 ----- insertCall()
2023/03/25 04:08:22 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 04:08:22 ----- insertCall()
2023/03/25 04:08:22 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 04:08:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:08:22 disable threaded and collide
2023/03/25 04:08:22 prog length: 6
2023/03/25 04:08:22 prog length: 9
2023/03/25 04:08:22 HasCrashFail:true HasNetFail:false
04:08:22 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000300), &(0x7f0000000340), 0x4, 0x1)
mkdir(&(0x7f0000000140)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
rmdir(&(0x7f00000000c0)='./file0\x00')
mkdirat(0xffffffffffffff9c, &(0x7f0000000100)='./file0\x00', 0x20)
lgetxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=@known='trusted.overlay.metacopy\x00', &(0x7f0000000200)=""/238, 0xee)
syz_failure_sync(0x1, 0x3)
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f0000000080)={']\''}, 0x3, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1376
remove dir: /root/orangefs-client/dfs-0-102
remove dir time 20
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:08:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:08:22] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:08:22] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:08:22] Error: Could not initialize server subsystems
[E 03/25/2023 03:08:22] Error: Could not initialize server; aborting.
mkdir time 8081
executor 3 create dir /root/orangefs-client/dfs-0-103 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-103
receive_execute: 4, 8102
receive_execute: 6, 8101
receive_execute: 6, 8102
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 8102
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2688
----- completed 2
execute_call 0, 6057, 0, 1
execute_one loop: 0, 0, 6058
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6057, 0, 0
execute_one loop: 0, 0, 6057
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2726
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1229
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4342
Terminated
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:08:36] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10031, 0, 0
execute_one loop: 0, 0, 10031
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 116
----- completed 6
execute_call 0, 20072, 0, 1
execute_one loop: 0, 0, 20073
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10031, 0, 0
execute_one loop: 0, 0, 10031
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 40136, 0, 0
execute_one loop: 0, 0, 40136
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1407 tid 1407

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1407, pid 1407, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:09:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 46217, 0
execute_one time: 0, 46218
----- executor 3 write_call_output, size 32765, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_call 0, 16, 0, 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
[D 03/25/2023 03:09:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 539, write pid:539
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 10
----- completed 9
execute_call 0, 2023, 0, 1
execute_one loop: 0, 0, 2024
executor 3, execute_one inner time: 0, 48247, 0
execute_one time: 0, 48247
2023/03/25 04:09:18 for select break: 1
2023/03/25 04:09:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 204
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 130
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 8110, 48247, 0
before receive testcase: 0 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 9 output_pos_value 4723
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:09:18 for select break: 1
2023/03/25 04:09:18 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:09:18 for select break: 1
2023/03/25 04:09:18 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 8108, 48251, 1
2023/03/25 04:09:18 for select break: 1
2023/03/25 04:09:18 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:09:18 wg wait finish
2023/03/25 04:09:18 ------ all executors finish execution
2023/03/25 04:09:18 exec time: 56355
2023/03/25 04:09:18 ----- PS len: 4
2023/03/25 04:09:18 [CLIENT] executor 3 has 9 replies
2023/03/25 04:09:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 2688 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 116 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:09:18 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/25 04:09:18 [SERVER] executor 0 has 9 replies
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 2726 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 1229 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 204 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 130 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 04:09:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:18 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:18 [SERVER] executor 2 has 0 replies
time breakdown 0: 8106, 48252, 0
before receive testcase: 0 0
time breakdown 1: 8107, 48253, 0
before receive testcase: 0 0
2023/03/25 04:09:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:09:18 ----- no new client coverage: false, true
2023/03/25 04:09:18 mutate testcase with failures
2023/03/25 04:09:18 ----- insertCall()
2023/03/25 04:09:18 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 04:09:18 ----- insertCall()
2023/03/25 04:09:18 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 04:09:18 ----- insertCall()
2023/03/25 04:09:18 ----- insertCall()
2023/03/25 04:09:18 ----- mutateArg()
2023/03/25 04:09:18 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 04:09:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:18 disable threaded and collide
2023/03/25 04:09:18 prog length: 6
2023/03/25 04:09:18 prog length: 20
2023/03/25 04:09:18 HasCrashFail:true HasNetFail:false
04:09:18 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e097aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"], 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
lsetxattr$trusted_overlay_origin(&(0x7f0000000880)='./file0/file0\x00', &(0x7f00000008c0), &(0x7f0000000900), 0x2, 0x2)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f00000005c0)='./file0/file0\x00', &(0x7f00000009c0)=@known='trusted.overlay.impure\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0x8)
r1 = openat(r0, &(0x7f0000000940)='./file0\x00', 0x220400, 0x102)
fsetxattr$security_ima(r1, &(0x7f0000000980), &(0x7f0000000a00)=@md5={0x1, "01000100"}, 0x11, 0x0)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4576
remove dir: /root/orangefs-client/dfs-0-103
remove dir time 58
-----finish removing dir
mkdir time 4048
executor 3 create dir /root/orangefs-client/dfs-0-104 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-104
receive_execute: 5, 4105
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 4107
receive_execute: 4, 4106
receive_execute: 4, 4107
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 1 write_server_output
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 2063
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6409, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 6409, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6758, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 6758, flag collect 0
----- executor 3 signal number : 97
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 8, 0, 4
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1141 tid 1141

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1141, pid 1141, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:09:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 541, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 80, 0
execute_one time: 1, 80
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:09:22 for select break: 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:09:22 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4116, 82, 0
before receive testcase: 0 1
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 16811, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 5103, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4551, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2125
2023/03/25 04:09:22 for select break: 1
2023/03/25 04:09:22 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4111, 83, 0
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 80, 0
execute_one time: 1, 80
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
before receive testcase: 0 0
2023/03/25 04:09:22 for select break: 1
2023/03/25 04:09:22 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4111, 85, 0
2023/03/25 04:09:22 for select break: 1
2023/03/25 04:09:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:09:22 wg wait finish
2023/03/25 04:09:22 ------ all executors finish execution
2023/03/25 04:09:22 exec time: 4193
2023/03/25 04:09:22 ----- PS len: 4
2023/03/25 04:09:22 [SERVER] executor 0 has 4 replies
2023/03/25 04:09:22 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 04:09:22 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:09:22 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:09:22 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:09:22 [CLIENT] executor 3 has 20 replies
2023/03/25 04:09:22 [SERVER] executor 2 has 0 replies
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 [SERVER] executor 1 has 1 replies
2023/03/25 04:09:22 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:09:22 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:22 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 4110, 87, 0
2023/03/25 04:09:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:09:22 ----- no new client coverage: false, true
2023/03/25 04:09:22 mutate testcase with failures
2023/03/25 04:09:22 ----- insertCall()
2023/03/25 04:09:22 ----- generateCall 2458 open open
2023/03/25 04:09:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:22 disable threaded and collide
2023/03/25 04:09:22 prog length: 6
2023/03/25 04:09:22 prog length: 18
2023/03/25 04:09:22 HasCrashFail:true HasNetFail:false
04:09:22 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
open(&(0x7f0000000880)='./file1\x00', 0x260601, 0x12)
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4120
remove dir: /root/orangefs-client/dfs-0-104
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 16
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:09:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:09:22] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:09:22] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:09:22] Error: Could not initialize server subsystems
[E 03/25/2023 03:09:22] Error: Could not initialize server; aborting.
mkdir time 2040
executor 3 create dir /root/orangefs-client/dfs-0-105 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-105
receive_execute: 1, 2060
receive_execute: 3, 2060
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 2058
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 2060
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 12802, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 12802, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
----- executor 3 signal number : 2077
----- completed 2
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6401, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 6401, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20420, flag collect 0
----- executor 0 signal number : 1419
----- executor 0 executes write_coverage_signal cov->size 7640, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1945, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1995, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2098
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1425 tid 1425

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1425, pid 1425, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:09:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 45, 0
execute_one time: 0, 46
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:09:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:09:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2007, 0, 0
execute_one loop: 0, 0, 2007
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 313
----- completed 11
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6405, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 3 signal number : 13
----- completed 16
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 543, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2074, 0
execute_one time: 1, 2074
2023/03/25 04:09:26 for select break: 1
2023/03/25 04:09:26 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2066, 2076, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 0 signal number : 142
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:09:26 for select break: 1
2023/03/25 04:09:26 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 2063, 2077, 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 16422, flag collect 0
2023/03/25 04:09:26 for select break: 1
2023/03/25 04:09:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2061, 2079, 0
before receive testcase: 0 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2435
2023/03/25 04:09:26 for select break: 1
2023/03/25 04:09:26 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:09:26 wg wait finish
2023/03/25 04:09:26 ------ all executors finish execution
2023/03/25 04:09:26 exec time: 4140
2023/03/25 04:09:26 ----- PS len: 4
2023/03/25 04:09:26 [CLIENT] executor 3 has 18 replies
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 2077 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 313 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 2061, 2079, 0
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:26 [SERVER] executor 0 has 9 replies
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 1419 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 142 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 04:09:26 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 04:09:26 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:26 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 04:09:26 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:09:26 ----- no new client coverage: false, true
2023/03/25 04:09:26 RandomInsertFailure()
2023/03/25 04:09:26 failed servers: [2]
2023/03/25 04:09:26 filter Disconn Calls: 3 2, [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20] [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]
2023/03/25 04:09:26 insertSync 6 14 20
2023/03/25 04:09:26 findAndInsert at 6
2023/03/25 04:09:26 findAndInsert at 15
2023/03/25 04:09:26 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:26 disable threaded and collide
2023/03/25 04:09:26 prog length: 6
2023/03/25 04:09:26 prog length: 22
2023/03/25 04:09:26 HasCrashFail:true HasNetFail:false
04:09:26 ---executing program 0:
---
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040), 0x4, 0x3)
r0 = open(&(0x7f0000000080)='./file0\x00', 0x80, 0x44)
r1 = dup(r0)
r2 = dup(r1)
fsetxattr$security_ima(r2, &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x5, 0x1, 0x12, 0x1, 0xed, "d29a1001177e33a19d7319821fe973bb7633e17071fabd9eb5aa5eaa47e32823d58998b63865d4a04531b9b9e351be677e639824ee1b0cd36237e12df640af1a100c82713235c1f77b35cc3f97d60284c301beb38b367ed271fb38e801247de6abe91e0ba39fb8ef6d450c690eae759a95ba97b322f994b7d5c96e50962cff19d02adbd4defe239857db4ea35bc6055d7bcca6992e85f9bd6dd73c52c1d0c684ca6b74f355b541d6e8f42ad5dd8a766485590244000f45a48d9edcd5106f73b4cfbfccf5110a7d517cb4ca42c102cfca061be33d06369859dcd9c72dd2e327edee5eb31f7d3b0905ae45ca3b55"}, 0xf6, 0x3)
r3 = dup(r0)
syz_failure_sync(0x0, 0x3)
write$binfmt_aout(r3, &(0x7f0000000200)={{0xcc, 0x5, 0x8d, 0x73, 0x1f3, 0x0, 0x4b, 0xaa55}, "bc6879c31f3c48df6675c132b9e18bdb4c919fdbb40612cc06fea00e626cbbd428641fafc03dd0b70d439fa4c8691104bb3890a01d4f1d024c966b666e00bfae80d99c15b89eb1e2f89ce374195308b9f75e2757f2da81cda3350e9ea6952a13a26b3bf0414bb85170c28aa451e0bdf4cd023e2ac4ca52467a04d85658169cb19709ddc6ed982dd1308b27be84c40a1b44e43b2e459919dc105613cc7174a5df6a7a3af9f25407231af77658fed072f7eb5a94f4e5df39c3e0354f0b1e0173", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x6df)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000900), &(0x7f0000000940)='./file0\x00', 0x8, 0x3)
r4 = dup(r2)
fstat(r4, &(0x7f0000000980))
fsetxattr$user(r1, &(0x7f0000000a00), &(0x7f0000000a40)='security.ima\x00', 0xd, 0x2)
fstat(0xffffffffffffffff, &(0x7f0000000a80))
fcntl$setpipe(r3, 0x407, 0x8dc)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000b00)='security.SMACK64EXEC\x00', &(0x7f0000000b40)={'trusted.overlay.redirect\x00'}, 0x1a, 0x2)
syz_failure_sync(0x1, 0x3)
r5 = dup(r0)
fcntl$setpipe(r5, 0x407, 0x7ff)
r6 = fcntl$dupfd(r1, 0x406, r1)
fstat(r6, &(0x7f0000000b80))
write$binfmt_script(r0, &(0x7f0000000c00)={'#! ', './file0', [{0x20, 'trusted.overlay.redirect\x00'}], 0xa, "1672feaee405846305df55af3b2024dc6d26024234863d02217a536581f58bb6c960439dc442b3ecd97bd5fd479bb5148065a5889b163df5356cf95e9fd6dc975e27d951eea67ea6aaf9718d760a454e18f816ec5ffe689bd21f032eedc492f4c37adf9ca79a1c8710dbe5863e06bf7b8b141f362ab35fe610c719ab45bebcdab1b8f2"}, 0xa8)
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000cc0))
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 248
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6152
remove dir: /root/orangefs-client/dfs-0-105
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-106 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-106
receive_execute: 3, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 70
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 2, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 2 write_server_output
----- executor 3 write_call_output, size 6405, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 6405, flag collect 1
----- executor 3 cover number : 1749, signal number : 2061
----- completed 2
execute_call 0, 4, 0, 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 2 server cover_cnt 0 output_pos_value 1
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 609 tid 609

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 609, pid 609, value 1

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 03:09:26] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 545, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 45, 0
execute_one time: 0, 45
2023/03/25 04:09:27 for select break: 1
2023/03/25 04:09:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 77, 45, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 1
2023/03/25 04:09:27 for select break: 1
2023/03/25 04:09:27 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 1194, signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1519, flag collect 1
time breakdown 1: 73, 48, 0
before receive testcase: 0 0
----- executor 0 cover number : 302, signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1213, flag collect 1
----- executor 0 cover number : 284, signal number : 289
----- executor 0 executes write_coverage_signal cov->size 615, flag collect 1
----- executor 0 cover number : 99, signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3975
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 46, 0
execute_one time: 0, 46
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 73, 51, 0
before receive testcase: 0 1
2023/03/25 04:09:27 for select break: 1
2023/03/25 04:09:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 719, signal number : 899
executor 2 server cover_cnt 1 output_pos_value 1622
2023/03/25 04:09:27 for select break: 1
2023/03/25 04:09:27 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:09:27 wg wait finish
2023/03/25 04:09:27 ------ all executors finish execution
2023/03/25 04:09:27 exec time: 136
2023/03/25 04:09:27 ----- PS len: 4
2023/03/25 04:09:27 [CLIENT] executor 3 has 22 replies
2023/03/25 04:09:27 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:27 [SERVER] executor 2 has 1 replies
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 ------- fuzzer executor 2 receive 899 signal and 719 cover from userspace component
2023/03/25 04:09:27 fuzzer receive 2061 signal and 1749 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 [SERVER] executor 0 has 4 replies
2023/03/25 04:09:27 ------- fuzzer executor 0 receive 1403 signal and 1194 cover from userspace component
2023/03/25 04:09:27 ------- fuzzer executor 0 receive 316 signal and 302 cover from userspace component
2023/03/25 04:09:27 ------- fuzzer executor 0 receive 289 signal and 284 cover from userspace component
2023/03/25 04:09:27 ------- fuzzer executor 0 receive 75 signal and 99 cover from userspace component
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:27 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 74, 66, 0
before receive testcase: 0 0
2023/03/25 04:09:27 mutate testcase with failures
2023/03/25 04:09:27 ----- insertCall()
2023/03/25 04:09:27 ----- generateCall 170 dup dup
2023/03/25 04:09:27 ----- mutateArg()
2023/03/25 04:09:27 ----- mutateArg()
2023/03/25 04:09:27 ----- insertCall()
2023/03/25 04:09:27 ----- generateCall 516 getxattr getxattr
2023/03/25 04:09:27 ----- insertCall()
2023/03/25 04:09:27 ----- generateCall 516 getxattr getxattr
2023/03/25 04:09:27 ----- insertCall()
2023/03/25 04:09:27 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 04:09:27 ----- insertCall()
2023/03/25 04:09:27 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/25 04:09:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:27 disable threaded and collide
2023/03/25 04:09:27 prog length: 6
2023/03/25 04:09:27 prog length: 14
2023/03/25 04:09:27 HasCrashFail:true HasNetFail:false
04:09:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_selinux(&(0x7f0000000100)='./file0\x00', 0x0, 0x0, 0x0, 0x2)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
getxattr(&(0x7f0000000080)='./file0/file0\x00', &(0x7f00000000c0)=ANY=[@ANYBLOB="52b66ed16c45f7957f0100"], &(0x7f0000000200)=""/204, 0xcc)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x48101, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0/file0\x00', 0x802000, 0x48)
setxattr$security_evm(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0), &(0x7f0000000500)=@md5={0x1, "51d226610a6a45b76092a36e447e526a"}, 0x11, 0x3)
getxattr(&(0x7f0000000140)='./file0/file0/file0\x00', &(0x7f0000000180)=@random={'trusted.', '--\xd8#/\x00'}, &(0x7f0000000300)=""/241, 0xf1)
r1 = dup(r0)
dup(r1)
r2 = dup2(r0, r1)
fsetxattr$security_ima(r2, &(0x7f0000000400), &(0x7f0000000440)=@sha1={0x1, "6ceb2d7b6725f50e5aac897de6f1e9df0a2cac42"}, 0x15, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2344
remove dir: /root/orangefs-client/dfs-0-106
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
[D 03/25/2023 03:09:26] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 31
-----finish removing dir
mkdir time 21
executor 3 create dir /root/orangefs-client/dfs-0-107 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-107
receive_execute: 23, 52
receive_execute: 27, 52
receive_execute: 8, 52
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 28, 53
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6413, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 6413, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 6413, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 6413, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 3052, flag collect 0
-----executor 2 collect shmids 3
----- directly resend shmid 3
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2083
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:09:27] PVFS2 server got signal 15 (server_status_flag: 2080767)
[E 03/25/2023 03:09:27] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 03:09:27] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:09:27] Error: Could not initialize server subsystems
[E 03/25/2023 03:09:27] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 32765, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 303
----- completed 4
execute_call 0, 10045, 0, 2
execute_one loop: 0, 0, 10047
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10047
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1442 tid 1442

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1442, pid 1442, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:09:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10077, 0
execute_one time: 1, 10077
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
[D 03/25/2023 03:09:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2033, 0, 0
execute_one loop: 0, 0, 2033
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 131
----- completed 7
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 12866, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 12866, flag collect 0
----- executor 3 signal number : 29
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6433, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 6433, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 546, write pid:546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12127, 0
execute_one time: 0, 12127
2023/03/25 04:09:39 for select break: 1
2023/03/25 04:09:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 81, 12128, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 501
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 15447, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2782
2023/03/25 04:09:39 for select break: 1
2023/03/25 04:09:39 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 75, 12132, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 79, 12132, 0
before receive testcase: 0 1
2023/03/25 04:09:39 for select break: 1
2023/03/25 04:09:39 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:09:39 for select break: 1
2023/03/25 04:09:39 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:09:39 wg wait finish
2023/03/25 04:09:39 ------ all executors finish execution
2023/03/25 04:09:39 exec time: 12189
2023/03/25 04:09:39 ----- PS len: 4
2023/03/25 04:09:39 [CLIENT] executor 3 has 14 replies
2023/03/25 04:09:39 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 303 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 [SERVER] executor 0 has 9 replies
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 04:09:39 [SERVER] executor 2 has 4 replies
2023/03/25 04:09:39 ------- fuzzer executor 2 receive 738 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 2 receive 146 signal and 0 cover from userspace component
2023/03/25 04:09:39 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6568, flag collect 0
----- executor 2 signal number : 738
----- executor 2 executes write_coverage_signal cov->size 25240, flag collect 0
----- executor 2 signal number : 146
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 85
----- executor 2 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 2 signal number : 32
executor 2 server cover_cnt 4 output_pos_value 1014
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 501 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
time breakdown 2: 61, 12136, 0
before receive testcase: 0 0
2023/03/25 04:09:39 ------- fuzzer executor 2 receive 85 signal and 0 cover from userspace component
2023/03/25 04:09:39 ------- fuzzer executor 2 receive 32 signal and 0 cover from userspace component
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:39 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:09:39 ----- no new client coverage: false, true
2023/03/25 04:09:39 mutate testcase with failures
2023/03/25 04:09:39 ----- mutateArg()
2023/03/25 04:09:39 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:39 disable threaded and collide
2023/03/25 04:09:39 prog length: 6
2023/03/25 04:09:39 prog length: 3
2023/03/25 04:09:39 HasCrashFail:true HasNetFail:false
04:09:39 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 336
remove dir: /root/orangefs-client/dfs-0-107
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 24
-----finish removing dir
mkdir time 2019
executor 3 create dir /root/orangefs-client/dfs-0-108 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-108
receive_execute: 12, 2037
receive_execute: 1, 2043
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 2044
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 8, 2045
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6437, pid 548, write pid:548
----- executor 3 executes write_coverage_signal cov->size 6437, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1526, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2078
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 13, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 548, write pid:548
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1458 tid 1458

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1458, pid 1458, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:09:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 548, write pid:548
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
executor 3, execute_one inner time: 0, 42, 0
execute_one time: 0, 42
2023/03/25 04:09:41 for select break: 1
2023/03/25 04:09:41 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 2053, 45, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:09:41 for select break: 1
2023/03/25 04:09:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2044, 47, 0
before receive testcase: 0 0
2023/03/25 04:09:41 for select break: 1
2023/03/25 04:09:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2049, 47, 0
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 43, 0
execute_one time: 0, 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 0 signal number : 920
----- executor 0 executes write_coverage_signal cov->size 1574, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 579, flag collect 0
----- executor 0 signal number : 8
executor 0 server cover_cnt 8 output_pos_value 3043
before receive testcase: 0 0
2023/03/25 04:09:41 for select break: 1
2023/03/25 04:09:41 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:09:41 wg wait finish
2023/03/25 04:09:41 ------ all executors finish execution
2023/03/25 04:09:41 exec time: 2092
2023/03/25 04:09:41 ----- PS len: 4
2023/03/25 04:09:41 [CLIENT] executor 3 has 3 replies
2023/03/25 04:09:41 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:09:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:41 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:41 [SERVER] executor 2 has 0 replies
2023/03/25 04:09:41 [SERVER] executor 0 has 8 replies
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 920 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 04:09:41 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 04:09:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:09:41 ----- no new client coverage: false, true
2023/03/25 04:09:41 mutate testcase with failures
2023/03/25 04:09:41 ----- insertCall()
2023/03/25 04:09:41 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 04:09:41 ----- mutateArg()
2023/03/25 04:09:41 ----- insertCall()
2023/03/25 04:09:41 ----- generateCall 2374 mkdirat mkdirat
2023/03/25 04:09:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:41 disable threaded and collide
2023/03/25 04:09:41 prog length: 6
2023/03/25 04:09:41 prog length: 9
2023/03/25 04:09:41 HasCrashFail:true HasNetFail:false
04:09:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr(0x0, 0x0, 0x0, 0x0, 0x0)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)='./file0\x00', 0x8, 0x1)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x0)
setxattr$security_ima(0x0, 0x0, &(0x7f0000000080)=@v1={0x2, "2f0a30a317511bb5e2"}, 0xa, 0x0)
r0 = open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x0)
r1 = dup(r0)
mkdirat(r1, &(0x7f00000000c0)='./file0\x00', 0x1c0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 2049, 49, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1280
remove dir: /root/orangefs-client/dfs-0-108
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:09:41] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:09:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2019
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-109 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-109
receive_execute: 4, 2029
receive_execute: 3, 2030
receive_execute: 5, 2030
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 2031
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2, execute_one inner time: 5, 0, 0
execute_one time: 1, 5
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1473 tid 1473

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1473, pid 1473, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:09:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 26, 0
execute_one time: 0, 26
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:09:43] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:09:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2004
----- completed 5
execute_call 0, 2031, 0, 2
execute_one loop: 0, 0, 2033
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 549, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2076, 0
execute_one time: 0, 2076
2023/03/25 04:09:45 for select break: 1
2023/03/25 04:09:45 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2036, 2077, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:09:45 for select break: 1
2023/03/25 04:09:45 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2035, 2078, 0
before receive testcase: 0 0
----- executor 0 signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:09:45 for select break: 1
2023/03/25 04:09:45 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2033, 2079, 0
before receive testcase: 0 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14447, flag collect 0
----- executor 0 signal number : 109
executor 0 server cover_cnt 5 output_pos_value 1647
2023/03/25 04:09:45 for select break: 1
2023/03/25 04:09:45 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:09:45 wg wait finish
2023/03/25 04:09:45 ------ all executors finish execution
2023/03/25 04:09:45 exec time: 4111
2023/03/25 04:09:45 ----- PS len: 4
2023/03/25 04:09:45 [CLIENT] executor 3 has 9 replies
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 2004 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:45 [SERVER] executor 0 has 5 replies
2023/03/25 04:09:45 ------- fuzzer executor 0 receive 1126 signal and 0 cover from userspace component
2023/03/25 04:09:45 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:45 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
time breakdown 0: 2033, 2081, 0
2023/03/25 04:09:45 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 04:09:45 ------- fuzzer executor 0 receive 109 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:09:45 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:45 [SERVER] executor 2 has 0 replies
2023/03/25 04:09:45 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:09:45 ----- no new client coverage: false, true
2023/03/25 04:09:45 mutate testcase with failures
2023/03/25 04:09:45 ----- mutateArg()
2023/03/25 04:09:45 ----- insertCall()
2023/03/25 04:09:45 ----- generateCall 2343 link link
2023/03/25 04:09:45 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:45 disable threaded and collide
2023/03/25 04:09:45 prog length: 6
2023/03/25 04:09:45 prog length: 4
2023/03/25 04:09:45 HasCrashFail:true HasNetFail:false
04:09:45 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
open(&(0x7f0000000380)='./file0\x00', 0x30b040, 0x0)
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 440
remove dir: /root/orangefs-client/dfs-0-109
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 36
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-110 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-110
receive_execute: 4, 50
receive_execute: 1, 49
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 50
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 4, 49
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 551, write pid:551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:09:45] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 551, write pid:551
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1995
----- completed 2
execute_call 0, 10058, 0, 1
execute_one loop: 0, 0, 10059
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10059, 0, 0
execute_one loop: 0, 0, 10059
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1489 tid 1489

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1489, pid 1489, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:09:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10083, 0
execute_one time: 1, 10083
----- executor 3 write_call_output, size 0, pid 551, write pid:551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
[D 03/25/2023 03:09:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 551, write pid:551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2007, 0, 0
execute_one loop: 0, 0, 2007
executor 3, execute_one inner time: 0, 12090, 0
execute_one time: 0, 12090
2023/03/25 04:09:57 for select break: 1
2023/03/25 04:09:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 55, 12091, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 934
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:09:57 for select break: 1
2023/03/25 04:09:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 54, 12093, 0
before receive testcase: 0 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:09:57 for select break: 1
2023/03/25 04:09:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 12094, 0
before receive testcase: 0 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 12891, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1374
2023/03/25 04:09:57 for select break: 1
2023/03/25 04:09:57 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:09:57 wg wait finish
2023/03/25 04:09:57 ------ all executors finish execution
2023/03/25 04:09:57 exec time: 12145
2023/03/25 04:09:57 ----- PS len: 4
2023/03/25 04:09:57 [CLIENT] executor 3 has 4 replies
2023/03/25 04:09:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:57 fuzzer receive 1995 signal and 0 cover from executor 3
2023/03/25 04:09:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:09:57 [SERVER] executor 0 has 5 replies
2023/03/25 04:09:57 ------- fuzzer executor 0 receive 934 signal and 0 cover from userspace component
2023/03/25 04:09:57 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:09:57 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 04:09:57 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 04:09:57 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 50, 12095, 0
2023/03/25 04:09:57 [SERVER] executor 1 has 0 replies
2023/03/25 04:09:57 [SERVER] executor 2 has 0 replies
2023/03/25 04:09:57 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 04:09:57 ----- no new client coverage: false, true
2023/03/25 04:09:57 mutate testcase with failures
2023/03/25 04:09:57 ----- insertCall()
2023/03/25 04:09:57 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/25 04:09:57 ----- mutateFailPos()
2023/03/25 04:09:57 insert call 16 at pos 0
2023/03/25 04:09:57 ----- mutateArg()
2023/03/25 04:09:57 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:09:57 disable threaded and collide
2023/03/25 04:09:57 prog length: 6
2023/03/25 04:09:57 prog length: 19
2023/03/25 04:09:57 HasCrashFail:true HasNetFail:false
04:09:57 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f0000000a40)=@v2={0x3, 0x0, 0xb, 0x1, 0xb8, "8e54c2666b7b513e382f61c7aa20cfd9f7f4a83b1798b9f9c5a99c3a24274a66295f43fad8d654b7bbd910be65d055d8d63477d58cb21fdc24909bb1934e26dc69b95365f1eb4d31b8f16044bb4d97121df9fbf10adf5b91c56bdabdd3f51831f23e2fbac5e2f2cf88dd18bf7cf55e1325b6ab3e82c9c388fb439de1ab36c35ff9ebe6ef381d0650ae72d33caf9c4edbb3e6ab6b1f942d114c8a5eab430336546016dd56041d4dc5b5f0d4826dafb78a7df429097431ce76"}, 0xc1, 0x0)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
r1 = open(&(0x7f0000000800)='./file1\x00', 0x481, 0x10a)
fsetxattr$smack_xattr_label(r1, &(0x7f00000008c0)='security.SMACK64MMAP\x00', &(0x7f0000000940)=ANY=[@ANYRESOCT], 0x1a, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4704
remove dir: /root/orangefs-client/dfs-0-110
remove dir time 16
-----finish removing dir
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
mkdir time 2019
executor 3 create dir /root/orangefs-client/dfs-0-111 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-111
receive_execute: 3, 2034
receive_execute: 24, 2014
receive_execute: 3, 2035
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 2036
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:09:59] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10036, 0, 0
execute_one loop: 0, 0, 10036
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2007
----- completed 3
execute_call 0, 10033, 0, 2
execute_one loop: 0, 0, 10035
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 107
----- completed 4
execute_call 0, 10024, 0, 0
execute_one loop: 0, 0, 10024
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 6
----- completed 5
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10043, 0, 0
execute_one loop: 0, 0, 10043
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_call 0, 10039, 0, 1
execute_one loop: 0, 0, 10040
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 10032, 0, 0
execute_one loop: 0, 0, 10032
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 6
----- completed 12
execute_call 0, 10039, 0, 0
execute_one loop: 0, 0, 10039
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 4
----- completed 15
execute_call 0, 10036, 0, 0
execute_one loop: 0, 0, 10036
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 10027, 0, 0
execute_one loop: 0, 0, 10027
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 120435, 0, 0
execute_one loop: 0, 0, 120435
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1507 tid 1507

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1507, pid 1507, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:12:00] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 120459, 0
execute_one time: 1, 120459
2023/03/25 04:12:00 for select break: 1
2023/03/25 04:12:00 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 32765, pid 553, write pid:553
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 4
----- completed 19
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 0, 120458, 0
execute_one time: 0, 120459
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 2041, 120459, 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1256
2023/03/25 04:12:00 for select break: 1
2023/03/25 04:12:00 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2038, 120461, 0
before receive testcase: 0 0
2023/03/25 04:12:00 for select break: 1
2023/03/25 04:12:00 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:12:00 for select break: 1
2023/03/25 04:12:00 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:12:00 wg wait finish
2023/03/25 04:12:00 ------ all executors finish execution
2023/03/25 04:12:00 exec time: 122499
2023/03/25 04:12:00 ----- PS len: 4
2023/03/25 04:12:00 [CLIENT] executor 3 has 19 replies
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 2007 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 107 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:00 [SERVER] executor 1 has 0 replies
2023/03/25 04:12:00 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 04:12:00 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:00 [SERVER] executor 0 has 4 replies
2023/03/25 04:12:00 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 04:12:00 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 04:12:00 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 04:12:00 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 04:12:00 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 04:12:00 ----- no new client coverage: false, true
2023/03/25 04:12:00 mutate testcase with failures
2023/03/25 04:12:00 ----- mutateArg()
2023/03/25 04:12:00 ----- insertCall()
2023/03/25 04:12:00 ----- mutateArg()
2023/03/25 04:12:00 ----- insertCall()
2023/03/25 04:12:00 ----- mutateArg()
2023/03/25 04:12:00 ----- insertCall()
2023/03/25 04:12:00 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:12:00 disable threaded and collide
2023/03/25 04:12:00 prog length: 6
2023/03/25 04:12:00 prog length: 20
2023/03/25 04:12:00 HasCrashFail:true HasNetFail:false
04:12:00 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file1\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
syz_failure_sync(0x0, 0x3)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/215, 0xd7}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
fcntl$dupfd(r0, 0x0, r0)
r3 = openat(r0, &(0x7f0000002e00)='./file0\x00', 0x0, 0x42)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=ANY=[@ANYBLOB='systXm.securIty.selinux\x00'], &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 2038, 120462, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 0: 2037, 120462, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4464
remove dir: /root/orangefs-client/dfs-0-111
[D 03/25/2023 03:12:00] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2027
-----finish removing dir
mkdir time 2020
executor 3 create dir /root/orangefs-client/dfs-0-112 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-112
receive_execute: 1, 4048
receive_execute: 2, 4048
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 4047
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 4048
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1172 tid 1172

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1172, pid 1172, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:12:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 20, 0
execute_one time: 1, 20
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 2063
----- completed 10
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 15
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 558, write pid:558
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 44, 0
execute_one time: 1, 44
2023/03/25 04:12:04 for select break: 1
2023/03/25 04:12:04 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 4049, 46, 0
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:12:04 for select break: 1
2023/03/25 04:12:04 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4050, 48, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32674, flag collect 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 12224, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
2023/03/25 04:12:04 for select break: 1
2023/03/25 04:12:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4048, 49, 0
before receive testcase: 0 0
2023/03/25 04:12:04 for select break: 1
2023/03/25 04:12:04 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:12:04 wg wait finish
2023/03/25 04:12:04 ------ all executors finish execution
2023/03/25 04:12:04 exec time: 4098
2023/03/25 04:12:04 ----- PS len: 4
2023/03/25 04:12:04 [CLIENT] executor 3 has 20 replies
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:12:04 [SERVER] executor 1 has 1 replies
2023/03/25 04:12:04 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:04 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:12:04 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:04 [SERVER] executor 0 has 4 replies
2023/03/25 04:12:04 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:12:04 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:12:04 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
time breakdown 0: 4049, 49, 0
before receive testcase: 0 0
2023/03/25 04:12:04 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:12:04 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:12:04 ----- no new client coverage: false, true
2023/03/25 04:12:04 mutate testcase with failures
2023/03/25 04:12:04 ----- mutateArg()
2023/03/25 04:12:04 ----- insertCall()
2023/03/25 04:12:04 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 04:12:04 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:12:04 disable threaded and collide
2023/03/25 04:12:04 prog length: 6
2023/03/25 04:12:04 prog length: 10
2023/03/25 04:12:04 HasCrashFail:true HasNetFail:false
04:12:04 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000001500)=@random={'osx.', '\x00'}, &(0x7f0000001540)=""/92, 0x5c)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f00000014c0)=@v3={0x3000000, [{0x200, 0x1}, {0x4}]}, 0x18, 0x2)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f00000015c0)=ANY=[@ANYBLOB="627472667307000000007be663282fa6a1a2e06e56a8ad33907b114ccfc000156acd6fd495d3ab1ce8b786a441db9b4f1b0100010000eaff003e7355c02cb4cc20a4f9beb82868ea997ba4ecc396f0b56671c93167b4ff93212b47d89bff8276e18c6ae861183568a3a73b2ece1970582da2baf5ee63d25d1f27c51b298fc2e057f04ee8b5f03f76ffae2d8b8df8fc2cdf6f04762087bf679c8219b911320617bbd38b84777ea4f1bdf39e49294ad849adcaa7d2bd7c873e7e9164fe4153584a64fcde82263337d2669b3ba57689671194644594949a1d3fe325a96ec19d59277f1088534a75d549f9e3a559c4986ad98003228644dd1102b99b7a"], &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2184
remove dir: /root/orangefs-client/dfs-0-112
remove dir time 16
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:12:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:12:04] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:12:04] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:12:04] Error: Could not initialize server subsystems
[E 03/25/2023 03:12:04] Error: Could not initialize server; aborting.
receive_execute: 2, 2072
receive_execute: 2, 2072
mkdir time 2056
executor 3 create dir /root/orangefs-client/dfs-0-113 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-113
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2073
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 2072
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 3078, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2086
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1523 tid 1523

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1523, pid 1523, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:12:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 28, 0
execute_one time: 0, 28
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:12:06] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:12:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 560, write pid:560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 2051, 0
execute_one time: 0, 2051
2023/03/25 04:12:08 for select break: 1
2023/03/25 04:12:08 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 2077, 2052, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 815
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:12:08 for select break: 1
2023/03/25 04:12:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2074, 2054, 0
before receive testcase: 0 0
2023/03/25 04:12:08 for select break: 1
2023/03/25 04:12:08 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2075, 2054, 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 14858, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 3100
2023/03/25 04:12:08 for select break: 1
2023/03/25 04:12:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:12:08 wg wait finish
2023/03/25 04:12:08 ------ all executors finish execution
2023/03/25 04:12:08 exec time: 4127
2023/03/25 04:12:08 ----- PS len: 4
2023/03/25 04:12:08 [CLIENT] executor 3 has 10 replies
2023/03/25 04:12:08 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:08 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:08 [SERVER] executor 1 has 0 replies
2023/03/25 04:12:08 [SERVER] executor 0 has 9 replies
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
time breakdown 0: 2074, 2054, 0
before receive testcase: 0 0
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 815 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 04:12:08 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:12:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:12:08 ----- no new client coverage: false, true
2023/03/25 04:12:08 mutate testcase with failures
2023/03/25 04:12:08 ----- insertCall()
2023/03/25 04:12:08 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/25 04:12:08 ----- insertCall()
2023/03/25 04:12:08 ----- generateCall 251 ftruncate ftruncate
2023/03/25 04:12:08 ----- insertCall()
2023/03/25 04:12:08 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 04:12:08 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 04:12:08 ----- insertCall()
2023/03/25 04:12:08 ----- mutateArg()
2023/03/25 04:12:08 ----- mutateArg()
2023/03/25 04:12:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:12:08 disable threaded and collide
2023/03/25 04:12:08 prog length: 6
2023/03/25 04:12:08 prog length: 20
2023/03/25 04:12:08 HasCrashFail:true HasNetFail:false
04:12:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f00000003c0)='./file1/file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f0000000940)=ANY=[@ANYBLOB="2c3a230003600d902cf18caf88ce1d1f57ecf9b49bbdd9f5564db1487cc9aae249964b5b4fd8a1132047af25d56fe46d6d5fb8e790f57150379f55f7f84496ccdbe09f5ef22ed6655fa9ae518e23a2df24a8fafe08dea876d597543868f4d52c0de864b4e02cc6"], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x1)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000009c0), &(0x7f0000000a00)='./file1/file0\x00', 0xe, 0x1)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
ftruncate(r0, 0x49e4)
fcntl$setpipe(r0, 0x407, 0x8)
lsetxattr$security_ima(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0), &(0x7f0000000900)=@sha1={0x1, "d5c3763404cfc1ccbcd2c4f8f3d7098a611feba8"}, 0x15, 0x1)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000a40)=ANY=[@ANYRESOCT], 0x1a, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4664
remove dir: /root/orangefs-client/dfs-0-113
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 16217
executor 3 create dir /root/orangefs-client/dfs-0-114 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-114
receive_execute: 2, 16235
receive_execute: 2, 16235
receive_execute: 3, 16234
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 16235
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 2063
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1190 tid 1190

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1190, pid 1190, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:12:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 52, 0
execute_one time: 1, 52
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 562, write pid:562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 56, 0
execute_one time: 0, 56
2023/03/25 04:12:24 for select break: 1
2023/03/25 04:12:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 16239, 57, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 16799, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4691, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4497, flag collect 0
----- executor 0 signal number : 75
2023/03/25 04:12:24 for select break: 1
2023/03/25 04:12:24 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2125
2023/03/25 04:12:24 for select break: 1
2023/03/25 04:12:24 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 16237, 59, 0
before receive testcase: 0 0
2023/03/25 04:12:24 for select break: 1
2023/03/25 04:12:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:12:24 wg wait finish
2023/03/25 04:12:24 ------ all executors finish execution
2023/03/25 04:12:24 exec time: 16295
2023/03/25 04:12:24 ----- PS len: 4
2023/03/25 04:12:24 [CLIENT] executor 3 has 20 replies
2023/03/25 04:12:24 [SERVER] executor 0 has 4 replies
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 04:12:24 [SERVER] executor 1 has 1 replies
2023/03/25 04:12:24 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 16237, 59, 0
before receive testcase: 0 0
2023/03/25 04:12:24 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:24 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:12:24 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:12:24 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:12:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:12:24 ----- no new client coverage: false, true
2023/03/25 04:12:24 mutate testcase with failures
2023/03/25 04:12:24 ----- insertCall()
2023/03/25 04:12:24 ----- generateCall 2343 link link
2023/03/25 04:12:24 ----- insertCall()
2023/03/25 04:12:24 ----- generateCall 2343 link link
2023/03/25 04:12:24 ----- insertCall()
2023/03/25 04:12:24 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/25 04:12:24 ----- insertCall()
2023/03/25 04:12:24 ----- generateCall 3761 stat stat
2023/03/25 04:12:24 HasCrashFail: true, .HasNetFail: false
time breakdown 1: 16237, 59, 0
before receive testcase: 0 0
2023/03/25 04:12:24 disable threaded and collide
2023/03/25 04:12:24 prog length: 6
2023/03/25 04:12:24 prog length: 13
2023/03/25 04:12:24 HasCrashFail:true HasNetFail:false
04:12:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
stat(&(0x7f0000001640)='./file0\x00', &(0x7f0000001680))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000001540)='./file0/file0\x00', &(0x7f0000001580)='./file0\x00')
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
link(&(0x7f00000014c0)='./file0\x00', &(0x7f0000001500)='./file0\x00')
lremovexattr(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)=@random={'btrfs.', 'security.selinux\x00'})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2256
remove dir: /root/orangefs-client/dfs-0-114
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 18
-----finish removing dir
receive_execute: 3, 50
receive_execute: 3, 50
receive_execute: 4, 50
mkdir time 32
executor 3 create dir /root/orangefs-client/dfs-0-115 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-115
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12253, flag collect 0
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 4575, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2089
-----executor 1 collect shmids 3
----- directly resend shmid 3
Terminated
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1539 tid 1539

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1539, pid 1539, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:12:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 37, 0
execute_one time: 1, 37
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[D 03/25/2023 03:12:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:12:24] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:12:24] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:12:24] Error: Could not initialize server subsystems
[E 03/25/2023 03:12:24] Error: Could not initialize server; aborting.
[E 03/25/2023 03:12:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:12:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2014, 0, 0
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 330
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 12
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 564, write pid:564
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 2074, 0
execute_one time: 0, 2074
2023/03/25 04:12:26 for select break: 1
2023/03/25 04:12:26 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 56, 2074, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13625, flag collect 0
----- executor 1 signal number : 1926
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 404
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:12:26 for select break: 1
2023/03/25 04:12:26 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 53, 2077, 0
before receive testcase: 0 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 1 signal number : 28
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 16211, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2224
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2690
2023/03/25 04:12:26 for select break: 1
2023/03/25 04:12:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 54, 2078, 0
before receive testcase: 0 0
2023/03/25 04:12:26 for select break: 1
2023/03/25 04:12:26 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:12:26 wg wait finish
2023/03/25 04:12:26 ------ all executors finish execution
2023/03/25 04:12:26 exec time: 2128
2023/03/25 04:12:26 ----- PS len: 4
2023/03/25 04:12:26 [CLIENT] executor 3 has 13 replies
2023/03/25 04:12:26 [SERVER] executor 0 has 9 replies
2023/03/25 04:12:26 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/25 04:12:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:26 [SERVER] executor 1 has 4 replies
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:12:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 330 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:26 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 404 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
time breakdown 0: 53, 2079, 0
before receive testcase: 0 0
2023/03/25 04:12:26 ------- fuzzer executor 1 receive 1926 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 1 receive 28 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 04:12:26 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 04:12:26 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:12:26 ----- no new client coverage: false, true
2023/03/25 04:12:26 mutate testcase with failures
2023/03/25 04:12:26 ----- mutateFailPos()
2023/03/25 04:12:26 insert call 16 at pos 18
2023/03/25 04:12:26 ----- insertCall()
2023/03/25 04:12:26 ----- insertCall()
2023/03/25 04:12:26 ----- insertCall()
2023/03/25 04:12:26 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:12:26 disable threaded and collide
2023/03/25 04:12:26 prog length: 6
2023/03/25 04:12:26 prog length: 22
2023/03/25 04:12:26 HasCrashFail:true HasNetFail:false
04:12:26 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", "c6d62a15ec1c9e7d8c93336fefb0987defe85a910e7ad1c791bdfeca4774b01024050b6413756a947a4c87137c78124a6dc01495073c2cdf4c9f7b9a709f20ce2286d9b125f2abfa7e0b8c5e413f0d5a8ef843d15b67f0a553b41a4386c04e00d5e464c65523332be4cc3422870e13eacab6667062630260b063cd7ca06171ba895cd378179b78b3a5bfa3de5c73f85d9588ad2c09b6e66744c00ce696e6ea482a011b575f30d917a82fccbaa0edb49fe7e1918bcac0d65736c1df95d1abf64d81bf107eec4844fc2f39008f0ed64de782a61925b14339e98c3f2034daa10cbf0f7676b4906d5240dd5b70e8491ddc7c9c72bb50f0c33f44d66da56f95e0821b92e62ec825c5aa556c0c822aaaa925e86f948f64d7dbccd9b323a0f295bd85a76c48bce9cf57f280a714c23550b6e43d4fa44caf998883a3ef7cef8f2ef128cdd50274be00c57809d80f91b39595e2a0d41ec1c20ef5b6e51ec8aa857d0bc9ae5d2452f6af38331da569092c7dc7fe1409a813fb1f39f09b40953867052ca9c30544d5e904b6cc42650c001ba091cd7baddb0d172ea0c846fc4a42603870ec04fc841950fbff40d2538bc4355025419578c5b666dc33aa53f6b42576bd07a0c84858f10ed6c26b257857c1070c241bbfa0a2c91d4c5c68e032a3bc5fc9049b3c06b7607b2dd29b8d78d503e0282bf1f21f11b28383b5bc0992ab7fa5e7377b574cbba7c3d283617f3a584b389c1d3c9459db04564a6e42b3a4eb3796de07d1454891613e60a08c9c116d3c3c8bd59386df41b6b34a76a397ff1aac69f19e337c75ba5e28df92bc8f3ea4a8431f6abd9b55315f38583dff66df57783738d3e8a976fe33aedead734379513899351589b997b7b660708000c4daa33451a02ed72219140d27718ace6be8c8a8b5e0187716841adadc26319518e1e0a671bbc160ef02868c3309d99a475189a8839f45ca7afd3f5675b8eba594876dcf4bf59f251679dc8b0c8a0f5f8f1f2ad6ac85d0f26b7faec85471d9231b8845d362697edea41c731ae0b9c5100da0d68118d3c16231c4b3e369321439e04e85bb9ac612731cf43a6911b35dcd64385f661f929cd76338de477283a8db98401aed1de3926bbe536a5af09f8f6b71eda47a466c2cee54ec61b712829a8a19dc31a117dd9794a3fd55f547209cb680f26f03f686cd1bcfee310b4eeb1ed792fce4133e23a285508184fa84fd02936b72628223e15dbc573e06630a89ab8626671943cd57babdf60154a085b76301a7d89cd98407856c27c765c3a6aff52ebde7d757d6a609e64c19f9d9dba19f3b6e2873933c069e61340dc3499b29c0bfb90ffc0e258f69f4279f4f3605adeb094afd909a4c12f4b32ebf8cd8ab467aaba0245892dcd92e94f7b05498cd0a3d1b8828896174f436f98b7f298b4980820c0c57e336ba89bfc65eb6dd04df6872e68c6b12ba0cbf08a7ebe2aaa046455eb0c3185dd6232632641fbb29ec1d34eece53ef0121f941fe520b611c88a64d07709e14aa03444a0868f50c4cdde4e41e2803efdf11ca42cf8ab3b5afd879fcdca5492c7114ea2e0124678b96f4ddd24d9e11ea481caf5c6036df2b85db45f33fb63757aaf9602ab3a304e99f44c4ab15479793a355cea2ea409c37b707eafc5bfa00c28506ca233a01e1e2258da3386b846c62901b774163a43b7e78313118a1051bc6a1abcb0fef47d833417127499c04380b4895433a18228bdf55b0a786aeb0e3ee31e23b7bea17cd43cdb4493514e59368cd0d72f5504519128a30beffa056fd69cffa1c355426fb120c5d95231bc95e95ff66d600533ac49d0c52bdcb0e066efa3a5eb0ace51f21c86eb72a56a4edd0eeef095bf4189ee3ce847e5ef6580a5799c3648a7720a36e7f7cfd416c5d15107496c3d606ad3a2ca9f0b50ff91efe7688aa79d8dcb5eb7eed1fc18cd7c940dda99391a68605645d46d2087886ade6de2cd765ff42c71f8a4986767ad45eb1a4dbd1f0668d18079066a0b2c75e352e24c935bb3266368e3ef22dfe2787b2dcec6fc57c8d983e0aef12ee7479c10ffe805175cf3f19c7b325bf79fc2f34ab0d787d48c48c29cc4786de964cfbd2cfc26b514e15edfef70e24e080db680a87568880c7b6e9c0e711de320773633e63d2cd6bbfa4b37bdb9d5f12eb65d25d3a0f7e70fc0b01ba968934bf5ba88655e2d4d95aa424f63ff47bd913d31100a8d45904ff948770a45f14deaea019fda50144122880cce28a89104e386652889b12e132e0fa3758c171ac23980ac57dc3786a6cf3aa504c96cd0bf00aadcf1e81e0aa6a8943b739e084a1cd298e6506ea878d593a7fb6b7d9eb24208633f03d665401d6e04dd1a7fe94d380a7d22dc38244fcc54edf163b6ff60e13dd438596e587391d03dafffd02f1ea43edcaa7fb042dfc095e84b0aa8fbda6958607cb46c75f21e9c86d252b9f50a6dfab9abef06febe3642276a9ee3fccd03025235af8101a67560fa61db8d83f9346dce76ad7c40587180e8692d924c1c9f403c0aaaccfc3d0345e8637e5171f171bd7441d7e736355d51f1cc81bf0026ebc763183f122591adf22f0e85f0e62805b2fc47b97af58b74735e1d0035abb2d57ab62ea4f128b95acdf36f2c132d0a222d968255129f10f4a01db176cace76dbf2ff69fe9988dd6ff6b5a8050a0d091a9fc5d6b9a2d884ea5a5e7f3631e00a5693ce1b9bcabd8587b4844daabd078cff2a50591e79570ab9b9944d849c8a10352fca41399219755715c11b61ce8a922b70393537eb5e4fdc1c87db3dcb2ed6fd763ae577ec5450aa59cef2a37b0f31aed688e7f52f4ad3e4dc12e6d67f3bfdbf0662215934e208fbe3613dd3607475c37d0d8eab92e3f3e308ccad984ef667d8573da0ff28aa1f1f7de8a132b182fb1dbe278396cbbce4321aa2dc551accb45d795d473512a80dbd31de4a8f1e737894c53c22c56c0e5c56b2e37dde6561d8660db0a2d851f05e1380febcb90ea6c995f5f1fc629b3e559006c83ea6d9ccf2fb40e3e3b838b387080460ddcd203351c2d1ad77cf5cb6c6731a39050c0441caaa57d0e5e146e868c4d3a2d5798c333de530a55de5fbdefea81fc14266534e1c60759f78d2cfa76a38c95d09c9abb74c49b5dc221d7118b04481bac5e4de9f4992d65d3b2d45e604f86057fb6946054bb9965c8b54106539e452453a70422d514a12059cce5a6f6831e9b93d66bfcc63f82c293e598d84be6dd9e4c4e4c2c155b397a566fd040675c420b8cc7db75d9aa6a501ad6131f86aa507b8f35a2e8bfc437e2aebe00ccddb80c8fcf5965a252abf17153c4e23d0de5fd4ac6d3e8bdb868af6faebb3d71283bd4124cf0b525ea63624846e1f18aa71ef0bfa2c5ef51b3609d200acb96ec8419b887a469018db4eb06f82bbdafe6e10d909c0e28cdd572f2925e9ec99f4fe64c89218bef5f22c577d969f8a60d6c26cec22e0a30b253f08b8ab6f5a5f1ea539ccab7eed55836d6049f707f48b61e09c1a567ad3d49812834f491fcabba65e88b70a39cfcfe1d7b9d968bd06edf5dac05f46df9e3d59406bef77a1e8460195ecfe689fffe787cf1c8baa6b141625652911c6274dd9e0dff193c27d62c072f2dbc42ef546937f54fcd5fcdcdd424b53e2925bfbe687ac9e5b00d19a8999b582a2c473fa6c6e59603ac2dc66100b3ae0a2b7a3afc374c257d42111387e71303cccc1b1027fdda2f1aef39875a68e97caf58c89eecd0df1ca370d73d57386b937c9efc7bd2cdde1f028f42155976876430a6c3e54df515cdd28b80db6c7de830c1b42b7445000f045ebf45558bf48a8414527ac1ff72467ca92553e3977dc6124e5fddaef99a1b1eed50eaaa7c1e58d64454094ea15c7228658b12deab02d4ef8f8a07b2447f417e9e554fcc0ef17727cd192f00f35d411bc8201aa5e9e4dd65e9fa4021c591a7087359c84d597d425004e0cbfbb065335943f921b134de3bd8fadf27edfe0e9813d29b76fe48ad3e933376d8ef4da1532b8f7d32327fa2328404c42ea57553c9ce857e16d6cee99feef770519ae7aae8bbaba4cc869247a7aa3128c70d1168331264ff05a4f91fbf5feaaa6b685f732af08b54698ff62ba950d9f2645465c746b9c60ec1f2136b58f23dcc198bb075b69de43a71f1d45a42651d3c35933eb3986878c3fdd49f4fbaf615bffff2472dbec76c0d2ff410c965b2c0e865c7b2b49830e00c6d99c489086d303f1e8073e9ecce7e8b70f475120bdcf0fcdcadb7a3e926136c843d9c5ae9b6fc1f2716db1154b37130b4ed95ad405d73563bbbf0527f0792a189134cf6510334ac284b5277e59893fe10bdf24b6896eccf97bad0099b095de269a0faebfd449aa046d42b4790c047c72d72aa0313261ea31975eb4cbfcec9260802a05effdf8af93228884ae7cf8d7cf9355b2f03fdbeddfa51995f27da83654a7ec8f49ef93b4d8a3beab075332ba127dbd0004fed1b2c9abfd1976879bdea2137631ae0e77afeb123bde0912b6ad427698bafc4831e840cbf51960cb9491100d3f188084c90977732ca8bd815ab89d684bbb35287c230d026ef225dd8b6a694895cf945150b8887519791d13ba0b849c5d2301c840b2dbaf14e5208ef5ec1a1ca6bfd773b83b4e229a3cd70bcb29447f0bb848aab6b27946c17ea16b373b78540e2203255b0ee183a2e36cf292de68421901209a063115a22e66d95d3e87da88cdc4b21adeaf61d39164331019570c115a3cfda8ccfa1528b546cc62e1697933c64212ae0404ea40dd22d6787eee4cbf1e77ec4e9d9ca1bf7b930535b2955ca53b39e7f08dd89d8aab6ccb96ad3a5177f5c03cd98d8633b894a82c348cfa19f6f890e938364f41be86125c2f8f6f01da0da969ee4aca9a3267686af16aa80aaf6522a9ebbf3701ff36a3a51b85e1698921b98323a7558a4889afe9d3c15b02dd0a47b123c312e9930991a12e92d20358ab4054a1e076fdcec19de4b974961aa5d302b22595125b96b6604efec29d0b27525ad629477b84821dc3b35e87faf68e73f757aa06a6a19db9ad5b282c0a2ab950947d2f23d15b5caeec667af359a7f49aa997f3adf8192ce0cd23c145e59721e9fe72812aac6a3d5dcff6a456d19ad5d708c85d7abf6b82e9ca920375eca8429e9a57f9d377b0995605234fa2978f718e83981f89502156d6e9fc8e6593913bd9e1c346cd77543a9b452d6174d3d45116a594867391f3766d1da430b0ffc144a739c35b2277e69073521f48c1efff3beffda7528ddded12c715e553c93a3b6062556285c98eec1b8539114d51da8946087b9926e8800938f381031c9de3c8bfed0f3692e69ccee6ac70293d0d34f5898a595ecc51db99299cdaa09b56c71ca360df4ae41de5de50a0173be39fe29a3a4fe2efaf32befea12acb451e0725633249a92fc3dd03b9009fdf8ad6928552b078f4e5ddd7ac4664d5cc00107677e60527ac61d8a679a72e02014c19ad6ff23dd1c1622abc78cf047a24dbb1cd9b50969e1fb37f1fe4063cf18b25c93eee40a66491cfa2f8c50b537cc2f7b61e0ad99882af2d9e50af025fbda0472b06402c5f008bfc91f62f5ae59ede6536b870e53e9e044e517098caa8cd3980859a2a239796b9d7d7500cc8c3b359ca9e270eaf0da3cc3c44ff3f8d68b5cc4b97f925df66aa4a55e06e6719977850cfce87a3427f16354526ad1c38add12fc58016b7dac140d6477ce2385b44f908afa8ac0f1ef322f4479986ec0df09207cc1b43616671d60acafa2b1fd514f45532b1c5096bc"}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
syz_failure_sync(0x0, 0x3)
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
syz_failure_sync(0x1, 0x3)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001980)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e5365637572697479002073656375726974792e534d41434b36345452773e435065414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1ef7405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fc"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8488
remove dir: /root/orangefs-client/dfs-0-115
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 1, 28
receive_execute: 3, 28
receive_execute: 1, 29
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-116 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-116
receive_execute: 4, 29
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6449, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16368, flag collect 0
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 6156, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2096
Terminated
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:12:26] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 309
----- completed 13
execute_call 0, 10038, 0, 1
execute_one loop: 0, 0, 10039
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 10027, 0, 0
execute_one loop: 0, 0, 10027
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20066, 0, 0
execute_one loop: 0, 0, 20066
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1554 tid 1554

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1554, pid 1554, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:12:46] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20100, 1
execute_one time: 1, 20101
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
[D 03/25/2023 03:12:46] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2032, 0, 0
execute_one loop: 0, 0, 2032
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 565, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 22132, 0
execute_one time: 1, 22132
2023/03/25 04:12:48 for select break: 1
2023/03/25 04:12:48 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 33, 22134, 0
before receive testcase: 0 0
2023/03/25 04:12:48 for select break: 1
2023/03/25 04:12:48 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 219
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 30, 22134, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:12:48 for select break: 1
2023/03/25 04:12:48 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 31, 22137, 0
before receive testcase: 0 1
2023/03/25 04:12:48 for select break: 1
2023/03/25 04:12:48 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:12:48 wg wait finish
2023/03/25 04:12:48 ------ all executors finish execution
2023/03/25 04:12:48 exec time: 22166
2023/03/25 04:12:48 ----- PS len: 4
2023/03/25 04:12:48 [CLIENT] executor 3 has 22 replies
2023/03/25 04:12:48 [SERVER] executor 1 has 0 replies
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:48 [SERVER] executor 0 has 9 replies
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 219 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 04:12:48 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:12:48 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:12:48 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 04:12:48 ----- no new client coverage: false, true
2023/03/25 04:12:48 mutate testcase with failures
2023/03/25 04:12:48 ----- insertCall()
2023/03/25 04:12:48 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/25 04:12:48 ----- insertCall()
2023/03/25 04:12:48 ----- generateCall 2462 openat openat
2023/03/25 04:12:48 ----- insertCall()
2023/03/25 04:12:48 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/25 04:12:48 ----- insertCall()
2023/03/25 04:12:48 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/25 04:12:48 HasCrashFail: false, .HasNetFail: false
2023/03/25 04:12:48 prog length: 5
2023/03/25 04:12:48 HasCrashFail:false HasNetFail:false
04:12:48 ---executing program 0:
---
---
---
stat(&(0x7f00000007c0)='.\x00', &(0x7f0000000800)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)=@v3={0x3000000, [{0x3, 0x1800000}, {0x0, 0x1000}], r0}, 0x18, 0x3)
setxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={0x0, 0xfb, 0x74, 0x5, 0x1, "b36c4fef7c00f453cc33b786b35184d5", "cde5f9f6ede3ec7194daa5e702accf714fcccfd304239f9b817d4e3db80f6af4f5f032e4903523ccff600f5c732e1d53cc7619f9f3f7e78e5485992ddb1e808387566f19c2562ef5b9650be0639f3b745aa284c43f8ad137048b6f1527c87d"}, 0x74, 0x2)
lsetxattr$security_smack_transmute(&(0x7f0000000200)='./file1\x00', &(0x7f0000000240), &(0x7f0000000280), 0x4, 0x1)
openat(0xffffffffffffff9c, &(0x7f0000000100)='./file0\x00', 0x0, 0x10)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1720
remove dir: /root/orangefs-client/dfs-0-116
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 14708, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2511
time breakdown 0: 29, 22137, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 2025
executor 3 create dir /root/orangefs-client/dfs-0-117 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-117
receive_execute: 1, 2049
receive_execute: 1, 2049
receive_execute: 4, 2048
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 2049
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 10452, pid 567, write pid:567
----- executor 3 executes write_coverage_signal cov->size 10452, flag collect 0
----- executor 3 signal number : 2606
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 567, write pid:567
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 567, write pid:567
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 23
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 567, write pid:567
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 23
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 567, write pid:567
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 23
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 0, 24
2023/03/25 04:12:51 for select break: 1
2023/03/25 04:12:51 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 24025, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1930
----- executor 0 executes write_coverage_signal cov->size 9641, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2540, flag collect 0
----- executor 0 signal number : 300
----- executor 0 executes write_coverage_signal cov->size 2301, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 2653
time breakdown 1: 2052, 27, 0
before receive testcase: 0 1
2023/03/25 04:12:51 for select break: 1
2023/03/25 04:12:51 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 2053, 25, 0
before receive testcase: 0 0
2023/03/25 04:12:51 for select break: 1
2023/03/25 04:12:51 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:12:51 for select break: 1
2023/03/25 04:12:51 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 2050, 29, 0
2023/03/25 04:12:51 wg wait finish
2023/03/25 04:12:51 ------ all executors finish execution
2023/03/25 04:12:51 exec time: 2078
2023/03/25 04:12:51 ----- PS len: 4
2023/03/25 04:12:51 [CLIENT] executor 3 has 5 replies
2023/03/25 04:12:51 fuzzer receive 2606 signal and 0 cover from executor 3
2023/03/25 04:12:51 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/25 04:12:51 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/25 04:12:51 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/25 04:12:51 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/25 04:12:51 [SERVER] executor 0 has 4 replies
2023/03/25 04:12:51 ------- fuzzer executor 0 receive 1930 signal and 0 cover from userspace component
2023/03/25 04:12:51 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/25 04:12:51 ------- fuzzer executor 0 receive 300 signal and 0 cover from userspace component
2023/03/25 04:12:51 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 04:12:51 [SERVER] executor 1 has 0 replies
2023/03/25 04:12:51 [SERVER] executor 2 has 0 replies
2023/03/25 04:12:51 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 2050, 27, 0
before receive testcase: 0 0
2023/03/25 04:12:51 ----- no new client coverage: false, true
2023/03/25 04:12:51 mutate testcase with failures
2023/03/25 04:12:51 ----- insertCall()
2023/03/25 04:12:51 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
before receive testcase: 0 0
2023/03/25 04:12:51 ----- mutateArg()
2023/03/25 04:12:51 ----- insertCall()
2023/03/25 04:12:51 ----- generateCall 2458 open open
2023/03/25 04:12:51 ----- insertCall()
2023/03/25 04:12:51 ----- generateCall 222 fremovexattr fremovexattr
2023/03/25 04:12:51 ----- insertCall()
2023/03/25 04:12:51 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 04:12:51 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:12:51 disable threaded and collide
2023/03/25 04:12:51 prog length: 6
2023/03/25 04:12:51 prog length: 15
2023/03/25 04:12:51 HasCrashFail:true HasNetFail:false
04:12:51 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
r0 = open(&(0x7f0000000100)='./file0\x00', 0x10800, 0x21)
fchown(r0, 0x0, 0xee01)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000080), &(0x7f00000000c0)=@ng={0x4, 0x6, "daa3a980fe1d07e1a2"}, 0xb, 0x3)
ftruncate(0xffffffffffffffff, 0x0)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x0)
r2 = open(&(0x7f0000000140)='./file0\x00', 0x2, 0x1)
fsetxattr$security_smack_transmute(0xffffffffffffffff, 0x0, 0x0, 0x0, 0x0)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1", 0x3}], 0x1, 0x0, 0x7)
dup(0xffffffffffffffff)
fstat(r1, &(0x7f00000007c0))
fremovexattr(r2, &(0x7f0000000180)=@known='trusted.overlay.redirect\x00')
fsetxattr$security_ima(r1, &(0x7f00000001c0), &(0x7f0000000200)=@ng={0x4, 0x9, "89930bd1fd"}, 0x7, 0x1)
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000040), 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2352
remove dir: /root/orangefs-client/dfs-0-117
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 16
-----finish removing dir
receive_execute: 3, 30
receive_execute: 0, 31
executor 0 before execute_one
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-118 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-118
receive_execute: 4, 30
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 31
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_call 0, 30124, 0, 0
execute_one loop: 0, 0, 30124
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 768
----- completed 7
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30163, 0, 0
execute_one loop: 0, 0, 30163
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1210 tid 1210

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1210, pid 1210, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:13:21] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 30188, 0
execute_one time: 0, 30188
----- executor 3 write_call_output, size 0, pid 568, write pid:568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 16, 0, 5
execute_one loop: 0, 0, 21
executor 3, execute_one inner time: 0, 30194, 0
execute_one time: 0, 30194
2023/03/25 04:13:21 for select break: 1
2023/03/25 04:13:21 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 36, 30195, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 2001
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:13:21 for select break: 1
2023/03/25 04:13:21 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 31, 30196, 0
before receive testcase: 0 0
2023/03/25 04:13:21 for select break: 1
2023/03/25 04:13:21 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:13:21 for select break: 1
2023/03/25 04:13:21 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:13:21 wg wait finish
2023/03/25 04:13:21 ------ all executors finish execution
2023/03/25 04:13:21 exec time: 30231
2023/03/25 04:13:21 ----- PS len: 4
2023/03/25 04:13:21 [CLIENT] executor 3 has 15 replies
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 [SERVER] executor 1 has 1 replies
2023/03/25 04:13:21 [SERVER] executor 0 has 5 replies
2023/03/25 04:13:21 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:13:21 ------- fuzzer executor 0 receive 2001 signal and 0 cover from userspace component
2023/03/25 04:13:21 [SERVER] executor 2 has 0 replies
2023/03/25 04:13:21 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 77
----- executor 0 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 0 signal number : 621
executor 0 server cover_cnt 5 output_pos_value 3340
2023/03/25 04:13:21 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 04:13:21 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 04:13:21 ------- fuzzer executor 0 receive 621 signal and 0 cover from userspace component
time breakdown 0: 33, 30200, 0
before receive testcase: 0 1
2023/03/25 04:13:21 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 768 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:21 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 34, 30198, 0
before receive testcase: 0 1
2023/03/25 04:13:21 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:13:21 ----- no new client coverage: false, true
2023/03/25 04:13:21 mutate testcase with failures
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- mutateArg()
2023/03/25 04:13:21 ----- mutateArg()
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- insertCall()
2023/03/25 04:13:21 ----- mutateArg()
2023/03/25 04:13:21 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:13:21 disable threaded and collide
2023/03/25 04:13:21 prog length: 6
2023/03/25 04:13:21 prog length: 20
2023/03/25 04:13:21 HasCrashFail:true HasNetFail:false
04:13:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000001a80)=',\xfc\x1f\x8a\xda\x04\x03\xd3\xa6\n\xde^\x94\v\xa1Hl\xa9\x82\x85\xd9\xa1l\x01\x182\xc5{4\xf9\x81\xba\xec\xc5\xdb\x81j\x1a\v1\x14,\xe6\x1f \'\xc3\xd1\xa1^\xea\xff\x0eP~\fE\x8f', 0x3a, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f0000000340)=[{&(0x7f00000002c0)=""/104, 0x68}, {&(0x7f0000001d40)=""/4096, 0x1000}], 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000140)='./file0/file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=@ng={0x4, 0x13, "1c01d88f9abef4373c2e5c3ff42111"}, 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4736
remove dir: /root/orangefs-client/dfs-0-118
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 23
-----finish removing dir
receive_execute: 4, 32
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-119 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-119
receive_execute: 6, 32
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 2, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 4, 32
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1572 tid 1572

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1572, pid 1572, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:13:21] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 24, 0
execute_one time: 0, 24
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[D 03/25/2023 03:13:21] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:13:21] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:13:21] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:13:21] Error: Could not initialize server subsystems
[E 03/25/2023 03:13:21] Error: Could not initialize server; aborting.
[E 03/25/2023 03:13:21] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:13:21] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2019, 0, 0
execute_one loop: 0, 0, 2019
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2001
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 372
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 17
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6695, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6695, flag collect 0
----- executor 3 signal number : 18
----- completed 13
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/25 04:13:23 for select break: 1
2023/03/25 04:13:23 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 6453, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 570, write pid:570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2072, 0
execute_one time: 1, 2072
executor 2 write_server_output
time breakdown 3: 38, 2074, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:13:23 for select break: 1
2023/03/25 04:13:23 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13656, flag collect 0
----- executor 1 signal number : 1929
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 36, 2075, 0
before receive testcase: 0 0
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2242
2023/03/25 04:13:23 for select break: 1
2023/03/25 04:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 36, 2076, 0
before receive testcase: 0 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 15920, flag collect 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1618
2023/03/25 04:13:23 for select break: 1
2023/03/25 04:13:23 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:13:23 wg wait finish
2023/03/25 04:13:23 ------ all executors finish execution
2023/03/25 04:13:23 exec time: 2111
2023/03/25 04:13:23 ----- PS len: 4
2023/03/25 04:13:23 [CLIENT] executor 3 has 20 replies
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 2001 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 372 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:23 [SERVER] executor 0 has 5 replies
2023/03/25 04:13:23 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
time breakdown 0: 34, 2079, 0
2023/03/25 04:13:23 [SERVER] executor 2 has 0 replies
2023/03/25 04:13:23 [SERVER] executor 1 has 5 replies
before receive testcase: 0 0
2023/03/25 04:13:23 ------- fuzzer executor 1 receive 1929 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 04:13:23 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 04:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:13:23 ----- no new client coverage: false, true
2023/03/25 04:13:23 mutate testcase with failures
2023/03/25 04:13:23 ----- insertCall()
2023/03/25 04:13:23 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/25 04:13:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:13:23 disable threaded and collide
2023/03/25 04:13:23 prog length: 6
2023/03/25 04:13:23 prog length: 9
2023/03/25 04:13:23 HasCrashFail:true HasNetFail:false
04:13:23 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$security_capability(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000100)=@v1={0x1000000, [{0x6, 0x5c23}]}, 0xc, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1352
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/orangefs-client/dfs-0-119
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 2016
executor 3 create dir /root/orangefs-client/dfs-0-120 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-120
receive_execute: 5, 2041
receive_execute: 1, 2041
receive_execute: 4, 2041
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 2050
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6477, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 6477, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11477, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 11477, flag collect 0
----- executor 3 signal number : 710
----- completed 3
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 25
----- completed 6
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2668
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1235
----- executor 0 executes write_coverage_signal cov->size 4874, flag collect 0
----- executor 0 signal number : 314
----- executor 0 executes write_coverage_signal cov->size 5056, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 4309
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1587 tid 1587

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1587, pid 1587, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:13:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 64, 0
execute_one time: 1, 64
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:13:25] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:13:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 571, write pid:571
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 2006, 0, 0
execute_one loop: 0, 0, 2006
executor 3, execute_one inner time: 0, 2060, 0
execute_one time: 1, 2060
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2056, 2061, 0
before receive testcase: 0 1
2023/03/25 04:13:27 for select break: 1
2023/03/25 04:13:27 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:13:27 for select break: 1
2023/03/25 04:13:27 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:13:27 for select break: 1
2023/03/25 04:13:27 --------- executor 1 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 210
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2045, 2071, 0
before receive testcase: 0 0
----- executor 0 signal number : 141
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 59
----- executor 0 executes write_coverage_signal cov->size 17325, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 4753
2023/03/25 04:13:27 for select break: 1
2023/03/25 04:13:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:13:27 wg wait finish
2023/03/25 04:13:27 ------ all executors finish execution
2023/03/25 04:13:27 exec time: 4115
2023/03/25 04:13:27 ----- PS len: 4
2023/03/25 04:13:27 [CLIENT] executor 3 has 9 replies
2023/03/25 04:13:27 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:27 [SERVER] executor 1 has 0 replies
2023/03/25 04:13:27 [SERVER] executor 2 has 0 replies
2023/03/25 04:13:27 fuzzer receive 710 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:27 [SERVER] executor 0 has 9 replies
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 2668 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 1235 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 314 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 210 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
time breakdown 0: 2042, 2074, 0
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 141 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/25 04:13:27 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:13:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:13:27 ----- no new client coverage: false, true
2023/03/25 04:13:27 mutate testcase with failures
2023/03/25 04:13:27 ----- mutateArg()
2023/03/25 04:13:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:13:27 disable threaded and collide
2023/03/25 04:13:27 prog length: 6
2023/03/25 04:13:27 prog length: 17
time breakdown 2: 2046, 2071, 0
before receive testcase: 0 0
2023/03/25 04:13:27 HasCrashFail:true HasNetFail:false
04:13:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000880)='./file0\x00', &(0x7f00000004c0)='./file1\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3976
remove dir: /root/orangefs-client/dfs-0-120
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 48
-----finish removing dir
mkdir time 4034
executor 3 create dir /root/orangefs-client/dfs-0-121 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-121
receive_execute: 2, 4082
receive_execute: 5, 4082
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 4082
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 5, 4082
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 8, 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
-----executor 0 collect shmids 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- directly resend shmid 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1602 tid 1602

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1602, pid 1602, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:13:31] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 18, 0
execute_one time: 1, 18
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:13:31] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:13:31] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2001
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 12906, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 12906, flag collect 0
----- executor 3 signal number : 390
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 12
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 18
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2051, 0
execute_one time: 1, 2051
2023/03/25 04:13:33 for select break: 1
2023/03/25 04:13:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4088, 2052, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 15704, flag collect 0
2023/03/25 04:13:33 for select break: 1
2023/03/25 04:13:33 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/25 04:13:33 for select break: 1
2023/03/25 04:13:33 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:13:33 for select break: 1
2023/03/25 04:13:33 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:13:33 wg wait finish
2023/03/25 04:13:33 ------ all executors finish execution
2023/03/25 04:13:33 exec time: 6137
2023/03/25 04:13:33 ----- PS len: 4
2023/03/25 04:13:33 [CLIENT] executor 3 has 17 replies
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 [SERVER] executor 1 has 0 replies
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1580
2023/03/25 04:13:33 [SERVER] executor 2 has 0 replies
2023/03/25 04:13:33 fuzzer receive 2001 signal and 0 cover from executor 3
2023/03/25 04:13:33 [SERVER] executor 0 has 5 replies
time breakdown 1: 4087, 2054, 0
before receive testcase: 0 0
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 ------- fuzzer executor 0 receive 1126 signal and 0 cover from userspace component
2023/03/25 04:13:33 fuzzer receive 390 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:33 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 04:13:33 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:33 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 04:13:33 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:33 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 4084, 2055, 0
before receive testcase: 0 0
2023/03/25 04:13:33 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:13:33 ----- no new client coverage: false, true
2023/03/25 04:13:33 mutate testcase with failures
2023/03/25 04:13:33 ----- insertCall()
2023/03/25 04:13:33 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/25 04:13:33 ----- insertCall()
2023/03/25 04:13:33 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/25 04:13:33 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:13:33 disable threaded and collide
2023/03/25 04:13:33 prog length: 6
2023/03/25 04:13:33 prog length: 17
2023/03/25 04:13:33 HasCrashFail:true HasNetFail:false
04:13:33 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
stat(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000480)='system.posix_acl_access\x00', &(0x7f0000000600)={{}, {0x1, 0x4}, [{0x2, 0x0, r2}], {0x4, 0x4}, [{0x8, 0x1, r3}, {0x8, 0xc5f2c2ce584779e1, 0xffffffffffffffff}, {0x8, 0x0, 0xffffffffffffffff}], {0x10, 0x4}, {0x20, 0x1}}, 0x44, 0x0)
fcntl$lock(r0, 0x24, &(0x7f0000000440)={0x0, 0x2, 0x8001, 0x3ff})
r4 = fcntl$dupfd(r0, 0x0, r0)
syz_failure_sync(0x1, 0x3)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f00000000c0))
pwritev(r4, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4712
remove dir: /root/orangefs-client/dfs-0-121
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 2: 4087, 2054, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 42
-----finish removing dir
receive_execute: 1, 2070
receive_execute: 2, 2070
mkdir time 2028
executor 3 create dir /root/orangefs-client/dfs-0-122 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-122
receive_execute: 2, 2070
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 2071
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:13:35] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10054, 0, 0
execute_one loop: 0, 0, 10054
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 20100, 0, 0
execute_one loop: 0, 0, 20100
----- executor 3 write_call_output, size 32765, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2007
----- completed 9
execute_call 0, 10043, 0, 2
execute_one loop: 0, 0, 10045
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 2, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1618 tid 1618

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1618, pid 1618, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:13:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
2023/03/25 04:13:55 for select break: 1
2023/03/25 04:13:55 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 575, write pid:575
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20126, 0
execute_one time: 0, 20126
executor 1 write_server_output
time breakdown 3: 2075, 20126, 0
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20126, 0
execute_one time: 1, 20126
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1256
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:13:55 for select break: 1
2023/03/25 04:13:55 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:13:55 for select break: 1
2023/03/25 04:13:55 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 2071, 20129, 1
before receive testcase: 0 0
2023/03/25 04:13:55 for select break: 1
2023/03/25 04:13:55 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:13:55 wg wait finish
2023/03/25 04:13:55 ------ all executors finish execution
2023/03/25 04:13:55 exec time: 22208
2023/03/25 04:13:55 ----- PS len: 4
2023/03/25 04:13:55 [CLIENT] executor 3 has 17 replies
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 2072, 20131, 0
before receive testcase: 0 0
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 2007 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:13:55 [SERVER] executor 2 has 0 replies
2023/03/25 04:13:55 [SERVER] executor 0 has 4 replies
2023/03/25 04:13:55 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 04:13:55 [SERVER] executor 1 has 0 replies
2023/03/25 04:13:55 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 04:13:55 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 04:13:55 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
time breakdown 1: 2072, 20137, 0
before receive testcase: 0 0
2023/03/25 04:13:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:13:55 ----- no new client coverage: false, true
2023/03/25 04:13:55 mutate testcase with failures
2023/03/25 04:13:55 ----- insertCall()
2023/03/25 04:13:55 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 04:13:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:13:55 disable threaded and collide
2023/03/25 04:13:55 prog length: 6
2023/03/25 04:13:55 prog length: 18
2023/03/25 04:13:55 HasCrashFail:true HasNetFail:false
04:13:55 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
syz_failure_sync(0x0, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
syz_failure_sync(0x1, 0x3)
fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4104
remove dir: /root/orangefs-client/dfs-0-122
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
[D 03/25/2023 03:13:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2050
-----finish removing dir
mkdir time 6037
executor 3 create dir /root/orangefs-client/dfs-0-123 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-123
receive_execute: 9, 8087
receive_execute: 10, 8087
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 8088
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 2, 8088
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6473, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6473, flag collect 0
----- executor 3 signal number : 20
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6467, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 6467, flag collect 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1234 tid 1234

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1234, pid 1234, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:14:03] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 578, write pid:578
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 53, 0
execute_one time: 1, 53
2023/03/25 04:14:03 for select break: 1
2023/03/25 04:14:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 8099, 54, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 15286, flag collect 0
2023/03/25 04:14:03 for select break: 1
2023/03/25 04:14:03 --------- executor 2 receive reply, reply.done 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 40, 0
execute_one time: 14, 40
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4508, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4152, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2125
time breakdown 0: 8097, 57, 0
before receive testcase: 0 1
2023/03/25 04:14:03 for select break: 1
2023/03/25 04:14:03 for select break: 1
2023/03/25 04:14:03 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:14:03 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:14:03 wg wait finish
2023/03/25 04:14:03 ------ all executors finish execution
2023/03/25 04:14:03 exec time: 8145
2023/03/25 04:14:03 ----- PS len: 4
2023/03/25 04:14:03 [SERVER] executor 1 has 1 replies
2023/03/25 04:14:03 [CLIENT] executor 3 has 18 replies
2023/03/25 04:14:03 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:14:03 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 [SERVER] executor 0 has 4 replies
2023/03/25 04:14:03 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 04:14:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:03 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:14:03 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:14:03 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 04:14:03 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:14:03 ----- no new client coverage: false, true
time breakdown 2: 8096, 56, 0
before receive testcase: 0 0
2023/03/25 04:14:03 mutate testcase with failures
2023/03/25 04:14:03 ----- insertCall()
2023/03/25 04:14:03 ----- insertCall()
2023/03/25 04:14:03 ----- mutateArg()
2023/03/25 04:14:03 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:03 disable threaded and collide
2023/03/25 04:14:03 prog length: 6
2023/03/25 04:14:03 prog length: 22
2023/03/25 04:14:03 HasCrashFail:true HasNetFail:false
04:14:03 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r0)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f00000004c0)=ANY=[@ANYBLOB="02000000010001000000000002000500", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="140004000000000800053b60790e81c883", @ANYRES32=r6, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0xee01, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="10000100000000002000000000000000"], 0x54, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4168
remove dir: /root/orangefs-client/dfs-0-123
time breakdown 1: 8090, 56, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 30
-----finish removing dir
receive_execute: 2, 46
receive_execute: 3, 45
receive_execute: 3, 46
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-124 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-124
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
receive_execute: 4, 46
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:14:03] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:14:03] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:14:03] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:14:03] Error: Could not initialize server subsystems
[E 03/25/2023 03:14:03] Error: Could not initialize server; aborting.
[E 03/25/2023 03:14:03] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10039, 0, 1
execute_one loop: 0, 0, 10040
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10040, 0, 0
execute_one loop: 0, 0, 10041
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1634 tid 1634

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1634, pid 1634, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:14:14] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 580, write pid:580
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2029
----- completed 22
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 0, 10069, 0
execute_one time: 1, 10069
2023/03/25 04:14:14 for select break: 1
2023/03/25 04:14:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 50, 10071, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13654, flag collect 0
----- executor 1 signal number : 1927
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:14:14 for select break: 1
2023/03/25 04:14:14 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 49, 10072, 0
before receive testcase: 0 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10068, 1
execute_one time: 0, 10069
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1256
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 4 output_pos_value 2232
2023/03/25 04:14:14 for select break: 1
2023/03/25 04:14:14 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:14:14 for select break: 1
2023/03/25 04:14:14 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:14:14 wg wait finish
2023/03/25 04:14:14 ------ all executors finish execution
2023/03/25 04:14:14 exec time: 10119
2023/03/25 04:14:14 ----- PS len: 4
time breakdown 1: 48, 10074, 0
before receive testcase: 0 0
2023/03/25 04:14:14 [SERVER] executor 0 has 4 replies
2023/03/25 04:14:14 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 04:14:14 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 04:14:14 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 04:14:14 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 04:14:14 [SERVER] executor 1 has 4 replies
2023/03/25 04:14:14 ------- fuzzer executor 1 receive 1927 signal and 0 cover from userspace component
2023/03/25 04:14:14 [CLIENT] executor 3 has 22 replies
2023/03/25 04:14:14 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:14 fuzzer receive 2029 signal and 0 cover from executor 3
2023/03/25 04:14:14 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:14:14 ----- no new client coverage: false, true
2023/03/25 04:14:14 mutate testcase with failures
2023/03/25 04:14:14 ----- mutateArg()
2023/03/25 04:14:14 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:14 disable threaded and collide
2023/03/25 04:14:14 prog length: 6
2023/03/25 04:14:14 prog length: 13
2023/03/25 04:14:14 HasCrashFail:true HasNetFail:false
04:14:14 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000280)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000440)="09fada161b5a9ca0c1997d911a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef9c5c977374e14e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xc8}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2856
remove dir: /root/orangefs-client/dfs-0-124
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 48, 10073, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[D 03/25/2023 03:14:14] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2025
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-125 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-125
receive_execute: 1, 2039
receive_execute: 2, 2039
receive_execute: 1, 2038
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 2039
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 18493, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 18493, flag collect 0
----- executor 3 signal number : 3070
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13556, flag collect 0
----- executor 0 signal number : 2213
----- executor 0 executes write_coverage_signal cov->size 19616, flag collect 0
----- executor 0 signal number : 1233
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 284
----- executor 0 executes write_coverage_signal cov->size 1733, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3819
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1649 tid 1649

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1649, pid 1649, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:14:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 32, 0
execute_one time: 0, 32
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:14:16] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:14:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 2020, 0, 0
execute_one loop: 0, 0, 2020
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2051, 0
execute_one time: 0, 2052
-----executor 0 collect shmids 5
----- directly resend shmid 5
2023/03/25 04:14:18 for select break: 1
2023/03/25 04:14:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2042, 2053, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:14:18 for select break: 1
2023/03/25 04:14:18 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 765
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2039, 2055, 0
before receive testcase: 0 0
----- executor 0 signal number : 215
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 42
----- executor 0 executes write_coverage_signal cov->size 14431, flag collect 0
2023/03/25 04:14:18 for select break: 1
2023/03/25 04:14:18 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 0 signal number : 128
executor 0 server cover_cnt 10 output_pos_value 5015
2023/03/25 04:14:18 for select break: 1
2023/03/25 04:14:18 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:14:18 wg wait finish
2023/03/25 04:14:18 ------ all executors finish execution
2023/03/25 04:14:18 exec time: 4095
2023/03/25 04:14:18 ----- PS len: 4
2023/03/25 04:14:18 [CLIENT] executor 3 has 13 replies
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 3070 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:18 [SERVER] executor 0 has 10 replies
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 2213 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 1233 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 284 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 765 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 42 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/25 04:14:18 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/25 04:14:18 [SERVER] executor 1 has 0 replies
2023/03/25 04:14:18 [SERVER] executor 2 has 0 replies
time breakdown 0: 2040, 2056, 0
before receive testcase: 0 1
time breakdown 2: 2041, 2055, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 04:14:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:14:18 ----- no new client coverage: false, true
2023/03/25 04:14:18 mutate testcase with failures
2023/03/25 04:14:18 ----- insertCall()
2023/03/25 04:14:18 ----- insertCall()
2023/03/25 04:14:18 ----- generateCall 2459 open$dir open$dir
2023/03/25 04:14:18 ----- mutateArg()
2023/03/25 04:14:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:18 disable threaded and collide
2023/03/25 04:14:18 prog length: 6
2023/03/25 04:14:18 prog length: 18
2023/03/25 04:14:18 HasCrashFail:true HasNetFail:false
04:14:18 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f00000008c0), 0x4, 0x0)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
open$dir(&(0x7f0000000880)='./file1\x00', 0x40, 0x18)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4120
remove dir: /root/orangefs-client/dfs-0-125
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 49
-----finish removing dir
receive_execute: 4, 10134
mkdir time 10085
executor 3 create dir /root/orangefs-client/dfs-0-126 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-126
receive_execute: 3, 10134
receive_execute: 2, 10135
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
receive_execute: 4, 10136
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 7023, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 7023, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_call 0, 40, 0, 0
execute_one loop: 0, 0, 41
executor 0 write_server_output
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 0 executes write_coverage_signal cov->size 32679, flag collect 0
executor 3 waits for recv msg
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 12212, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3137, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 3246, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2120
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 22, 0, 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1665 tid 1665

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1665, pid 1665, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:14:28] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 84, 0
execute_one time: 0, 84
[E 03/25/2023 03:14:28] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:14:28] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 274
----- completed 13
execute_call 0, 2003, 0, 2
execute_one loop: 0, 0, 2005
cover_reset in execute_call
----- executor 3 write_call_output, size 18469, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 18469, flag collect 0
----- executor 3 signal number : 1018
----- completed 14
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 584, write pid:584
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2099, 0
execute_one time: 0, 2099
2023/03/25 04:14:30 for select break: 1
2023/03/25 04:14:30 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10141, 2100, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:14:30 for select break: 1
2023/03/25 04:14:30 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10137, 2103, 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 17279, flag collect 0
----- executor 0 signal number : 17
executor 0 server cover_cnt 9 output_pos_value 2379
before receive testcase: 0 0
2023/03/25 04:14:30 for select break: 1
2023/03/25 04:14:30 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10137, 2106, 0
before receive testcase: 0 0
2023/03/25 04:14:30 for select break: 1
2023/03/25 04:14:30 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:14:30 wg wait finish
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 10138, 2116, 0
2023/03/25 04:14:30 ------ all executors finish execution
2023/03/25 04:14:30 exec time: 12251
2023/03/25 04:14:30 ----- PS len: 4
2023/03/25 04:14:30 [SERVER] executor 1 has 0 replies
2023/03/25 04:14:30 [SERVER] executor 0 has 9 replies
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/25 04:14:30 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 04:14:30 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 04:14:30 [CLIENT] executor 3 has 18 replies
2023/03/25 04:14:30 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 274 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 1018 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:30 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:14:30 ----- no new client coverage: false, true
2023/03/25 04:14:30 mutate testcase with failures
2023/03/25 04:14:30 ----- mutateArg()
2023/03/25 04:14:30 ----- insertCall()
2023/03/25 04:14:30 ----- removeCall()
2023/03/25 04:14:30 ----- mutateArg()
2023/03/25 04:14:30 ----- insertCall()
2023/03/25 04:14:30 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 04:14:30 ----- insertCall()
2023/03/25 04:14:30 ----- generateCall 2343 link link
2023/03/25 04:14:30 ----- mutateArg()
2023/03/25 04:14:30 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:30 disable threaded and collide
2023/03/25 04:14:30 prog length: 6
2023/03/25 04:14:30 prog length: 20
before receive testcase: 0 1
2023/03/25 04:14:30 HasCrashFail:true HasNetFail:false
04:14:30 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000880)='./file0\x00', 0x8, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
r2 = open$dir(&(0x7f0000000140)='./file0\x00', 0x400, 0x100)
fcntl$dupfd(r1, 0x406, r2)
link(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f00000008c0)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
link(&(0x7f0000000440)='./file0/file0\x00', &(0x7f0000000500)='./file0\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4256
remove dir: /root/orangefs-client/dfs-0-126
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 35
-----finish removing dir
receive_execute: 2, 50
receive_execute: 14, 50
receive_execute: 11, 51
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-127 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-127
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 15, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16368, flag collect 0
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 6100, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2093
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1680 tid 1680

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1680, pid 1680, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:14:30] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 29, 0
execute_one time: 0, 29
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 03:14:30] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:14:30] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 359
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 12
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 586, write pid:586
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2068, 0
execute_one time: 0, 2068
2023/03/25 04:14:32 for select break: 1
2023/03/25 04:14:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 66, 2069, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 220
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:14:32 for select break: 1
2023/03/25 04:14:32 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 16819, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2509
2023/03/25 04:14:32 for select break: 1
2023/03/25 04:14:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 62, 2072, 0
before receive testcase: 0 0
time breakdown 1: 52, 2070, 0
before receive testcase: 0 0
2023/03/25 04:14:32 for select break: 1
2023/03/25 04:14:32 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:14:32 wg wait finish
2023/03/25 04:14:32 ------ all executors finish execution
2023/03/25 04:14:32 exec time: 2125
2023/03/25 04:14:32 ----- PS len: 4
2023/03/25 04:14:32 [CLIENT] executor 3 has 20 replies
2023/03/25 04:14:32 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 359 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:32 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:32 [SERVER] executor 0 has 9 replies
2023/03/25 04:14:32 [SERVER] executor 1 has 0 replies
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
time breakdown 2: 64, 2075, 0
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 220 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 04:14:32 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:14:32 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 04:14:32 ----- no new client coverage: false, true
2023/03/25 04:14:32 mutate testcase with failures
2023/03/25 04:14:32 ----- insertCall()
2023/03/25 04:14:32 ----- generateCall 2343 link link
2023/03/25 04:14:32 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:32 disable threaded and collide
2023/03/25 04:14:32 prog length: 6
2023/03/25 04:14:32 prog length: 18
2023/03/25 04:14:32 HasCrashFail:true HasNetFail:false
04:14:32 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000000880)='./file2\x00', &(0x7f00000008c0)='./file1\x00')
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4136
remove dir: /root/orangefs-client/dfs-0-127
remove dir time 18
-----finish removing dir
receive_execute: 6, 8074
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 8074
receive_execute: 3, 8074
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 8056
executor 3 create dir /root/orangefs-client/dfs-0-128 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-128
receive_execute: 9, 8075
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6473, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6473, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1257 tid 1257

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1257, pid 1257, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:14:40] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 587, write pid:587
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 55, 0
execute_one time: 0, 55
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 50, 0
execute_one time: 0, 50
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 8084, 56, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 16799, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8077, 59, 0
before receive testcase: 0 0
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:14:40 wg wait finish
2023/03/25 04:14:40 ------ all executors finish execution
2023/03/25 04:14:40 exec time: 8133
2023/03/25 04:14:40 ----- PS len: 4
2023/03/25 04:14:40 [CLIENT] executor 3 has 18 replies
2023/03/25 04:14:40 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 [SERVER] executor 0 has 4 replies
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:14:40 [SERVER] executor 1 has 1 replies
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:14:40 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:40 fsMds: [map[] map[] map[] map[]]
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4691, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4497, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
time breakdown 0: 8080, 60, 0
before receive testcase: 0 0
2023/03/25 04:14:40 ----- no new client coverage: false, true
2023/03/25 04:14:40 mutate testcase with failures
2023/03/25 04:14:40 ----- mutateArg()
2023/03/25 04:14:40 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:40 disable threaded and collide
2023/03/25 04:14:40 prog length: 6
2023/03/25 04:14:40 prog length: 22
2023/03/25 04:14:40 HasCrashFail:true HasNetFail:false
04:14:40 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, <r6=>0x0, <r7=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_access\x00', &(0x7f00000005c0)={{}, {0x1, 0x1}, [{0x2, 0x4}, {0x2, 0x2}, {0x2, 0x1, 0xffffffffffffffff}, {0x2, 0x3, r6}, {}, {0x2, 0x7, r6}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x6, r7}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {0x8, 0x0, r7}], {0x10, 0x2}}, 0x7c, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5552
remove dir: /root/orangefs-client/dfs-0-128
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 8083, 58, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 18
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-129 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-129
receive_execute: 2, 30
receive_execute: 3, 30
receive_execute: 5, 30
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 569, flag collect 0
----- executor 1 signal number : 125
executor 1 server cover_cnt 1 output_pos_value 129
receive_execute: 3, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1273 tid 1273

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1273, pid 1273, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:14:40] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 34, 0
execute_one time: 0, 34
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:589
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 35, 0
execute_one time: 1, 35
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 37, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1575, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1007, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2096
----- executor 1 signal number : 2504
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 33, 38, 0
before receive testcase: 0 0
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 26
executor 1 server cover_cnt 6 output_pos_value 2937
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 39, 0
before receive testcase: 0 0
2023/03/25 04:14:40 for select break: 1
2023/03/25 04:14:40 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:14:40 wg wait finish
2023/03/25 04:14:40 ------ all executors finish execution
2023/03/25 04:14:40 exec time: 69
2023/03/25 04:14:40 ----- PS len: 4
2023/03/25 04:14:40 [CLIENT] executor 3 has 22 replies
time breakdown 1: 33, 39, 0
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:40 [SERVER] executor 0 has 4 replies
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:14:40 [SERVER] executor 1 has 6 replies
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 125 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 2504 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 04:14:40 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/25 04:14:40 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:40 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:14:40 ----- no new client coverage: false, true
2023/03/25 04:14:40 mutate testcase with failures
2023/03/25 04:14:40 ----- insertCall()
2023/03/25 04:14:40 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/25 04:14:40 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:40 disable threaded and collide
2023/03/25 04:14:40 prog length: 6
2023/03/25 04:14:40 prog length: 20
2023/03/25 04:14:40 HasCrashFail:true HasNetFail:false
04:14:40 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
fcntl$addseals(r1, 0x409, 0x1)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4440
remove dir: /root/orangefs-client/dfs-0-129
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 20
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:14:40] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:14:40] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:14:40] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:14:40] Error: Could not initialize server subsystems
[E 03/25/2023 03:14:40] Error: Could not initialize server; aborting.
[D 03/25/2023 03:14:40] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:14:40] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:14:40] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:14:40] Error: Could not initialize server subsystems
[E 03/25/2023 03:14:40] Error: Could not initialize server; aborting.
receive_execute: 2, 6059
receive_execute: 2, 6059
mkdir time 6039
executor 3 create dir /root/orangefs-client/dfs-0-130 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-130
receive_execute: 2, 6059
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 6059
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1289 tid 1289

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1289, pid 1289, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:14:46] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 34, 0
execute_one time: 1, 34
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 590, write pid:590
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 36, 0
execute_one time: 1, 36
2023/03/25 04:14:46 for select break: 1
2023/03/25 04:14:46 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 6061, 38, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32672, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 12232, flag collect 0
----- executor 1 signal number : 899
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2121
2023/03/25 04:14:46 for select break: 1
2023/03/25 04:14:46 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 6062, 39, 0
before receive testcase: 0 0
time breakdown 1: 6061, 40, 0
before receive testcase: 0 1
2023/03/25 04:14:46 for select break: 1
2023/03/25 04:14:46 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:14:46 for select break: 1
2023/03/25 04:14:46 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:14:46 wg wait finish
2023/03/25 04:14:46 ------ all executors finish execution
2023/03/25 04:14:46 exec time: 6100
2023/03/25 04:14:46 ----- PS len: 4
2023/03/25 04:14:46 [SERVER] executor 0 has 4 replies
2023/03/25 04:14:46 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 04:14:46 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:14:46 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:14:46 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:14:46 [CLIENT] executor 3 has 20 replies
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 [SERVER] executor 2 has 0 replies
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:14:46 [SERVER] executor 1 has 1 replies
2023/03/25 04:14:46 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 04:14:46 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:14:46 ----- no new client coverage: false, true
2023/03/25 04:14:46 mutate testcase with failures
2023/03/25 04:14:46 ----- insertCall()
2023/03/25 04:14:46 ----- insertCall()
2023/03/25 04:14:46 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 04:14:46 ----- mutateArg()
2023/03/25 04:14:46 ----- mutateArg()
2023/03/25 04:14:46 ----- insertCall()
2023/03/25 04:14:46 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/25 04:14:46 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:14:46 disable threaded and collide
2023/03/25 04:14:46 prog length: 6
2023/03/25 04:14:46 prog length: 7
2023/03/25 04:14:46 HasCrashFail:true HasNetFail:false
04:14:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x89)
write$binfmt_script(0xffffffffffffffff, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
rmdir(&(0x7f00000000c0)='./file0\x00')
lremovexattr(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)=@known='system.posix_acl_default\x00')
syz_failure_sync(0x1, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)='./file0\x00', 0x8, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 872
remove dir: /root/orangefs-client/dfs-0-130
time breakdown 0: 6061, 40, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 21
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:14:46] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:14:46] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:14:46] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:14:46] Error: Could not initialize server subsystems
[E 03/25/2023 03:14:46] Error: Could not initialize server; aborting.
receive_execute: 3, 8078
receive_execute: 3, 8078
mkdir time 8057
executor 3 create dir /root/orangefs-client/dfs-0-131 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-131
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 8079
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 2, 8078
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 8051, 0, 0
execute_one loop: 0, 0, 8051
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 32765, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2687
----- completed 1
execute_call 0, 8050, 0, 0
execute_one loop: 0, 0, 8050
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 2587
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1149
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4117
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:15:02] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 147
----- completed 4
execute_call 0, 10048, 0, 1
execute_one loop: 0, 0, 10049
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 106
----- completed 5
execute_call 0, 20070, 0, 1
execute_one loop: 0, 0, 20071
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30119, 0, 0
execute_one loop: 0, 0, 30119
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1698 tid 1698

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1698, pid 1698, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:15:33] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 592, write pid:592
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 38197, 0
execute_one time: 1, 38197
2023/03/25 04:15:33 for select break: 1
2023/03/25 04:15:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 8083, 38199, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:15:33 for select break: 1
2023/03/25 04:15:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8081, 38200, 0
2023/03/25 04:15:33 for select break: 1
2023/03/25 04:15:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8080, 38202, 0
before receive testcase: 0 0
2023/03/25 04:15:33 for select break: 1
2023/03/25 04:15:33 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:15:33 wg wait finish
2023/03/25 04:15:33 ------ all executors finish execution
2023/03/25 04:15:33 exec time: 46281
2023/03/25 04:15:33 ----- PS len: 4
2023/03/25 04:15:33 [CLIENT] executor 3 has 7 replies
2023/03/25 04:15:33 fuzzer receive 2687 signal and 0 cover from executor 3
2023/03/25 04:15:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:15:33 [SERVER] executor 0 has 8 replies
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 2587 signal and 0 cover from userspace component
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 38197, 0
execute_one time: 1, 38197
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 176
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 113
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3
executor 0 server cover_cnt 8 output_pos_value 4441
2023/03/25 04:15:33 [SERVER] executor 2 has 0 replies
2023/03/25 04:15:33 [SERVER] executor 1 has 0 replies
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 1149 signal and 0 cover from userspace component
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 176 signal and 0 cover from userspace component
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 113 signal and 0 cover from userspace component
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 04:15:33 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
time breakdown 0: 8081, 38202, 0
before receive testcase: 0 0
2023/03/25 04:15:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:15:33 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/25 04:15:33 fuzzer receive 106 signal and 0 cover from executor 3
2023/03/25 04:15:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:15:33 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 04:15:33 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:15:33 ----- no new client coverage: false, true
2023/03/25 04:15:33 mutate testcase with failures
2023/03/25 04:15:33 ----- mutateArg()
2023/03/25 04:15:33 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:15:33 disable threaded and collide
2023/03/25 04:15:33 prog length: 6
2023/03/25 04:15:33 prog length: 17
2023/03/25 04:15:33 HasCrashFail:true HasNetFail:false
04:15:33 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
syz_failure_sync(0x0, 0x3)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v1={0x1000000, [{0x4, 0x7}]}, 0xc, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
syz_failure_sync(0x1, 0x3)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5456
remove dir: /root/orangefs-client/dfs-0-131
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[D 03/25/2023 03:15:33] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2056
-----finish removing dir
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-132 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-132
receive_execute: 2, 2074
receive_execute: 3, 2074
receive_execute: 2, 2074
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2075
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6695, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6695, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28648, flag collect 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 10687, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 2929, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2847, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:15:35] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 397
----- completed 11
execute_call 0, 10033, 0, 1
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 10028, 0, 0
execute_one loop: 0, 0, 10028
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10032, 0, 0
execute_one loop: 0, 0, 10032
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 40136, 0, 0
execute_one loop: 0, 0, 40136
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1714 tid 1714

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1714, pid 1714, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:16:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 40178, 0
execute_one time: 0, 40178
[D 03/25/2023 03:16:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 2036, 0, 0
execute_one loop: 0, 0, 2036
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 28
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 594, write pid:594
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 13
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 42218, 0
execute_one time: 0, 42218
2023/03/25 04:16:17 for select break: 1
2023/03/25 04:16:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2079, 42220, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:16:17 for select break: 1
2023/03/25 04:16:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2077, 42222, 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/25 04:16:17 for select break: 1
2023/03/25 04:16:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2076, 42222, 0
before receive testcase: 0 1
----- executor 0 signal number : 14
----- executor 0 executes write_coverage_signal cov->size 16866, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 9 output_pos_value 2372
before receive testcase: 0 0
2023/03/25 04:16:17 for select break: 1
2023/03/25 04:16:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:16:17 wg wait finish
2023/03/25 04:16:17 ------ all executors finish execution
2023/03/25 04:16:17 exec time: 44299
2023/03/25 04:16:17 ----- PS len: 4
2023/03/25 04:16:17 [CLIENT] executor 3 has 17 replies
2023/03/25 04:16:17 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 397 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 2076, 42223, 0
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 04:16:17 fuzzer receive 13 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 04:16:17 [SERVER] executor 0 has 9 replies
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:16:17 [SERVER] executor 1 has 0 replies
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 04:16:17 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 04:16:17 [SERVER] executor 2 has 0 replies
2023/03/25 04:16:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:16:17 ----- no new client coverage: false, true
2023/03/25 04:16:17 mutate testcase with failures
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- mutateArg()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 ----- insertCall()
2023/03/25 04:16:17 HasCrashFail: false, .HasNetFail: false
2023/03/25 04:16:17 prog length: 20
2023/03/25 04:16:17 HasCrashFail:false HasNetFail:false
04:16:17 ---executing program 0:
---
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r1, r0, &(0x7f00000004c0)=0x3f, 0x1000008)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)=ANY=[@ANYBLOB="2321202e2f66696c65302023205d202b0a38b5ecf63cceb0e7e26ea32afc733f89bf6df08ab5ada1d19603000000000000000cb686bb8946c785810a0000000001ff9c3d6983a0d0f1f3f0f085eb7306c18a70"], 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=ANY=[@ANYBLOB="6b8e1428377bec092bf9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"], 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000500)=ANY=[@ANYBLOB="7097ac15efce4c996e0af44bae8475393c09979c9e3bf2c6c628ef17de631c3a1497b9908a9e219f9ae02a0c6b25a04cd749e13a646376287fe87b8dd0f5478e0a9d477ed6a9a900eb25442f7bae93a71269e6266737a1efc7831acfb9e465547e3b3153028b44cefcf27c59d24a6363d1a19366b6d95f51711117f37f2344187ebc91e6256439f1f7b862066354c8d1195a61ed8e48359ebe709d0be017b4a1b494940cdafc2631c3a7595a97d5b241219689d6735f2ad206e48db6222e4b3d5574e5e64d0000ba0a87b9b6d0518725b079b50d99445be66fbb98238b00000000", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="040004000000000008000000", @ANYRES32=r6, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0xee01, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="10000100000000002000000000000000"], 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3688
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/orangefs-client/dfs-0-132
remove dir time 37
-----finish removing dir
mkdir time 2026
executor 3 create dir /root/orangefs-client/dfs-0-133 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-133
receive_execute: 1, 2064
receive_execute: 3, 2063
receive_execute: 3, 2063
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 2064
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 14, 0
----- executor 3 write_call_output, size 6695, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 6695, flag collect 0
----- executor 3 signal number : 2076
----- completed 7
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:596
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 18, 0
execute_one time: 13, 18
time breakdown 3: 2067, 32, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1561, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1007, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2093
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:16:19 for select break: 1
2023/03/25 04:16:19 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:16:19 for select break: 1
2023/03/25 04:16:19 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 2066, 34, 0
before receive testcase: 0 0
2023/03/25 04:16:19 for select break: 1
2023/03/25 04:16:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2065, 34, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 04:16:19 for select break: 1
2023/03/25 04:16:19 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:16:19 wg wait finish
2023/03/25 04:16:19 ------ all executors finish execution
2023/03/25 04:16:19 exec time: 2098
2023/03/25 04:16:19 ----- PS len: 4
2023/03/25 04:16:19 [CLIENT] executor 3 has 20 replies
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 2066, 35, 0
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 [SERVER] executor 0 has 4 replies
2023/03/25 04:16:19 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 04:16:19 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:16:19 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:16:19 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:16:19 [SERVER] executor 2 has 0 replies
2023/03/25 04:16:19 [SERVER] executor 1 has 0 replies
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 04:16:19 fuzzer receive 2076 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:19 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:16:19 ----- no new client coverage: false, true
2023/03/25 04:16:19 mutate testcase with failures
2023/03/25 04:16:19 ----- insertCall()
2023/03/25 04:16:19 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 04:16:19 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:16:19 disable threaded and collide
2023/03/25 04:16:19 prog length: 6
2023/03/25 04:16:19 prog length: 6
2023/03/25 04:16:19 HasCrashFail:true HasNetFail:false
04:16:19 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000180), 0x2, 0x1)
syz_failure_sync(0x1, 0x3)
symlink(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000140)='./file0\x00')
open(&(0x7f00000001c0)='./file1\x00', 0x40, 0x0)
readlink(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=""/63, 0x3f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 864
remove dir: /root/orangefs-client/dfs-0-133
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 27
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-134 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-134
receive_execute: 1, 43
receive_execute: 0, 43
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
receive_execute: 1, 43
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 2, 42
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
Terminated
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 597, write pid:597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:16:19] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 597, write pid:597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10032, 0, 0
execute_one loop: 0, 0, 10032
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10032, 0, 0
execute_one loop: 0, 0, 10032
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1730 tid 1730

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1730, pid 1730, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:16:29] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10051, 0
execute_one time: 0, 10051
----- executor 3 write_call_output, size 0, pid 597, write pid:597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
[D 03/25/2023 03:16:29] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 597, write pid:597
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1999
----- completed 4
execute_call 0, 4039, 0, 1
execute_one loop: 0, 0, 4040
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 597, write pid:597
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 466
----- completed 5
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 597, write pid:597
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 429
----- completed 6
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 24136, 0
execute_one time: 0, 24136
2023/03/25 04:16:43 for select break: 1
2023/03/25 04:16:43 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 44, 24136, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 04:16:43 for select break: 1
2023/03/25 04:16:43 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 920
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:16:43 for select break: 1
2023/03/25 04:16:43 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 43, 24138, 0
before receive testcase: 0 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 44, 24138, 0
before receive testcase: 0 0
----- executor 0 signal number : 90
executor 0 server cover_cnt 5 output_pos_value 1367
2023/03/25 04:16:43 for select break: 1
2023/03/25 04:16:43 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:16:43 wg wait finish
2023/03/25 04:16:43 ------ all executors finish execution
2023/03/25 04:16:43 exec time: 24183
2023/03/25 04:16:43 ----- PS len: 4
2023/03/25 04:16:43 [CLIENT] executor 3 has 6 replies
2023/03/25 04:16:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:16:43 [SERVER] executor 0 has 5 replies
time breakdown 0: 44, 24139, 0
2023/03/25 04:16:43 ------- fuzzer executor 0 receive 920 signal and 0 cover from userspace component
2023/03/25 04:16:43 [SERVER] executor 1 has 0 replies
2023/03/25 04:16:43 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:16:43 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 04:16:43 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 04:16:43 ------- fuzzer executor 0 receive 90 signal and 0 cover from userspace component
2023/03/25 04:16:43 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 04:16:43 fuzzer receive 1999 signal and 0 cover from executor 3
2023/03/25 04:16:43 fuzzer receive 466 signal and 0 cover from executor 3
2023/03/25 04:16:43 fuzzer receive 429 signal and 0 cover from executor 3
2023/03/25 04:16:43 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:16:43 ----- no new client coverage: false, true
2023/03/25 04:16:43 mutate testcase with failures
2023/03/25 04:16:43 ----- insertCall()
2023/03/25 04:16:43 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 04:16:43 ----- insertCall()
2023/03/25 04:16:43 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 04:16:43 ----- mutateArg()
2023/03/25 04:16:43 ----- insertCall()
2023/03/25 04:16:43 ----- mutateArg()
2023/03/25 04:16:43 ----- mutateArg()
2023/03/25 04:16:43 ----- insertCall()
2023/03/25 04:16:43 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:16:43 disable threaded and collide
2023/03/25 04:16:43 prog length: 6
2023/03/25 04:16:43 prog length: 20
2023/03/25 04:16:43 HasCrashFail:true HasNetFail:false
04:16:43 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000880)='./file1\x00', &(0x7f00000008c0), &(0x7f0000000900), 0x2, 0x2)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f0000000a40)=ANY=[@ANYBLOB="2c3a2300720ad14c61d4bc31dbe53e6ee0959c7881719684bec6a89ed0b9c1e1d11e62c3414ee3fab17eaccbea3a243fca17f0c00dc56c3c10a976f1cc6cf9c5ebdb509b30ab81fd02f87d5cdaea777ade754a903519985b3bf18d4c050ffcc729a0e0ca83642eecca7fa728770a40baae8bc65f6f0a265e71e0b3ee2c48acfd739d5e6903aea61b0a2cec3e6de190a6a62afc31c62c83c13dc9eeadcf5f8ad06b9f5d4d68185204abd03151bf9c08fd7c62c184a029d563609ba69745e052650d12e0e9aa9c222c2c5d43b33cb6f78f8a635d2b16bdc893fe4b71af09f7d871"], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
r1 = openat(r0, &(0x7f0000000940)='./file1\x00', 0x101002, 0x1)
fsetxattr$trusted_overlay_redirect(r1, &(0x7f0000000980), &(0x7f00000009c0)='./file0\x00', 0x8, 0x1)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file2\x00', &(0x7f00000005c0)=@known='system.advise\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000a00)='./file0/file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000b40)=ANY=[@ANYBLOB="7475a213bfd02475737465642e6f560000006374000000000000f2ff195734bb79ef5e4d618ec6b8959b0fbf68ba4cf289e4d0f44c7cb5381415a8508cb6864f837ed1a87d774c99b127f72eafc880c6353283f7dae2b0b295d7afe819278df08591684a6537e701f1183a3c8e038e28fb0444fac39952b9f326f599154e1240cba77ee183b671fc36d7b6538812706f2c92335701ab7a285e0c87f1b7c30a4fe7a7a433394f0ee8091a1d3baf7e114069b51d3b0a58cb33a5ef903d5faa9ebfb0fac7f5a0c065dcb2fbd966f3eb92e8f5eae7c9c353142e8f63aa717183f97ce80bf24847cfa56f84e2feffb3e273f715171fc8b1925ae0bb534d200aa89369a08d54a8ded33a4dc7cd8768c335e63329e18e92e829fd37aa97cbdd864dbec06adbe25c38061261f6007884e675702321b6f802b52f6af3c12ee8495851cfa7f96ecc87e65ff8d6f2d1036c8ffcefcb09f12588eb6c42007b809a6bd2de48c3"], 0x1a, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5176
remove dir: /root/orangefs-client/dfs-0-134
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 46
-----finish removing dir
mkdir time 2042
executor 3 create dir /root/orangefs-client/dfs-0-135 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-135
receive_execute: 3, 2088
receive_execute: 2, 2089
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 2089
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2089
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 2
----- executor 3 write_call_output, size 6445, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 6445, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6445, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 6445, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6445, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 6445, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6445, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 6445, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16337, flag collect 0
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 6116, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2096
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 03:16:45] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10048, 0, 0
execute_one loop: 0, 0, 10048
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10033, 0, 1
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 10039, 0, 0
execute_one loop: 0, 0, 10039
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30121, 0, 0
execute_one loop: 0, 0, 30121
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1748 tid 1748

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1748, pid 1748, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:17:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 30152, 0
execute_one time: 0, 30153
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
[D 03/25/2023 03:17:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 383
----- completed 15
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 13
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 599, write pid:599
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 32177, 0
execute_one time: 0, 32177
time breakdown 3: 2093, 32177, 0
before receive testcase: 0 1
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2091, 32178, 0
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2091, 32179, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:17:18 wg wait finish
2023/03/25 04:17:18 ------ all executors finish execution
2023/03/25 04:17:18 exec time: 34270
2023/03/25 04:17:18 ----- PS len: 4
2023/03/25 04:17:18 [CLIENT] executor 3 has 20 replies
2023/03/25 04:17:18 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 383 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
----- executor 0 signal number : 234
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 15803, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2526
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 [SERVER] executor 0 has 9 replies
time breakdown 0: 2090, 32180, 0
before receive testcase: 0 0
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 234 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 04:17:18 [SERVER] executor 2 has 0 replies
2023/03/25 04:17:18 [SERVER] executor 1 has 0 replies
2023/03/25 04:17:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:17:18 ----- no new client coverage: false, true
2023/03/25 04:17:18 mutate testcase with failures
2023/03/25 04:17:18 ----- mutateArg()
2023/03/25 04:17:18 ----- mutateFailPos()
2023/03/25 04:17:18 insert call 2 at pos 0
2023/03/25 04:17:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:17:18 disable threaded and collide
2023/03/25 04:17:18 prog length: 6
2023/03/25 04:17:18 prog length: 19
2023/03/25 04:17:18 HasCrashFail:true HasNetFail:false
04:17:18 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x1, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000002e00)='./file0\x00', &(0x7f0000000300), &(0x7f0000000380)='./file0\x00', 0x8, 0x0)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000000340)=ANY=[@ANYBLOB="737d7374656d2e73656375726974690100656c696e4348e7aea8f775"], &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4288
remove dir: /root/orangefs-client/dfs-0-135
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 49
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-136 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-136
receive_execute: 1, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 65
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 4, 64
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
receive_execute: 3, 65
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1317 tid 1317

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1317, pid 1317, value 1

-----executor 1 collect shmids 0
----- directly resend shmid 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:17:18] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 35, 0
execute_one time: 0, 35
----- executor 3 write_call_output, size 6457, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 2063
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 15
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6463, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6463, flag collect 0
----- executor 3 signal number : 18
----- completed 15
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 51, 0
execute_one time: 1, 51
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 69, 53, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1521
----- executor 0 executes write_coverage_signal cov->size 12236, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3549, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2211
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 3 receive reply, reply.done 1
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 66, 55, 0
before receive testcase: 0 0
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:17:18 wg wait finish
2023/03/25 04:17:18 ------ all executors finish execution
2023/03/25 04:17:18 exec time: 120
2023/03/25 04:17:18 ----- PS len: 4
2023/03/25 04:17:18 [CLIENT] executor 3 has 19 replies
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 [SERVER] executor 0 has 4 replies
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 1521 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:17:18 [SERVER] executor 1 has 1 replies
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
time breakdown 2: 68, 55, 0
before receive testcase: 0 0
2023/03/25 04:17:18 [SERVER] executor 2 has 0 replies
2023/03/25 04:17:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:17:18 ----- no new client coverage: false, true
2023/03/25 04:17:18 mutate testcase with failures
2023/03/25 04:17:18 ----- mutateArg()
2023/03/25 04:17:18 ----- mutateArg()
2023/03/25 04:17:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:17:18 disable threaded and collide
2023/03/25 04:17:18 prog length: 6
2023/03/25 04:17:18 prog length: 17
2023/03/25 04:17:18 HasCrashFail:true HasNetFail:false
04:17:18 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000880)='#^\x98\xd3\xdcZ\xbc\a\xd2\x16\xca/j\xc9Vi\xf3\x16\xd6X\xc1a\xa43-\xb5dq7\xdf\"\xc9\xf8s\x1e\x80\xa5As\xbcIW\xf0\x19\xe1\xb6*\xf6\x97\xdaQ\x0f\xa1\xeec\xda\xd2\\\xc2O\xdf\x8fZ\x88\x9d\xf3F\xddLLs\xcf#\xcfi#\xad\xab\xda\x133\xc6\xed\xf5l\xfa\xe3\x7f\n~\x18\x8c$q\xc0\xb1H\xf5\xae\x81\xb7hK\x89\x99\xdeB\xdc\xac/\xec[\xd1\xa0S\x86', 0x74, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
syz_failure_sync(0x0, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file1\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000900)=ANY=[@ANYBLOB="7472757374652e6f7665726c61792e72656469726563740000d25adda6c4dbd006fc1d94593bf677f7c6c00dbd97ff26be13881f4053ccce4fa9684f1f628a24fa0ee490740f87589a7e21232584ca832813def56ed674dae852d319a45095c40e55685f617cbf7da50dbf5e9110d06ef804654854ef221b"], 0x1a, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4136
remove dir: /root/orangefs-client/dfs-0-136
time breakdown 1: 68, 55, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 11
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-137 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-137
receive_execute: 2, 20
receive_execute: 1, 21
receive_execute: 2, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 21
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 241, flag collect 0
----- executor 1 signal number : 166
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 46, flag collect 0
----- executor 1 signal number : 17
executor 1 server cover_cnt 5 output_pos_value 305
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 1 collect shmids 3
----- directly resend shmid 3
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
[D 03/25/2023 03:17:18] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:17:18] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:17:18] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:17:18] Error: Could not initialize server subsystems
[E 03/25/2023 03:17:18] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1332 tid 1332

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1332, pid 1332, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 03:17:18] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 605, write pid:605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 0, 53, 0
execute_one time: 1, 53
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
time breakdown 3: 25, 56, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 15286, flag collect 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 55, 0
execute_one time: 0, 55
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1951
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4508, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4152, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2121
----- executor 1 signal number : 157
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 22, 59, 0
before receive testcase: 0 0
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 12
executor 1 server cover_cnt 10 output_pos_value 2443
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 59, 0
before receive testcase: 0 0
2023/03/25 04:17:18 for select break: 1
2023/03/25 04:17:18 --------- executor 1 receive reply, reply.done 1
2023/03/25 04:17:18 wg wait finish
2023/03/25 04:17:18 ------ all executors finish execution
2023/03/25 04:17:18 exec time: 81
2023/03/25 04:17:18 ----- PS len: 4
2023/03/25 04:17:18 [CLIENT] executor 3 has 17 replies
2023/03/25 04:17:18 [SERVER] executor 1 has 10 replies
2023/03/25 04:17:18 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 166 signal and 0 cover from userspace component
2023/03/25 04:17:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 04:17:18 [SERVER] executor 0 has 4 replies
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 1951 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 04:17:18 [SERVER] executor 2 has 0 replies
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 157 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 04:17:18 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 04:17:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:17:18 ----- no new client coverage: false, true
2023/03/25 04:17:18 mutate testcase with failures
2023/03/25 04:17:18 ----- insertCall()
2023/03/25 04:17:18 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 04:17:18 ----- insertCall()
2023/03/25 04:17:18 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 04:17:18 ----- insertCall()
2023/03/25 04:17:18 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/25 04:17:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:17:18 disable threaded and collide
2023/03/25 04:17:18 prog length: 6
2023/03/25 04:17:18 prog length: 9
2023/03/25 04:17:18 HasCrashFail:true HasNetFail:false
04:17:18 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
setxattr$trusted_overlay_nlink(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)={'L-', 0xfff}, 0x16, 0x2)
fsetxattr$trusted_overlay_redirect(r1, &(0x7f0000000140), &(0x7f0000000180)='./file0/file0\x00', 0xe, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1552
remove dir: /root/orangefs-client/dfs-0-137
time breakdown 1: 22, 60, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 15
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 03:17:18] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 03:17:18] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 03:17:18] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 03:17:18] Error: Could not initialize server subsystems
[E 03/25/2023 03:17:18] Error: Could not initialize server; aborting.
mkdir time 6042
executor 3 create dir /root/orangefs-client/dfs-0-138 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-138
receive_execute: 3, 6057
receive_execute: 1, 6058
receive_execute: 5, 6057
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 6057
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- executor 3 write_call_output, size 6457, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28991, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 2535
----- executor 0 executes write_coverage_signal cov->size 17720, flag collect 0
----- executor 0 signal number : 1130
----- executor 0 executes write_coverage_signal cov->size 3112, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 2641, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4051
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 32765, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
----- executor 3 signal number : 332
----- completed 4
execute_call 0, 30, 0, 1
execute_one loop: 0, 0, 31
cover_reset in execute_call
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 6346, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 6346, flag collect 0
----- executor 3 signal number : 381
----- completed 5
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 101
----- completed 7
execute_call 0, 26, 0, 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 63, 1, 0
execute_one loop: 0, 0, 64
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1765 tid 1765

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1765, pid 1765, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 03:17:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 98, 0
execute_one time: 1, 98
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 04:17:24 for select break: 1
2023/03/25 04:17:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 17768, flag collect 0
----- executor 0 signal number : 87
----- executor 0 executes write_coverage_signal cov->size 3369, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 2767, flag collect 0
----- executor 0 signal number : 11
executor 0 server cover_cnt 8 output_pos_value 4496
2023/03/25 04:17:24 for select break: 1
2023/03/25 04:17:24 --------- executor 2 receive reply, reply.done 1
2023/03/25 04:17:24 for select break: 1
2023/03/25 04:17:24 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 6060, 101, 0
before receive testcase: 0 0
time breakdown 1: 6059, 101, 0
before receive testcase: 0 0
2023/03/25 04:17:24 for select break: 1
2023/03/25 04:17:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 04:17:24 wg wait finish
2023/03/25 04:17:24 ------ all executors finish execution
2023/03/25 04:17:24 exec time: 6158
2023/03/25 04:17:24 ----- PS len: 4
2023/03/25 04:17:24 [SERVER] executor 0 has 8 replies
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 2535 signal and 0 cover from userspace component
2023/03/25 04:17:24 [SERVER] executor 2 has 0 replies
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 1130 signal and 0 cover from userspace component
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/25 04:17:24 [SERVER] executor 1 has 0 replies
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 87 signal and 0 cover from userspace component
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/25 04:17:24 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 04:17:24 [CLIENT] executor 3 has 9 replies
2023/03/25 04:17:24 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 332 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 381 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 04:17:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 04:17:24 ----- no new client coverage: false, true
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 0, 98, 0
execute_one time: 1, 98
time breakdown 3: 6062, 99, 0
before receive testcase: 0 1
2023/03/25 04:17:24 mutate testcase with failures
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- mutateArg()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 ----- mutateArg()
2023/03/25 04:17:24 ----- insertCall()
2023/03/25 04:17:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 04:17:24 disable threaded and collide
2023/03/25 04:17:24 prog length: 6
2023/03/25 04:17:24 prog length: 22
time breakdown 0: 6060, 101, 0
before receive testcase: 0 0
2023/03/25 04:17:24 HasCrashFail:true HasNetFail:false
04:17:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000001980)=ANY=[@ANYBLOB=""], 0x1025, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000000180))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000000000)=ANY=[@ANYBLOB="73d44975726974792e5c65637572cc74792e534d41434b36345452414e534d5554ff00cb3d0683136b07b9f657"], &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000000200)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e53654ecc7ee628f62ee8c5de2e51637572697479002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd14db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b7ca075f9164b856bc652e32b8308331dc8ab587aa927d730522ad5de50b0aebc24"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8416
remove dir: /root/orangefs-client/dfs-0-138
[E 03/25/2023 03:17:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 03:17:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
Node-3:/root/daemon-log.363
=================================================================
==363==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffffffe250 at pc 0x7ffff75faa6d bp 0x7fffffff8920 sp 0x7fffffff80c8
READ of size 5 at 0x7fffffffe250 thread T0
    #0 0x7ffff75faa6c  (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c)
    #1 0x555555796371 in PINT_encrypt_dirdata (/opt/orangefs/bin/pvfs2fuse+0x242371)
    #2 0x5555556e8a55 in remove_rmdirent_setup_msgpair (/opt/orangefs/bin/pvfs2fuse+0x194a55)
    #3 0x55555578989b in PINT_state_machine_invoke (/opt/orangefs/bin/pvfs2fuse+0x23589b)
    #4 0x55555578a706 in PINT_state_machine_next (/opt/orangefs/bin/pvfs2fuse+0x236706)
    #5 0x55555578a785 in PINT_state_machine_continue (/opt/orangefs/bin/pvfs2fuse+0x236785)
    #6 0x555555679ad1 in PINT_client_state_machine_test (/opt/orangefs/bin/pvfs2fuse+0x125ad1)
    #7 0x55555567aef5 in PINT_client_wait_internal (/opt/orangefs/bin/pvfs2fuse+0x126ef5)
    #8 0x55555567b5c2 in PVFS_sys_wait (/opt/orangefs/bin/pvfs2fuse+0x1275c2)
    #9 0x55555567e70e in PVFS_sys_getattr (/opt/orangefs/bin/pvfs2fuse+0x12a70e)
    #10 0x555555665504 in pvfs_fuse_getattr_pfhp (/opt/orangefs/bin/pvfs2fuse+0x111504)
    #11 0x5555556664f7 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1124f7)
    #12 0x7ffff710b7a6 in fuse_fs_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0xd7a6)
    #13 0x7ffff710ec5f in fuse_lib_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x10c5f)
    #14 0x7ffff71189a9 in do_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x1a9a9)
    #15 0x7ffff711c72e in fuse_ll_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x1e72e)
    #16 0x7ffff711f155 in fuse_session_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x21155)
    #17 0x7ffff7115702 in fuse_session_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x17702)
    #18 0x7ffff7113e30 in fuse_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x15e30)
    #19 0x7ffff7121bdf in fuse_main_common (/lib/x86_64-linux-gnu/libfuse.so.2+0x23bdf)
    #20 0x7ffff7121c5f in fuse_main_real (/lib/x86_64-linux-gnu/libfuse.so.2+0x23c5f)
    #21 0x55555566bc4f in pvfs_fuse_main (/opt/orangefs/bin/pvfs2fuse+0x117c4f)
    #22 0x55555566cdb0 in main (/opt/orangefs/bin/pvfs2fuse+0x118db0)
    #23 0x7ffff6f280b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #24 0x555555664c8d in _start (/opt/orangefs/bin/pvfs2fuse+0x110c8d)

Address 0x7fffffffe250 is located in stack of thread T0 at offset 0 in frame
    #0 0x5555556663e0 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1123e0)

  This frame has 1 object(s):
    [48, 128) 'pfh' (line 301)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c) 
Shadow bytes around the buggy address:
  0x10007fff7bf0: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c00: 04 f2 00 f3 f3 f3 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f3 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00
=>0x10007fff7c40: 00 00 00 00 00 00 00 00 00 00[f1]f1 f1 f1 f1 f1
  0x10007fff7c50: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00
  0x10007fff7c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==363==ABORTING
opendir(/root/orangefs-client/dfs-0-138) failedremove dir time 2011
-----finish removing dir

VM DIAGNOSIS:
04:17:26  Registers:
info registers vcpu 0
RAX=0000000000000000 RBX=0000000000000001 RCX=0000000000000000 RDX=000010007e304c90
RSI=0000000000000000 RDI=000010007e304d78 RBP=00007ffff1866c10 RSP=00007ffff1866c08
R8 =00007ffff1867670 R9 =0000000000000003 R10=000000000000000a R11=0000000000000000
R12=00007ffff1866ce0 R13=00000ffffe30cd9c R14=00005555558d9ba5 R15=00007ffff1866460
RIP=00005555558e30a2 RFL=00000206 [-----P-] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff1867700 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff07d4000 CR3=0000000114162006 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000000000000 Opmask01=0000000000000000 Opmask02=0000000000000000 Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffffff00
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffffff00
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000001000
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000800000
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000001000
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0001000000000000
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 000000000000000a
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
info registers vcpu 1
RAX=0000000000000000 RBX=0000000000000000 RCX=0000000000000001 RDX=0000000000000000
RSI=00007ffff73fd087 RDI=00007fffffffdd90 RBP=00007fffffffe420 RSP=00007fffffffdff0
R8 =0000000000000000 R9 =00007fffffffde80 R10=000000000000000a R11=000000000000008b
R12=0000000000000000 R13=0000000000000000 R14=0000000000000001 R15=0000000000000000
RIP=00007ffff7302963 RFL=00000297 [--S-APC] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff480 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff0840000 CR3=000000010c9b4003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000000012001 Opmask01=0000000000000000 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116 00007fffffffe050
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffdff0 0000003000000018
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050 00007fffffffe050
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748caa0 00007ffff7402ef2
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7387d88 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 2525252525252525 2525252525252525 2525252525252525 2525252525252525
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 656d697420726964 2065766f6d657200 0a7325203a726964 2065766f6d657200
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 40484c5105574c41 0540534a48405700 0a5600051f574c41 0540534a48405700
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
