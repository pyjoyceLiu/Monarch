e:
[    2.260184] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:08, ipaddr=192.168.0.8, mask=255.255.255.0, gw=255.255.255.255
[    2.260188] kernel:      host=192.168.0.8, domain=, nis-domain=(none)
[    2.260190] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    2.260322] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.260616] kernel: kworker/u4:0 (69) used greatest stack depth: 30480 bytes left
[    2.261426] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.261444] kernel: ALSA device list:
[    2.261446] kernel:   No soundcards found.
[    2.261948] kernel: md: Waiting for all devices to be available before autodetect
[    2.261950] kernel: md: If you don't use raid, use raid=noautodetect
[    2.261951] kernel: md: Autodsystemd[1]: Reached target Slices.
[    2.568237] systemd[1]: Reached target Swap.
[    2.568319] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    2.568440] systemd[1]: Listening on Syslog Socket.
[    2.568494] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    2.568721] systemd[1]: Listening on Journal Audit Socket.
[    2.568824] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.568953] systemd[1]: Listening on Journal Socket.
[    2.569072] systemd[1]: Listening on udev Control Socket.
[    2.569154] systemd[1]: Listening on udev Kernel Socket.
[    2.571025] systemd[1]: Mounting Huge Pages File System...
[    2.572475] systemd[1]: Mounting POSIX Message Queue File System...
[    2.573436] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    2.574253] systemd[1]: Mounting /sys/kernel/config...
[    2.575622] systemd[1]: Mounting /sys/kernel/debug...
[    2.576638] systemd[1]: Mounting Kernel Trace File System...
[    2.578380] systemd[1]: Staretecting RAID arrays.
[    2.261953] kernel: md: autorun ...
[    2.261955] kernel: md: ... autorun DONE.
[    2.262551] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.262560] kernel: cfg80211: failed to load regulatory.db
[    2.269316] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    2.269342] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    2.270286] kernel: devtmpfs: mounted
[    2.270671] kernel: Freeing unused kernel image (initmem) memory: 1384K
[    2.270676] kernel: Write protecting the kernel read-only data: 20480k
[    2.271351] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    2.271546] kernel: Freeing unused kernel image (rodata/data gap) memory: 528K
[    2.271557] kernel: Run /sbin/init as init process
[    2.271559] kernel:   with arguments:
[    2.271560] kernel:     /sbin/init
[    2.271561] kernel:     nokaslr
[    2ting Journal Service...
[    2.582766] systemd[1]: Starting Set the console keyboard layout...
[    2.582793] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    2.582836] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    2.584594] systemd[1]: Starting Load Kernel Modules...
[    2.587111] systemd[1]: Starting Remount Root and Kernel File Systems...
[    2.589304] systemd[1]: Starting udev Coldplug all Devices...
[    2.591950] systemd[1]: Mounted Huge Pages File System.
[    2.592176] systemd[1]: Mounted POSIX Message Queue File System.
[    2.592370] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    2.592576] systemd[1]: Mounted /sys/kernel/config.
[    2.592760] systemd[1]: Mounted /sys/kernel/debug.
[    2.592945] systemd[1]: Mounted Kernel Trace File System.
[    2.597178] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    2.601437] systemd.271562] kernel:   with environment:
[    2.271563] kernel:     HOME=/
[    2.271564] kernel:     TERM=linux
[    2.314266] kernel: random: fast init done
[    2.392743] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    2.392882] systemd[1]: Detected virtualization kvm.
[    2.392891] systemd[1]: Detected architecture x86-64.
[    2.404855] systemd[1]: Set hostname to <dfs-fuzzing>.
[    2.423410] kernel: systemd-debug-g (80) used greatest stack depth: 29808 bytes left
[    2.432766] kernel: netplan (77) used greatest stack depth: 29200 bytes left
[    2.457532] kernel: systemd-sysv-ge (88) used greatest stack depth: 29184 bytes left
[    2.512180] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_[1]: Finished Load Kernel Modules.
[    2.602617] systemd[1]: Mounting FUSE Control File System...
[    2.603439] systemd[1]: Starting Apply Kernel Variables...
[    2.607769] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    2.609659] systemd[1]: Finished Remount Root and Kernel File Systems.
[    2.609949] systemd[1]: Mounted FUSE Control File System.
[    2.612629] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    2.612676] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    2.613959] systemd[1]: Starting Load/Save Random Seed...
[    2.618453] systemd[1]: Starting Create System Users...
[    2.646485] systemd[1]: Finished Create System Users.
[    2.647553] systemd[1]: Starting Create Static Device Nodes in /dev...
[    2.651259] systemd[1]: Finished Apply Kernel Variables.
[    2.668380] systemd[1]: Finished Create Static Device Nodes in /dev.
[    2.669462] systemd[1]: Startingsocket â†’ /run/dbus/system_bus_socket; please update the unit file accordingly.
[    2.535790] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    2.535797] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    2.536080] systemd[1]: Created slice system-modprobe.slice.
[    2.536253] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    2.536355] systemd[1]: Created slice User and Session Slice.
[    2.536438] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    2.536497] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    2.536774] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    2.536804] systemd[1]: Reached target Local Encrypted Volumes.
[    2.536819] systemd[1]: Reached target Paths.
[    2.536828] systemd[1]: Reached target Remote File Systems.
[    2.536835]  udev Kernel Device Manager...
[    2.673714] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    2.720466] systemd[1]: Started udev Kernel Device Manager.
[    2.834394] kernel: keyboard-setup. (97) used greatest stack depth: 29120 bytes left
[    2.834786] systemd[1]: Finished Set the console keyboard layout.
[    2.835017] systemd[1]: Reached target Local File Systems (Pre).
[    2.835033] systemd[1]: Reached target Local File Systems.
[    2.835905] systemd[1]: Starting Set console font and keymap...
[    2.835970] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    2.877229] systemd[1]: Finished Set console font and keymap.
[    2.906278] systemd[1]: Finished udev Coldplug all Devices.
[    2.924951] systemd[1]: Found device /dev/ttyS0.
[    2.960026] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    3.167125] systemd[1]: Started Journal Service.
[    3.623333] kernel: random: crng init systemd[1]: Reached target Slices.
[    2.536846] systemd[1]: Reached target Swap.
[    2.536937] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    2.537077] systemd[1]: Listening on Syslog Socket.
[    2.537140] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    2.537363] systemd[1]: Listening on Journal Audit Socket.
[    2.537484] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.537633] systemd[1]: Listening on Journal Socket.
[    2.537770] systemd[1]: Listening on udev Control Socket.
[    2.537861] systemd[1]: Listening on udev Kernel Socket.
[    2.538848] systemd[1]: Mounting Huge Pages File System...
[    2.539896] systemd[1]: Mounting POSIX Message Queue File System...
[    2.540815] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    2.541713] systemd[1]: Mounting /sys/kernel/config...
[    2.543000] systemd[1]: Mounting /sys/kernel/debug...
[    2.544014] systemd[1]: Mounting Kernel Trace File System...
[    2.545221] systemd[1]: Stardone
[    4.100723] kernel: e2scrub_all (164) used greatest stack depth: 29080 bytes left
ting Journal Service...
[    2.546728] systemd[1]: Starting Set the console keyboard layout...
[    2.546757] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    2.546790] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    2.553873] systemd[1]: Starting Load Kernel Modules...
[    2.555370] systemd[1]: Starting Remount Root and Kernel File Systems...
[    2.556536] systemd[1]: Starting udev Coldplug all Devices...
[    2.557798] systemd[1]: Mounted Huge Pages File System.
[    2.558027] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    2.559934] systemd[1]: Mounted POSIX Message Queue File System.
[    2.560132] systemd[1]: Mounted /sys/kernel/config.
[    2.560340] systemd[1]: Mounted Kernel Trace File System.
[    2.565204] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    2.565743] systemd[1]: Mounted /sys/kernel/debug.
[    2.572064] systemd[1]: Finished Load Kernel Modules.
[    2.573605] systemd[1]: Mounting FUSE Control File System...
[    2.574500] systemd[1]: Starting Apply Kernel Variables...
[    2.580090] systemd[1]: Mounted FUSE Control File System.
[    2.587462] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    2.589311] systemd[1]: Finished Remount Root and Kernel File Systems.
[    2.590755] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    2.590783] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    2.591705] systemd[1]: Starting Load/Save Random Seed...
[    2.592639] systemd[1]: Starting Create System Users...
[    2.622551] systemd[1]: Finished Apply Kernel Variables.
[    2.623204] systemd[1]: Finished Create System Users.
[    2.624595] systemd[1]: Starting Create Static Device Nodes in /dev...
[    2.649269] systemd[1]: Finished Create Static Device Nodes in /dev.
[    2.650327] systemd[1]: Starting udev Kernel Device Manager...
[    2.653168] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    2.696382] systemd[1]: Started udev Kernel Device Manager.
[    2.810680] kernel: keyboard-setup. (97) used greatest stack depth: 29120 bytes left
[    2.812304] systemd[1]: Finished Set the console keyboard layout.
[    2.812521] systemd[1]: Reached target Local File Systems (Pre).
[    2.812538] systemd[1]: Reached target Local File Systems.
[    2.813807] systemd[1]: Starting Set console font and keymap...
[    2.813876] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    2.885406] systemd[1]: Finished Set console font and keymap.
[    2.893993] systemd[1]: Found device /dev/ttyS0.
[    2.948720] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    2.951577] systemd[1]: Finished udev Coldplug all Devices.
[    3.125975] systemd[1]: Started Journal Service.
[    3.559203] kernel: random: dbus-daemon: uninitialized urandom read (12 bytes read)
[    3.590596] kernel: random: networkd-dispat: uninitialized urandom read (24 bytes read)
[    3.611167] kernel: random: dbus-daemon: uninitialized urandom read (12 bytes read)
[    3.642240] kernel: random: crng init done
[    4.012396] kernel: e2scrub_all (165) used greatest stack depth: 29080 bytes left
----- is restarting 0
---- dfs_name orangefs is_dfs_client 0
unlink FIFO failed: No such file or directory
[D 01/16/2023 17:42:13] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 01/16/2023 17:43:19] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 02/18/2023 14:39:31] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 02/18/2023 14:47:30] PVFS2 received server: signal 1
[E 02/18/2023 14:47:30] PVFS2 server got signal 15 (server_status_flag: 2080767)
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #7 SMP Sat Feb 18 10:18:37 CET 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.6 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 2c6e001, primary cpu clock
[    0.000001] kernel: kvm-clock: using sched offset of 219726271 cycles
[    0.000002] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000005] kernel: tsc: Detected 2593.904 MHz processor
[    0.000566] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.000569] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.000572] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.000628] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.000635] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.006040] kernel: found SMP MP-table at [mem 0x000f5b90-0x000f5b9f]
[    0.006093] kernel: Using GB pages for direct mapping
[    0.006730] kernel: ACPI: Early table checksum verification disabled
[    0.006737] kernel: ACPI: RSDP 0x00000000000F59B0 000014 (v00 BOCHS )
[    0.006744] kernel: ACPI: RSDT 0x00000000BFFE197C 000034 (v01 BOCHS  BXPC     00000001 BXPC 00000001)
[    0.006751] kernel: ACPI: FACP 0x00000000BFFE1828 000074 (v01 BOCHS  BXPC     00000001 BXPC 00000001)
[    0.006755] kernel: ACPI: DSDT 0x00000000BFFE0040 0017E8 (v01 BOCHS  BXPC     00000001 BXPC 00000001)
[    0.006758] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.006761] kernel: ACPI: APIC 0x00000000BFFE189C 000080 (v01 BOCHS  BXPC     00000001 BXPC 00000001)
[    0.006764]executor 1 finishes userspace_cover_open
before receiving handshake request
req.flags ea2
----- executor 1 do_sandbox_none at begining
----- executor 1 do_sandbox_none before fork()
 kernel: ACPI: HPET 0x00000000BFFE191C 000038 (v01 BOCHS  BXPC     00000001 BXPC 00000001)
[    0.006766] kernel: ACPI: WAET 0x00000000BFFE1954 000028 (v01 BOCHS  BXPC     00000001 BXPC 00000001)
[    0.006769] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe1828-0xbffe189b]
[    0.006770] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe1827]
[    0.006771] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.006772] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe189c-0xbffe191b]
[    0.006773] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe191c-0xbffe1953]
[    0.006773] kernel: ACPI: Reserving WAET table memory at [mem 0xbffe1954-0xbffe197b]
[    0.007117] kernel: No NUMA configuration found
[    0.007117] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.007120] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.007177] kernel: Zone ranges:
[    0.007178] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.007180] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.007181] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007183] kernel: Movable zone start for each node
[    0.007183] kernel: Early memory node ranges
[    0.007184] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.007185] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.007186] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007188] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.007639] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.007652] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.051950] kernel: On node 0, zone Normal: 32 pages in unavailable ranges
[    0.421278] kernel: kasan: KernelAddressSanitizer initialized
[    0.421696] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.421705] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.421746] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.421749] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.421751] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.421753] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.421754] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.421755] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.421759] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.421760] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.421764] kernel: TSC deadline timer available
[    0.421766] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.421792] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.421797] kernel: kvm-guest: setup PV sched yield
[    0.421810] kernel: PM: hibernation: Registered nosave membefore receive testcase: 0 1
ory: [mem 0x00000000-0x00000fff]
[    0.421812] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.421813] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.421814] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.421815] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.421816] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.421817] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.421817] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.421818] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.421820] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.421821] kernel: Booting paravirtualized kernel on KVM
[    0.421824] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.426917] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.427481] kernel: percpu: Embedded 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.427487] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.427490] kernel: pcpu-alloc: [0] 0 1 
[    0.427516] kernel: kvm-guest: setup async PF for cpu 0
[    0.427523] kernel: kvm-guest: stealtime: cpu 0, msr 26561f140
[    0.427527] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580192
[    0.427529] kernel: Policy zone: Normal
[    0.427531] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.6 quiet nokaslr
[    0.427624] kernel: Unknown command line parameters: nokaslr
[    0.431934] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.434239] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.434306] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.631924] kernel: Memory: 8872648K/10485240K available (14348K kernel code, 2403K rwdata, 3568K rodata, 1384K init, 1732K bss, 1612392K reserved, 0K cma-reserved)
[    0.632032] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.632606] kernel: rcu: Hierarchical RCU implementation.
[    0.632608] kernel: rcu:         RCU event tracing is enabled.
[    0.632608] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.632612] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.632613] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.636041] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.636279] kernel: random: get_random_bytes called from start_kernel+0x4b1/0x67a with crng_init=0
[    0.640492] kernel: Console: colour VGA+ 80x25
[    0.640541] kernel: printk: console [ttyS0] enabled
[    0.640561] kernel: ACPI: Core revision 20210730
[    0.640733] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.640828] kernel: APIC: Switch to symmetric I/O mode setup
[    0.640832] kernel: kvm-guest: setup PV IPIs
[    0.641936] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.641963] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x2563bd843df, max_idle_ns: 440795257314 ns
[    0.641971] kernel: Calibrating delay loop (skipped) preset value.. 5187.80 BogoMIPS (lpj=2593904)
[    0.641974] kernel: pid_max: default: 32768 minimum: 301
[    0.642013] kernel: LSM: Security Framework initializing
[    0.642029] kernel: SELinux:  Initializing.
[    0.642116] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.642535] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.643381] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0.643558] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.643559] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.643570] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.643575] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.643576] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.643578] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.643579] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.643580] kernel: TAA: Mitigation: TSX disabled
[    0.650413] kernel: Freeing SMP alternatives memory: 40K
[    0.650585] kernel: smpboot: CPU0: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.650716] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.651027] kernel: ... version:                2
[    0.651029] kernel: ... bit width:              48
[    0.651029] kernel: ... generic registers:      8
[    0.651030] kernel: ... value mask:             0000ffffffffffff
[    0.651032] kernel: ... max period:             00007fffffffffff
[    0.651032] kernel: ... fixed-purpose events:   3
[    0.651033] kernel: ... event mask:             00000007000000ff
[    0.651218] kernel: rcu: Hierarchical SRCU implementation.
[    0.651593] kernel: smp: Bringing up secondary CPUs ...
[    0.651707] kernel: x86: Booting SMP configuration:
[    0.651708] kernel: .... node  #0, CPUs:      #1
[    0.005721] kernel: kvm-clock: cpu 1, msr 2c6e041, secondary cpu clock
[    0.652717] kernel: kvm-guest: setup async PF for cpu 1
[    0.652717] kernel: kvm-guest: stealtime: cpu 1, msr 26571f140
[    0.652717] kernel: smp: Brought up 1 node, 2 CPUs
[    0.652717] kernel: smpboot: Max logical packages: 1
[    0.652717] kernel: smpboot: Total of 2 processors activated (10375.61 BogoMIPS)
[    0.653544] kernel: devtmpfs: initialized
[    0.654265] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.654275] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.655407] kernel: PM: RTC time: 11:26:32, date: 2023-03-25
[    0.655804] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.656341] kernel: audit: initializing netlink subsys (disabled)
[    0.657002] kernel: audit: type=2000 audit(1679743592.956:1): state=initialized audit_enabled=0 res=1
[    0.657234] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.657236] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.657259] kernel: cpuidle: using governor menu
[    0.657259] kernel: ACPI: bus type PCI registered
[    0.657446] kernel: PCI: Using configuration type 1 for base access
[    0.676011] kernel: Kprobes globally optimized
[    0.676035] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.676035] kernel: cryptomgr_test (27) used greatest stack depth: 31400 bytes left
[    0.677038] kernel: ACPI: Added _OSI(Module Device)
[    0.677040] kernel: ACPI: Added _OSI(Processor Device)
[    0.677041] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.677042] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.677047] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.677050] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.677054] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.687215] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.689341] kernel: ACPI: Interpreter enabled
[    0.689375] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.689377] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.689412] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.689838] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.702622] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.702633] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.702688] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.702824] kernel: PCI host bridge to bus 0000:00
[    0.702827] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.702830] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.702833] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.702835] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.702838] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.702840] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.703449] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    0.707666] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    0.708570] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    0.710680] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    0.711490] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    0.711493] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    0.711494] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    0.711495] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    0.712242] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    0.712567] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    0.712574] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    0.713592] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    0.714545] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    0.716509] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    0.721489] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    0.727466] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    0.727969] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    0.731410] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    0.737215] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    0.737974] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    0.739402] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    0.741453] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    0.741968] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    0.746410] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    0.747560] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    0.749329] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    0.755419] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    0.755969] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    0.756968] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    0.763282] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    0.763969] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    0.765325] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    0.773150] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    0.773578] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    0.773988] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    0.774395] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    0.774557] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    0.775268] kernel: iommu: Default domain type: Translated 
[    0.775270] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    0.775310] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    0.775310] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    0.775310] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    0.775310] kernel: vgaarb: loaded
[    0.775310] kernel: SCSI subsystem initialized
[    0.775310] kernel: libata version 3.00 loaded.
[    0.775310] kernel: ACPI: bus type USB registered
[    0.775310] kernel: usbcore: registered new interface driver usbfs
[    0.775310] kernel: usbcore: registered new interface driver hub
[    0.775310] kernel: usbcore: registered new device driver usb
[    0.775310] kernel: pps_core: LinuxPPS API ver. 1 registered
[    0.775310] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.775310] kernel: PTP clock support registered
[    0.776056] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    0.776387] kernel: NetLabel: Initializing
[    0.776387] kernel: NetLabel:  domain hash size = 128
[    0.776389] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    0.776426] kernel: NetLabel:  unlabeled traffic allowed by default
[    0.776461] kernel: PCI: Using ACPI for IRQ routing
[    0.776461] kernel: PCI: pci_cache_line_size set to 64 bytes
[    0.776461] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    0.776461] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    0.777044] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    0.777048] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    0.781028] kernel: clocksource: Switched to clocksource kvm-clock
[    0.806883] kernel: VFS: Disk quotas dquot_6.6.0
[    0.806904] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.807015] kernel: pnp: PnP ACPI init
[    0.807227] kernel: pnp 00:02: [dma 2]
[    0.808287] kernel: pnp: PnP ACPI: found 6 devices
[    0.816259] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    0.816316] kernel: NET: Registered PF_INET protocol family
[    0.816901] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    0.818930] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    0.818964] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    0.819121] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    0.819588] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    0.819643] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.819678] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.819779] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    0.820148] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    0.820157] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    0.820161] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    0.820164] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    0.820168] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    0.820464] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    0.820485] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    0.820506] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    0.820602] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    0.820697] kernel: PCI: CLS 0 bytes, default 64
[    0.820728] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    0.820731] kernel: software IO TLB: mapped [mem 0x00000000bbfe0000-0x00000000bffe0000] (64MB)
[    0.820873] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    0.820894] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x2563bd843df, max_idle_ns: 440795257314 ns
[    0.820918] kernel: clocksource: Switched to clocksource tsc
[    0.825005] kernel: Initialise system trusted keyrings
[    0.825124] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    0.831273] kernel: fuse: init (API version 7.34)
[    0.831674] kernel: orangefs_debugfs_init: called with debug mask: :none: :0:
[    0.831750] kernel: orangefs_init: module version upstream loaded
[    0.842981] kernel: Key type asymmetric registered
[    0.842983] kernel: Asymmetric key parser 'x509' registered
[    0.843052] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 250)
[    0.843054] kernel: io scheduler mq-deadline registered
[    0.843055] kernel: io scheduler kyber registered
[    0.843499] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    0.843597] kernel: ACPI: button: Power Button [PWRF]
[    1.249012] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    1.636583] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    1.638274] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    1.638411] kernel: 00:04: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    1.639444] kernel: Non-volatile memory driver v1.3
[    1.639498] kernel: Linux agpgart interface v0.103
[    1.643805] kernel: loop: module loaded
[    1.644027] kernel: ata_piix 0000:00:01.1: version 2.13
[    1.645963] kernel: scsi host0: ata_piix
[    1.646328] kernel: scsi host1: ata_piix
[    1.646424] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    1.646427] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    1.646937] kernel: libphy: Fixed MDIO Bus: probed
[    1.648638] kernel: e100: Intel(R) PRO/100 Network Driver
[    1.648640] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    1.648654] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    1.648655] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    1.648677] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    1.648678] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.648698] kernel: sky2: driver version 1.30
[    1.648883] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.648884] kernel: ehci-pci: EHCI PCI platform driver
[    1.648898] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.648903] kernel: ohci-pci: OHCI PCI platform driver
[    1.648916] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    1.649033] kernel: usbcore: registered new interface driver usblp
[    1.649052] kernel: usbcore: registered new interface driver usb-storage
[    1.649104] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    1.649687] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    1.649692] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    1.650133] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    1.650548] kernel: rtc_cmos 00:05: RTC can wake from S4
[    1.651565] kernel: rtc_cmos 00:05: registered as rtc0
[    1.651663] kernel: rtc_cmos 00:05: alarms up to one day, y3k, 242 bytes nvram, hpet irqs
[    1.652181] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    1.652186] kernel: intel_pstate: CPU model not supported
[    1.652249] kernel: hid: raw HID events driver (C) Jiri Kosina
[    1.652548] kernel: usbcore: registered new interface driver usbhid
[    1.652549] kernel: usbhid: USB HID core driver
[    1.653250] kernel: netem: version 1.3
[    1.654912] kernel: Initializing XFRM netlink socket
[    1.655208] kernel: NET: Registered PF_INET6 protocol family
[    1.655820] kernel: Segment Routing with IPv6
[    1.655835] kernel: In-situ OAM (IOAM) with IPv6
[    1.655919] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.656187] kernel: NET: Registered PF_PACKET protocol family
[    1.656239] kernel: 9pnet: Installing 9P2000 support
[    1.656269] kernel: Key type dns_resolver registered
[    1.656281] kernel: Key type ceph registered
[    1.656416] kernel: libceph: loaded (mon/osd proto 15/24)
[    1.656639] kernel: IPI shorthand broadcast: enabled
[    1.656664] kernel: sched_clock: Marking stable (1651808960, 4721027)->(1703730528, -47200541)
[    1.656874] kernel: registered taskstats version 1
[    1.656875] kernel: Loading compiled-in X.509 certificates
[    1.657818] kernel: PM:   Magic number: 15:400:429
[    1.657862] kernel: printk: console [netcon0] enabled
[    1.657864] kernel: netconsole: network logging started
[    1.801180] kernel: ata2.01: NODEV after polling detection
[    1.801760] kernel: ata1.01: NODEV after polling detection
[    1.802157] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    1.802434] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    1.802438] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    1.804072] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    1.804598] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    1.805602] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    1.806559] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    1.806587] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    1.806596] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    1.806629] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    1.811552] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    1.835650] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    1.835660] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    1.854241] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    1.854735] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    2.274135] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    2.287991] kernel: IP-Config: Guessing netmask 255.255.255.0
[    2.287994] kernel: IP-Config: Complete:
[    2.287995] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:06, ipaddr=192.168.0.6, mask=255.255.255.0, gw=255.255.255.255
[    2.288002] kernel:      host=192.168.0.6, domain=, nis-domain=(none)
[    2.288004] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    2.288107] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.288351] kernel: kworker/u4:0 (69) used greatest stack depth: 30480 bytes left
[    2.289016] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.289035] kernel: ALSA device list:
[    2.289037] kernel:   No soundcards found.
[    2.289453] kernel: md: Waiting for all devices to be available before autodetect
[    2.289455] kernel: md: If you don't use raid, use raid=noautodetect
[    2.289456] kernel: md: Autodetecting RAID arrays.
[    2.289458] kernel: md: autorun ...
[    2.289459] kernel: md: ... autorun DONE.
[    2.289885] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.289892] kernel: cfg80211: failed to load regulatory.db
[    2.303669] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    2.303717] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    2.304772] kernel: devtmpfs: mounted
[    2.305307] kernel: Freeing unused kernel image (initmem) memory: 1384K
[    2.305312] kernel: Write protecting the kernel read-only data: 20480k
[    2.306091] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    2.306283] kernel: Freeing unused kernel image (rodata/data gap) memory: 528K
[    2.306295] kernel: Run /sbin/init as init process
[    2.306296] kernel:   with arguments:
[    2.306297] kernel:     /sbin/init
[    2.306298] kernel:     nokaslr
[    2.306299] kernel:   with environment:
[    2.306300] kernel:     HOME=/
[    2.306300] kernel:     TERM=linux
[    2.353395] kernel: random: fast init done
[    2.423589] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    2.423673] systemd[1]: Detected virtualization kvm.
[    2.423680] systemd[1]: Detected architecture x86-64.
[    2.433529] systemd[1]: Set hostname to <dfs-fuzzing>.
[    2.456407] kernel: systemd-bless-b (78) used greatest stack depth: 29808 bytes left
[    2.460455] kernel: systemd-fstab-g (81) used greatest stack depth: 29584 bytes left
[    2.502933] kernel: systemd-sysv-ge (88) used greatest stack depth: 29184 bytes left
[    2.584957] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket â†’ /run/dbus/system_bus_socket; please update the unit file accordingly.
[    2.622309] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    2.622317] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    2.622574] systemd[1]: Created slice system-modprobe.slice.
[    2.622714] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    2.622804] systemd[1]: Created slice User and Session Slice.
[    2.622874] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    2.622928] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    2.623187] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    2.623213] systemd[1]: Reached target Local Encrypted Volumes.
[    2.623228] systemd[1]: Reached target Paths.
[    2.623236] systemd[1]: Reached target Remote File Systems.
[    2.623243] systemd[1]: Reached target Slices.
[    2.623252] systemd[1]: Reached target Swap.
[    2.623332] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    2.623461] systemd[1]: Listening on Syslog Socket.
[    2.623515] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    2.623709] systemd[1]: Listening on Journal Audit Socket.
[    2.623812] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.623937] systemd[1]: Listening on Journal Socket.
[    2.624068] systemd[1]: Listening on udev Control Socket.
[    2.624150] systemd[1]: Listening on udev Kernel Socket.
[    2.625540] systemd[1]: Mounting Huge Pages File System...
[    2.626452] systemd[1]: Mounting POSIX Message Queue File System...
[    2.627259] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    2.628023] systemd[1]: Mounting /sys/kernel/config...
[    2.628776] systemd[1]: Mounting /sys/kernel/debug...
[    2.629638] systemd[1]: Mounting Kernel Trace File System...
[    2.631286] systemd[1]: Starting Journal Service...
[    2.632098] systemd[1]: Starting Set the console keyboard layout...
[    2.632128] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    2.632168] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    2.639938] systemd[1]: Starting Load Kernel Modules...
[    2.642532] systemd[1]: Starting Remount Root and Kernel File Systems...
[    2.645644] systemd[1]: Starting udev Coldplug all Devices...
[    2.656033] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    2.658195] systemd[1]: Finished Load Kernel Modules.
[    2.661899] systemd[1]: Mounting FUSE Control File System...
[    2.664644] systemd[1]: Starting Apply Kernel Variables...
[    2.665700] systemd[1]: Mounted Huge Pages File System.
[    2.665936] systemd[1]: Mounted POSIX Message Queue File System.
[    2.666392] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    2.666603] systemd[1]: Mounted /sys/kernel/config.
[    2.675547] systemd[1]: Mounted /sys/kernel/debug.
[    2.675820] systemd[1]: Mounted Kernel Trace File System.
[    2.676028] systemd[1]: Mounted FUSE Control File System.
[    2.680448] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    2.680947] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    2.684023] systemd[1]: Finished Remount Root and Kernel File Systems.
[    2.686881] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    2.686915] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    2.688792] systemd[1]: Starting Load/Save Random Seed...
[    2.691165] systemd[1]: Starting Create System Users...
[    2.711982] systemd[1]: Finished Apply Kernel Variables.
[    2.715492] kernel: systemd-sysuser (111) used greatest stack depth: 29056 bytes left
[    2.717036] systemd[1]: Finished Create System Users.
[    2.718116] systemd[1]: Starting Create Static Device Nodes in /dev...
[    2.758193] systemd[1]: Finished Create Static Device Nodes in /dev.
[    2.759593] systemd[1]: Starting udev Kernel Device Manager...
[    2.783863] systemd[1]: Finished Set the console keyboard layout.
[    2.784107] systemd[1]: Reached target Local File Systems (Pre).
[    2.784124] systemd[1]: Reached target Local File Systems.
[    2.785022] systemd[1]: Starting Set console font and keymap...
[    2.785094] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    2.805600] systemd[1]: Finished Set console font and keymap.
[    2.811396] systemd[1]: Started udev Kernel Device Manager.
[    2.879226] systemd[1]: Finished udev Coldplug all Devices.
[    2.965380] systemd[1]: Found device /dev/ttyS0.
[    3.000122] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    3.231029] systemd[1]: Started Journal Service.
[    3.423110] kernel: random: crng init done
---- executor 0 config DFS: 3

---- executor 0 config DFS: call atexit in pid 368 tid 368

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 368, pid 368, value 1

---- executor 0 config DFS: [S 03/25/2023 11:26:45] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 1, thread 369, pid 368, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 2, thread 370, pid 368, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 2, thread 370, pid 368

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffb265e000 shmid 2

-----executor 0 collect shmids 2
----- directly resend shmid 2
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 1, thread 369, pid 368

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffb26a7000 shmid 1

-----executor 0 collect shmids 1
----- directly resend shmid 1
---- executor 0 config DFS: [D 03/25/2023 11:26:45] PVFS2 Server: storage space created.

---- executor 0 config DFS: [D 03/25/2023 11:26:45] Exiting.

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 0, thread 368, pid 368

-----executor 0 collect shmids 0
----- directly resend shmid 0
---- executor 0 config DFS: call atexit in pid 371 tid 371

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 3, thread 371, pid 371, value 1

---- executor 0 config DFS: [S 03/25/2023 11:26:45] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
---- executor 0 config DFS: Warning: Permanently added '192.168.0.6' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: call atexit in pid 378 tid 378

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 378, pid 378, value 1

---- executor 0 config DFS: [S 03/25/2023 11:26:46] PVFS2 Server on node 192.168.0.6 version 2.9.7-orangefs-REV-65ab0d2 starting...

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 1, thread 380, pid 378, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 2, thread 379, pid 378, value 1

-----executor 1 collect shmids 1
----- directly resend shmid 1
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 1, thread 380, pid 378

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffb269e000 shmid 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 2, thread 379, pid 378

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffb265e000 shmid 2

-----executor 1 collect shmids 2
----- directly resend shmid 2
---- executor 0 config DFS: [D 03/25/2023 11:26:46] PVFS2 Server: storage space created.

---- executor 0 config DFS: [D 03/25/2023 11:26:46] Exiting.

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 0, thread 378, pid 378

-----executor 1 collect shmids 0
----- directly resend shmid 0
---- executor 0 config DFS: call atexit in pid 381 tid 381

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 3, thread 381, pid 381, value 1

---- executor 0 config DFS: [S 03/25/2023 11:26:46] PVFS2 Server on node 192.168.0.6 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 3
----- directly resend shmid 3
---- executor 0 config DFS: Warning: Permanently added '192.168.0.7' (ECDSA) to the list of known hosts.

[D 03/25/2023 11:26:45] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[D 03/25/2023 11:26:46] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 11:26:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
---- executor 0 config DFS: call atexit in pid 377 tid 377

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 377, pid 377, value 1

---- executor 0 config DFS: [S 03/25/2023 11:26:47] PVFS2 Server on node 192.168.0.7 version 2.9.7-orangefs-REV-65ab0d2 starting...

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 1, thread 378, pid 377, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 2, thread 379, pid 377, value 1

-----executor 2 collect shmids 2
----- directly resend shmid 2
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 2, thread 379, pid 377

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffb265e000 shmid 2

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 1, thread 378, pid 377

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffb26a7000 shmid 1

-----executor 2 collect shmids 1
----- directly resend shmid 1
---- executor 0 config DFS: [D 03/25/2023 11:26:47] PVFS2 Server: storage space created.

---- executor 0 config DFS: [D 03/25/2023 11:26:47] Exiting.

-----executor 2 collect shmids 0
----- directly resend shmid 0
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 0, thread 377, pid 377

---- executor 0 config DFS: call atexit in pid 380 tid 380

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 3, thread 380, pid 380, value 1

---- executor 0 config DFS: [S 03/25/2023 11:26:47] PVFS2 Server on node 192.168.0.7 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 3
----- directly resend shmid 3
---- executor 0 config DFS: Warning: Permanently added '192.168.0.8' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

[D 03/25/2023 11:26:47] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
req.flags ea2
----- executor 0 do_sandbox_none at begining
----- executor 0 do_sandbox_none before fork()
2023/03/25 12:26:48 ----- before executor 0 handshake recv reply &{0}
2023/03/25 12:26:48 ----- after executor 0 handshake recv reply &{195948557} at 16
2023/03/25 12:26:48 ----- handshake 0 finished <- nil
2023/03/25 12:26:48 ----- before executor 1 handshake recv reply &{195948557}
2023/03/25 12:26:48 ----- after executor 1 handshake recv reply &{195948557} at 16
2023/03/25 12:26:48 ----- handshake 1 finished <- nil
2023/03/25 12:26:48 ----- before executor 2 handshake recv reply &{195948557}
2023/03/25 12:26:48 ----- after executor 2 handshake recv reply &{195948557} at 16
2023/03/25 12:26:48 ----- handshake 2 finished <- nil
2023/03/25 12:26:48 ----- before executor 3 handshake recv reply &{195948557}
2023/03/25 12:26:48 ----- after executor 3 handshake recv reply &{195948557} at 16
2023/03/25 12:26:48 ----- handshake 3 finished <- nil
2023/03/25 12:26:48 ----- handshake timeout
2023/03/25 12:26:48 ----- handshake return
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4752
-----finish removing dir
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
mkdir time 1228
executor 3 create dir /root/orangefs-client/dfs-0-0 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-0
receive_execute: 1, 1229
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2357, 1233
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 2355, 1232
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 2303, 1229
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 365, write pid:366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 2, 0
execute_one time: 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8200, flag collect 0
2023/03/25 12:26:49 for select break: 1
----- executor 2 signal number : 1417
----- executor 2 executes write_coverage_signal cov->size 3056, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 984, flag collect 0
2023/03/25 12:26:49 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 289
----- executor 2 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 2 signal number : 74
executor 2 server cover_cnt 4 output_pos_value 2109
----- executor 0 signal number : 641
----- executor 0 executes write_coverage_signal cov->size 412, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 1476, flag collect 0
----- executor 0 signal number : 219
2023/03/25 12:26:49 for select break: 1
2023/03/25 12:26:49 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 3 output_pos_value 1015
time breakdown 3: 3590, 8, 0
before receive testcase: 0 1
2023/03/25 12:26:49 for select break: 1
2023/03/25 12:26:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 3588, 10, 0
before receive testcase: 0 0
2023/03/25 12:26:49 for select break: 1
2023/03/25 12:26:49 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:26:49 wg wait finish
2023/03/25 12:26:49 ------ all executors finish execution
2023/03/25 12:26:49 exec time: 1243
2023/03/25 12:26:49 ----- PS len: 4
2023/03/25 12:26:49 [CLIENT] executor 3 has 20 replies
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 1230, 14, 0
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:49 [SERVER] executor 2 has 4 replies
2023/03/25 12:26:49 ------- fuzzer executor 2 receive 1417 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 2 receive 289 signal and 0 cover from userspace component
2023/03/25 12:26:49 [SERVER] executor 0 has 3 replies
before receive testcase: 0 0
2023/03/25 12:26:49 ------- fuzzer executor 0 receive 641 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 2 receive 74 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 0 receive 219 signal and 0 cover from userspace component
2023/03/25 12:26:49 [SERVER] executor 1 has 3 replies
2023/03/25 12:26:49 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 1 receive 143 signal and 0 cover from userspace component
2023/03/25 12:26:49 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/25 12:26:49 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:26:49 ----- no new client coverage: false, true
2023/03/25 12:26:49 ----- enqueue testcases with server coveraged
2023/03/25 12:26:49 prog length: 20
2023/03/25 12:26:49 HasCrashFail:false HasNetFail:false
12:26:49 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$setownex(r0, 0xf, &(0x7f0000000000)={0x1})
r1 = open(&(0x7f0000000040)='./file0\x00', 0x3bf03b7d37c0bcf6, 0x40)
write$binfmt_elf64(r1, &(0x7f0000000080)={{0x7f, 0x45, 0x4c, 0x46, 0x62, 0x0, 0x81, 0x1, 0x1, 0x2, 0x3e, 0xffff, 0x2d, 0x40, 0x1b8, 0x7ff, 0x101, 0x38, 0x2, 0x9, 0x6, 0xffff}, [{0x7, 0x1, 0x100000001, 0x8001, 0xea7, 0x8, 0x80, 0x1}], "3a528bfef36c9304b5c0d65ade25fad762235c0fe38d6e4b309912531f7de81bac45d1d329659083c41689015f997552b0e374e86ef2da6a1a753f91a8add58aff5f31d6cde8eea4790d00bbaa959d03d24d76c33ca9be8ffe66935b7d4bcf2ca03faaa81a9276608248f98ca014cbd70bb17e82b6b4b48adb86071c6092e95b3959feeaa6d721082b74d4b559257e0afcb303abbbc7da84b34f0c88216fff8a72b12238c0c0e40efb83d2778a3be975f75cb60720e4de2b5022bf44b06aec7357ebf24407a25a4bbcbd9a01b338929873956eaf684a51fde3642fe556d2905c89132bc2", ['\x00']}, 0x25c)
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@random={'osx.', '\x00'})
r2 = dup2(r0, r1)
r3 = fcntl$dupfd(0xffffffffffffffff, 0x406, r2)
fcntl$setpipe(r3, 0x407, 0x7)
fremovexattr(r1, &(0x7f0000000340)=@known='trusted.syz\x00')
fstat(0xffffffffffffffff, &(0x7f0000000380))
fsetxattr$security_smack_transmute(r1, &(0x7f0000000400), &(0x7f0000000440), 0x4, 0x2)
r4 = dup(r1)
r5 = openat(r1, &(0x7f0000000480)='./file1\x00', 0x200100, 0x102)
linkat(r5, &(0x7f00000004c0)='./file0\x00', r4, &(0x7f0000000500)='./file0/file0\x00', 0x1800)
fcntl$setpipe(r1, 0x407, 0x1)
ftruncate(r5, 0x4)
r6 = fcntl$getown(0xffffffffffffffff, 0x9)
fcntl$setownex(0xffffffffffffffff, 0xf, &(0x7f0000000540)={0x0, r6})
r7 = open(&(0x7f0000000580)='./file1\x00', 0x10002, 0x21)
fsetxattr$smack_xattr_label(r7, &(0x7f00000005c0)='security.SMACK64EXEC\x00', &(0x7f0000000600)={'(.{'}, 0x4, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4752
remove dir: /root/orangefs-client/dfs-0-0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 1 signal number : 143
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
executor 1 server cover_cnt 3 output_pos_value 208
time breakdown 1: 3532, 14, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 685
-----finish removing dir
mkdir time 346
executor 3 create dir /root/orangefs-client/dfs-0-1 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-1
receive_execute: 2, 1031
receive_execute: 1, 1031
receive_execute: 2, 1032
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 1031
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 368, write pid:370
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 1
----- executor 0 cover number : 12, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1236, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4184, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 2 cover number : 12, signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1236, flag collect 1
----- executor 2 cover number : 116, signal number : 143
----- executor 2 executes write_coverage_signal cov->size 378, flag collect 1
----- executor 2 cover number : 41, signal number : 44
----- executor 0 cover number : 116, signal number : 143
----- executor 0 executes write_coverage_signal cov->size 324, flag collect 1
----- executor 0 cover number : 41, signal number : 44
executor 0 server cover_cnt 3 output_pos_value 379
executor 2 server cover_cnt 3 output_pos_value 379
----- executor 1 cover number : 1199, signal number : 1410
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 1032, 71, 0
before receive testcase: 0 0
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 1032, 71, 0
----- executor 3 write_call_output, size 7057, pid 368, write pid:369
----- executor 3 executes write_coverage_signal cov->size 7057, flag collect 1
----- executor 3 cover number : 1760, signal number : 2074
----- completed 20
executor 3, execute_one inner time: 0, 54, 13
execute_one time: 0, 68
time breakdown 3: 1034, 69, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 1 cover number : 577, signal number : 643
----- executor 1 executes write_coverage_signal cov->size 1831, flag collect 1
----- executor 1 cover number : 284, signal number : 290
----- executor 1 executes write_coverage_signal cov->size 8267, flag collect 1
----- executor 1 cover number : 206, signal number : 156
executor 1 server cover_cnt 4 output_pos_value 4778
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:26:50 wg wait finish
2023/03/25 12:26:50 ------ all executors finish execution
2023/03/25 12:26:50 exec time: 1110
2023/03/25 12:26:50 ----- PS len: 4
2023/03/25 12:26:50 [CLIENT] executor 3 has 20 replies
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 2074 signal and 1760 cover from executor 3
2023/03/25 12:26:50 [SERVER] executor 0 has 3 replies
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 13 signal and 12 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 143 signal and 116 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 44 signal and 41 cover from userspace component
2023/03/25 12:26:50 [SERVER] executor 2 has 3 replies
2023/03/25 12:26:50 ------- fuzzer executor 2 receive 13 signal and 12 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 2 receive 143 signal and 116 cover from userspace component
2023/03/25 12:26:50 [SERVER] executor 1 has 4 replies
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 1410 signal and 1199 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 2 receive 44 signal and 41 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 643 signal and 577 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 290 signal and 284 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 156 signal and 206 cover from userspace component
2023/03/25 12:26:50 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:26:50 ----- triage return due to empty signal extra
2023/03/25 12:26:50 mutate testcase with failures
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- mutateArg()
2023/03/25 12:26:50 ----- mutateArg()
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- mutateArg()
2023/03/25 12:26:50 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:26:50 disable threaded and collide
2023/03/25 12:26:50 prog length: 6
2023/03/25 12:26:50 prog length: 22
2023/03/25 12:26:50 HasCrashFail:true HasNetFail:false
12:26:50 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r4, 0xffffffffffffffff)
syz_failure_sync(0x1, 0x3)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r1, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 3: prog_data_offset 1576, prog_size 4832
remove dir: /root/orangefs-client/dfs-0-1
time breakdown 1: 1033, 78, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 227
-----finish removing dir
mkdir time 30
executor 3 create dir /root/orangefs-client/dfs-0-2 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2
receive_execute: 2, 257
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 10, 257
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 257
receive_execute: 11, 258
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5843, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 5843, flag collect 0
----- executor 3 signal number : 2059
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 399 tid 399

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 399, pid 399, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:26:50] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 6
----- directly resend shmid 6
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 371, write pid:371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 38, 0
execute_one time: 1, 38
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 269, 40, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4099, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1321, flag collect 0
----- executor 2 signal number : 349
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 1408
----- executor 0 executes write_coverage_signal cov->size 1564, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1716, flag collect 0
----- executor 0 signal number : 394
----- executor 0 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 0 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 416
executor 0 server cover_cnt 4 output_pos_value 2206
2023/03/25 12:26:50 for select break: 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 39, 0
execute_one time: 1, 39
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 747
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 18
----- executor 1 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 1 signal number : 145
----- executor 1 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 1 signal number : 27
executor 1 server cover_cnt 5 output_pos_value 1852
2023/03/25 12:26:50 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:26:50 for select break: 1
2023/03/25 12:26:50 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:26:50 wg wait finish
2023/03/25 12:26:50 ------ all executors finish execution
2023/03/25 12:26:50 exec time: 300
2023/03/25 12:26:50 ----- PS len: 4
2023/03/25 12:26:50 [SERVER] executor 0 has 4 replies
2023/03/25 12:26:50 [SERVER] executor 1 has 5 replies
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 1408 signal and 0 cover from userspace component
2023/03/25 12:26:50 [SERVER] executor 2 has 3 replies
2023/03/25 12:26:50 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 2 receive 349 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 394 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:26:50 [CLIENT] executor 3 has 22 replies
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 747 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 18 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 145 signal and 0 cover from userspace component
2023/03/25 12:26:50 ------- fuzzer executor 1 receive 27 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:26:50 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 267, 43, 0
before receive testcase: 0 0
2023/03/25 12:26:50 ----- no new client coverage: false, true
2023/03/25 12:26:50 mutate testcase with failures
2023/03/25 12:26:50 ----- insertCall()
2023/03/25 12:26:50 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/25 12:26:50 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:26:50 disable threaded and collide
2023/03/25 12:26:50 prog length: 6
2023/03/25 12:26:50 prog length: 7
2023/03/25 12:26:50 HasCrashFail:true HasNetFail:false
12:26:50 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
open(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x0)
r1 = dup(r0)
pread64(r1, &(0x7f0000000000)=""/229, 0xe5, 0xffffffff)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:faillog_t:s0\x00', 0x1f, 0x5)
---

end of program
time breakdown 0: 266, 43, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 944
remove dir: /root/orangefs-client/dfs-0-2
time breakdown 1: 259, 43, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 15
-----finish removing dir
[E 03/25/2023 11:26:50] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:26:50] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:26:50] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:26:50] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:26:50] Error: Could not initialize server subsystems
[E 03/25/2023 11:26:50] Error: Could not initialize server; aborting.
receive_execute: 2, 2045
receive_execute: 2, 2045
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
receive_execute: 3, 2045
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2029
executor 3 create dir /root/orangefs-client/dfs-0-3 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-3
receive_execute: 4, 2045
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 5847, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 5847, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 448 tid 448

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 448, pid 448, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:26:52] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 29, 0
execute_one time: 1, 29
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 3
----- directly resend shmid 3
[E 03/25/2023 11:26:52] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:26:52] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 761
----- completed 4
execute_call 0, 2017, 0, 2
execute_one loop: 0, 0, 2019
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 372, write pid:372
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2054, 1
execute_one time: 0, 2055
2023/03/25 12:26:54 for select break: 1
2023/03/25 12:26:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2049, 2056, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 899
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 231
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:26:54 for select break: 1
2023/03/25 12:26:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2048, 2057, 0
----- executor 0 signal number : 746
----- executor 0 executes write_coverage_signal cov->size 13304, flag collect 0
----- executor 0 signal number : 86
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 8 output_pos_value 2149
before receive testcase: 0 0
time breakdown 0: 2047, 2060, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16357, flag collect 0
before receive testcase: 0 0
2023/03/25 12:26:54 for select break: 1
2023/03/25 12:26:54 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 2402
----- executor 2 executes write_coverage_signal cov->size 10820, flag collect 0
----- executor 2 signal number : 940
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 11711, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3822
2023/03/25 12:26:54 for select break: 1
2023/03/25 12:26:54 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:26:54 wg wait finish
2023/03/25 12:26:54 ------ all executors finish execution
2023/03/25 12:26:54 exec time: 4116
2023/03/25 12:26:54 ----- PS len: 4
2023/03/25 12:26:54 [CLIENT] executor 3 has 7 replies
2023/03/25 12:26:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:54 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:26:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:54 fuzzer receive 761 signal and 0 cover from executor 3
2023/03/25 12:26:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:26:54 [SERVER] executor 0 has 8 replies
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 899 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 231 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 746 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 86 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
time breakdown 2: 2047, 2071, 0
before receive testcase: 0 1
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 12:26:54 [SERVER] executor 1 has 0 replies
2023/03/25 12:26:54 [SERVER] executor 2 has 4 replies
2023/03/25 12:26:54 ------- fuzzer executor 2 receive 2402 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 2 receive 940 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/25 12:26:54 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/25 12:26:54 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:26:54 ----- no new client coverage: false, true
2023/03/25 12:26:54 mutate testcase with failures
2023/03/25 12:26:54 ----- mutateArg()
2023/03/25 12:26:54 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:26:54 disable threaded and collide
2023/03/25 12:26:54 prog length: 6
2023/03/25 12:26:54 prog length: 17
2023/03/25 12:26:54 HasCrashFail:true HasNetFail:false
12:26:54 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x40800, 0x40)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1f79810e9", 0x7}, {&(0x7f0000000440)}, {&(0x7f0000000540)="119a66f8e9fca5365d5bc3740504dd07ec9f97693656f80fb49f32bdd6c1875d8fe83e80b29e372b8d9c54074df48093364c0f0b75d2431e3b35e922d57dc83641319d99b0539d0750857f434a5bb519ca0b30d7aee2e63ff66827457653821da53db40298cf8f103226ff268175c8772f83ed37bdc05501b83495a0d5251e0b341f6af6cd4d54b74074b90f8595894e25dc241b96a26ce887e883e84c99c367f47857e01e7f1f3857fc62188f59cc9dc711cc3f30baba1b3ebbf1360815971b87d2608c0dd732c19ad4c718ee7f8b32bd9b7c5424f368237b4a82186ba158113723faf45649f743817f108c1f", 0xed}], 0x3, 0xf7, 0x7)
r2 = dup(r0)
fstat(r2, &(0x7f0000000680))
r3 = fcntl$dupfd(r1, 0x406, r1)
fsetxattr$security_smack_transmute(r3, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r4 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f00000000c0))
pwritev(r4, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xfffffee6}], 0x3, 0x6, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r3, &(0x7f0000000380), &(0x7f0000000480)=ANY=[@ANYRES16=r3], 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3608
remove dir: /root/orangefs-client/dfs-0-3
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-4 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-4
receive_execute: 14, 70
receive_execute: 15, 71
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 70
receive_execute: 17, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5851, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 5851, flag collect 0
----- executor 3 signal number : 2059
----- completed 5
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 761
----- completed 7
execute_call 0, 20120, 0, 1
execute_one loop: 0, 0, 20121
cover_reset in execute_call
-----executor 2 collect shmids 8
----- directly resend shmid 8
----- executor 3 write_call_output, size 8293, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 8293, flag collect 0
----- executor 3 signal number : 1071
----- completed 8
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 9
----- directly resend shmid 9
-----executor 2 collect shmids 10
----- directly resend shmid 10
-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 14
----- directly resend shmid 14
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 10110, 0, 0
execute_one loop: 0, 0, 10110
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30247, 0, 0
execute_one loop: 0, 0, 30248
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 415 tid 415

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 415, pid 415, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:27:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 30280, 0
execute_one time: 0, 30280
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 373, write pid:373
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 30279, 0
execute_one time: 1, 30279
2023/03/25 12:27:25 for select break: 1
2023/03/25 12:27:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 88, 30281, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 22288, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 282
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2006
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 46
----- executor 2 signal number : 336
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 497
2023/03/25 12:27:25 for select break: 1
2023/03/25 12:27:25 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 292
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:27:25 for select break: 1
2023/03/25 12:27:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 84, 30284, 0
before receive testcase: 0 0
----- executor 2 signal number : 77
----- executor 2 executes write_coverage_signal cov->size 1923, flag collect 0
----- executor 2 signal number : 618
----- executor 2 executes write_coverage_signal cov->size 1911, flag collect 0
----- executor 2 signal number : 6
----- executor 2 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 2 signal number : 0
executor 2 server cover_cnt 11 output_pos_value 3371
before receive testcase: 0 0
2023/03/25 12:27:25 for select break: 1
2023/03/25 12:27:25 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:27:25 wg wait finish
2023/03/25 12:27:25 ------ all executors finish execution
2023/03/25 12:27:25 exec time: 30358
2023/03/25 12:27:25 ----- PS len: 4
2023/03/25 12:27:25 [CLIENT] executor 3 has 17 replies
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 761 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 1071 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:25 [SERVER] executor 0 has 4 replies
2023/03/25 12:27:25 ------- fuzzer executor 0 receive 282 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
2023/03/25 12:27:25 [SERVER] executor 1 has 1 replies
2023/03/25 12:27:25 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:27:25 [SERVER] executor 2 has 11 replies
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 2006 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 336 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 292 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 618 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 12:27:25 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 12:27:25 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 73, 30286, 0
before receive testcase: 0 1
2023/03/25 12:27:25 ----- no new client coverage: false, true
2023/03/25 12:27:25 mutate testcase with failures
2023/03/25 12:27:25 ----- insertCall()
2023/03/25 12:27:25 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/25 12:27:25 ----- mutateArg()
2023/03/25 12:27:25 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:27:25 disable threaded and collide
2023/03/25 12:27:25 prog length: 6
2023/03/25 12:27:25 prog length: 18
2023/03/25 12:27:25 HasCrashFail:true HasNetFail:false
12:27:25 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
lsetxattr$security_ima(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0), &(0x7f0000000900)=@ng={0x4, 0x5, "2cfa7ad2bd9aab032448469a4ed5a5"}, 0x11, 0x1)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4344
remove dir: /root/orangefs-client/dfs-0-4
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 86, 30283, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:27:25] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[D 03/25/2023 11:27:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:27:25] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:27:25] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:27:25] Error: Could not initialize server subsystems
[E 03/25/2023 11:27:25] Error: Could not initialize server; aborting.
[E 03/25/2023 11:27:27] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:29] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:31] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:33] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:35] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:35] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 11:27:35] *** Out of retries.
[E 03/25/2023 11:27:35] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 11:27:35] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 11:27:35] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:37] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:39] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:41] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:43] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:45] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:45] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 11:27:45] *** Out of retries.
[E 03/25/2023 11:27:45] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 11:27:45] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 11:27:45] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:47] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:49] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:51] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:53] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
lstat(/root/orangefs-client/dfs-0-4/file0) failedremove dir time 30092
-----finish removing dir
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-5 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-5
receive_execute: 7, 30115
receive_execute: 5, 30117
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 30118
receive_execute: 3, 30118
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6165, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 6165, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6165, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 6165, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5923, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 5923, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 68, 0, 0
execute_one loop: 0, 0, 68
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1442, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 467 tid 467

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 467, pid 467, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:27:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 375, write pid:375
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 0, 90, 0
execute_one time: 0, 90
executor 0, execute_one inner time: 0, 90, 0
execute_one time: 1, 90
2023/03/25 12:27:55 for select break: 1
2023/03/25 12:27:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 30124, 93, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1443
----- executor 2 executes write_coverage_signal cov->size 17186, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 5870, flag collect 0
----- executor 2 signal number : 391
----- executor 2 executes write_coverage_signal cov->size 4551, flag collect 0
2023/03/25 12:27:55 for select break: 1
2023/03/25 12:27:55 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 75
time breakdown 1: 30122, 95, 0
executor 2 server cover_cnt 4 output_pos_value 2238
-----executor 0 collect shmids 1
----- directly resend shmid 1
2023/03/25 12:27:55 for select break: 1
2023/03/25 12:27:55 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 30121, 95, 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
before receive testcase: 0 0
----- executor 0 signal number : 1266
----- executor 0 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 1699, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 450, flag collect 0
----- executor 0 signal number : 3
executor 0 server cover_cnt 7 output_pos_value 1501
2023/03/25 12:27:55 for select break: 1
2023/03/25 12:27:55 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:27:55 wg wait finish
2023/03/25 12:27:55 ------ all executors finish execution
2023/03/25 12:27:55 exec time: 30216
2023/03/25 12:27:55 ----- PS len: 4
2023/03/25 12:27:55 [CLIENT] executor 3 has 18 replies
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:27:55 [SERVER] executor 0 has 7 replies
2023/03/25 12:27:55 [SERVER] executor 1 has 0 replies
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 12:27:55 [SERVER] executor 2 has 4 replies
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 2 receive 1443 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 1266 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/03/25 12:27:55 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 12:27:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:27:55 ----- no new client coverage: false, true
2023/03/25 12:27:55 mutate testcase with failures
2023/03/25 12:27:55 ----- insertCall()
2023/03/25 12:27:55 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 12:27:55 ----- insertCall()
2023/03/25 12:27:55 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 12:27:55 ----- insertCall()
2023/03/25 12:27:55 ----- generateCall 3662 setxattr setxattr
2023/03/25 12:27:55 ----- insertCall()
2023/03/25 12:27:55 ----- mutateArg()
2023/03/25 12:27:55 ----- mutateArg()
2023/03/25 12:27:55 ----- insertCall()
2023/03/25 12:27:55 ----- mutateArg()
2023/03/25 12:27:55 ----- insertCall()
2023/03/25 12:27:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:27:55 disable threaded and collide
2023/03/25 12:27:55 prog length: 6
2023/03/25 12:27:55 prog length: 20
2023/03/25 12:27:55 HasCrashFail:true HasNetFail:false
12:27:55 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
setxattr(&(0x7f00000009c0)='./file0\x00', &(0x7f0000000a00)=@random={'user.', 'security.ima\x00'}, &(0x7f0000000a40)='/\x00', 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000000a80)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a7820000d003966a54aa318c4b9551c5584bce0db91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b02f0db81c8d191e0ba1a0f9a70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"], 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f0000000b00)=ANY=[@ANYBLOB="2c3a2300eddfe94f9cb00db5f32d5e366988a2496a960e3adfd703f62389106a5bb5b9ce13fda132b6c9666ddfdb528ee399ad056cd749846ad2aa5d148161f3ae18310cb5478135e4c14f9eade385dce39bbc681e647007ce2289c3a9e8d230980ed817b1372433a3e214c95cb42e143494a7d061db34769922e22d2095290e8f968ac8fa029298c9bcacedcad7fa72855281eb156eb5e4bfb965f47f4e875af0ebb292003d4fb5799f4c70ba629c0aa3399a30ca257d"], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
lsetxattr$trusted_overlay_origin(&(0x7f0000000880)='./file0/file0\x00', &(0x7f00000008c0), &(0x7f0000000900), 0x2, 0x1)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000300), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f00000002c0)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000940), &(0x7f0000000980)='./file0\x00', 0x8, 0x0)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4768
remove dir: /root/orangefs-client/dfs-0-5
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 30122, 98, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[E 03/25/2023 11:27:55] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:27:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:27:55] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 11:27:55] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 11:27:55] *** Out of retries.
[E 03/25/2023 11:27:55] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 11:27:55] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
remove dir time 2028
-----finish removing dir
receive_execute: 2, 6060
mkdir time 4032
executor 3 create dir /root/orangefs-client/dfs-0-6 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 2, 6061
receive_execute: 6, 6061
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 6060
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- executor 3 write_call_output, size 5931, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 5931, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5931, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 5931, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5931, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 5931, flag collect 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12255, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1415
----- executor 0 executes write_coverage_signal cov->size 4584, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2094
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:28:01] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10037, 0, 0
execute_one loop: 0, 0, 10037
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 416
----- completed 6
execute_call 0, 10040, 0, 0
execute_one loop: 0, 0, 10040
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10044, 0, 0
execute_one loop: 0, 0, 10044
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 17
----- completed 9
execute_call 0, 10038, 0, 2
execute_one loop: 0, 0, 10040
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 50211, 0, 0
execute_one loop: 0, 0, 50211
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 10050, 0, 0
execute_one loop: 0, 0, 10050
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 483 tid 483

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 483, pid 483, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:28:51] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 50250, 0
execute_one time: 1, 50250
[D 03/25/2023 11:28:51] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 6035, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 6035, flag collect 0
----- executor 3 signal number : 13
----- completed 14
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6035, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 6035, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6035, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 6035, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 52271, 0
execute_one time: 0, 52271
2023/03/25 12:28:53 for select break: 1
2023/03/25 12:28:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:28:53 for select break: 1
2023/03/25 12:28:53 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 6063, 52273, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15339, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2692
time breakdown 3: 6067, 52272, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 495
2023/03/25 12:28:53 for select break: 1
2023/03/25 12:28:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6062, 52276, 0
before receive testcase: 0 0
2023/03/25 12:28:53 for select break: 1
2023/03/25 12:28:53 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:28:53 wg wait finish
2023/03/25 12:28:53 ------ all executors finish execution
2023/03/25 12:28:53 exec time: 58337
2023/03/25 12:28:53 ----- PS len: 4
2023/03/25 12:28:53 [CLIENT] executor 3 has 20 replies
2023/03/25 12:28:53 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 416 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:53 [SERVER] executor 0 has 9 replies
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 1415 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:28:53 [SERVER] executor 1 has 0 replies
2023/03/25 12:28:53 [SERVER] executor 2 has 4 replies
2023/03/25 12:28:53 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 12:28:53 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
time breakdown 2: 6064, 52276, 0
before receive testcase: 0 0
2023/03/25 12:28:53 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:28:53 ----- no new client coverage: false, true
2023/03/25 12:28:53 mutate testcase with failures
2023/03/25 12:28:53 ----- splice()
2023/03/25 12:28:53 ----- insertCall()
2023/03/25 12:28:53 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/25 12:28:53 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:28:53 disable threaded and collide
2023/03/25 12:28:53 prog length: 6
2023/03/25 12:28:53 prog length: 18
2023/03/25 12:28:53 HasCrashFail:true HasNetFail:false
12:28:53 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lremovexattr(&(0x7f0000000880)='./file1\x00', &(0x7f00000008c0)=@random={'user.', 'trusted.overlay.origin\x00'})
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4192
remove dir: /root/orangefs-client/dfs-0-6
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 30
-----finish removing dir
receive_execute: 2, 2064
receive_execute: 3, 2065
receive_execute: 2, 2064
mkdir time 2035
executor 3 create dir /root/orangefs-client/dfs-0-7 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 2065
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
executor 1 write_server_output
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 436 tid 436

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 436, pid 436, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:28:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 47, 0
execute_one time: 0, 47
2023/03/25 12:28:55 for select break: 1
2023/03/25 12:28:55 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1030, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 0 signal number : 44
time breakdown 3: 2070, 48, 0
executor 0 server cover_cnt 3 output_pos_value 210
2023/03/25 12:28:55 for select break: 1
2023/03/25 12:28:55 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1431
----- executor 2 executes write_coverage_signal cov->size 17008, flag collect 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 47, 0
execute_one time: 0, 47
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 0: 2067, 48, 0
before receive testcase: 0 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 4743, flag collect 0
before receive testcase: 0 1
2023/03/25 12:28:55 for select break: 1
2023/03/25 12:28:55 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 4497, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2121
2023/03/25 12:28:55 for select break: 1
2023/03/25 12:28:55 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:28:55 wg wait finish
2023/03/25 12:28:55 ------ all executors finish execution
2023/03/25 12:28:55 exec time: 2115
2023/03/25 12:28:55 ----- PS len: 4
2023/03/25 12:28:55 [CLIENT] executor 3 has 18 replies
2023/03/25 12:28:55 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 [SERVER] executor 1 has 1 replies
2023/03/25 12:28:55 [SERVER] executor 2 has 4 replies
2023/03/25 12:28:55 ------- fuzzer executor 2 receive 1431 signal and 0 cover from userspace component
2023/03/25 12:28:55 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/25 12:28:55 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 12:28:55 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 12:28:55 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
time breakdown 2: 2066, 51, 0
before receive testcase: 0 0
2023/03/25 12:28:55 [SERVER] executor 0 has 3 replies
2023/03/25 12:28:55 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 12:28:55 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 12:28:55 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:28:55 ----- no new client coverage: false, true
2023/03/25 12:28:55 mutate testcase with failures
2023/03/25 12:28:55 ----- mutateArg()
2023/03/25 12:28:55 ----- insertCall()
2023/03/25 12:28:55 ----- generateCall 3662 setxattr setxattr
2023/03/25 12:28:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:28:55 disable threaded and collide
2023/03/25 12:28:55 prog length: 6
2023/03/25 12:28:55 prog length: 10
2023/03/25 12:28:55 HasCrashFail:true HasNetFail:false
12:28:55 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f00000014c0)=@v3={0x3000000, [{0x81, 0x3}, {0x40}], 0xee01}, 0xfffffffffffffeb7, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
setxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000001500)=@known='com.apple.FinderInfo\x00', &(0x7f0000001540)='security.selinux\x00', 0x11, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2032
remove dir: /root/orangefs-client/dfs-0-7
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 2068, 49, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 17
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-8 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8
receive_execute: 3, 32
receive_execute: 2, 31
receive_execute: 3, 31
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1072, flag collect 0
----- executor 1 signal number : 114
executor 1 server cover_cnt 1 output_pos_value 118
receive_execute: 4, 32
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 450 tid 450

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 450, pid 450, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:28:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 44, 0
execute_one time: 0, 44
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6039, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 6039, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 61, 0
execute_one time: 1, 61
2023/03/25 12:28:56 for select break: 1
2023/03/25 12:28:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32633, flag collect 0
time breakdown 3: 36, 62, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1260, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 1693
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
executor 1 server cover_cnt 4 output_pos_value 1838
2023/03/25 12:28:56 for select break: 1
2023/03/25 12:28:56 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:28:56 for select break: 1
time breakdown 2: 33, 64, 0
2023/03/25 12:28:56 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:28:56 for select break: 1
2023/03/25 12:28:56 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:28:56 wg wait finish
2023/03/25 12:28:56 ------ all executors finish execution
2023/03/25 12:28:56 exec time: 96
2023/03/25 12:28:56 ----- PS len: 4
2023/03/25 12:28:56 [CLIENT] executor 3 has 10 replies
2023/03/25 12:28:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:56 [SERVER] executor 0 has 4 replies
2023/03/25 12:28:56 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 12260, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3730, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2126
time breakdown 0: 35, 64, 0
2023/03/25 12:28:56 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:28:56 [SERVER] executor 2 has 3 replies
2023/03/25 12:28:56 [SERVER] executor 1 has 4 replies
2023/03/25 12:28:56 ------- fuzzer executor 1 receive 114 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 1 receive 1693 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 12:28:56 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:28:56 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:28:56 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 12:28:56 mutate testcase with failures
2023/03/25 12:28:56 ----- insertCall()
2023/03/25 12:28:56 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 12:28:56 HasCrashFail: false, .HasNetFail: true
2023/03/25 12:28:56 disable threaded and collide
2023/03/25 12:28:56 prog length: 6
2023/03/25 12:28:56 prog length: 4
2023/03/25 12:28:56 HasCrashFail:false HasNetFail:true
12:28:56 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
setxattr$smack_xattr_label(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000080)={'+&:{\x03$\xd9,'}, 0x9, 0x2)
mkdir(&(0x7f0000000280)='./file1\x00', 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 584
remove dir: /root/orangefs-client/dfs-0-8
time breakdown 1: 35, 64, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
remove dir time 13
-----finish removing dir
receive_execute: 4, 28
receive_execute: 2, 30
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-9 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-9
receive_execute: 3, 29
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 31
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6047, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 6047, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1152
----- completed 2
execute_call 0, 27, 0, 1
execute_one loop: 0, 0, 28
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:28:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 11:28:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:28:56] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:28:56] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:28:56] Error: Could not initialize server subsystems
[E 03/25/2023 11:28:56] Error: Could not initialize server; aborting.
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
executor 3, execute_one inner time: 0, 2044, 0
execute_one time: 0, 2044
time breakdown 3: 36, 2044, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 30384, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24635, flag collect 0
----- executor 1 signal number : 2657
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2338
----- executor 2 executes write_coverage_signal cov->size 25728, flag collect 0
----- executor 2 signal number : 1116
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 1 signal number : 28
----- executor 2 signal number : 298
----- executor 2 executes write_coverage_signal cov->size 12729, flag collect 0
----- executor 2 signal number : 81
executor 1 server cover_cnt 5 output_pos_value 2964
executor 2 server cover_cnt 4 output_pos_value 3846
before receive testcase: 0 0
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 32, 2049, 0
before receive testcase: 0 1
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:28:58 wg wait finish
2023/03/25 12:28:58 ------ all executors finish execution
2023/03/25 12:28:58 exec time: 2080
2023/03/25 12:28:58 ----- PS len: 4
2023/03/25 12:28:58 [CLIENT] executor 3 has 4 replies
2023/03/25 12:28:58 [SERVER] executor 0 has 4 replies
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 2770 signal and 0 cover from userspace component
2023/03/25 12:28:58 [SERVER] executor 2 has 4 replies
2023/03/25 12:28:58 [SERVER] executor 1 has 5 replies
2023/03/25 12:28:58 ------- fuzzer executor 1 receive 2657 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 1 receive 28 signal and 0 cover from userspace component
2023/03/25 12:28:58 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 1152 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 955 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 339 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 2338 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 1116 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 298 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2045, 0
execute_one time: 0, 2046
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23613, flag collect 0
----- executor 0 signal number : 2770
----- executor 0 executes write_coverage_signal cov->size 14723, flag collect 0
----- executor 0 signal number : 955
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 339
----- executor 0 executes write_coverage_signal cov->size 12584, flag collect 0
----- executor 0 signal number : 78
executor 0 server cover_cnt 4 output_pos_value 4155
time breakdown 0: 32, 2051, 0
before receive testcase: 0 1
2023/03/25 12:28:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:28:58 ----- no new client coverage: false, true
time breakdown 2: 32, 2051, 0
before receive testcase: 0 0
2023/03/25 12:28:58 mutate testcase with failures
2023/03/25 12:28:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:28:58 disable threaded and collide
2023/03/25 12:28:58 prog length: 6
2023/03/25 12:28:58 prog length: 19
2023/03/25 12:28:58 HasCrashFail:true HasNetFail:false
12:28:58 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000002e40)=ANY=[@ANYBLOB="73797374656d2e73656375726974792e73656c696e757800f0ecec6ac2fdfc8cdf024412596508caacb6084b208352c020b41c39b0544ecaa48a582388da3e23558bc785b31f31faf677cb4e8ab11df03128a91608cd621e46d9807eaec2e427408a8ac960143118b43d4a12f75276e165c5c33732165dc1086927fc9d2bebe920fac774ce4e0fd9297fb9b1899793c0272698b74b6a7f49ab61fee387d33d591d139614c5eeb57c8396e3a2f43c487289669e058f932f27bd1c74d61d458ec011bf29245210ccf29569e5e9d61a40b4cd50668199fd6dd4931132cc715d5842784c6e65b6da0fc5340da4f4d0be135872c7995cd5346aab39458aee5f5bc356f783d89de33ee87bbb4677cd2bfb7ce63017f15fca019894d16f8bcd89bb7adeb175137ed7fc611791fb40"], &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
syz_failure_sync(0x0, 0x3)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002e00)=ANY=[@ANYBLOB="040378ec49afbf5c8fc2bf5d5ff9a0a56550e4c703048a16884efdc9284539ab85"], 0x6, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4512
remove dir: /root/orangefs-client/dfs-0-9
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 53
-----finish removing dir
receive_execute: 7, 67
receive_execute: 5, 67
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-10 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 10, 68
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 5, 67
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
executor 1 write_server_output
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 466 tid 466

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 466, pid 466, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:28:58] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 52, 0
execute_one time: 1, 52
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
executor 3, execute_one inner time: 0, 52, 0
execute_one time: 0, 52
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32532, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 74, 55, 0
before receive testcase: 0 0
2023/03/25 12:28:58 for select break: 1
2023/03/25 12:28:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:28:58 wg wait finish
2023/03/25 12:28:58 ------ all executors finish execution
2023/03/25 12:28:58 exec time: 122
2023/03/25 12:28:58 ----- PS len: 4
2023/03/25 12:28:58 [CLIENT] executor 3 has 19 replies
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 [SERVER] executor 0 has 4 replies
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 12:28:58 [SERVER] executor 2 has 3 replies
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/25 12:28:58 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:28:58 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:28:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:28:58 [SERVER] executor 1 has 1 replies
2023/03/25 12:28:58 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 12180, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3343, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2124
2023/03/25 12:28:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:28:58 ----- no new client coverage: false, true
2023/03/25 12:28:58 mutate testcase with failures
2023/03/25 12:28:58 ----- mutateArg()
time breakdown 3: 78, 53, 0
before receive testcase: 0 1
2023/03/25 12:28:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:28:58 disable threaded and collide
2023/03/25 12:28:58 prog length: 6
2023/03/25 12:28:58 prog length: 9
2023/03/25 12:28:58 HasCrashFail:true HasNetFail:false
12:28:58 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f00000014c0)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1616
remove dir: /root/orangefs-client/dfs-0-10
time breakdown 2: 72, 55, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 72, 55, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 21
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-11 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-11
receive_execute: 1, 37
receive_execute: 2, 36
receive_execute: 1, 37
receive_execute: 2, 37
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1528, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
----- executor 3 write_call_output, size 6055, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 4 output_pos_value 2081
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 509 tid 509

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 509, pid 509, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:28:58] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 1 collect shmids 3
----- directly resend shmid 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 29, 0
execute_one time: 0, 29
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:28:58] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:28:58] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 11:28:58] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:28:58] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:28:58] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:28:58] Error: Could not initialize server subsystems
[E 03/25/2023 11:28:58] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2026, 0, 0
execute_one loop: 0, 0, 2026
cover_reset in execute_call
----- executor 3 write_call_output, size 6059, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6059, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6059, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 6059, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 2077, 0
execute_one time: 0, 2077
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 39, 2078, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13656, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1486, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 2318, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1929
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 10424, flag collect 0
----- executor 2 signal number : 46
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 928
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 657
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2242
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 38, 2080, 0
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:29:00 wg wait finish
2023/03/25 12:29:00 ------ all executors finish execution
2023/03/25 12:29:00 exec time: 2118
2023/03/25 12:29:00 ----- PS len: 4
2023/03/25 12:29:00 [CLIENT] executor 3 has 9 replies
2023/03/25 12:29:00 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:00 [SERVER] executor 0 has 9 replies
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 928 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 12:29:00 [SERVER] executor 1 has 5 replies
2023/03/25 12:29:00 ------- fuzzer executor 1 receive 1929 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 12:29:00 [SERVER] executor 2 has 4 replies
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:29:00 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:29:00 ----- no new client coverage: false, true
2023/03/25 12:29:00 mutate testcase with failures
2023/03/25 12:29:00 ----- insertCall()
2023/03/25 12:29:00 ----- insertCall()
2023/03/25 12:29:00 ----- generateCall 2346 listxattr listxattr
2023/03/25 12:29:00 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:29:00 disable threaded and collide
2023/03/25 12:29:00 prog length: 6
2023/03/25 12:29:00 prog length: 4
2023/03/25 12:29:00 HasCrashFail:true HasNetFail:false
12:29:00 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=""/4096, 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 472
remove dir: /root/orangefs-client/dfs-0-11
time breakdown 1: 38, 2081, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 27
----- executor 0 executes write_coverage_signal cov->size 14675, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 3210
time breakdown 0: 38, 2080, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 25
-----finish removing dir
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-12 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-12
receive_execute: 2, 46
receive_execute: 1, 47
receive_execute: 1, 47
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
receive_execute: 4, 47
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 384, write pid:384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 6059, pid 384, write pid:384
----- executor 3 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 524 tid 524

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 524, pid 524, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:29:00] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 384, write pid:384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 6177, pid 384, write pid:384
----- executor 3 executes write_coverage_signal cov->size 6177, flag collect 0
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 3 receive reply, reply.done 1
----- executor 3 signal number : 64
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 38, 0
execute_one time: 0, 38
time breakdown 3: 51, 39, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8252, flag collect 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 35, 0
execute_one time: 0, 35
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 3140, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 1975, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 960, flag collect 0
----- executor 2 signal number : 75
----- executor 0 signal number : 1134
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 147
----- executor 0 executes write_coverage_signal cov->size 180, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2202
----- executor 0 signal number : 46
executor 0 server cover_cnt 4 output_pos_value 1351
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 49, 40, 0
before receive testcase: 0 0
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:29:00 for select break: 1
2023/03/25 12:29:00 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:29:00 wg wait finish
2023/03/25 12:29:00 ------ all executors finish execution
2023/03/25 12:29:00 exec time: 87
2023/03/25 12:29:00 ----- PS len: 4
time breakdown 1: 48, 40, 0
2023/03/25 12:29:00 [CLIENT] executor 3 has 4 replies
2023/03/25 12:29:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:00 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/25 12:29:00 [SERVER] executor 0 has 4 replies
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 1134 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 147 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
time breakdown 0: 48, 40, 0
2023/03/25 12:29:00 [SERVER] executor 1 has 0 replies
2023/03/25 12:29:00 [SERVER] executor 2 has 4 replies
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/25 12:29:00 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 12:29:00 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:29:00 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 12:29:00 mutate testcase with failures
2023/03/25 12:29:00 ----- mutateFailPos()
2023/03/25 12:29:00 insert call 2 at pos 0
2023/03/25 12:29:00 ----- mutateArg()
2023/03/25 12:29:00 ----- insertCall()
2023/03/25 12:29:00 ----- generateCall 2810 renameat renameat
2023/03/25 12:29:00 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:29:00 disable threaded and collide
2023/03/25 12:29:00 prog length: 6
2023/03/25 12:29:00 prog length: 18
2023/03/25 12:29:00 HasCrashFail:true HasNetFail:false
12:29:00 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)=ANY=[@ANYBLOB="02000000010002000000000002000400", @ANYRES32=0xee00, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000e00", @ANYRES32=r0, @ANYBLOB="02000300", @ANYRES32=0x0, @ANYBLOB="040000000000000008002b04", @ANYRES32=0x0, @ANYBLOB="10000400000000002000040000000000"], 0x4c, 0x6)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x6, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
r2 = open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
renameat(r2, &(0x7f0000000b00)='./file0/file0\x00', r1, &(0x7f0000000b40)='./file0/file0\x00')
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5144
remove dir: /root/orangefs-client/dfs-0-12
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:29:00] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:29:00] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2039
-----finish removing dir
receive_execute: 2, 4070
mkdir time 2030
executor 3 create dir /root/orangefs-client/dfs-0-13 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-13
receive_execute: 1, 4071
receive_execute: 2, 4070
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 4070
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 0 signal number : 43
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 3 output_pos_value 208
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 539 tid 539

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 539, pid 539, value 1

-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:29:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 37, 0
execute_one time: 2, 37
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 6185, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6185, flag collect 0
----- executor 3 signal number : 65
----- completed 7
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 69, 0
execute_one time: 1, 69
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4074, 70, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1437
----- executor 2 executes write_coverage_signal cov->size 21652, flag collect 0
----- executor 0 signal number : 1241
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 180, flag collect 0
2023/03/25 12:29:04 for select break: 1
----- executor 0 signal number : 4
2023/03/25 12:29:04 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 7 output_pos_value 1476
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 6481, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 5748, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2228
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 4072, 73, 0
before receive testcase: 0 0
time breakdown 1: 4072, 71, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:29:04 wg wait finish
2023/03/25 12:29:04 ------ all executors finish execution
2023/03/25 12:29:04 exec time: 4145
2023/03/25 12:29:04 ----- PS len: 4
2023/03/25 12:29:04 [CLIENT] executor 3 has 18 replies
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 [SERVER] executor 0 has 7 replies
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 1241 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 12:29:04 [SERVER] executor 2 has 4 replies
2023/03/25 12:29:04 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 1437 signal and 0 cover from userspace component
time breakdown 2: 4072, 75, 0
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:04 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/25 12:29:04 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:29:04 ----- no new client coverage: false, true
2023/03/25 12:29:04 ----- enqueue testcases with server coveraged
2023/03/25 12:29:04 disable threaded and collide
2023/03/25 12:29:04 prog length: 6
2023/03/25 12:29:04 prog length: 18
2023/03/25 12:29:04 HasCrashFail:true HasNetFail:false
12:29:04 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)=ANY=[@ANYBLOB="02000000010002000000000002000400", @ANYRES32=0xee00, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000e00", @ANYRES32=r0, @ANYBLOB="02000300", @ANYRES32=0x0, @ANYBLOB="040000000000000008002b04", @ANYRES32=0x0, @ANYBLOB="10000400000000002000040000000000"], 0x4c, 0x6)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x6, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
r2 = open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
renameat(r2, &(0x7f0000000b00)='./file0/file0\x00', r1, &(0x7f0000000b40)='./file0/file0\x00')
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5144
remove dir: /root/orangefs-client/dfs-0-13
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 146
-----finish removing dir
mkdir time 26
executor 3 create dir /root/orangefs-client/dfs-0-14 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-14
receive_execute: 4, 172
receive_execute: 6, 172
receive_execute: 6, 172
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 172
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 cover number : 1748, signal number : 2059
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6185, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6185, flag collect 1
----- executor 3 cover number : 1781, signal number : 64
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 4
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 555 tid 555

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 555, pid 555, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:29:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

[E 03/25/2023 11:29:04] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:29:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:29:04] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:29:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 43, 0
execute_one time: 0, 43
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 8
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 11
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 12
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 13
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 14
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 17
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 18
execute_call 0, 13, 0, 1
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 0, 84, 0
execute_one time: 1, 84
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 180, 86, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 743, signal number : 933
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 0 cover number : 19, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 257, flag collect 1
----- executor 0 cover number : 121, signal number : 145
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 1
----- executor 0 cover number : 46, signal number : 27
executor 0 server cover_cnt 4 output_pos_value 2065
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1197, signal number : 1437
----- executor 2 executes write_coverage_signal cov->size 22056, flag collect 1
time breakdown 0: 178, 91, 0
before receive testcase: 0 0
----- executor 2 cover number : 304, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 7111, flag collect 1
----- executor 2 cover number : 399, signal number : 387
----- executor 2 executes write_coverage_signal cov->size 5856, flag collect 1
----- executor 2 cover number : 99, signal number : 75
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 4227
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 178, 98, 0
2023/03/25 12:29:04 for select break: 1
2023/03/25 12:29:04 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:29:04 wg wait finish
2023/03/25 12:29:04 ------ all executors finish execution
2023/03/25 12:29:04 exec time: 270
2023/03/25 12:29:04 ----- PS len: 4
2023/03/25 12:29:04 [SERVER] executor 1 has 0 replies
2023/03/25 12:29:04 [SERVER] executor 0 has 4 replies
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 933 signal and 743 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 18 signal and 19 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 145 signal and 121 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 0 receive 27 signal and 46 cover from userspace component
2023/03/25 12:29:04 [SERVER] executor 2 has 4 replies
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 1437 signal and 1197 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:29:04 [CLIENT] executor 3 has 18 replies
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 2059 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 64 signal and 1781 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 12:29:04 fuzzer receive 16 signal and 1748 cover from executor 3
time breakdown 2: 176, 98, 0
before receive testcase: 0 0
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 316 signal and 304 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 387 signal and 399 cover from userspace component
2023/03/25 12:29:04 ------- fuzzer executor 2 receive 75 signal and 99 cover from userspace component
2023/03/25 12:29:04 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:29:04 ----- triage return due to empty signal extra
2023/03/25 12:29:04 mutate testcase with failures
2023/03/25 12:29:04 ----- insertCall()
2023/03/25 12:29:04 ----- generateCall 187 faccessat faccessat
2023/03/25 12:29:04 ----- insertCall()
2023/03/25 12:29:04 ----- insertCall()
2023/03/25 12:29:04 ----- generateCall 2373 mkdir mkdir
2023/03/25 12:29:04 ----- insertCall()
2023/03/25 12:29:04 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/25 12:29:04 ----- insertCall()
2023/03/25 12:29:04 ----- generateCall 2346 listxattr listxattr
2023/03/25 12:29:04 HasCrashFail: true, .HasNetFail: true
2023/03/25 12:29:04 disable threaded and collide
2023/03/25 12:29:04 prog length: 6
2023/03/25 12:29:04 prog length: 6
2023/03/25 12:29:04 prog length: 6
2023/03/25 12:29:04 prog length: 12
2023/03/25 12:29:04 HasCrashFail:true HasNetFail:true
12:29:04 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x4, 0x3)
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000140)='./file1/file0\x00', &(0x7f0000000180)=""/164, 0xa4)
syz_failure_sync(0x5, 0x3)
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
faccessat(0xffffffffffffff9c, &(0x7f0000000000)='./file0/file0\x00', 0x20)
mkdir(&(0x7f0000000040)='./file1\x00', 0x108)
setxattr$incfs_size(&(0x7f0000000080)='./file1/file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x8, 0x1)
syz_failure_sync(0x3, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 560
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 2368, prog_size 1464
remove dir: /root/orangefs-client/dfs-0-14
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 248
remove dir time 137
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-15 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-15
receive_execute: 4, 147
receive_execute: 4, 148
receive_execute: 11, 147
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 16, 148
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 12, 0, 0
execute_one loop: 0, 1, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 29
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
/root/orangefs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 32, 0, 0
execute_one loop: 0, 0, 32
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 29487, flag collect 0
----- executor 2 signal number : 2535
----- executor 2 executes write_coverage_signal cov->size 17868, flag collect 0
----- executor 2 signal number : 1168
----- executor 2 executes write_coverage_signal cov->size 4333, flag collect 0
----- executor 2 signal number : 406
----- executor 2 executes write_coverage_signal cov->size 2820, flag collect 0
----- executor 2 signal number : 83
executor 2 server cover_cnt 4 output_pos_value 4205
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 570 tid 570

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 570, pid 570, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:29:05] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 2 collect shmids 6
----- directly resend shmid 6
-----executor 2 collect shmids 7
----- directly resend shmid 7
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 86, 0
execute_one time: 1, 86
-----executor 2 collect shmids 5
----- directly resend shmid 5
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 3
----- directly resend shmid 3
[E 03/25/2023 11:29:04] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:29:05] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:29:05] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 535
----- completed 6
execute_call 0, 10051, 0, 1
execute_one loop: 0, 0, 10052
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10064, 0, 0
execute_one loop: 0, 0, 10064
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 423 tid 423

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 423, pid 423, value 1

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 11:29:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 10149, 0
execute_one time: 1, 10149
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:29:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:29:15] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 11:29:15] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:29:15] Error: Could not initialize server subsystems
[E 03/25/2023 11:29:15] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 9301, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 9301, flag collect 0
----- executor 3 signal number : 71
----- completed 8
execute_call 0, 10048, 0, 1
execute_one loop: 0, 0, 10049
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4672, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 4672, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4629, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 4629, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 10023, 0, 0
execute_one loop: 0, 0, 10023
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30196, 0, 0
execute_one loop: 0, 0, 30196
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 32232, 0
execute_one time: 0, 32232
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
executor 3, execute_one inner time: 0, 32232, 0
execute_one time: 0, 32232
2023/03/25 12:29:37 for select break: 1
2023/03/25 12:29:37 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 910
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1041
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 164, 32233, 0
before receive testcase: 0 0
2023/03/25 12:29:37 for select break: 1
2023/03/25 12:29:37 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1738
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 460
----- executor 2 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 17916, flag collect 0
----- executor 2 signal number : 119
----- executor 2 executes write_coverage_signal cov->size 4594, flag collect 0
----- executor 2 signal number : 66
----- executor 2 executes write_coverage_signal cov->size 2946, flag collect 0
----- executor 2 signal number : 6
executor 2 server cover_cnt 12 output_pos_value 7675
time breakdown 1: 152, 32234, 0
before receive testcase: 0 0
----- executor 0 signal number : 235
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 59
executor 0 server cover_cnt 8 output_pos_value 1444
2023/03/25 12:29:37 for select break: 1
2023/03/25 12:29:37 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:29:37 for select break: 1
2023/03/25 12:29:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:29:37 wg wait finish
2023/03/25 12:29:37 ------ all executors finish execution
2023/03/25 12:29:37 exec time: 32385
2023/03/25 12:29:37 ----- PS len: 4
2023/03/25 12:29:37 [CLIENT] executor 3 has 12 replies
2023/03/25 12:29:37 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 535 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:29:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:29:37 [SERVER] executor 0 has 8 replies
2023/03/25 12:29:37 [SERVER] executor 1 has 0 replies
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 12:29:37 [SERVER] executor 2 has 12 replies
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 910 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 2535 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 235 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 1168 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 406 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 1041 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 1738 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 460 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 119 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 66 signal and 0 cover from userspace component
2023/03/25 12:29:37 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/25 12:29:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:29:37 ----- no new client coverage: false, true
2023/03/25 12:29:37 mutate testcase with failures
2023/03/25 12:29:37 ----- mutateArg()
2023/03/25 12:29:37 ----- mutateArg()
2023/03/25 12:29:37 ----- insertCall()
2023/03/25 12:29:37 ----- generateCall 170 dup dup
2023/03/25 12:29:37 ----- mutateArg()
2023/03/25 12:29:37 ----- mutateArg()
2023/03/25 12:29:37 HasCrashFail: false, .HasNetFail: true
2023/03/25 12:29:37 disable threaded and collide
2023/03/25 12:29:37 prog length: 6
2023/03/25 12:29:37 prog length: 4
2023/03/25 12:29:37 HasCrashFail:false HasNetFail:true
12:29:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.6 -j DROP;iptables -A OUTPUT -d 192.168.0.6 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
dup(0xffffffffffffffff)
mkdir(&(0x7f0000000040)='./file1/file0\x00', 0x8b702314d00ab9a7)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 320
time breakdown 0: 158, 32237, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
remove dir: /root/orangefs-client/dfs-0-15
time breakdown 2: 151, 32237, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
opendir(/root/orangefs-client/dfs-0-15) failedremove dir time 30111
-----finish removing dir
receive_execute: 2, 30125
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-16 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-16
receive_execute: 4, 30125
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 30125
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
receive_execute: 3, 30125
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 0, pid 390, write pid:390
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
execute_call 0, 2002, 0, 0
execute_one loop: 0, 0, 2002
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2006, 0
execute_one time: 0, 2006
----- executor 3 write_call_output, size 0, pid 390, write pid:390
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2002, 0, 0
execute_one loop: 0, 0, 2002
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 390, write pid:390
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6543, pid 390, write pid:390
----- executor 3 executes write_coverage_signal cov->size 6543, flag collect 0
----- executor 3 signal number : 2142
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 2007, 0
execute_one time: 0, 2008
2023/03/25 12:30:09 for select break: 1
2023/03/25 12:30:09 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 30131, 2009, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5567, flag collect 0
executor 1 write_server_output
----- executor 0 signal number : 1497
----- executor 0 executes write_coverage_signal cov->size 3846, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 318
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
----- executor 0 signal number : 142
----- executor 0 executes write_coverage_signal cov->size 10553, flag collect 0
2023/03/25 12:30:09 for select break: 1
2023/03/25 12:30:09 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 30128, 2010, 0
time breakdown 1: 30129, 2011, 0
before receive testcase: 0 0
----- executor 0 signal number : 78
executor 0 server cover_cnt 4 output_pos_value 2048
2023/03/25 12:30:09 for select break: 1
2023/03/25 12:30:09 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:30:09 for select break: 1
2023/03/25 12:30:09 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:30:09 wg wait finish
2023/03/25 12:30:09 ------ all executors finish execution
2023/03/25 12:30:09 exec time: 32139
2023/03/25 12:30:09 ----- PS len: 4
2023/03/25 12:30:09 [CLIENT] executor 3 has 4 replies
2023/03/25 12:30:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:09 fuzzer receive 2142 signal and 0 cover from executor 3
2023/03/25 12:30:09 [SERVER] executor 0 has 4 replies
2023/03/25 12:30:09 ------- fuzzer executor 0 receive 1497 signal and 0 cover from userspace component
2023/03/25 12:30:09 ------- fuzzer executor 0 receive 318 signal and 0 cover from userspace component
2023/03/25 12:30:09 ------- fuzzer executor 0 receive 142 signal and 0 cover from userspace component
2023/03/25 12:30:09 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/25 12:30:09 [SERVER] executor 1 has 0 replies
2023/03/25 12:30:09 [SERVER] executor 2 has 0 replies
2023/03/25 12:30:09 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:30:09 ----- no new client coverage: false, true
before receive testcase: 0 1
2023/03/25 12:30:09 mutate testcase with failures
2023/03/25 12:30:09 ----- insertCall()
2023/03/25 12:30:09 ----- generateCall 2781 readlinkat readlinkat
2023/03/25 12:30:09 ----- insertCall()
2023/03/25 12:30:09 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:30:09 ----- mutateArg()
2023/03/25 12:30:09 ----- insertCall()
2023/03/25 12:30:09 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 12:30:09 ----- insertCall()
2023/03/25 12:30:09 ----- generateCall 516 getxattr getxattr
2023/03/25 12:30:09 ----- mutateArg()
2023/03/25 12:30:09 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:30:09 disable threaded and collide
2023/03/25 12:30:09 prog length: 6
2023/03/25 12:30:09 prog length: 7
2023/03/25 12:30:09 HasCrashFail:true HasNetFail:false
12:30:09 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
getxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000040)=ANY=[@ANYBLOB="736563145b34ba792ec1295d2d2800eebcdfd4bbf2630084"], &(0x7f00000001c0)=""/243, 0xf3)
readlinkat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', &(0x7f00000003c0)=""/4096, 0x1000)
syz_failure_sync(0x0, 0x3)
r0 = open(&(0x7f0000000080)='./file0\x00', 0x119040, 0x0)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000002c0)='./binderfs2\x00', 0x1ff)
fsetxattr$security_smack_transmute(r0, &(0x7f00000000c0), &(0x7f0000000100), 0x4, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1080
remove dir: /root/orangefs-client/dfs-0-16
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 30127, 2012, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 33
-----finish removing dir
mkdir time 2017
executor 3 create dir /root/orangefs-client/dfs-0-17 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-17
receive_execute: 2, 2050
receive_execute: 3, 2050
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 2050
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 2050
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 6203, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 6203, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4085, flag collect 0
----- executor 0 signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 1528, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2082
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:30:11] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10067, 0, 0
execute_one loop: 0, 0, 10067
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10068, 0, 0
execute_one loop: 0, 0, 10068
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 594 tid 594

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 594, pid 594, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:30:21] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10095, 0
execute_one time: 0, 10095
----- executor 3 write_call_output, size 32765, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 325
----- completed 5
execute_call 0, 12, 0, 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
[D 03/25/2023 11:30:21] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 110
----- completed 6
execute_call 0, 2057, 0, 0
execute_one loop: 0, 0, 2057
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 392, write pid:392
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12153, 0
execute_one time: 1, 12153
2023/03/25 12:30:23 for select break: 1
2023/03/25 12:30:23 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 543
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:30:23 for select break: 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:30:23 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:30:23 for select break: 1
2023/03/25 12:30:23 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:30:23 for select break: 1
2023/03/25 12:30:23 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:30:23 wg wait finish
2023/03/25 12:30:23 ------ all executors finish execution
2023/03/25 12:30:23 exec time: 14209
2023/03/25 12:30:23 ----- PS len: 4
2023/03/25 12:30:23 [CLIENT] executor 3 has 7 replies
2023/03/25 12:30:23 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:30:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:23 [SERVER] executor 0 has 9 replies
2023/03/25 12:30:23 [SERVER] executor 1 has 0 replies
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 1404 signal and 0 cover from userspace component
2023/03/25 12:30:23 [SERVER] executor 2 has 0 replies
2023/03/25 12:30:23 fuzzer receive 325 signal and 0 cover from executor 3
2023/03/25 12:30:23 fuzzer receive 110 signal and 0 cover from executor 3
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:30:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 543 signal and 0 cover from userspace component
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 12:30:23 ------- fuzzer executor 0 receive 21 signal and 0 cover from userspace component
----- executor 0 signal number : 27
----- executor 0 executes write_coverage_signal cov->size 17059, flag collect 0
----- executor 0 signal number : 21
executor 0 server cover_cnt 9 output_pos_value 2831
time breakdown 0: 2052, 12158, 0
before receive testcase: 0 0
time breakdown 3: 2055, 12155, 0
before receive testcase: 0 0
2023/03/25 12:30:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:30:23 ----- no new client coverage: false, true
2023/03/25 12:30:23 mutate testcase with failures
2023/03/25 12:30:23 ----- insertCall()
2023/03/25 12:30:23 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 12:30:23 ----- splice()
2023/03/25 12:30:23 ----- mutateArg()
2023/03/25 12:30:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:30:23 disable threaded and collide
2023/03/25 12:30:23 prog length: 6
2023/03/25 12:30:23 prog length: 14
2023/03/25 12:30:23 HasCrashFail:true HasNetFail:false
12:30:23 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x0, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000440), &(0x7f0000000480)='./file0\x00', 0x8, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
syz_failure_sync(0x1, 0x3)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=ANY=[@ANYBLOB="85030200000003005ad8ee1f99c6852ef4837cb1f4c9c2ed709ece3ff19195d00b46de99e63145b318d93a1d2fed47af1f2b95590e917f070b74a2f7f7e9f91226163641b77d63f8fc4e5a334a890a2712"], 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2912
remove dir: /root/orangefs-client/dfs-0-17
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 2: 2054, 12156, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 2053, 12157, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 53
-----finish removing dir
mkdir time 4020
executor 3 create dir /root/orangefs-client/dfs-0-18 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-18
receive_execute: 2, 4074
receive_execute: 1, 4073
receive_execute: 4, 4074
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 4073
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17835, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 17835, flag collect 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13523, flag collect 0
----- executor 0 signal number : 2212
----- executor 0 executes write_coverage_signal cov->size 20005, flag collect 0
----- executor 0 signal number : 1229
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 284
----- executor 0 executes write_coverage_signal cov->size 1733, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3814
----- executor 3 signal number : 3066
----- completed 5
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 610 tid 610

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 610, pid 610, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:30:27] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 29, 0
execute_one time: 1, 29
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:30:27] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:30:27] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 2025, 0, 0
execute_one loop: 0, 0, 2025
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 394, write pid:394
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2054, 0
execute_one time: 0, 2054
2023/03/25 12:30:29 for select break: 1
2023/03/25 12:30:29 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 4078, 2054, 0
before receive testcase: 0 0
----- executor 0 signal number : 766
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:30:29 for select break: 1
2023/03/25 12:30:29 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 214
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 42
----- executor 0 executes write_coverage_signal cov->size 14491, flag collect 0
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 128
executor 0 server cover_cnt 10 output_pos_value 5010
2023/03/25 12:30:29 for select break: 1
2023/03/25 12:30:29 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 4074, 2058, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:30:29 for select break: 1
2023/03/25 12:30:29 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:30:29 wg wait finish
2023/03/25 12:30:29 ------ all executors finish execution
2023/03/25 12:30:29 exec time: 6133
2023/03/25 12:30:29 ----- PS len: 4
2023/03/25 12:30:29 [CLIENT] executor 3 has 14 replies
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 3066 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:29 [SERVER] executor 0 has 10 replies
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 2212 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 1229 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 284 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 766 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 214 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 42 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/25 12:30:29 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/25 12:30:29 [SERVER] executor 1 has 0 replies
2023/03/25 12:30:29 [SERVER] executor 2 has 0 replies
time breakdown 2: 4076, 2060, 0
before receive testcase: 0 0
2023/03/25 12:30:29 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:30:29 ----- no new client coverage: false, true
time breakdown 1: 4076, 2056, 0
before receive testcase: 0 0
2023/03/25 12:30:29 mutate testcase with failures
2023/03/25 12:30:29 ----- insertCall()
2023/03/25 12:30:29 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/25 12:30:29 ----- insertCall()
2023/03/25 12:30:29 ----- generateCall 516 getxattr getxattr
2023/03/25 12:30:29 ----- insertCall()
2023/03/25 12:30:29 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 12:30:29 ----- insertCall()
2023/03/25 12:30:29 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/25 12:30:29 ----- mutateArg()
2023/03/25 12:30:29 ----- insertCall()
2023/03/25 12:30:29 ----- generateCall 2343 link link
2023/03/25 12:30:29 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:30:29 disable threaded and collide
2023/03/25 12:30:29 prog length: 6
2023/03/25 12:30:29 prog length: 10
2023/03/25 12:30:29 HasCrashFail:true HasNetFail:false
12:30:29 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f00000009c0)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
rmdir(&(0x7f00000000c0)='./file0\x00')
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'trusted.', '/\x9c[$:\x00'}, &(0x7f0000000100)=""/177, 0xb1)
link(&(0x7f0000000240)='./file0\x00', &(0x7f0000000340)='./file0/file0\x00')
setxattr$security_selinux(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0), &(0x7f0000000300)='system_u:object_r:hald_var_run_t:s0\x00', 0x24, 0x2)
fcntl$setownex(0xffffffffffffffff, 0xf, &(0x7f0000000000)={0x2})
setxattr$smack_xattr_label(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='security.SMACK64MMAP\x00', &(0x7f0000000380)=ANY=[@ANYBLOB="2a9299814834e0fe2959c235dd2a256009000000b6e62ee8afe2fd36624e"], 0x1, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1648
remove dir: /root/orangefs-client/dfs-0-18
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 39
-----finish removing dir
receive_execute: 4, 2062
mkdir time 2023
executor 3 create dir /root/orangefs-client/dfs-0-19 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 7, 2064
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 2063
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 2063
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 2031, 0, 0
execute_one loop: 0, 0, 2031
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2766
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1243
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 14538, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4395
----- executor 3 write_call_output, size 6243, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 6243, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2030, 0, 0
execute_one loop: 0, 0, 2030
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
[E 03/25/2023 11:30:33] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 620
----- completed 3
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10048, 0, 0
execute_one loop: 0, 0, 10048
----- executor 3 write_call_output, size 32765, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 156
----- completed 4
execute_call 0, 10046, 0, 1
execute_one loop: 0, 0, 10047
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 627 tid 627

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 627, pid 627, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:30:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 12102, 0
execute_one time: 1, 12102
[D 03/25/2023 11:30:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 105
----- completed 6
execute_call 0, 2026, 0, 1
execute_one loop: 0, 0, 2027
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 396, write pid:396
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 14134, 0
execute_one time: 0, 14134
time breakdown 3: 2071, 14135, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
2023/03/25 12:30:45 for select break: 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:30:45 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 233
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:30:45 for select break: 1
2023/03/25 12:30:45 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 2064, 14137, 0
before receive testcase: 0 0
before receive testcase: 0 1
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 29426, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:30:45 for select break: 1
2023/03/25 12:30:45 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2070, 14136, 0
before receive testcase: 0 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 4830
2023/03/25 12:30:45 for select break: 1
2023/03/25 12:30:45 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:30:45 wg wait finish
2023/03/25 12:30:45 ------ all executors finish execution
2023/03/25 12:30:45 exec time: 16202
2023/03/25 12:30:45 ----- PS len: 4
2023/03/25 12:30:45 [CLIENT] executor 3 has 10 replies
2023/03/25 12:30:45 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 620 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:30:45 [SERVER] executor 1 has 0 replies
2023/03/25 12:30:45 [SERVER] executor 0 has 9 replies
time breakdown 0: 2066, 14140, 0
2023/03/25 12:30:45 [SERVER] executor 2 has 0 replies
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 2766 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 1243 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 233 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 12:30:45 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 12:30:45 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:30:45 ----- no new client coverage: false, true
2023/03/25 12:30:45 mutate testcase with failures
2023/03/25 12:30:45 ----- insertCall()
2023/03/25 12:30:45 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 12:30:45 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:30:45 disable threaded and collide
2023/03/25 12:30:45 prog length: 6
2023/03/25 12:30:45 prog length: 9
2023/03/25 12:30:45 HasCrashFail:true HasNetFail:false
12:30:45 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x1, 0x3)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
lsetxattr$trusted_overlay_origin(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000100), 0x2, 0x2)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1272
remove dir: /root/orangefs-client/dfs-0-19
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 65
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-20 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-20
receive_execute: 2, 77
receive_execute: 4, 77
receive_execute: 3, 77
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6295, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 6295, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2670
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1244
----- executor 0 executes write_coverage_signal cov->size 3501, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 3952, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4302
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:30:45] PVFS2 server got signal 15 (server_status_flag: 2080767)
execute_call 0, 20102, 0, 0
execute_one loop: 0, 0, 20102
----- executor 3 write_call_output, size 32765, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 447
----- completed 4
execute_call 0, 20101, 0, 1
execute_one loop: 0, 0, 20102
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 643 tid 643

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 643, pid 643, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:31:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20138, 0
execute_one time: 0, 20138
[D 03/25/2023 11:31:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6323, pid 398, write pid:398
----- executor 3 executes write_coverage_signal cov->size 6323, flag collect 0
----- executor 3 signal number : 14
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 22156, 0
execute_one time: 0, 22157
2023/03/25 12:31:08 for select break: 1
2023/03/25 12:31:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 82, 22159, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 0 signal number : 223
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:31:08 for select break: 1
2023/03/25 12:31:08 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 144
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 62
----- executor 0 executes write_coverage_signal cov->size 17470, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 18
executor 0 server cover_cnt 9 output_pos_value 4769
2023/03/25 12:31:08 for select break: 1
2023/03/25 12:31:08 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 79, 22161, 0
before receive testcase: 0 0
time breakdown 2: 81, 22160, 0
before receive testcase: 0 1
time breakdown 1: 80, 22164, 0
before receive testcase: 0 1
2023/03/25 12:31:08 for select break: 1
2023/03/25 12:31:08 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:31:08 wg wait finish
2023/03/25 12:31:08 ------ all executors finish execution
2023/03/25 12:31:08 exec time: 22242
2023/03/25 12:31:08 ----- PS len: 4
2023/03/25 12:31:08 [CLIENT] executor 3 has 9 replies
2023/03/25 12:31:08 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 447 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:08 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 12:31:08 [SERVER] executor 2 has 0 replies
2023/03/25 12:31:08 [SERVER] executor 0 has 9 replies
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 2670 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 1244 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/25 12:31:08 [SERVER] executor 1 has 0 replies
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 223 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 144 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
2023/03/25 12:31:08 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 12:31:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:31:08 ----- no new client coverage: false, true
2023/03/25 12:31:08 mutate testcase with failures
2023/03/25 12:31:08 ----- insertCall()
2023/03/25 12:31:08 ----- generateCall 121 chmod chmod
2023/03/25 12:31:08 ----- mutateArg()
2023/03/25 12:31:08 ----- mutateFailPos()
2023/03/25 12:31:08 ----- mutateArg()
2023/03/25 12:31:08 ----- insertCall()
2023/03/25 12:31:08 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/25 12:31:08 ----- mutateArg()
2023/03/25 12:31:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:31:08 disable threaded and collide
2023/03/25 12:31:08 prog length: 6
2023/03/25 12:31:08 prog length: 19
2023/03/25 12:31:08 HasCrashFail:true HasNetFail:false
12:31:08 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x0, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f00000004c0)='./file0/file0\x00', &(0x7f0000000480)='./file0/file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x5)
chmod(&(0x7f0000000880)='./file1\x00', 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lremovexattr(&(0x7f0000000200)='./file2\x00', &(0x7f00000008c0)=@known='trusted.overlay.nlink\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4232
remove dir: /root/orangefs-client/dfs-0-20
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 31
-----finish removing dir
receive_execute: 2, 8078
receive_execute: 5, 8078
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 8078
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 8047
executor 3 create dir /root/orangefs-client/dfs-0-21 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-21
receive_execute: 7, 8078
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6339, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 6339, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 17138, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4279, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 4389, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2107
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 659 tid 659

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 659, pid 659, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:31:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 49, 0
execute_one time: 0, 49
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:31:16] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:31:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 400, write pid:400
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 2014, 0, 0
execute_one loop: 0, 0, 2014
executor 3, execute_one inner time: 1, 2062, 0
execute_one time: 0, 2063
2023/03/25 12:31:18 for select break: 1
2023/03/25 12:31:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 8085, 2064, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:31:18 for select break: 1
2023/03/25 12:31:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8080, 2065, 0
before receive testcase: 0 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:31:18 for select break: 1
2023/03/25 12:31:18 --------- executor 0 receive reply, reply.done 1
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 16718, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2337
time breakdown 0: 8083, 2067, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:31:18 for select break: 1
2023/03/25 12:31:18 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:31:18 wg wait finish
2023/03/25 12:31:18 ------ all executors finish execution
2023/03/25 12:31:18 exec time: 10151
2023/03/25 12:31:18 ----- PS len: 4
2023/03/25 12:31:18 [SERVER] executor 0 has 9 replies
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:31:18 [CLIENT] executor 3 has 19 replies
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 12:31:18 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:31:18 [SERVER] executor 1 has 0 replies
2023/03/25 12:31:18 [SERVER] executor 2 has 0 replies
2023/03/25 12:31:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 2: 8084, 2072, 0
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 12:31:18 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:31:18 ----- no new client coverage: false, true
2023/03/25 12:31:18 mutate testcase with failures
2023/03/25 12:31:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:31:18 disable threaded and collide
2023/03/25 12:31:18 prog length: 6
2023/03/25 12:31:18 prog length: 13
2023/03/25 12:31:18 HasCrashFail:true HasNetFail:false
12:31:18 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
syz_failure_sync(0x0, 0x3)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x1, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea8509000000a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a050000002712"], 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2656
remove dir: /root/orangefs-client/dfs-0-21
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
receive_execute: 2, 8099
mkdir time 8071
receive_execute: 7, 8099
executor 3 create dir /root/orangefs-client/dfs-0-22 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-22
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
receive_execute: 9, 8099
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 8100
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 30170, 0, 0
execute_one loop: 0, 0, 30171
----- executor 3 write_call_output, size 6359, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 6359, flag collect 0
----- executor 3 signal number : 2061
----- completed 6
execute_call 0, 30169, 0, 0
execute_one loop: 0, 0, 30169
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 511 tid 511

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 511, pid 511, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:31:56] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 30194, 0
execute_one time: 1, 30194
----- executor 3 write_call_output, size 32765, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 760
----- completed 7
execute_call 0, 20, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
2023/03/25 12:31:56 for select break: 1
2023/03/25 12:31:56 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1995
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:31:56 for select break: 1
2023/03/25 12:31:56 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 2: 8101, 30220, 0
before receive testcase: 0 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:31:56 for select break: 1
2023/03/25 12:31:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8108, 30221, 0
before receive testcase: 0 0
----- executor 0 signal number : 77
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 618
executor 0 server cover_cnt 5 output_pos_value 3332
2023/03/25 12:31:56 for select break: 1
2023/03/25 12:31:56 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:31:56 wg wait finish
2023/03/25 12:31:56 ------ all executors finish execution
2023/03/25 12:31:56 exec time: 38322
2023/03/25 12:31:56 ----- PS len: 4
2023/03/25 12:31:56 [CLIENT] executor 3 has 13 replies
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 760 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 1070 signal and 0 cover from executor 3
2023/03/25 12:31:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:31:56 [SERVER] executor 0 has 5 replies
2023/03/25 12:31:56 ------- fuzzer executor 0 receive 1995 signal and 0 cover from userspace component
2023/03/25 12:31:56 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/25 12:31:56 [SERVER] executor 1 has 1 replies
time breakdown 0: 8106, 30222, 0
2023/03/25 12:31:56 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 12:31:56 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 12:31:56 ------- fuzzer executor 0 receive 618 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:31:56 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:31:56 [SERVER] executor 2 has 0 replies
2023/03/25 12:31:56 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:31:56 ----- no new client coverage: false, true
2023/03/25 12:31:56 mutate testcase with failures
2023/03/25 12:31:56 ----- mutateArg()
2023/03/25 12:31:56 ----- insertCall()
2023/03/25 12:31:56 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 12:31:56 ----- insertCall()
2023/03/25 12:31:56 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/25 12:31:56 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:31:56 disable threaded and collide
2023/03/25 12:31:56 prog length: 6
2023/03/25 12:31:56 prog length: 19
2023/03/25 12:31:56 HasCrashFail:true HasNetFail:false
12:31:56 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000200)='./file1\x00', &(0x7f00000001c0), &(0x7f00000002c0)='TRUE', 0xfffffffffffffd15, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000000880)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a782d563d003966a54aa3160556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea9611122547934030000000000000000000000001b6bfd9340098bd8bdc30be5d844751e135d4ce23d1711196ff6055ab61e87494e7c59a4476ec656a903f8eb542cde348af1959e5bf27b870e0db54157bcf19fb08d7b16211b15958207b6cfbac5baf86c0b0cec92b575331be2cc98aabff21ade2ae6a7e0c5d66347ffe060a2eb46603dc471069c0bb34922e8016e62d3e41eb2350afab7025d40"], 0x6f, 0x1)
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0\x00', &(0x7f0000000300), &(0x7f0000000980), 0x2, 0x2)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
syz_failure_sync(0x0, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$security_selinux(&(0x7f00000009c0)='./file0/file0\x00', &(0x7f0000000a00), &(0x7f0000000a40)='system_u:object_r:gpg_exec_t:s0\x00', 0x20, 0xee8e56192fade62f)
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 write_call_output, size 9293, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 9293, flag collect 0
----- executor 3 signal number : 1070
----- completed 12
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 402, write pid:402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 30215, 0
execute_one time: 0, 30216
time breakdown 3: 8109, 30218, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4520
remove dir: /root/orangefs-client/dfs-0-22
remove dir time 61
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:31:56] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:31:56] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:31:56] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:31:56] Error: Could not initialize server subsystems
[E 03/25/2023 11:31:56] Error: Could not initialize server; aborting.
mkdir time 10180
executor 3 create dir /root/orangefs-client/dfs-0-23 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-23
receive_execute: 4, 10241
receive_execute: 6, 10241
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 10242
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 5, 10242
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 527 tid 527

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 527, pid 527, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:32:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1, execute_one inner time: 0, 64, 0
execute_one time: 1, 64
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 3, execute_one inner time: 0, 66, 0
execute_one time: 0, 66
2023/03/25 12:32:06 for select break: 1
2023/03/25 12:32:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 10247, 66, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 18732, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 5286, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4950, flag collect 0
----- executor 0 signal number : 75
2023/03/25 12:32:06 for select break: 1
2023/03/25 12:32:06 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2121
time breakdown 2: 10247, 68, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:32:06 for select break: 1
2023/03/25 12:32:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10245, 70, 0
before receive testcase: 0 0
2023/03/25 12:32:06 for select break: 1
2023/03/25 12:32:06 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:32:06 wg wait finish
2023/03/25 12:32:06 ------ all executors finish execution
2023/03/25 12:32:06 exec time: 10311
2023/03/25 12:32:06 ----- PS len: 4
2023/03/25 12:32:06 [CLIENT] executor 3 has 19 replies
2023/03/25 12:32:06 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 [SERVER] executor 1 has 1 replies
2023/03/25 12:32:06 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:32:06 [SERVER] executor 2 has 0 replies
2023/03/25 12:32:06 [SERVER] executor 0 has 4 replies
2023/03/25 12:32:06 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 12:32:06 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:32:06 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:32:06 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:32:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:06 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:32:06 ----- no new client coverage: false, true
2023/03/25 12:32:06 mutate testcase with failures
2023/03/25 12:32:06 ----- insertCall()
2023/03/25 12:32:06 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:32:06 disable threaded and collide
2023/03/25 12:32:06 prog length: 6
2023/03/25 12:32:06 prog length: 22
2023/03/25 12:32:06 HasCrashFail:true HasNetFail:false
12:32:06 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
syz_failure_sync(0x0, 0x3)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=ANY=[@ANYBLOB='wecuritynsecurity&SMACK64TRANSMUTE\x00'], &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001a80)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e5365637572697479002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e49731f9a8dccfe6c1a0ba5b586bcb694225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f887b32b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"], 0xe5)
syz_failure_sync(0x1, 0x3)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8480
remove dir: /root/orangefs-client/dfs-0-23
time breakdown 1: 10248, 68, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 38
executor 3 create dir /root/orangefs-client/dfs-0-24 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-24
receive_execute: 2, 57
receive_execute: 4, 57
receive_execute: 2, 57
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 57
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 2064
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8169, flag collect 0
----- executor 0 signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 3056, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2088
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:32:06] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:32:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:32:07] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:32:07] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:32:07] Error: Could not initialize server subsystems
[E 03/25/2023 11:32:07] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10029, 0, 0
execute_one loop: 0, 0, 10029
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 359
----- completed 10
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 104
----- completed 19
execute_call 0, 10044, 0, 1
execute_one loop: 0, 0, 10045
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 50196, 0, 0
execute_one loop: 0, 0, 50196
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 682 tid 682

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 682, pid 682, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:32:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 50232, 0
execute_one time: 1, 50232
time breakdown 3: 62, 50233, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13416, flag collect 0
----- executor 1 signal number : 1836
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 50233, 0
execute_one time: 0, 50233
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 513
----- executor 0 executes write_coverage_signal cov->size 3080, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 829, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 816, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 2642
2023/03/25 12:32:57 for select break: 1
2023/03/25 12:32:57 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 160
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 85
----- executor 1 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 1 signal number : 39
executor 1 server cover_cnt 4 output_pos_value 2133
2023/03/25 12:32:57 for select break: 1
2023/03/25 12:32:57 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:32:57 for select break: 1
2023/03/25 12:32:57 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 61, 50237, 0
time breakdown 1: 59, 50237, 0
before receive testcase: 0 0
time breakdown 0: 59, 50235, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 12:32:57 for select break: 1
2023/03/25 12:32:57 --------- executor 3 receive reply, reply.done 1
2023/03/25 12:32:57 wg wait finish
2023/03/25 12:32:57 ------ all executors finish execution
2023/03/25 12:32:57 exec time: 50300
2023/03/25 12:32:57 ----- PS len: 4
2023/03/25 12:32:57 [CLIENT] executor 3 has 22 replies
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 2064 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 359 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:32:57 [SERVER] executor 0 has 8 replies
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 1409 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:32:57 [SERVER] executor 1 has 4 replies
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 1 receive 1836 signal and 0 cover from userspace component
2023/03/25 12:32:57 [SERVER] executor 2 has 0 replies
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 513 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 1 receive 160 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 1 receive 85 signal and 0 cover from userspace component
2023/03/25 12:32:57 ------- fuzzer executor 1 receive 39 signal and 0 cover from userspace component
2023/03/25 12:32:57 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:32:57 ----- no new client coverage: false, true
2023/03/25 12:32:57 mutate testcase with failures
2023/03/25 12:32:57 ----- insertCall()
2023/03/25 12:32:57 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/25 12:32:57 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:32:57 disable threaded and collide
2023/03/25 12:32:57 prog length: 6
2023/03/25 12:32:57 prog length: 4
2023/03/25 12:32:57 HasCrashFail:true HasNetFail:false
12:32:57 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
setxattr$incfs_id(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'0000000000000000000000000000000', 0x33}, 0x20, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 656
remove dir: /root/orangefs-client/dfs-0-24
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[D 03/25/2023 11:32:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2027
-----finish removing dir
mkdir time 6040
executor 3 create dir /root/orangefs-client/dfs-0-25 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-25
receive_execute: 10, 8067
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 8067
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 8069
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 6, 8068
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 32765, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3035
----- completed 1
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2548
----- executor 0 executes write_coverage_signal cov->size 19558, flag collect 0
----- executor 0 signal number : 1137
----- executor 0 executes write_coverage_signal cov->size 3707, flag collect 0
----- executor 0 signal number : 308
----- executor 0 executes write_coverage_signal cov->size 3094, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4087
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 698 tid 698

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 698, pid 698, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:33:05] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 3, execute_one inner time: 0, 53, 0
execute_one time: 0, 53
2023/03/25 12:33:05 for select break: 1
2023/03/25 12:33:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 8081, 53, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:33:05 for select break: 1
2023/03/25 12:33:05 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 8074, 55, 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 54, 0
execute_one time: 1, 54
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 272
----- executor 0 executes write_coverage_signal cov->size 19582, flag collect 0
----- executor 0 signal number : 81
----- executor 0 executes write_coverage_signal cov->size 3964, flag collect 0
----- executor 0 signal number : 41
----- executor 0 executes write_coverage_signal cov->size 3166, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 4500
2023/03/25 12:33:05 for select break: 1
2023/03/25 12:33:05 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8075, 57, 0
before receive testcase: 0 0
2023/03/25 12:33:05 for select break: 1
2023/03/25 12:33:05 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:33:05 wg wait finish
2023/03/25 12:33:05 ------ all executors finish execution
2023/03/25 12:33:05 exec time: 8124
2023/03/25 12:33:05 ----- PS len: 4
2023/03/25 12:33:05 [CLIENT] executor 3 has 4 replies
2023/03/25 12:33:05 fuzzer receive 3035 signal and 0 cover from executor 3
2023/03/25 12:33:05 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 12:33:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:05 [SERVER] executor 0 has 8 replies
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 2548 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 1137 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 308 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 272 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 41 signal and 0 cover from userspace component
2023/03/25 12:33:05 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 12:33:05 [SERVER] executor 2 has 0 replies
2023/03/25 12:33:05 [SERVER] executor 1 has 0 replies
time breakdown 0: 8077, 57, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 12:33:05 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:33:05 ----- no new client coverage: false, true
2023/03/25 12:33:05 mutate testcase with failures
2023/03/25 12:33:05 ----- mutateArg()
2023/03/25 12:33:05 HasCrashFail: true, .HasNetFail: true
2023/03/25 12:33:05 disable threaded and collide
2023/03/25 12:33:05 prog length: 6
2023/03/25 12:33:05 prog length: 6
2023/03/25 12:33:05 prog length: 6
2023/03/25 12:33:05 prog length: 8
2023/03/25 12:33:05 HasCrashFail:true HasNetFail:true
12:33:05 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
symlink(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x4, 0x3)
syz_failure_sync(0x1, 0x3)
syz_failure_sync(0x5, 0x3)
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x3, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 2368, prog_size 784
remove dir: /root/orangefs-client/dfs-0-25
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 560
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:33:05] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:33:05] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2043
-----finish removing dir
receive_execute: 2, 2058
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-26 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-26
receive_execute: 2, 2058
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2059
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 2059
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6443, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 4042, 0, 0
execute_one loop: 0, 0, 4042
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 3 write_call_output, size 32765, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 546
----- completed 2
execute_call 0, 7, 0, 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4051, 0, 0
execute_one loop: 0, 0, 4051
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2605
----- executor 0 executes write_coverage_signal cov->size 26260, flag collect 0
----- executor 0 signal number : 1142
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 24518, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4134
execute_call 0, 4042, 0, 0
execute_one loop: 0, 0, 4042
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4071, 0, 0
execute_one loop: 0, 0, 4072
executor 2 write_server_output
-----executor 0 collect shmids 4
----- directly resend shmid 4
executor 2 server cover_cnt 0 output_pos_value 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 714 tid 714

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 714, pid 714, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:33:11] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 4094, 0
execute_one time: 0, 4094
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 461 tid 461

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 461, pid 461, value 1

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 11:33:11] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 4118, 0
execute_one time: 1, 4118
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:33:11] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:33:11] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 11:33:11] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:33:11] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 11:33:11] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:33:11] Error: Could not initialize server subsystems
[E 03/25/2023 11:33:11] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 32765, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 315
----- completed 7
execute_call 0, 2014, 0, 2
execute_one loop: 0, 0, 2016
execute_call 0, 2085, 0, 0
execute_one loop: 0, 0, 2085
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2005, 0, 0
execute_one loop: 0, 0, 2005
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 8138, 0
execute_one time: 1, 8138
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2005, 0, 0
execute_one loop: 0, 0, 2005
executor 3, execute_one inner time: 0, 8139, 0
execute_one time: 0, 8139
2023/03/25 12:33:15 for select break: 1
2023/03/25 12:33:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2063, 8140, 0
before receive testcase: 0 0
----- executor 2 signal number : 899
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 511
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:33:15 for select break: 1
2023/03/25 12:33:15 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 11
executor 0 server cover_cnt 9 output_pos_value 4986
----- executor 2 signal number : 231
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 89
----- executor 2 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 2 signal number : 47
executor 2 server cover_cnt 5 output_pos_value 1287
time breakdown 2: 2060, 8144, 0
before receive testcase: 0 0
2023/03/25 12:33:15 for select break: 1
2023/03/25 12:33:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2061, 8147, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2062, 8150, 0
before receive testcase: 0 1
2023/03/25 12:33:15 for select break: 1
2023/03/25 12:33:15 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:33:15 wg wait finish
2023/03/25 12:33:15 ------ all executors finish execution
2023/03/25 12:33:15 exec time: 10221
2023/03/25 12:33:15 ----- PS len: 4
2023/03/25 12:33:15 [CLIENT] executor 3 has 8 replies
2023/03/25 12:33:15 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 546 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 315 signal and 0 cover from executor 3
2023/03/25 12:33:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:15 [SERVER] executor 1 has 0 replies
2023/03/25 12:33:15 [SERVER] executor 2 has 5 replies
2023/03/25 12:33:15 ------- fuzzer executor 2 receive 899 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 2 receive 231 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 2 receive 89 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 2 receive 47 signal and 0 cover from userspace component
2023/03/25 12:33:15 [SERVER] executor 0 has 9 replies
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 2605 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 1142 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 511 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 12:33:15 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:33:15 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:33:15 ----- no new client coverage: false, true
2023/03/25 12:33:15 mutate testcase with failures
2023/03/25 12:33:15 ----- insertCall()
2023/03/25 12:33:15 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/25 12:33:15 ----- mutateArg()
2023/03/25 12:33:15 ----- mutateArg()
2023/03/25 12:33:15 ----- insertCall()
2023/03/25 12:33:15 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 12:33:15 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:33:15 disable threaded and collide
2023/03/25 12:33:15 prog length: 6
2023/03/25 12:33:15 prog length: 19
2023/03/25 12:33:15 HasCrashFail:true HasNetFail:false
12:33:15 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f0000000900)=ANY=[@ANYBLOB="2c3a23008ba37caad97185755ab5487901d432add8e2db85f94ec0bb3e53958751f6c5c2ef0c052aa375447d856ad449fd4cdd88f37260015ffc9035642c93fb17a15966181f23069fbef976110d741c1207cb5382792f690aa52675cba4a9465c8c1d765f5bcc7bc1d56333b3151c5462debeb2bbc0f11942ccbc547868a45cbd45143d469030e5de73f7e3d01e576631152691e05ddf983fd4c1b78b9179cff5b18008c393ec137d55d19a8c49a0b8cf349d9fcbd764bc6c80da9043bba12ead9f573a325bb25668daac12a82087813405602018f932cf228ad575c90702834fd8722d05d72b966323d62d29449e0aac3218d7dc2bf2eff28b5b2e9fbe459be4fa9abaa8b9d7c4cf843e489e325156a3bb41c104f328eede19a2240ecfabd82b982d0fbab9843f565a9a45110f60047a0447c9f7c95402bf93a685e9dfc0549357ae381bf9cb089d22f7e2092e338426fec27de8df1ef2d24a805906acb4246576c94869987b68b05c8f7f741fe5c12eb099730b6d2e6b187a95097440317396e227db873693c95bd3c9d5cb88f6257f90bcb2cd26123a8fbaeb59df598f10f572525f93b2a52b1e811eb33417d403d8ea14a5bdbf27c14392cc8f156484c8aab8c98a5334ecd5bf714e892986d47cc1ce36d7c440d719ac9a11ca440994b237da438a25b3f1c51fe9e8a190504e448c39ab8cb2521ab7fee4e13192db5bd84176befd2f98"], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000b40), &(0x7f0000000b80), 0x2, 0x0)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000880)='security.SMACK64EXEC\x00', &(0x7f00000008c0)={'security.SMACK64MMAP\x00'}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5056
remove dir: /root/orangefs-client/dfs-0-26
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 2024
executor 3 create dir /root/orangefs-client/dfs-0-27 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-27
receive_execute: 17, 2055
receive_execute: 21, 2055
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 24, 2055
receive_execute: 13, 2055
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 560 tid 560

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 560, pid 560, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:33:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 49, 0
execute_one time: 0, 49
time breakdown 3: 2079, 50, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:33:17 for select break: 1
2023/03/25 12:33:17 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2076, 51, 0
before receive testcase: 0 1
2023/03/25 12:33:17 for select break: 1
2023/03/25 12:33:17 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:33:17 for select break: 1
2023/03/25 12:33:17 --------- executor 2 receive reply, reply.done 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 49, 0
execute_one time: 0, 49
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 1: 2068, 52, 0
before receive testcase: 0 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 17174, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4897, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4551, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
2023/03/25 12:33:17 for select break: 1
2023/03/25 12:33:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:33:17 wg wait finish
2023/03/25 12:33:17 ------ all executors finish execution
2023/03/25 12:33:17 exec time: 2108
2023/03/25 12:33:17 ----- PS len: 4
2023/03/25 12:33:17 [CLIENT] executor 3 has 19 replies
2023/03/25 12:33:17 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:33:17 [SERVER] executor 1 has 1 replies
2023/03/25 12:33:17 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:33:17 [SERVER] executor 0 has 4 replies
2023/03/25 12:33:17 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 12:33:17 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:33:17 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:33:17 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:33:17 [SERVER] executor 2 has 0 replies
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:33:17 ----- no new client coverage: false, true
2023/03/25 12:33:17 mutate testcase with failures
2023/03/25 12:33:17 ----- insertCall()
2023/03/25 12:33:17 ----- generateCall 3662 setxattr setxattr
2023/03/25 12:33:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:33:17 disable threaded and collide
2023/03/25 12:33:17 prog length: 6
2023/03/25 12:33:17 prog length: 4
2023/03/25 12:33:17 HasCrashFail:true HasNetFail:false
12:33:17 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=@random={'trusted.', '\x00'}, &(0x7f0000000080)='\\.\'\':*\x00', 0x7, 0x1)
syz_failure_sync(0x1, 0x3)
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 608
remove dir: /root/orangefs-client/dfs-0-27
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 2072, 53, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 19
-----finish removing dir
receive_execute: 1, 43
receive_execute: 2, 43
receive_execute: 3, 43
mkdir time 23
executor 3 create dir /root/orangefs-client/dfs-0-28 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-28
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 44
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:33:17] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:33:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:33:17] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:33:17] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:33:17] Error: Could not initialize server subsystems
[E 03/25/2023 11:33:17] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10041, 0, 1
execute_one loop: 0, 0, 10042
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 731 tid 731

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 731, pid 731, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:33:27] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10079, 0
execute_one time: 0, 10079
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
[D 03/25/2023 11:33:27] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1998
----- completed 4
execute_call 0, 12091, 0, 1
execute_one loop: 0, 0, 12092
executor 3, execute_one inner time: 0, 22169, 0
execute_one time: 0, 22169
2023/03/25 12:33:39 for select break: 1
2023/03/25 12:33:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 49, 22170, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 939
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 14346, flag collect 0
----- executor 1 signal number : 1946
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:33:39 for select break: 1
2023/03/25 12:33:39 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 1 signal number : 28
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 46, 22173, 0
before receive testcase: 0 0
executor 1 server cover_cnt 5 output_pos_value 2252
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:33:39 for select break: 1
2023/03/25 12:33:39 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1561
time breakdown 1: 45, 22174, 0
before receive testcase: 0 0
2023/03/25 12:33:39 for select break: 1
2023/03/25 12:33:39 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:33:39 wg wait finish
2023/03/25 12:33:39 ------ all executors finish execution
2023/03/25 12:33:39 exec time: 22218
2023/03/25 12:33:39 ----- PS len: 4
2023/03/25 12:33:39 [CLIENT] executor 3 has 4 replies
2023/03/25 12:33:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:33:39 fuzzer receive 1998 signal and 0 cover from executor 3
2023/03/25 12:33:39 [SERVER] executor 2 has 0 replies
2023/03/25 12:33:39 [SERVER] executor 1 has 5 replies
2023/03/25 12:33:39 ------- fuzzer executor 1 receive 1946 signal and 0 cover from userspace component
2023/03/25 12:33:39 [SERVER] executor 0 has 5 replies
2023/03/25 12:33:39 ------- fuzzer executor 0 receive 939 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 44, 22174, 0
before receive testcase: 0 0
2023/03/25 12:33:39 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 12:33:39 ------- fuzzer executor 1 receive 28 signal and 0 cover from userspace component
2023/03/25 12:33:39 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:33:39 ----- no new client coverage: false, true
2023/03/25 12:33:39 mutate testcase with failures
2023/03/25 12:33:39 ----- splice()
2023/03/25 12:33:39 ----- insertCall()
2023/03/25 12:33:39 ----- insertCall()
2023/03/25 12:33:39 ----- generateCall 2458 open open
2023/03/25 12:33:39 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:33:39 disable threaded and collide
2023/03/25 12:33:39 prog length: 6
2023/03/25 12:33:39 prog length: 7
2023/03/25 12:33:39 HasCrashFail:true HasNetFail:false
12:33:39 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr(0x0, 0x0, 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x18000, 0x4)
setxattr$security_ima(0x0, 0x0, &(0x7f0000000000)=ANY=[@ANYBLOB="ddf191d702b516c6729268b29174f6deb810eb6327c47375223be3a71a2c1e4eb629df338657a1c1b7ac61d3bf79001878d45f574f727a0d3b2a9472a07e99c077d900d44316a6718a42d12575e1ec8586decc9c"], 0x2, 0x0)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 968
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/orangefs-client/dfs-0-28
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 26
-----finish removing dir
receive_execute: 4, 2064
mkdir time 2039
executor 3 create dir /root/orangefs-client/dfs-0-29 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-29
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 2065
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 2064
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 2065
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 748 tid 748

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 748, pid 748, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:33:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:33:41] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:33:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1912
----- completed 4
execute_call 0, 42186, 0, 1
execute_one loop: 0, 0, 42187
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1328
----- completed 7
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 42217, 0
execute_one time: 0, 42217
executor 1 write_server_output
2023/03/25 12:34:24 for select break: 1
2023/03/25 12:34:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2070, 42218, 0
before receive testcase: 0 1
2023/03/25 12:34:24 for select break: 1
2023/03/25 12:34:24 --------- executor 1 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2068, 42219, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1284
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:34:24 for select break: 1
2023/03/25 12:34:24 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2069, 42219, 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1778
2023/03/25 12:34:24 for select break: 1
2023/03/25 12:34:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:34:24 wg wait finish
2023/03/25 12:34:24 ------ all executors finish execution
2023/03/25 12:34:24 exec time: 44287
2023/03/25 12:34:24 ----- PS len: 4
2023/03/25 12:34:24 [CLIENT] executor 3 has 7 replies
2023/03/25 12:34:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:24 fuzzer receive 1912 signal and 0 cover from executor 3
2023/03/25 12:34:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:24 fuzzer receive 1328 signal and 0 cover from executor 3
2023/03/25 12:34:24 [SERVER] executor 0 has 5 replies
2023/03/25 12:34:24 ------- fuzzer executor 0 receive 1284 signal and 0 cover from userspace component
2023/03/25 12:34:24 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:34:24 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 12:34:24 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:34:24 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:34:24 [SERVER] executor 1 has 0 replies
2023/03/25 12:34:24 [SERVER] executor 2 has 0 replies
time breakdown 0: 2068, 42221, 0
before receive testcase: 0 0
2023/03/25 12:34:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:34:24 ----- no new client coverage: false, true
2023/03/25 12:34:24 mutate testcase with failures
2023/03/25 12:34:24 ----- insertCall()
2023/03/25 12:34:24 ----- generateCall 3761 stat stat
2023/03/25 12:34:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:34:24 disable threaded and collide
2023/03/25 12:34:24 prog length: 6
2023/03/25 12:34:24 prog length: 18
2023/03/25 12:34:24 HasCrashFail:true HasNetFail:false
12:34:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000b00)='./file0/file0\x00', &(0x7f0000000b40))
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
syz_failure_sync(0x0, 0x3)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5656
remove dir: /root/orangefs-client/dfs-0-29
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 36
-----finish removing dir
receive_execute: 1, 49
receive_execute: 2, 49
receive_execute: 4, 49
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-30 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 15580, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3890, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 3990, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2111
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:34:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 308
----- completed 13
execute_call 0, 10046, 0, 1
execute_one loop: 0, 0, 10047
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10047
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 764 tid 764

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 764, pid 764, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:34:34] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10099, 0
execute_one time: 0, 10099
[D 03/25/2023 11:34:34] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 2016, 0, 0
execute_one loop: 0, 0, 2016
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 14
----- completed 16
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 419, write pid:419
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 12133, 0
execute_one time: 0, 12133
2023/03/25 12:34:36 for select break: 1
2023/03/25 12:34:36 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:34:36 for select break: 1
2023/03/25 12:34:36 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 51, 12137, 0
before receive testcase: 0 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:34:36 for select break: 1
2023/03/25 12:34:36 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 12137, 0
before receive testcase: 0 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 18240, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2341
2023/03/25 12:34:36 for select break: 1
2023/03/25 12:34:36 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:34:36 wg wait finish
2023/03/25 12:34:36 ------ all executors finish execution
2023/03/25 12:34:36 exec time: 12188
2023/03/25 12:34:36 ----- PS len: 4
2023/03/25 12:34:36 [CLIENT] executor 3 has 18 replies
2023/03/25 12:34:36 [SERVER] executor 1 has 0 replies
2023/03/25 12:34:36 [SERVER] executor 2 has 0 replies
2023/03/25 12:34:36 [SERVER] executor 0 has 9 replies
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 12:34:36 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:34:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 308 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:36 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 0: 51, 12138, 0
before receive testcase: 0 0
2023/03/25 12:34:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:34:36 ----- no new client coverage: false, true
2023/03/25 12:34:36 mutate testcase with failures
2023/03/25 12:34:36 ----- mutateArg()
2023/03/25 12:34:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:34:36 disable threaded and collide
2023/03/25 12:34:36 prog length: 6
2023/03/25 12:34:36 prog length: 13
2023/03/25 12:34:36 HasCrashFail:true HasNetFail:false
12:34:36 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0xffffffffffffffff, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 3: 55, 12134, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2848
remove dir: /root/orangefs-client/dfs-0-30
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 2043
executor 3 create dir /root/orangefs-client/dfs-0-31 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-31
receive_execute: 4, 2061
receive_execute: 3, 2061
receive_execute: 2, 2061
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 2061
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 780 tid 780

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 780, pid 780, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:34:38] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 35, 0
execute_one time: 0, 35
[E 03/25/2023 11:34:38] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:34:38] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2019
----- completed 7
execute_call 0, 2014, 0, 1
execute_one loop: 0, 0, 2015
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 421, write pid:421
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2061, 0
execute_one time: 0, 2062
-----executor 0 collect shmids 5
----- directly resend shmid 5
2023/03/25 12:34:40 for select break: 1
2023/03/25 12:34:40 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2066, 2063, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:34:40 for select break: 1
2023/03/25 12:34:40 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2065, 2065, 0
before receive testcase: 0 0
----- executor 0 signal number : 1294
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14142, flag collect 0
----- executor 0 signal number : 93
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 687
executor 0 server cover_cnt 6 output_pos_value 2488
executor 1 write_server_output
2023/03/25 12:34:40 for select break: 1
2023/03/25 12:34:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2063, 2066, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:34:40 for select break: 1
2023/03/25 12:34:40 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:34:40 wg wait finish
2023/03/25 12:34:40 ------ all executors finish execution
2023/03/25 12:34:40 exec time: 4131
2023/03/25 12:34:40 ----- PS len: 4
2023/03/25 12:34:40 [CLIENT] executor 3 has 13 replies
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 [SERVER] executor 0 has 6 replies
2023/03/25 12:34:40 [SERVER] executor 2 has 0 replies
2023/03/25 12:34:40 [SERVER] executor 1 has 0 replies
2023/03/25 12:34:40 ------- fuzzer executor 0 receive 1294 signal and 0 cover from userspace component
2023/03/25 12:34:40 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:34:40 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 12:34:40 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:34:40 ------- fuzzer executor 0 receive 93 signal and 0 cover from userspace component
2023/03/25 12:34:40 ------- fuzzer executor 0 receive 687 signal and 0 cover from userspace component
time breakdown 1: 2064, 2070, 0
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 2019 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:40 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:34:40 ----- no new client coverage: false, true
2023/03/25 12:34:40 ----- enqueue testcases with server coveraged
2023/03/25 12:34:40 disable threaded and collide
2023/03/25 12:34:40 prog length: 6
2023/03/25 12:34:40 prog length: 13
2023/03/25 12:34:40 HasCrashFail:true HasNetFail:false
12:34:40 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0xffffffffffffffff, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2848
remove dir: /root/orangefs-client/dfs-0-31
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 44
-----finish removing dir
mkdir time 2034
executor 3 create dir /root/orangefs-client/dfs-0-32 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-32
receive_execute: 8, 2075
receive_execute: 6, 2078
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 2078
receive_execute: 8, 2079
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 797 tid 797

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 797, pid 797, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:34:42] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 37, 0
execute_one time: 0, 37
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:34:42] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:34:42] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1687, signal number : 2000
----- completed 7
execute_call 0, 12051, 0, 5
execute_one loop: 0, 0, 12056
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12099, 0
execute_one time: 1, 12099
2023/03/25 12:34:54 for select break: 1
2023/03/25 12:34:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2087, 12100, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:34:54 for select break: 1
2023/03/25 12:34:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2079, 12102, 0
2023/03/25 12:34:54 for select break: 1
2023/03/25 12:34:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2084, 12103, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 0 cover number : 931, signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 229, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 109, signal number : 102
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 1
----- executor 0 cover number : 731, signal number : 698
executor 0 server cover_cnt 6 output_pos_value 4472
2023/03/25 12:34:54 for select break: 1
2023/03/25 12:34:54 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:34:54 wg wait finish
2023/03/25 12:34:54 ------ all executors finish execution
2023/03/25 12:34:54 exec time: 14197
2023/03/25 12:34:54 ----- PS len: 4
2023/03/25 12:34:54 [CLIENT] executor 3 has 13 replies
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 2000 signal and 1687 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:54 [SERVER] executor 0 has 6 replies
2023/03/25 12:34:54 ------- fuzzer executor 0 receive 1126 signal and 931 cover from userspace component
2023/03/25 12:34:54 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 12:34:54 ------- fuzzer executor 0 receive 239 signal and 229 cover from userspace component
2023/03/25 12:34:54 ------- fuzzer executor 0 receive 152 signal and 126 cover from userspace component
2023/03/25 12:34:54 ------- fuzzer executor 0 receive 102 signal and 109 cover from userspace component
2023/03/25 12:34:54 ------- fuzzer executor 0 receive 698 signal and 731 cover from userspace component
2023/03/25 12:34:54 [SERVER] executor 1 has 0 replies
2023/03/25 12:34:54 [SERVER] executor 2 has 0 replies
time breakdown 0: 2083, 12119, 0
before receive testcase: 0 0
2023/03/25 12:34:54 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:34:54 ----- triage return due to empty signal extra
2023/03/25 12:34:54 mutate testcase with failures
2023/03/25 12:34:54 ----- insertCall()
2023/03/25 12:34:54 ----- generateCall 3761 stat stat
2023/03/25 12:34:54 ----- insertCall()
2023/03/25 12:34:54 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 12:34:54 ----- mutateArg()
2023/03/25 12:34:54 ----- insertCall()
2023/03/25 12:34:54 ----- generateCall 2343 link link
2023/03/25 12:34:54 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:34:54 disable threaded and collide
2023/03/25 12:34:54 prog length: 6
2023/03/25 12:34:54 prog length: 12
2023/03/25 12:34:54 HasCrashFail:true HasNetFail:false
12:34:54 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x0, 0x3)
stat(&(0x7f00000014c0)='./file0\x00', &(0x7f0000001500))
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x1, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
link(&(0x7f0000000440)='./file0\x00', &(0x7f00000004c0)='./file0\x00')
lgetxattr(&(0x7f0000001640)='./file0\x00', &(0x7f0000000480)=@known='trusted.overlay.opaque\x00', &(0x7f0000001680)=""/4096, 0xdb3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001580)='./file0\x00', &(0x7f00000015c0), &(0x7f0000001600), 0x2, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2136
remove dir: /root/orangefs-client/dfs-0-32
remove dir time 33
-----finish removing dir
receive_execute: 1, 2054
mkdir time 2021
executor 3 create dir /root/orangefs-client/dfs-0-33 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-33
receive_execute: 17, 2054
receive_execute: 18, 2054
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 19, 2054
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 586 tid 586

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 586, pid 586, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:34:56] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 1, 31, 0
execute_one time: 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6453, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6453, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 1, 40
2023/03/25 12:34:56 for select break: 1
2023/03/25 12:34:56 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2073, 42, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 15304, flag collect 0
2023/03/25 12:34:56 for select break: 1
2023/03/25 12:34:56 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2071, 43, 0
before receive testcase: 0 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 4302, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4098, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2126
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:34:56 for select break: 1
2023/03/25 12:34:56 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2055, 44, 0
2023/03/25 12:34:56 for select break: 1
2023/03/25 12:34:56 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:34:56 wg wait finish
2023/03/25 12:34:56 ------ all executors finish execution
2023/03/25 12:34:56 exec time: 2100
2023/03/25 12:34:56 ----- PS len: 4
2023/03/25 12:34:56 [CLIENT] executor 3 has 12 replies
2023/03/25 12:34:56 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 12:34:56 [SERVER] executor 0 has 4 replies
2023/03/25 12:34:56 [SERVER] executor 2 has 0 replies
2023/03/25 12:34:56 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:34:56 [SERVER] executor 1 has 1 replies
2023/03/25 12:34:56 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:34:56 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 12:34:56 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:34:56 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:34:56 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:34:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:34:56 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:34:56 ----- no new client coverage: false, true
2023/03/25 12:34:56 mutate testcase with failures
2023/03/25 12:34:56 ----- mutateArg()
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- generateCall 2343 link link
before receive testcase: 0 0
2023/03/25 12:34:56 ----- mutateArg()
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/25 12:34:56 ----- mutateArg()
2023/03/25 12:34:56 ----- splice()
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/25 12:34:56 ----- removeCall()
2023/03/25 12:34:56 ----- mutateArg()
2023/03/25 12:34:56 ----- mutateArg()
2023/03/25 12:34:56 ----- insertCall()
2023/03/25 12:34:56 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 12:34:56 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:34:56 disable threaded and collide
2023/03/25 12:34:56 prog length: 6
2023/03/25 12:34:56 prog length: 8
2023/03/25 12:34:56 HasCrashFail:true HasNetFail:false
12:34:56 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000040)='./file0\x00')
setxattr$incfs_id(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)={'0000000000000000000000000000000', 0x33}, 0x20, 0x3)
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000300)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x2, 0x1)
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0/file1\x00', &(0x7f0000000140), &(0x7f0000000100), 0x4, 0x2)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0/file1/file0\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x2, 0x2)
link(&(0x7f0000000240)='./file0/file0\x00', &(0x7f0000000200)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1672
remove dir: /root/orangefs-client/dfs-0-33
time breakdown 1: 2072, 46, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 17
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:34:56] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:34:56] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:34:56] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:34:56] Error: Could not initialize server subsystems
[E 03/25/2023 11:34:56] Error: Could not initialize server; aborting.
receive_execute: 4, 6055
receive_execute: 1, 6056
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 6055
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 6038
executor 3 create dir /root/orangefs-client/dfs-0-34 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-34
receive_execute: 5, 6058
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2605
----- completed 1
execute_call 0, 4029, 0, 0
execute_one loop: 0, 0, 4029
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 312
----- completed 2
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4056, 0, 0
execute_one loop: 0, 0, 4056
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2603
----- executor 0 executes write_coverage_signal cov->size 26176, flag collect 0
----- executor 0 signal number : 1138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 24248, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4128
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:35:06] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10041, 0, 0
execute_one loop: 0, 0, 10041
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 48
----- completed 5
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10066, 0, 0
execute_one loop: 0, 0, 10066
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 815 tid 815

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 815, pid 815, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:35:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 14159, 0
execute_one time: 1, 14159
----- executor 3 write_call_output, size 32765, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 103
----- completed 7
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 426, write pid:426
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 98
----- completed 8
execute_call 0, 34, 0, 1
execute_one loop: 0, 0, 35
executor 3, execute_one inner time: 0, 14215, 0
execute_one time: 0, 14215
2023/03/25 12:35:17 for select break: 1
2023/03/25 12:35:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6063, 14216, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:35:17 for select break: 1
2023/03/25 12:35:17 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 515
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 24480, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 11
executor 0 server cover_cnt 9 output_pos_value 4984
time breakdown 2: 6059, 14220, 0
before receive testcase: 0 0
2023/03/25 12:35:17 for select break: 1
2023/03/25 12:35:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:35:17 for select break: 1
2023/03/25 12:35:17 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:35:17 wg wait finish
2023/03/25 12:35:17 ------ all executors finish execution
2023/03/25 12:35:17 exec time: 20279
2023/03/25 12:35:17 ----- PS len: 4
2023/03/25 12:35:17 [CLIENT] executor 3 has 8 replies
2023/03/25 12:35:17 fuzzer receive 2605 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 312 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/25 12:35:17 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/25 12:35:17 [SERVER] executor 0 has 9 replies
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 2603 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 1138 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 515 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 12:35:17 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
time breakdown 1: 6057, 14222, 0
2023/03/25 12:35:17 [SERVER] executor 1 has 0 replies
2023/03/25 12:35:17 [SERVER] executor 2 has 0 replies
2023/03/25 12:35:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:35:17 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 12:35:17 mutate testcase with failures
2023/03/25 12:35:17 ----- insertCall()
2023/03/25 12:35:17 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/25 12:35:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:35:17 disable threaded and collide
2023/03/25 12:35:17 prog length: 6
2023/03/25 12:35:17 prog length: 20
2023/03/25 12:35:17 HasCrashFail:true HasNetFail:false
12:35:17 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
fcntl$addseals(0xffffffffffffffff, 0x409, 0xc)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4416
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/orangefs-client/dfs-0-34
time breakdown 0: 6056, 14223, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 140
-----finish removing dir
[D 03/25/2023 11:35:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
mkdir time 2019
executor 3 create dir /root/orangefs-client/dfs-0-35 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-35
receive_execute: 2, 2159
receive_execute: 4, 2159
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 5, 2163
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
receive_execute: 1, 2163
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 603 tid 603

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 603, pid 603, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:35:19] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 48, 0
execute_one time: 5, 48
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 73, 0
execute_one time: 0, 73
2023/03/25 12:35:19 for select break: 1
2023/03/25 12:35:19 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 2168, 73, 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32674, flag collect 0
----- executor 1 signal number : 899
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 12272, flag collect 0
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3755, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3408, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2128
2023/03/25 12:35:19 for select break: 1
2023/03/25 12:35:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2164, 75, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:35:19 for select break: 1
2023/03/25 12:35:19 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 2163, 79, 0
time breakdown 0: 2161, 80, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/25 12:35:19 for select break: 1
2023/03/25 12:35:19 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:35:19 wg wait finish
2023/03/25 12:35:19 ------ all executors finish execution
2023/03/25 12:35:19 exec time: 2246
2023/03/25 12:35:19 ----- PS len: 4
2023/03/25 12:35:19 [CLIENT] executor 3 has 20 replies
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:19 [SERVER] executor 1 has 1 replies
2023/03/25 12:35:19 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:35:19 [SERVER] executor 0 has 4 replies
2023/03/25 12:35:19 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 12:35:19 [SERVER] executor 2 has 0 replies
2023/03/25 12:35:19 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:35:19 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:35:19 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:35:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:19 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:35:19 ----- no new client coverage: false, true
2023/03/25 12:35:19 mutate testcase with failures
2023/03/25 12:35:19 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:35:19 disable threaded and collide
2023/03/25 12:35:19 prog length: 6
2023/03/25 12:35:19 prog length: 17
2023/03/25 12:35:19 HasCrashFail:true HasNetFail:false
12:35:19 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5484bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b0890b19090f501a6ab4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa69fa17d5bbcf93f98e3eea9"], 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000900)=ANY=[@ANYBLOB="747275ff7465642e6f7665726c616e2e7265646972656374000004304e73ed6b9907ba059d82e35ddb4fcd7aa7303f328cbd9e668dafe0527ad644b0f58f454cb300df0d06e7a7336dd8e8aa164b33b3df7fbb30663c6835c9298e5658ade4dba551deca3d87fe6cc7ec9b6b31709355be6f372925e64df8eac0f9a8363132c5fcc480308caa534012bf9f8298573d2901f56d542acb0f593bea91d4"], 0x1a, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3880
remove dir: /root/orangefs-client/dfs-0-35
remove dir time 19
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:35:19] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:35:19] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:35:19] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:35:19] Error: Could not initialize server subsystems
[E 03/25/2023 11:35:19] Error: Could not initialize server; aborting.
mkdir time 4034
executor 3 create dir /root/orangefs-client/dfs-0-36 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-36
receive_execute: 9, 4053
receive_execute: 8, 4053
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 12, 4054
receive_execute: 10, 4053
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6683, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6683, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 12886, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 12886, flag collect 0
----- executor 3 signal number : 33
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 618 tid 618

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 618, pid 618, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:35:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 61, 0
execute_one time: 0, 61
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4066, 62, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 1 receive reply, reply.done 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 61, 0
execute_one time: 1, 61
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4062, 64, 0
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:35:23 wg wait finish
2023/03/25 12:35:23 ------ all executors finish execution
2023/03/25 12:35:23 exec time: 4118
2023/03/25 12:35:23 ----- PS len: 4
2023/03/25 12:35:23 [CLIENT] executor 3 has 17 replies
2023/03/25 12:35:23 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 [SERVER] executor 0 has 4 replies
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 15616, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4508, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4152, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2123
time breakdown 0: 4061, 65, 0
before receive testcase: 0 0
2023/03/25 12:35:23 [SERVER] executor 2 has 0 replies
2023/03/25 12:35:23 [SERVER] executor 1 has 1 replies
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:35:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:35:23 ----- no new client coverage: false, true
2023/03/25 12:35:23 mutate testcase with failures
2023/03/25 12:35:23 ----- insertCall()
2023/03/25 12:35:23 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 12:35:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:35:23 disable threaded and collide
2023/03/25 12:35:23 prog length: 6
2023/03/25 12:35:23 prog length: 10
2023/03/25 12:35:23 HasCrashFail:true HasNetFail:false
12:35:23 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
syz_failure_sync(0x1, 0x3)
fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=ANY=[@ANYBLOB='btrfs\x00\x00\x00\x00\x00'], &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1680
remove dir: /root/orangefs-client/dfs-0-36
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 4063, 64, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 19
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-37 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-37
receive_execute: 0, 32
receive_execute: 2, 33
receive_execute: 4, 31
receive_execute: 3, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6461, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 9883, flag collect 0
----- executor 1 signal number : 842
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
executor 1 server cover_cnt 2 output_pos_value 854
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 634 tid 634

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 634, pid 634, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:35:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 44, 0
execute_one time: 0, 44
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 3 receive reply, reply.done 1
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 35, 46, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28588, flag collect 0
----- executor 0 signal number : 1427
----- executor 0 executes write_coverage_signal cov->size 10930, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3135, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2901, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2117
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 41, 0
execute_one time: 0, 42
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 843
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
executor 1 server cover_cnt 6 output_pos_value 1810
time breakdown 3: 36, 45, 0
before receive testcase: 0 1
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 35, 47, 0
before receive testcase: 0 0
2023/03/25 12:35:23 for select break: 1
2023/03/25 12:35:23 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:35:23 wg wait finish
2023/03/25 12:35:23 ------ all executors finish execution
2023/03/25 12:35:23 exec time: 80
2023/03/25 12:35:23 ----- PS len: 4
2023/03/25 12:35:23 [CLIENT] executor 3 has 10 replies
2023/03/25 12:35:23 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:35:23 [SERVER] executor 1 has 6 replies
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 842 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 12:35:23 [SERVER] executor 2 has 0 replies
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 843 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
time breakdown 0: 32, 47, 0
2023/03/25 12:35:23 [SERVER] executor 0 has 4 replies
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 1427 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:35:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:35:23 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 12:35:23 ----- no new client coverage: false, true
2023/03/25 12:35:23 mutate testcase with failures
2023/03/25 12:35:23 ----- insertCall()
2023/03/25 12:35:23 ----- generateCall 170 dup dup
2023/03/25 12:35:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:35:23 disable threaded and collide
2023/03/25 12:35:23 prog length: 6
2023/03/25 12:35:23 prog length: 15
2023/03/25 12:35:23 HasCrashFail:true HasNetFail:false
12:35:23 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
syz_failure_sync(0x0, 0x3)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x1, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
r3 = open(&(0x7f0000000440)='./file0\x00', 0x0, 0x113)
dup(r3)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3056
remove dir: /root/orangefs-client/dfs-0-37
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 14
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:35:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 11:35:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:35:23] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:35:23] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:35:23] Error: Could not initialize server subsystems
[E 03/25/2023 11:35:23] Error: Could not initialize server; aborting.
receive_execute: 1, 2036
mkdir time 2022
executor 3 create dir /root/orangefs-client/dfs-0-38 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-38
receive_execute: 3, 2036
receive_execute: 3, 2035
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 2036
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 32765, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2804
----- completed 6
execute_call 0, 50240, 0, 1
execute_one loop: 0, 0, 50241
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 50241, 0, 0
execute_one loop: 0, 0, 50241
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 649 tid 649

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 649, pid 649, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:36:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 50265, 0
execute_one time: 0, 50266
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 10000, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 474
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 432, write pid:432
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 50293, 0
execute_one time: 1, 50293
2023/03/25 12:36:15 for select break: 1
2023/03/25 12:36:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1997
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2040, 50297, 0
before receive testcase: 0 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 77
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 618
executor 0 server cover_cnt 5 output_pos_value 3334
2023/03/25 12:36:15 for select break: 1
2023/03/25 12:36:15 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:36:15 for select break: 1
2023/03/25 12:36:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2037, 50300, 0
time breakdown 1: 2038, 50299, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 12:36:15 for select break: 1
2023/03/25 12:36:15 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:36:15 wg wait finish
2023/03/25 12:36:15 ------ all executors finish execution
2023/03/25 12:36:15 exec time: 52341
2023/03/25 12:36:15 ----- PS len: 4
2023/03/25 12:36:15 [CLIENT] executor 3 has 15 replies
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 2804 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 474 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:15 [SERVER] executor 0 has 5 replies
2023/03/25 12:36:15 ------- fuzzer executor 0 receive 1997 signal and 0 cover from userspace component
2023/03/25 12:36:15 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/25 12:36:15 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 12:36:15 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 12:36:15 ------- fuzzer executor 0 receive 618 signal and 0 cover from userspace component
2023/03/25 12:36:15 [SERVER] executor 1 has 1 replies
2023/03/25 12:36:15 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:36:15 [SERVER] executor 2 has 0 replies
2023/03/25 12:36:15 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:36:15 ----- no new client coverage: false, true
2023/03/25 12:36:15 mutate testcase with failures
2023/03/25 12:36:15 ----- insertCall()
2023/03/25 12:36:15 ----- insertCall()
2023/03/25 12:36:15 ----- insertCall()
2023/03/25 12:36:15 ----- insertCall()
2023/03/25 12:36:15 ----- mutateArg()
2023/03/25 12:36:15 ----- insertCall()
2023/03/25 12:36:15 ----- insertCall()
2023/03/25 12:36:15 ----- mutateArg()
2023/03/25 12:36:15 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:36:15 disable threaded and collide
2023/03/25 12:36:15 prog length: 6
2023/03/25 12:36:15 prog length: 20
2023/03/25 12:36:15 HasCrashFail:true HasNetFail:false
12:36:15 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001d40)=ANY=[@ANYBLOB="2321202e2f66696c6530202d20ea7d2e3a5b240ac9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593e1bb2f1a2b8f2b8cbdb0c7409593614f91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb316e39623cadeaf12fe93aad5102414a9d45b60f757612a567ea60430ebe27a5029e74800b8fb46256e43ae76fb0d6acf5a3e7d8d14935286ea9438583c225a90757008e497a89bb45e025b20ddb953ccab2c0bd81"], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0xfd31, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)=ANY=[@ANYBLOB="00fb7e02ef2b2c74ebac18f03bce919df3e8c5d10a46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b5621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000000), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=ANY=[@ANYBLOB="0483ac44928f2ef4000000"], 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 2: 2039, 50304, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4264
remove dir: /root/orangefs-client/dfs-0-38
remove dir time 20
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:36:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:36:15] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:36:15] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:36:15] Error: Could not initialize server subsystems
[E 03/25/2023 11:36:15] Error: Could not initialize server; aborting.
mkdir time 4048
executor 3 create dir /root/orangefs-client/dfs-0-39 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-39
receive_execute: 6, 4074
receive_execute: 7, 4074
receive_execute: 2, 4074
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 15, 4068
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 3056, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2086
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 838 tid 838

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 838, pid 838, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:36:19] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 32, 0
execute_one time: 0, 32
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:36:19] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:36:19] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 406
----- completed 7
execute_call 0, 2008, 0, 2
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 12
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2061, 0
execute_one time: 1, 2061
time breakdown 3: 4083, 2062, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 888
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:36:22 for select break: 1
2023/03/25 12:36:22 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:36:22 for select break: 1
2023/03/25 12:36:22 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 4081, 2064, 0
before receive testcase: 0 0
2023/03/25 12:36:22 for select break: 1
2023/03/25 12:36:22 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4076, 2064, 0
before receive testcase: 0 0
2023/03/25 12:36:22 for select break: 1
2023/03/25 12:36:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:36:22 wg wait finish
2023/03/25 12:36:22 ------ all executors finish execution
2023/03/25 12:36:22 exec time: 6139
2023/03/25 12:36:22 ----- PS len: 4
2023/03/25 12:36:22 [CLIENT] executor 3 has 20 replies
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 [SERVER] executor 0 has 9 replies
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 12:36:22 fuzzer receive 406 signal and 0 cover from executor 3
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 [SERVER] executor 2 has 0 replies
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 888 signal and 0 cover from userspace component
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 12:36:22 [SERVER] executor 1 has 0 replies
2023/03/25 12:36:22 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/25 12:36:22 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:36:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:36:22 ----- no new client coverage: false, true
2023/03/25 12:36:22 ----- enqueue testcases with server coveraged
2023/03/25 12:36:22 disable threaded and collide
2023/03/25 12:36:22 prog length: 6
2023/03/25 12:36:22 prog length: 20
2023/03/25 12:36:22 HasCrashFail:true HasNetFail:false
12:36:22 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001d40)=ANY=[@ANYBLOB="2321202e2f66696c6530202d20ea7d2e3a5b240ac9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593e1bb2f1a2b8f2b8cbdb0c7409593614f91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb316e39623cadeaf12fe93aad5102414a9d45b60f757612a567ea60430ebe27a5029e74800b8fb46256e43ae76fb0d6acf5a3e7d8d14935286ea9438583c225a90757008e497a89bb45e025b20ddb953ccab2c0bd81"], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0xfd31, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)=ANY=[@ANYBLOB="00fb7e02ef2b2c74ebac18f03bce919df3e8c5d10a46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b5621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000000), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=ANY=[@ANYBLOB="0483ac44928f2ef4000000"], 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4264
remove dir: /root/orangefs-client/dfs-0-39
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 16601, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 3172
time breakdown 0: 4080, 2065, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 40
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-40 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-40
receive_execute: 4, 50
receive_execute: 5, 48
receive_execute: 6, 51
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 5, 50
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 2061
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 15
----- completed 4
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8184, flag collect 1
----- executor 0 cover number : 1196, signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 3056, flag collect 1
----- executor 0 cover number : 302, signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 1
----- executor 0 cover number : 280, signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 1
----- executor 0 cover number : 98, signal number : 71
executor 0 server cover_cnt 4 output_pos_value 3964
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 854 tid 854

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 854, pid 854, value 1

-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:36:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 31, 0
execute_one time: 0, 31
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:36:22] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:36:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 2028, 0, 0
execute_one loop: 0, 0, 2028
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 16
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 16
----- completed 10
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 16
----- completed 11
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 16
----- completed 12
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 16
----- completed 13
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 1
----- executor 3 cover number : 1750, signal number : 16
----- completed 16
execute_call 0, 2, 0, 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2084, 0
execute_one time: 0, 2084
2023/03/25 12:36:24 for select break: 1
2023/03/25 12:36:24 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 57, 2085, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:36:24 for select break: 1
2023/03/25 12:36:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 55, 2086, 0
before receive testcase: 0 0
----- executor 0 cover number : 1716, signal number : 1974
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 12:36:24 for select break: 1
2023/03/25 12:36:24 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 54, 2094, 0
before receive testcase: 0 0
----- executor 0 cover number : 425, signal number : 1940
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 294, signal number : 330
----- executor 0 executes write_coverage_signal cov->size 15968, flag collect 1
----- executor 0 cover number : 109, signal number : 110
executor 0 server cover_cnt 9 output_pos_value 10887
time breakdown 0: 54, 2105, 0
before receive testcase: 0 1
2023/03/25 12:36:24 for select break: 1
2023/03/25 12:36:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:36:24 wg wait finish
2023/03/25 12:36:24 ------ all executors finish execution
2023/03/25 12:36:24 exec time: 2164
2023/03/25 12:36:24 ----- PS len: 4
2023/03/25 12:36:24 [CLIENT] executor 3 has 20 replies
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 [SERVER] executor 0 has 9 replies
2023/03/25 12:36:24 [SERVER] executor 1 has 0 replies
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 1409 signal and 1196 cover from userspace component
2023/03/25 12:36:24 [SERVER] executor 2 has 0 replies
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 316 signal and 302 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 279 signal and 280 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 71 signal and 98 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 1974 signal and 1716 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 1940 signal and 425 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 330 signal and 294 cover from userspace component
2023/03/25 12:36:24 ------- fuzzer executor 0 receive 110 signal and 109 cover from userspace component
2023/03/25 12:36:24 fuzzer receive 2061 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 15 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 16 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 16 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 16 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 16 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 16 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 16 signal and 1750 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:36:24 ----- triage return due to empty signal extra
2023/03/25 12:36:24 mutate testcase with failures
2023/03/25 12:36:24 ----- mutateArg()
2023/03/25 12:36:24 ----- mutateArg()
2023/03/25 12:36:24 ----- mutateArg()
2023/03/25 12:36:24 ----- insertCall()
2023/03/25 12:36:24 ----- generateCall 2458 open open
2023/03/25 12:36:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:36:24 disable threaded and collide
2023/03/25 12:36:24 prog length: 6
2023/03/25 12:36:24 prog length: 7
2023/03/25 12:36:24 HasCrashFail:true HasNetFail:false
12:36:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr(0x0, 0x0, 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x42)
setxattr$security_ima(0x0, 0x0, &(0x7f0000000040)=@v1={0x2, "56707d390246c017520600fe63f4b100"}, 0x11, 0x3)
open(&(0x7f0000000000)='./file0/file0\x00', 0x400, 0x100)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x38)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 944
remove dir: /root/orangefs-client/dfs-0-40
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 22
-----finish removing dir
receive_execute: 10, 35
receive_execute: 29, 35
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-41 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-41
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 22, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 30, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 869 tid 869

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 869, pid 869, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:36:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:36:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:36:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2001
----- completed 4
execute_call 0, 22080, 0, 1
execute_one loop: 0, 0, 22081
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 10034, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 10034, flag collect 0
----- executor 3 signal number : 854
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 22109, 0
execute_one time: 1, 22109
2023/03/25 12:36:46 for select break: 1
2023/03/25 12:36:46 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 66, 22112, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:36:46 for select break: 1
2023/03/25 12:36:46 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 64, 22114, 0
before receive testcase: 0 0
2023/03/25 12:36:46 for select break: 1
2023/03/25 12:36:46 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 57, 22115, 0
before receive testcase: 0 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1641
2023/03/25 12:36:46 for select break: 1
2023/03/25 12:36:46 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:36:46 wg wait finish
2023/03/25 12:36:46 ------ all executors finish execution
2023/03/25 12:36:46 exec time: 22151
2023/03/25 12:36:46 ----- PS len: 4
2023/03/25 12:36:46 [CLIENT] executor 3 has 7 replies
time breakdown 0: 45, 22116, 0
2023/03/25 12:36:46 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 12:36:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:46 [SERVER] executor 0 has 5 replies
2023/03/25 12:36:46 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/03/25 12:36:46 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:36:46 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 12:36:46 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:36:46 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 12:36:46 [SERVER] executor 1 has 0 replies
2023/03/25 12:36:46 [SERVER] executor 2 has 0 replies
2023/03/25 12:36:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:46 fuzzer receive 2001 signal and 0 cover from executor 3
2023/03/25 12:36:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:46 fuzzer receive 854 signal and 0 cover from executor 3
2023/03/25 12:36:46 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:36:46 ----- no new client coverage: false, true
2023/03/25 12:36:46 ----- enqueue testcases with server coveraged
2023/03/25 12:36:46 disable threaded and collide
2023/03/25 12:36:46 prog length: 6
2023/03/25 12:36:46 prog length: 7
2023/03/25 12:36:46 HasCrashFail:true HasNetFail:false
12:36:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr(0x0, 0x0, 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x42)
setxattr$security_ima(0x0, 0x0, &(0x7f0000000040)=@v1={0x2, "56707d390246c017520600fe63f4b100"}, 0x11, 0x3)
open(&(0x7f0000000000)='./file0/file0\x00', 0x400, 0x100)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x38)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 944
remove dir: /root/orangefs-client/dfs-0-41
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 25
-----finish removing dir
receive_execute: 2, 10080
mkdir time 10055
executor 3 create dir /root/orangefs-client/dfs-0-42 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-42
receive_execute: 3, 10080
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 10081
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 3, 10081
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 885 tid 885

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 885, pid 885, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:36:56] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 28, 0
execute_one time: 1, 28
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:36:56] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:36:56] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1694, signal number : 2014
----- completed 4
execute_call 0, 2020, 0, 6
execute_one loop: 0, 0, 2026
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 10044, pid 440, write pid:440
----- executor 3 executes write_coverage_signal cov->size 10044, flag collect 1
----- executor 3 cover number : 2028, signal number : 842
----- completed 7
execute_call 0, 3, 0, 4
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 2061, 0
execute_one time: 0, 2061
2023/03/25 12:36:58 for select break: 1
2023/03/25 12:36:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10086, 2061, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:36:58 for select break: 1
2023/03/25 12:36:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10084, 2062, 0
before receive testcase: 0 0
----- executor 0 cover number : 918, signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 12:36:58 for select break: 1
time breakdown 2: 10083, 2063, 0
before receive testcase: 0 1
2023/03/25 12:36:58 --------- executor 2 receive reply, reply.done 1
----- executor 0 cover number : 229, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14507, flag collect 1
----- executor 0 cover number : 112, signal number : 109
executor 0 server cover_cnt 5 output_pos_value 3015
2023/03/25 12:36:58 for select break: 1
2023/03/25 12:36:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:36:58 wg wait finish
2023/03/25 12:36:58 ------ all executors finish execution
2023/03/25 12:36:58 exec time: 12159
2023/03/25 12:36:58 ----- PS len: 4
2023/03/25 12:36:58 [CLIENT] executor 3 has 7 replies
2023/03/25 12:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:58 fuzzer receive 2014 signal and 1694 cover from executor 3
2023/03/25 12:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:36:58 fuzzer receive 842 signal and 2028 cover from executor 3
2023/03/25 12:36:58 [SERVER] executor 0 has 5 replies
2023/03/25 12:36:58 ------- fuzzer executor 0 receive 1104 signal and 918 cover from userspace component
2023/03/25 12:36:58 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 12:36:58 ------- fuzzer executor 0 receive 239 signal and 229 cover from userspace component
2023/03/25 12:36:58 ------- fuzzer executor 0 receive 152 signal and 126 cover from userspace component
2023/03/25 12:36:58 ------- fuzzer executor 0 receive 109 signal and 112 cover from userspace component
2023/03/25 12:36:58 [SERVER] executor 1 has 0 replies
2023/03/25 12:36:58 [SERVER] executor 2 has 0 replies
2023/03/25 12:36:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:36:58 ----- triage return due to empty signal extra
2023/03/25 12:36:58 mutate testcase with failures
2023/03/25 12:36:58 ----- mutateArg()
2023/03/25 12:36:58 ----- insertCall()
2023/03/25 12:36:58 ----- generateCall 2458 open open
2023/03/25 12:36:58 ----- insertCall()
2023/03/25 12:36:58 ----- generateCall 2458 open open
2023/03/25 12:36:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:36:58 disable threaded and collide
2023/03/25 12:36:58 prog length: 6
2023/03/25 12:36:58 prog length: 19
2023/03/25 12:36:58 HasCrashFail:true HasNetFail:false
12:36:58 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, r0}, {0x2, 0x2, r0}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
open(&(0x7f0000000b40)='./file0\x00', 0x280, 0x1f0)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
open(&(0x7f0000000b00)='./file0\x00', 0x208000, 0x80)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 10082, 2078, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5856
remove dir: /root/orangefs-client/dfs-0-42
remove dir time 41
-----finish removing dir
receive_execute: 1, 4080
mkdir time 4039
executor 3 create dir /root/orangefs-client/dfs-0-43 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-43
receive_execute: 16, 4080
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 17, 4081
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 16, 4080
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 901 tid 901

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 901, pid 901, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:37:02] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 23, 0
execute_one time: 0, 23
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:37:02] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:37:02] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2020, 0, 0
execute_one loop: 0, 0, 2020
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 2061
----- completed 4
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 1, 2091, 0
execute_one time: 0, 2092
time breakdown 3: 4098, 2092, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:37:04 for select break: 1
2023/03/25 12:37:04 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:37:04 for select break: 1
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:37:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4096, 2094, 0
before receive testcase: 0 1
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 18206, flag collect 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1618
time breakdown 2: 4096, 2094, 0
before receive testcase: 0 0
2023/03/25 12:37:04 for select break: 1
2023/03/25 12:37:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 4081, 2096, 0
before receive testcase: 0 0
2023/03/25 12:37:04 for select break: 1
2023/03/25 12:37:04 --------- executor 3 receive reply, reply.done 1
2023/03/25 12:37:04 wg wait finish
2023/03/25 12:37:04 ------ all executors finish execution
2023/03/25 12:37:04 exec time: 6177
2023/03/25 12:37:04 ----- PS len: 4
2023/03/25 12:37:04 [CLIENT] executor 3 has 19 replies
2023/03/25 12:37:04 [SERVER] executor 0 has 5 replies
2023/03/25 12:37:04 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 12:37:04 [SERVER] executor 1 has 0 replies
2023/03/25 12:37:04 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:37:04 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 12:37:04 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:37:04 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 12:37:04 [SERVER] executor 2 has 0 replies
2023/03/25 12:37:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:37:04 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:37:04 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 12:37:04 mutate testcase with failures
2023/03/25 12:37:04 ----- insertCall()
2023/03/25 12:37:04 ----- insertCall()
2023/03/25 12:37:04 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:37:04 disable threaded and collide
2023/03/25 12:37:04 prog length: 6
2023/03/25 12:37:04 prog length: 22
2023/03/25 12:37:04 HasCrashFail:true HasNetFail:false
12:37:04 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=ANY=[@ANYBLOB="06020cfc20a996002bf9167ac8c4f304000000000000001ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"], 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4664
remove dir: /root/orangefs-client/dfs-0-43
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 23
-----finish removing dir
mkdir time 4043
executor 3 create dir /root/orangefs-client/dfs-0-44 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-44
receive_execute: 2, 4066
receive_execute: 4, 4065
receive_execute: 4, 4066
receive_execute: 5, 4067
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 674 tid 674

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 674, pid 674, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:37:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 18, 0
execute_one time: 1, 18
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1552, flag collect 0
executor 2 write_server_output
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 75
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 22, 0
execute_one time: 1, 22
time breakdown 3: 4072, 23, 0
before receive testcase: 0 1
executor 0 server cover_cnt 4 output_pos_value 2096
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 4068, 25, 0
before receive testcase: 0 0
time breakdown 2: 4070, 25, 0
before receive testcase: 0 0
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:37:08 wg wait finish
2023/03/25 12:37:08 ------ all executors finish execution
2023/03/25 12:37:08 exec time: 4093
2023/03/25 12:37:08 ----- PS len: 4
2023/03/25 12:37:08 [CLIENT] executor 3 has 22 replies
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 [SERVER] executor 0 has 4 replies
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:37:08 [SERVER] executor 1 has 1 replies
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:37:08 [SERVER] executor 2 has 0 replies
2023/03/25 12:37:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:37:08 ----- no new client coverage: false, true
2023/03/25 12:37:08 mutate testcase with failures
2023/03/25 12:37:08 ----- mutateArg()
2023/03/25 12:37:08 ----- mutateArg()
2023/03/25 12:37:08 ----- mutateArg()
2023/03/25 12:37:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:37:08 disable threaded and collide
2023/03/25 12:37:08 prog length: 6
2023/03/25 12:37:08 prog length: 6
2023/03/25 12:37:08 prog length: 5
2023/03/25 12:37:08 HasCrashFail:true HasNetFail:false
12:37:08 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_recv(0x2)
syz_failure_down()
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_up()
syz_failure_send(0x3)
---
stat(&(0x7f0000000040)='./file1\x00', &(0x7f0000000100))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x3, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1816, prog_size 408
remove dir: /root/orangefs-client/dfs-0-44
time breakdown 1: 4069, 27, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 23
-----finish removing dir
receive_execute: 3, 33
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-45 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-45
receive_execute: 1, 33
receive_execute: 3, 32
receive_execute: 4, 33
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6447, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1558, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2078
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 509 tid 509

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 509, pid 509, value 1

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 11:37:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 919 tid 919

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 919, pid 919, value 1

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 31, 0
execute_one time: 1, 31
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:37:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 43, 0
execute_one time: 0, 43
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 37, 46, 0
----- executor 1 executes write_coverage_signal cov->size 18141, flag collect 0
----- executor 1 signal number : 1800
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 899
executor 2 server cover_cnt 1 output_pos_value 903
----- executor 1 signal number : 172
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 43, 0
execute_one time: 0, 43
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 540
----- executor 0 executes write_coverage_signal cov->size 1594, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 646, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 2666
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 35, 48, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 0 receive reply, reply.done 1
-----executor 1 collect shmids 3
----- directly resend shmid 3
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 36, 48, 0
before receive testcase: 0 0
2023/03/25 12:37:08 for select break: 1
2023/03/25 12:37:08 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:37:08 wg wait finish
2023/03/25 12:37:08 ------ all executors finish execution
2023/03/25 12:37:08 exec time: 86
2023/03/25 12:37:08 ----- PS len: 4
2023/03/25 12:37:08 [CLIENT] executor 3 has 5 replies
2023/03/25 12:37:08 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:08 [SERVER] executor 0 has 8 replies
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 540 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 12:37:08 [SERVER] executor 2 has 1 replies
2023/03/25 12:37:08 [SERVER] executor 1 has 5 replies
2023/03/25 12:37:08 ------- fuzzer executor 1 receive 1800 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 1 receive 172 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 1 receive 29 signal and 0 cover from userspace component
2023/03/25 12:37:08 ------- fuzzer executor 2 receive 899 signal and 0 cover from userspace component
2023/03/25 12:37:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:37:08 ----- no new client coverage: false, true
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 29
executor 1 server cover_cnt 5 output_pos_value 2110
time breakdown 1: 34, 52, 0
before receive testcase: 0 1
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
2023/03/25 12:37:08 mutate testcase with failures
2023/03/25 12:37:08 ----- mutateArg()
2023/03/25 12:37:08 ----- insertCall()
2023/03/25 12:37:08 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 12:37:08 ----- insertCall()
-----executor 1 collect shmids 2
----- directly resend shmid 2
2023/03/25 12:37:08 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:37:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:37:08 disable threaded and collide
2023/03/25 12:37:08 prog length: 6
2023/03/25 12:37:08 prog length: 10
2023/03/25 12:37:08 HasCrashFail:true HasNetFail:false
12:37:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000040)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000100)='./binderfs2\x00', 0x1ff)
fsetxattr$security_ima(r0, &(0x7f0000000080), &(0x7f00000000c0)=@ng={0x4, 0x12, "90c4b8139a63f67fc7761def1e0c130ab3"}, 0x13, 0x5)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1488
remove dir: /root/orangefs-client/dfs-0-45
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:37:08] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:37:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 11:37:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:37:08] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:37:08] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:37:08] Error: Could not initialize server subsystems
[E 03/25/2023 11:37:08] Error: Could not initialize server; aborting.
[D 03/25/2023 11:37:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:37:08] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 11:37:08] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:37:08] Error: Could not initialize server subsystems
[E 03/25/2023 11:37:08] Error: Could not initialize server; aborting.
remove dir time 2025
-----finish removing dir
mkdir time 4037
executor 3 create dir /root/orangefs-client/dfs-0-46 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-46
receive_execute: 12, 6063
receive_execute: 9, 6063
receive_execute: 13, 6063
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 14, 6064
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2685
----- completed 1
execute_call 0, 4034, 0, 2
execute_one loop: 0, 0, 4036
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4036, 0, 0
execute_one loop: 0, 0, 4036
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 56
----- completed 7
execute_call 0, 4039, 0, 0
execute_one loop: 0, 0, 4039
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6469, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 6469, flag collect 0
----- executor 3 signal number : 20
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4048, 0, 0
execute_one loop: 0, 0, 4048
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 691 tid 691

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 691, pid 691, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:37:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
2023/03/25 12:37:23 for select break: 1
2023/03/25 12:37:23 --------- executor 3 receive reply, reply.done 1
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
executor 1, execute_one inner time: 0, 8122, 0
execute_one time: 0, 8122
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:37:23 for select break: 1
2023/03/25 12:37:23 for select break: 1
2023/03/25 12:37:23 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:37:23 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 6076, 8124, 0
before receive testcase: 0 0
time breakdown 1: 6072, 8124, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
executor 3, execute_one inner time: 0, 8121, 0
execute_one time: 0, 8121
time breakdown 3: 6078, 8122, 0
before receive testcase: 0 0
2023/03/25 12:37:23 for select break: 1
2023/03/25 12:37:23 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:37:23 wg wait finish
2023/03/25 12:37:23 ------ all executors finish execution
2023/03/25 12:37:23 exec time: 14199
2023/03/25 12:37:23 ----- PS len: 4
2023/03/25 12:37:23 [CLIENT] executor 3 has 10 replies
2023/03/25 12:37:23 fuzzer receive 2685 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 12:37:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:23 [SERVER] executor 0 has 4 replies
2023/03/25 12:37:23 ------- fuzzer executor 0 receive 2731 signal and 0 cover from userspace component
2023/03/25 12:37:23 ------- fuzzer executor 0 receive 1239 signal and 0 cover from userspace component
2023/03/25 12:37:23 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 12:37:23 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 12:37:23 [SERVER] executor 1 has 1 replies
2023/03/25 12:37:23 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:37:23 [SERVER] executor 2 has 0 replies
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2731
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4357
time breakdown 0: 6075, 8137, 0
before receive testcase: 0 0
2023/03/25 12:37:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:37:23 ----- no new client coverage: false, true
2023/03/25 12:37:23 mutate testcase with failures
2023/03/25 12:37:23 ----- insertCall()
2023/03/25 12:37:23 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/25 12:37:23 ----- insertCall()
2023/03/25 12:37:23 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 12:37:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:37:23 disable threaded and collide
2023/03/25 12:37:23 prog length: 6
2023/03/25 12:37:23 prog length: 11
2023/03/25 12:37:23 HasCrashFail:true HasNetFail:false
12:37:23 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000140)=ANY=[@ANYBLOB="2e2f62696e64657295ff1c22e88f75dd9a994e271266730000"], 0xc, 0x1)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
r1 = open(&(0x7f0000000100)='./file0/file0\x00', 0x2400, 0x81)
fcntl$dupfd(r0, 0x0, r1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1544
remove dir: /root/orangefs-client/dfs-0-46
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 60
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:37:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:37:23] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:37:23] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:37:23] Error: Could not initialize server subsystems
[E 03/25/2023 11:37:23] Error: Could not initialize server; aborting.
receive_execute: 13, 8149
receive_execute: 14, 8148
receive_execute: 1, 8149
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 8089
executor 3 create dir /root/orangefs-client/dfs-0-47 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-47
receive_execute: 14, 8150
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 14, 0
----- executor 3 write_call_output, size 32765, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2684
----- completed 2
execute_call 0, 2041, 0, 1
execute_one loop: 0, 0, 2042
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2044, 0, 0
execute_one loop: 0, 0, 2044
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2763
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1242
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 14646, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4391
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 936 tid 936

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 936, pid 936, value 1

----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:37:33] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2068, 0
execute_one time: 0, 2068
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:37:33] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:37:33] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2016, 0, 0
execute_one loop: 0, 0, 2016
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 279
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 14
----- completed 10
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4093, 0
execute_one time: 1, 4093
2023/03/25 12:37:35 for select break: 1
2023/03/25 12:37:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 8164, 4094, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 232
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:37:35 for select break: 1
2023/03/25 12:37:35 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8162, 4096, 1
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:37:35 for select break: 1
2023/03/25 12:37:35 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8162, 4097, 0
before receive testcase: 0 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28291, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 4825
2023/03/25 12:37:35 for select break: 1
2023/03/25 12:37:35 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:37:35 wg wait finish
2023/03/25 12:37:35 ------ all executors finish execution
2023/03/25 12:37:35 exec time: 12247
2023/03/25 12:37:35 ----- PS len: 4
2023/03/25 12:37:35 [CLIENT] executor 3 has 11 replies
2023/03/25 12:37:35 [SERVER] executor 0 has 9 replies
2023/03/25 12:37:35 [SERVER] executor 2 has 0 replies
2023/03/25 12:37:35 [SERVER] executor 1 has 0 replies
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 2763 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 1242 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 232 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 12:37:35 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
time breakdown 0: 8150, 4098, 0
before receive testcase: 0 0
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 2684 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 279 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 12:37:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:37:35 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:37:35 ----- no new client coverage: false, true
2023/03/25 12:37:35 mutate testcase with failures
2023/03/25 12:37:35 ----- insertCall()
2023/03/25 12:37:35 ----- generateCall 2343 link link
2023/03/25 12:37:35 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:37:35 disable threaded and collide
2023/03/25 12:37:35 prog length: 6
2023/03/25 12:37:35 prog length: 18
2023/03/25 12:37:35 HasCrashFail:true HasNetFail:false
12:37:35 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
link(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000b40)='./file0/file0\x00')
---

end of program
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5696
remove dir: /root/orangefs-client/dfs-0-47
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 4032
executor 3 create dir /root/orangefs-client/dfs-0-48 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-48
receive_execute: 3, 4070
receive_execute: 1, 4071
receive_execute: 2, 4071
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 4073
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12254, flag collect 0
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 4584, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2092
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:37:39] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10055, 0, 0
execute_one loop: 0, 0, 10055
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 308
----- completed 6
execute_call 0, 10044, 0, 3
execute_one loop: 0, 0, 10047
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10028, 0, 0
execute_one loop: 0, 0, 10028
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30131, 0, 0
execute_one loop: 0, 0, 30131
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 953 tid 953

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 953, pid 953, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:38:09] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30165, 0
execute_one time: 0, 30165
----- executor 3 write_call_output, size 32765, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 104
----- completed 9
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
[D 03/25/2023 11:38:09] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 12
----- completed 11
execute_call 0, 1, 0, 1
execute_one loop: 0, 1, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 32196, 0
execute_one time: 0, 32196
2023/03/25 12:38:11 for select break: 1
2023/03/25 12:38:11 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4077, 32196, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:38:11 for select break: 1
2023/03/25 12:38:11 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4073, 32200, 0
before receive testcase: 0 0
2023/03/25 12:38:11 for select break: 1
2023/03/25 12:38:11 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4073, 32200, 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 17334, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2696
before receive testcase: 0 0
2023/03/25 12:38:11 for select break: 1
2023/03/25 12:38:11 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:38:11 wg wait finish
2023/03/25 12:38:11 ------ all executors finish execution
2023/03/25 12:38:11 exec time: 36273
2023/03/25 12:38:11 ----- PS len: 4
2023/03/25 12:38:11 [CLIENT] executor 3 has 18 replies
2023/03/25 12:38:11 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 308 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:11 [SERVER] executor 0 has 9 replies
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
time breakdown 0: 4072, 32202, 0
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 12:38:11 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:38:11 [SERVER] executor 1 has 0 replies
2023/03/25 12:38:11 [SERVER] executor 2 has 0 replies
2023/03/25 12:38:11 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:38:11 ----- no new client coverage: false, true
2023/03/25 12:38:11 mutate testcase with failures
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/25 12:38:11 ----- mutateArg()
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 2809 rename rename
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:38:11 ----- mutateArg()
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 216 fdatasync fdatasync
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 170 dup dup
2023/03/25 12:38:11 ----- insertCall()
2023/03/25 12:38:11 ----- generateCall 2723 pread64 pread64
2023/03/25 12:38:11 ----- mutateArg()
2023/03/25 12:38:11 ----- mutateArg()
2023/03/25 12:38:11 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:38:11 disable threaded and collide
2023/03/25 12:38:11 prog length: 6
2023/03/25 12:38:11 prog length: 20
2023/03/25 12:38:11 HasCrashFail:true HasNetFail:false
12:38:11 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = dup(0xffffffffffffffff)
r1 = fcntl$dupfd(r0, 0x406, r0)
r2 = openat(r1, &(0x7f0000000300)='./file0\x00', 0x60000, 0x152)
fcntl$setflags(r2, 0x2, 0x1)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000380)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000040)='./binderfs2\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000001c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
fdatasync(0xffffffffffffffff)
r3 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
pread64(r3, &(0x7f0000000200)=""/217, 0xd9, 0x3)
fcntl$addseals(r3, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'L-', 0x8000002}, 0x39, 0x2)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000180)='./binderfs\x00', 0x1ff)
dup(r3)
rename(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)='./file0\x00')
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000140)='./binderfs2\x00', 0x1ff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2480
remove dir: /root/orangefs-client/dfs-0-48
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 27
-----finish removing dir
receive_execute: 2, 2062
receive_execute: 4, 2062
receive_execute: 4, 2062
mkdir time 2035
executor 3 create dir /root/orangefs-client/dfs-0-49 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-49
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 2063
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2679
----- completed 5
execute_call 0, 6047, 0, 1
execute_one loop: 0, 0, 6048
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6049, 0, 0
execute_one loop: 0, 0, 6049
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2727
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1230
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4337
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 969 tid 969

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 969, pid 969, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:38:19] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 6075, 0
execute_one time: 0, 6075
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:38:19] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:38:19] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 46
----- completed 8
execute_call 0, 2053, 0, 0
execute_one loop: 0, 0, 2053
cover_reset in execute_call
----- executor 3 write_call_output, size 11471, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 11471, flag collect 0
----- executor 3 signal number : 689
----- completed 9
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 29
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 11471, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 11471, flag collect 0
----- executor 3 signal number : 64
----- completed 17
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 30
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 8146, 0
execute_one time: 0, 8146
2023/03/25 12:38:21 for select break: 1
2023/03/25 12:38:21 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:38:21 for select break: 1
2023/03/25 12:38:21 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:38:21 for select break: 1
2023/03/25 12:38:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2066, 8150, 0
before receive testcase: 0 0
time breakdown 2: 2066, 8149, 0
before receive testcase: 0 1
2023/03/25 12:38:21 for select break: 1
2023/03/25 12:38:21 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 196
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 131
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 9 output_pos_value 4710
2023/03/25 12:38:21 wg wait finish
2023/03/25 12:38:21 ------ all executors finish execution
2023/03/25 12:38:21 exec time: 10214
2023/03/25 12:38:21 ----- PS len: 4
time breakdown 3: 2068, 8147, 0
before receive testcase: 0 0
2023/03/25 12:38:21 [CLIENT] executor 3 has 20 replies
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 2679 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 689 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/25 12:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:21 [SERVER] executor 1 has 0 replies
2023/03/25 12:38:21 [SERVER] executor 0 has 9 replies
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 2727 signal and 0 cover from userspace component
2023/03/25 12:38:21 [SERVER] executor 2 has 0 replies
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 1230 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 196 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 131 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 12:38:21 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
time breakdown 0: 2064, 8152, 0
before receive testcase: 0 0
2023/03/25 12:38:21 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:38:21 ----- no new client coverage: false, true
2023/03/25 12:38:21 mutate testcase with failures
2023/03/25 12:38:21 ----- mutateFailPos()
2023/03/25 12:38:21 insert call 0 at pos 0
2023/03/25 12:38:21 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:38:21 disable threaded and collide
2023/03/25 12:38:21 prog length: 6
2023/03/25 12:38:21 prog length: 17
2023/03/25 12:38:21 HasCrashFail:true HasNetFail:false
12:38:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f00000008c0)=ANY=[@ANYBLOB="747226737465642e6f7665726c84792e7265642e027ee6b4cbac8f77361162ed9f219c43087d35b1af244e0d607140471c6972656374000003870b42e0662a532b9bd78d"], 0x1a, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3984
remove dir: /root/orangefs-client/dfs-0-49
remove dir time 90
-----finish removing dir
mkdir time 12177
executor 3 create dir /root/orangefs-client/dfs-0-50 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-50
receive_execute: 4, 12268
receive_execute: 2, 12267
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 12269
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 5, 12267
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 985 tid 985

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 985, pid 985, value 1

-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:38:34] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 29, 0
execute_one time: 1, 29
[E 03/25/2023 11:38:34] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:38:34] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2014, 0, 0
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 2061
----- completed 4
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 17, 0, 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2084, 0
execute_one time: 0, 2084
2023/03/25 12:38:36 for select break: 1
2023/03/25 12:38:36 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12275, 2085, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 934
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:38:36 for select break: 1
2023/03/25 12:38:36 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12272, 2088, 0
before receive testcase: 0 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 16088, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1434
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:38:36 for select break: 1
2023/03/25 12:38:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12269, 2091, 0
before receive testcase: 0 0
2023/03/25 12:38:36 for select break: 1
2023/03/25 12:38:36 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:38:36 wg wait finish
2023/03/25 12:38:36 ------ all executors finish execution
2023/03/25 12:38:36 exec time: 14358
2023/03/25 12:38:36 ----- PS len: 4
2023/03/25 12:38:36 [CLIENT] executor 3 has 17 replies
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:36 [SERVER] executor 0 has 5 replies
2023/03/25 12:38:36 ------- fuzzer executor 0 receive 934 signal and 0 cover from userspace component
time breakdown 2: 12272, 2091, 0
2023/03/25 12:38:36 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:38:36 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 12:38:36 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:38:36 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 12:38:36 [SERVER] executor 1 has 0 replies
2023/03/25 12:38:36 [SERVER] executor 2 has 0 replies
2023/03/25 12:38:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:38:36 ----- no new client coverage: false, true
2023/03/25 12:38:36 mutate testcase with failures
2023/03/25 12:38:36 ----- mutateFailPos()
2023/03/25 12:38:36 insert call 0 at pos 0
2023/03/25 12:38:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:38:36 disable threaded and collide
2023/03/25 12:38:36 prog length: 6
2023/03/25 12:38:36 prog length: 22
2023/03/25 12:38:36 HasCrashFail:true HasNetFail:false
12:38:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", "c6d62a15ec1c9e7d8c93336fefb0987defe85a910e7ad1c791bdfeca4774b01024050b6413756a947a4c87137c78124a6dc01495073c2cdf4c9f7b9a709f20ce2286d9b125f2abfa7e0b8c5e413f0d5a8ef843d15b67f0a553b41a4386c04e00d5e464c65523332be4cc3422870e13eacab6667062630260b063cd7ca06171ba895cd378179b78b3a5bfa3de5c73f85d9588ad2c09b6e66744c00ce696e6ea482a011b575f30d917a82fccbaa0edb49fe7e1918bcac0d65736c1df95d1abf64d81bf107eec4844fc2f39008f0ed64de782a61925b14339e98c3f2034daa10cbf0f7676b4906d5240dd5b70e8491ddc7c9c72bb50f0c33f44d66da56f95e0821b92e62ec825c5aa556c0c822aaaa925e86f948f64d7dbccd9b323a0f295bd85a76c48bce9cf57f280a714c23550b6e43d4fa44caf998883a3ef7cef8f2ef128cdd50274be00c57809d80f91b39595e2a0d41ec1c20ef5b6e51ec8aa857d0bc9ae5d2452f6af38331da569092c7dc7fe1409a813fb1f39f09b40953867052ca9c30544d5e904b6cc42650c001ba091cd7baddb0d172ea0c846fc4a42603870ec04fc841950fbff40d2538bc4355025419578c5b666dc33aa53f6b42576bd07a0c84858f10ed6c26b257857c1070c241bbfa0a2c91d4c5c68e032a3bc5fc9049b3c06b7607b2dd29b8d78d503e0282bf1f21f11b28383b5bc0992ab7fa5e7377b574cbba7c3d283617f3a584b389c1d3c9459db04564a6e42b3a4eb3796de07d1454891613e60a08c9c116d3c3c8bd59386df41b6b34a76a397ff1aac69f19e337c75ba5e28df92bc8f3ea4a8431f6abd9b55315f38583dff66df57783738d3e8a976fe33aedead734379513899351589b997b7b660708000c4daa33451a02ed72219140d27718ace6be8c8a8b5e0187716841adadc26319518e1e0a671bbc160ef02868c3309d99a475189a8839f45ca7afd3f5675b8eba594876dcf4bf59f251679dc8b0c8a0f5f8f1f2ad6ac85d0f26b7faec85471d9231b8845d362697edea41c731ae0b9c5100da0d68118d3c16231c4b3e369321439e04e85bb9ac612731cf43a6911b35dcd64385f661f929cd76338de477283a8db98401aed1de3926bbe536a5af09f8f6b71eda47a466c2cee54ec61b712829a8a19dc31a117dd9794a3fd55f547209cb680f26f03f686cd1bcfee310b4eeb1ed792fce4133e23a285508184fa84fd02936b72628223e15dbc573e06630a89ab8626671943cd57babdf60154a085b76301a7d89cd98407856c27c765c3a6aff52ebde7d757d6a609e64c19f9d9dba19f3b6e2873933c069e61340dc3499b29c0bfb90ffc0e258f69f4279f4f3605adeb094afd909a4c12f4b32ebf8cd8ab467aaba0245892dcd92e94f7b05498cd0a3d1b8828896174f436f98b7f298b4980820c0c57e336ba89bfc65eb6dd04df6872e68c6b12ba0cbf08a7ebe2aaa046455eb0c3185dd6232632641fbb29ec1d34eece53ef0121f941fe520b611c88a64d07709e14aa03444a0868f50c4cdde4e41e2803efdf11ca42cf8ab3b5afd879fcdca5492c7114ea2e0124678b96f4ddd24d9e11ea481caf5c6036df2b85db45f33fb63757aaf9602ab3a304e99f44c4ab15479793a355cea2ea409c37b707eafc5bfa00c28506ca233a01e1e2258da3386b846c62901b774163a43b7e78313118a1051bc6a1abcb0fef47d833417127499c04380b4895433a18228bdf55b0a786aeb0e3ee31e23b7bea17cd43cdb4493514e59368cd0d72f5504519128a30beffa056fd69cffa1c355426fb120c5d95231bc95e95ff66d600533ac49d0c52bdcb0e066efa3a5eb0ace51f21c86eb72a56a4edd0eeef095bf4189ee3ce847e5ef6580a5799c3648a7720a36e7f7cfd416c5d15107496c3d606ad3a2ca9f0b50ff91efe7688aa79d8dcb5eb7eed1fc18cd7c940dda99391a68605645d46d2087886ade6de2cd765ff42c71f8a4986767ad45eb1a4dbd1f0668d18079066a0b2c75e352e24c935bb3266368e3ef22dfe2787b2dcec6fc57c8d983e0aef12ee7479c10ffe805175cf3f19c7b325bf79fc2f34ab0d787d48c48c29cc4786de964cfbd2cfc26b514e15edfef70e24e080db680a87568880c7b6e9c0e711de320773633e63d2cd6bbfa4b37bdb9d5f12eb65d25d3a0f7e70fc0b01ba968934bf5ba88655e2d4d95aa424f63ff47bd913d31100a8d45904ff948770a45f14deaea019fda50144122880cce28a89104e386652889b12e132e0fa3758c171ac23980ac57dc3786a6cf3aa504c96cd0bf00aadcf1e81e0aa6a8943b739e084a1cd298e6506ea878d593a7fb6b7d9eb24208633f03d665401d6e04dd1a7fe94d380a7d22dc38244fcc54edf163b6ff60e13dd438596e587391d03dafffd02f1ea43edcaa7fb042dfc095e84b0aa8fbda6958607cb46c75f21e9c86d252b9f50a6dfab9abef06febe3642276a9ee3fccd03025235af8101a67560fa61db8d83f9346dce76ad7c40587180e8692d924c1c9f403c0aaaccfc3d0345e8637e5171f171bd7441d7e736355d51f1cc81bf0026ebc763183f122591adf22f0e85f0e62805b2fc47b97af58b74735e1d0035abb2d57ab62ea4f128b95acdf36f2c132d0a222d968255129f10f4a01db176cace76dbf2ff69fe9988dd6ff6b5a8050a0d091a9fc5d6b9a2d884ea5a5e7f3631e00a5693ce1b9bcabd8587b4844daabd078cff2a50591e79570ab9b9944d849c8a10352fca41399219755715c11b61ce8a922b70393537eb5e4fdc1c87db3dcb2ed6fd763ae577ec5450aa59cef2a37b0f31aed688e7f52f4ad3e4dc12e6d67f3bfdbf0662215934e208fbe3613dd3607475c37d0d8eab92e3f3e308ccad984ef667d8573da0ff28aa1f1f7de8a132b182fb1dbe278396cbbce4321aa2dc551accb45d795d473512a80dbd31de4a8f1e737894c53c22c56c0e5c56b2e37dde6561d8660db0a2d851f05e1380febcb90ea6c995f5f1fc629b3e559006c83ea6d9ccf2fb40e3e3b838b387080460ddcd203351c2d1ad77cf5cb6c6731a39050c0441caaa57d0e5e146e868c4d3a2d5798c333de530a55de5fbdefea81fc14266534e1c60759f78d2cfa76a38c95d09c9abb74c49b5dc221d7118b04481bac5e4de9f4992d65d3b2d45e604f86057fb6946054bb9965c8b54106539e452453a70422d514a12059cce5a6f6831e9b93d66bfcc63f82c293e598d84be6dd9e4c4e4c2c155b397a566fd040675c420b8cc7db75d9aa6a501ad6131f86aa507b8f35a2e8bfc437e2aebe00ccddb80c8fcf5965a252abf17153c4e23d0de5fd4ac6d3e8bdb868af6faebb3d71283bd4124cf0b525ea63624846e1f18aa71ef0bfa2c5ef51b3609d200acb96ec8419b887a469018db4eb06f82bbdafe6e10d909c0e28cdd572f2925e9ec99f4fe64c89218bef5f22c577d969f8a60d6c26cec22e0a30b253f08b8ab6f5a5f1ea539ccab7eed55836d6049f707f48b61e09c1a567ad3d49812834f491fcabba65e88b70a39cfcfe1d7b9d968bd06edf5dac05f46df9e3d59406bef77a1e8460195ecfe689fffe787cf1c8baa6b141625652911c6274dd9e0dff193c27d62c072f2dbc42ef546937f54fcd5fcdcdd424b53e2925bfbe687ac9e5b00d19a8999b582a2c473fa6c6e59603ac2dc66100b3ae0a2b7a3afc374c257d42111387e71303cccc1b1027fdda2f1aef39875a68e97caf58c89eecd0df1ca370d73d57386b937c9efc7bd2cdde1f028f42155976876430a6c3e54df515cdd28b80db6c7de830c1b42b7445000f045ebf45558bf48a8414527ac1ff72467ca92553e3977dc6124e5fddaef99a1b1eed50eaaa7c1e58d64454094ea15c7228658b12deab02d4ef8f8a07b2447f417e9e554fcc0ef17727cd192f00f35d411bc8201aa5e9e4dd65e9fa4021c591a7087359c84d597d425004e0cbfbb065335943f921b134de3bd8fadf27edfe0e9813d29b76fe48ad3e933376d8ef4da1532b8f7d32327fa2328404c42ea57553c9ce857e16d6cee99feef770519ae7aae8bbaba4cc869247a7aa3128c70d1168331264ff05a4f91fbf5feaaa6b685f732af08b54698ff62ba950d9f2645465c746b9c60ec1f2136b58f23dcc198bb075b69de43a71f1d45a42651d3c35933eb3986878c3fdd49f4fbaf615bffff2472dbec76c0d2ff410c965b2c0e865c7b2b49830e00c6d99c489086d303f1e8073e9ecce7e8b70f475120bdcf0fcdcadb7a3e926136c843d9c5ae9b6fc1f2716db1154b37130b4ed95ad405d73563bbbf0527f0792a189134cf6510334ac284b5277e59893fe10bdf24b6896eccf97bad0099b095de269a0faebfd449aa046d42b4790c047c72d72aa0313261ea31975eb4cbfcec9260802a05effdf8af93228884ae7cf8d7cf9355b2f03fdbeddfa51995f27da83654a7ec8f49ef93b4d8a3beab075332ba127dbd0004fed1b2c9abfd1976879bdea2137631ae0e77afeb123bde0912b6ad427698bafc4831e840cbf51960cb9491100d3f188084c90977732ca8bd815ab89d684bbb35287c230d026ef225dd8b6a694895cf945150b8887519791d13ba0b849c5d2301c840b2dbaf14e5208ef5ec1a1ca6bfd773b83b4e229a3cd70bcb29447f0bb848aab6b27946c17ea16b373b78540e2203255b0ee183a2e36cf292de68421901209a063115a22e66d95d3e87da88cdc4b21adeaf61d39164331019570c115a3cfda8ccfa1528b546cc62e1697933c64212ae0404ea40dd22d6787eee4cbf1e77ec4e9d9ca1bf7b930535b2955ca53b39e7f08dd89d8aab6ccb96ad3a5177f5c03cd98d8633b894a82c348cfa19f6f890e938364f41be86125c2f8f6f01da0da969ee4aca9a3267686af16aa80aaf6522a9ebbf3701ff36a3a51b85e1698921b98323a7558a4889afe9d3c15b02dd0a47b123c312e9930991a12e92d20358ab4054a1e076fdcec19de4b974961aa5d302b22595125b96b6604efec29d0b27525ad629477b84821dc3b35e87faf68e73f757aa06a6a19db9ad5b282c0a2ab950947d2f23d15b5caeec667af359a7f49aa997f3adf8192ce0cd23c145e59721e9fe72812aac6a3d5dcff6a456d19ad5d708c85d7abf6b82e9ca920375eca8429e9a57f9d377b0995605234fa2978f718e83981f89502156d6e9fc8e6593913bd9e1c346cd77543a9b452d6174d3d45116a594867391f3766d1da430b0ffc144a739c35b2277e69073521f48c1efff3beffda7528ddded12c715e553c93a3b6062556285c98eec1b8539114d51da8946087b9926e8800938f381031c9de3c8bfed0f3692e69ccee6ac70293d0d34f5898a595ecc51db99299cdaa09b56c71ca360df4ae41de5de50a0173be39fe29a3a4fe2efaf32befea12acb451e0725633249a92fc3dd03b9009fdf8ad6928552b078f4e5ddd7ac4664d5cc00107677e60527ac61d8a679a72e02014c19ad6ff23dd1c1622abc78cf047a24dbb1cd9b50969e1fb37f1fe4063cf18b25c93eee40a66491cfa2f8c50b537cc2f7b61e0ad99882af2d9e50af025fbda0472b06402c5f008bfc91f62f5ae59ede6536b870e53e9e044e517098caa8cd3980859a2a239796b9d7d7500cc8c3b359ca9e270eaf0da3cc3c44ff3f8d68b5cc4b97f925df66aa4a55e06e6719977850cfce87a3427f16354526ad1c38add12fc58016b7dac140d6477ce2385b44f908afa8ac0f1ef322f4479986ec0df09207cc1b43616671d60acafa2b1fd514f45532b1c5096bc"}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
syz_failure_sync(0x1, 0x3)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001980)={'#! ', './file0', [{0x20, 'com.apple.system.Security\x00'}, {0x20, 'security.SMACK64TRANSMUTE\x00'}, {}], 0xa, "4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"}, 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8808
remove dir: /root/orangefs-client/dfs-0-50
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 4048
executor 3 create dir /root/orangefs-client/dfs-0-51 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-51
receive_execute: 2, 4073
receive_execute: 4, 4073
receive_execute: 2, 4073
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 5, 4074
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6461, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 2065
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 716 tid 716

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 716, pid 716, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:38:40] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6461, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 33, 0
execute_one time: 1, 33
----- executor 3 write_call_output, size 6461, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6461, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6469, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6469, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6461, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6461, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6461, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 45, 0
execute_one time: 0, 45
2023/03/25 12:38:40 for select break: 1
2023/03/25 12:38:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4079, 46, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28594, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1427
----- executor 0 executes write_coverage_signal cov->size 10732, flag collect 0
2023/03/25 12:38:40 for select break: 1
2023/03/25 12:38:40 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 2: 4075, 48, 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3341, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2955, flag collect 0
----- executor 0 signal number : 75
2023/03/25 12:38:40 for select break: 1
2023/03/25 12:38:40 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2120
time breakdown 1: 4077, 49, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 12:38:40 for select break: 1
2023/03/25 12:38:40 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:38:40 wg wait finish
2023/03/25 12:38:40 ------ all executors finish execution
2023/03/25 12:38:40 exec time: 4122
2023/03/25 12:38:40 ----- PS len: 4
2023/03/25 12:38:40 [CLIENT] executor 3 has 22 replies
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:40 [SERVER] executor 0 has 4 replies
2023/03/25 12:38:40 ------- fuzzer executor 0 receive 1427 signal and 0 cover from userspace component
2023/03/25 12:38:40 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:38:40 [SERVER] executor 1 has 1 replies
2023/03/25 12:38:40 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:38:40 [SERVER] executor 2 has 0 replies
2023/03/25 12:38:40 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:38:40 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 4075, 49, 0
before receive testcase: 0 0
2023/03/25 12:38:40 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:38:40 ----- no new client coverage: false, true
2023/03/25 12:38:40 mutate testcase with failures
2023/03/25 12:38:40 ----- mutateArg()
2023/03/25 12:38:40 ----- insertCall()
2023/03/25 12:38:40 ----- generateCall 3761 stat stat
2023/03/25 12:38:40 ----- splice()
2023/03/25 12:38:40 ----- insertCall()
2023/03/25 12:38:40 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 12:38:40 HasCrashFail: false, .HasNetFail: true
2023/03/25 12:38:40 disable threaded and collide
2023/03/25 12:38:40 prog length: 6
2023/03/25 12:38:40 prog length: 6
2023/03/25 12:38:40 prog length: 8
2023/03/25 12:38:40 HasCrashFail:false HasNetFail:true
12:38:40 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x2, 0x3)
setxattr$security_evm(&(0x7f0000000700)='./file0\x00', 0x0, 0x0, 0x0, 0x2)
syz_failure_sync(0x1, 0x3)
syz_failure_sync(0x3, 0x3)
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040))
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000000c0), &(0x7f0000000100)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 2184, prog_size 992
remove dir: /root/orangefs-client/dfs-0-51
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 472
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
remove dir time 18
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:38:40] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:38:40] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:38:40] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:38:40] Error: Could not initialize server subsystems
[E 03/25/2023 11:38:40] Error: Could not initialize server; aborting.
mkdir time 6032
executor 3 create dir /root/orangefs-client/dfs-0-52 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-52
receive_execute: 2, 6050
receive_execute: 2, 6050
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 6051
receive_execute: 3, 6051
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 32765, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3037
----- completed 1
execute_call 0, 15, 0, 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 337
----- completed 4
execute_call 0, 39, 0, 1
execute_one loop: 0, 0, 40
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 57, 0, 0
execute_one loop: 0, 0, 57
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2080, 0
execute_one time: 0, 2080
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2044, 0, 0
execute_one loop: 0, 0, 2044
execute_call 0, 2009, 0, 0
execute_one loop: 0, 0, 2009
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 4085, 0
execute_one time: 4, 4085
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 181
----- completed 7
execute_call 0, 32, 0, 1
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4122, 0
execute_one time: 0, 4122
2023/03/25 12:38:50 for select break: 1
2023/03/25 12:38:50 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6055, 4123, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31955, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 2628
----- executor 0 executes write_coverage_signal cov->size 22725, flag collect 0
2023/03/25 12:38:50 for select break: 1
2023/03/25 12:38:50 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6052, 4125, 0
----- executor 0 signal number : 1128
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 306
----- executor 0 executes write_coverage_signal cov->size 24029, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4158
2023/03/25 12:38:50 for select break: 1
2023/03/25 12:38:50 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6052, 4127, 0
before receive testcase: 0 0
2023/03/25 12:38:50 for select break: 1
2023/03/25 12:38:50 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:38:50 wg wait finish
2023/03/25 12:38:50 ------ all executors finish execution
2023/03/25 12:38:50 exec time: 10179
2023/03/25 12:38:50 ----- PS len: 4
2023/03/25 12:38:50 [CLIENT] executor 3 has 8 replies
2023/03/25 12:38:50 fuzzer receive 3037 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 337 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 181 signal and 0 cover from executor 3
2023/03/25 12:38:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:38:50 [SERVER] executor 0 has 4 replies
2023/03/25 12:38:50 ------- fuzzer executor 0 receive 2628 signal and 0 cover from userspace component
2023/03/25 12:38:50 ------- fuzzer executor 0 receive 1128 signal and 0 cover from userspace component
2023/03/25 12:38:50 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/25 12:38:50 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 2: 6054, 4127, 0
2023/03/25 12:38:50 [SERVER] executor 1 has 0 replies
2023/03/25 12:38:50 [SERVER] executor 2 has 0 replies
2023/03/25 12:38:50 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:38:50 ----- no new client coverage: false, true
2023/03/25 12:38:50 RandomInsertFailure()
2023/03/25 12:38:50 failed servers: [1]
before receive testcase: 0 0
2023/03/25 12:38:50 filter Disconn Calls: 3 1, [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19] [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
2023/03/25 12:38:50 insertSync 14 17 19
2023/03/25 12:38:50 findAndInsert at 14
2023/03/25 12:38:50 findAndInsert at 18
2023/03/25 12:38:50 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:38:50 disable threaded and collide
2023/03/25 12:38:50 prog length: 6
2023/03/25 12:38:50 prog length: 21
2023/03/25 12:38:50 HasCrashFail:true HasNetFail:false
12:38:50 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000040)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000080)='./binderfs2\x00', 0x1ff)
sync()
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000100)='./binderfs2\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000140)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$setsig(r0, 0xa, 0x3b)
fcntl$addseals(r0, 0x409, 0xa)
write(r0, &(0x7f0000000180)="b1d21dde86b22de8dafd1ae79deda254d570d278ab83cf448fbd2bf7626d9b57f8df2e9fe51db39a26bcaebb5a0d387ff0a9ecaf1ac9213ace09cf3577e2cf311d360255f40aa25a926ed647968f7ca43fe5100ad4bc48d07ee467082a0454e733ff609becc7667905f4ac0c", 0x6c)
r1 = dup2(r0, r0)
fcntl$setsig(r1, 0xa, 0x1c)
lsetxattr$security_selinux(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)='system_u:object_r:lib_t:s0\x00', 0x1b, 0x0)
syz_failure_sync(0x0, 0x3)
r2 = open(&(0x7f00000002c0)='./file0\x00', 0x0, 0x10d)
fcntl$lock(r2, 0x2, &(0x7f0000000300)={0x1, 0x3, 0x6, 0x7, 0xffffffffffffffff})
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)={'U-', 0x935}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000400)='./binderfs\x00', 0x1ff)
dup2(r2, r2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3200
remove dir: /root/orangefs-client/dfs-0-52
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 24
-----finish removing dir
mkdir time 8085
executor 3 create dir /root/orangefs-client/dfs-0-53 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-53
receive_execute: 9, 8109
receive_execute: 6, 8110
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 10, 8111
receive_execute: 4, 8110
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6463, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6463, flag collect 1
----- executor 3 cover number : 1748, signal number : 2059
----- completed 1
execute_call 0, 10097, 0, 1
execute_one loop: 0, 0, 10098
cover_reset in execute_call
----- executor 3 write_call_output, size 11463, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 11463, flag collect 1
----- executor 3 cover number : 2192, signal number : 710
----- completed 2
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 2393, signal number : 577
----- completed 3
execute_call 0, 23, 0, 7
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 11463, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 11463, flag collect 1
----- executor 3 cover number : 2192, signal number : 59
----- completed 7
execute_call 0, 3, 0, 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6679, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6679, flag collect 1
----- executor 3 cover number : 1758, signal number : 43
----- completed 14
execute_call 0, 21, 0, 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10174, 0, 0
execute_one loop: 0, 0, 10174
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 1
----- executor 3 cover number : 1748, signal number : 22
----- completed 16
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 1
----- executor 3 cover number : 1748, signal number : 22
----- completed 18
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 734 tid 734

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 734, pid 734, value 1

-----executor 1 collect shmids 0
----- directly resend shmid 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:39:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 10204, 0
execute_one time: 1, 10204
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 10209, 0
execute_one time: 0, 10209
time breakdown 3: 8121, 10209, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 12:39:08 for select break: 1
2023/03/25 12:39:08 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 12:39:08 for select break: 1
2023/03/25 12:39:08 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 8114, 10212, 0
before receive testcase: 0 1
before receive testcase: 0 1
----- executor 0 cover number : 1959, signal number : 2450
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 719, signal number : 899
executor 1 server cover_cnt 1 output_pos_value 1622
2023/03/25 12:39:08 for select break: 1
2023/03/25 12:39:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8118, 10218, 0
before receive testcase: 0 0
----- executor 0 cover number : 998, signal number : 1132
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 284, signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 100, signal number : 76
executor 0 server cover_cnt 4 output_pos_value 7303
2023/03/25 12:39:08 for select break: 1
2023/03/25 12:39:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:39:08 wg wait finish
2023/03/25 12:39:08 ------ all executors finish execution
2023/03/25 12:39:08 exec time: 18340
2023/03/25 12:39:08 ----- PS len: 4
2023/03/25 12:39:08 [CLIENT] executor 3 has 21 replies
2023/03/25 12:39:08 fuzzer receive 2059 signal and 1748 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 710 signal and 2192 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 577 signal and 2393 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 59 signal and 2192 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 43 signal and 1758 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 22 signal and 1748 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 22 signal and 1748 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:08 [SERVER] executor 1 has 1 replies
2023/03/25 12:39:08 ------- fuzzer executor 1 receive 899 signal and 719 cover from userspace component
2023/03/25 12:39:08 [SERVER] executor 0 has 4 replies
2023/03/25 12:39:08 ------- fuzzer executor 0 receive 2450 signal and 1959 cover from userspace component
2023/03/25 12:39:08 ------- fuzzer executor 0 receive 1132 signal and 998 cover from userspace component
2023/03/25 12:39:08 ------- fuzzer executor 0 receive 291 signal and 284 cover from userspace component
2023/03/25 12:39:08 ------- fuzzer executor 0 receive 76 signal and 100 cover from userspace component
2023/03/25 12:39:08 [SERVER] executor 2 has 0 replies
2023/03/25 12:39:08 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 8116, 10230, 0
before receive testcase: 0 1
2023/03/25 12:39:08 disable threaded and collide
2023/03/25 12:39:08 prog length: 6
2023/03/25 12:39:08 prog length: 21
2023/03/25 12:39:08 HasCrashFail:true HasNetFail:false
12:39:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000040)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000080)='./binderfs2\x00', 0x1ff)
sync()
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000100)='./binderfs2\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000140)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$setsig(r0, 0xa, 0x3b)
fcntl$addseals(r0, 0x409, 0xa)
write(r0, &(0x7f0000000180)="b1d21dde86b22de8dafd1ae79deda254d570d278ab83cf448fbd2bf7626d9b57f8df2e9fe51db39a26bcaebb5a0d387ff0a9ecaf1ac9213ace09cf3577e2cf311d360255f40aa25a926ed647968f7ca43fe5100ad4bc48d07ee467082a0454e733ff609becc7667905f4ac0c", 0x6c)
r1 = dup2(r0, r0)
fcntl$setsig(r1, 0xa, 0x1c)
lsetxattr$security_selinux(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)='system_u:object_r:lib_t:s0\x00', 0x1b, 0x0)
syz_failure_sync(0x0, 0x3)
r2 = open(&(0x7f00000002c0)='./file0\x00', 0x0, 0x10d)
fcntl$lock(r2, 0x2, &(0x7f0000000300)={0x1, 0x3, 0x6, 0x7, 0xffffffffffffffff})
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)={'U-', 0x935}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000400)='./binderfs\x00', 0x1ff)
dup2(r2, r2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3200
remove dir: /root/orangefs-client/dfs-0-53
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
remove dir time 99
-----finish removing dir
[D 03/25/2023 11:39:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:39:08] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:39:08] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:39:08] Error: Could not initialize server subsystems
[E 03/25/2023 11:39:08] Error: Could not initialize server; aborting.
mkdir time 6054
executor 3 create dir /root/orangefs-client/dfs-0-54 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-54
receive_execute: 5, 6153
receive_execute: 23, 6153
receive_execute: 17, 6153
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 24, 6154
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6463, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6463, flag collect 1
----- executor 3 cover number : 1748, signal number : 2059
----- completed 1
execute_call 0, 25, 0, 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 11479, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 11479, flag collect 1
----- executor 3 cover number : 2194, signal number : 713
----- completed 2
execute_call 0, 4, 0, 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 2393, signal number : 573
----- completed 3
execute_call 0, 17, 0, 6
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 11487, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 11487, flag collect 1
----- executor 3 cover number : 2194, signal number : 59
----- completed 6
execute_call 0, 12, 0, 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 11479, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 11479, flag collect 1
----- executor 3 cover number : 2194, signal number : 62
----- completed 7
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 1
----- executor 3 cover number : 1750, signal number : 32
----- completed 14
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 84, 0, 0
execute_one loop: 0, 0, 84
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6447, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 1
----- executor 3 cover number : 1750, signal number : 22
----- completed 16
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 1
----- executor 3 cover number : 1750, signal number : 22
----- completed 18
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 750 tid 750

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 750, pid 750, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:39:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 109, 0
execute_one time: 0, 110
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 11479, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 11479, flag collect 1
2023/03/25 12:39:15 for select break: 1
2023/03/25 12:39:15 --------- executor 3 receive reply, reply.done 1
----- executor 3 cover number : 2194, signal number : 54
----- completed 20
execute_call 0, 14, 0, 3
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 126, 0
execute_one time: 0, 126
executor 2 write_server_output
time breakdown 3: 6178, 138, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 6176, 140, 0
before receive testcase: 0 1
2023/03/25 12:39:15 for select break: 1
2023/03/25 12:39:15 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 719, signal number : 899
executor 1 server cover_cnt 1 output_pos_value 1622
----- executor 0 cover number : 2090, signal number : 2666
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 12:39:15 for select break: 1
2023/03/25 12:39:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6170, 146, 0
before receive testcase: 0 0
----- executor 0 cover number : 1038, signal number : 1233
----- executor 0 executes write_coverage_signal cov->size 13114, flag collect 1
----- executor 0 cover number : 284, signal number : 353
----- executor 0 executes write_coverage_signal cov->size 12706, flag collect 1
----- executor 0 cover number : 103, signal number : 82
executor 0 server cover_cnt 4 output_pos_value 7862
time breakdown 0: 6158, 157, 0
2023/03/25 12:39:15 for select break: 1
2023/03/25 12:39:15 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:39:15 wg wait finish
2023/03/25 12:39:15 ------ all executors finish execution
2023/03/25 12:39:15 exec time: 6311
2023/03/25 12:39:15 ----- PS len: 4
2023/03/25 12:39:15 [CLIENT] executor 3 has 21 replies
2023/03/25 12:39:15 fuzzer receive 2059 signal and 1748 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 713 signal and 2194 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 573 signal and 2393 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 59 signal and 2194 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 62 signal and 2194 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 32 signal and 1750 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 22 signal and 1750 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 22 signal and 1750 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 54 signal and 2194 cover from executor 3
2023/03/25 12:39:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:15 [SERVER] executor 2 has 0 replies
2023/03/25 12:39:15 [SERVER] executor 1 has 1 replies
2023/03/25 12:39:15 ------- fuzzer executor 1 receive 899 signal and 719 cover from userspace component
2023/03/25 12:39:15 [SERVER] executor 0 has 4 replies
2023/03/25 12:39:15 ------- fuzzer executor 0 receive 2666 signal and 2090 cover from userspace component
2023/03/25 12:39:15 ------- fuzzer executor 0 receive 1233 signal and 1038 cover from userspace component
2023/03/25 12:39:15 ------- fuzzer executor 0 receive 353 signal and 284 cover from userspace component
2023/03/25 12:39:15 ------- fuzzer executor 0 receive 82 signal and 103 cover from userspace component
before receive testcase: 0 1
2023/03/25 12:39:15 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:39:15 mutate testcase with failures
2023/03/25 12:39:15 ----- insertCall()
2023/03/25 12:39:15 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:39:15 ----- insertCall()
2023/03/25 12:39:15 ----- generateCall 516 getxattr getxattr
2023/03/25 12:39:15 ----- insertCall()
2023/03/25 12:39:15 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 12:39:15 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:39:15 disable threaded and collide
2023/03/25 12:39:15 prog length: 6
2023/03/25 12:39:15 prog length: 11
2023/03/25 12:39:15 HasCrashFail:true HasNetFail:false
12:39:15 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000240)='./binderfs2\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=@known='trusted.overlay.upper\x00', &(0x7f0000000140)=""/250, 0xfa)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000040)='./binderfs2\x00', 0x1ff)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1496
remove dir: /root/orangefs-client/dfs-0-54
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
remove dir time 63
-----finish removing dir
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-55 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-55
receive_execute: 5, 90
receive_execute: 16, 90
receive_execute: 22, 90
receive_execute: 23, 91
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
[D 03/25/2023 11:39:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:39:15] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:39:15] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:39:15] Error: Could not initialize server subsystems
[E 03/25/2023 11:39:15] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 6471, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 6471, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2041, 0, 0
execute_one loop: 0, 0, 2041
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6479, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 6479, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 4040, 0, 0
execute_one loop: 0, 0, 4040
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6081, 0, 0
execute_one loop: 0, 0, 6082
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2767
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1231
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4385
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:39:21] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 438
----- completed 5
execute_call 0, 20091, 0, 2
execute_one loop: 0, 0, 20093
cover_reset in execute_call
execute_call 0, 20093, 0, 0
execute_one loop: 0, 0, 20093
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1015 tid 1015

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1015, pid 1015, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:39:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 26204, 0
execute_one time: 1, 26204
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 15, 0, 5
execute_one loop: 0, 0, 20
cover_reset in execute_call
[D 03/25/2023 11:39:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 158
----- completed 7
execute_call 0, 2013, 0, 1
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 13
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 3, execute_one inner time: 0, 28238, 0
execute_one time: 0, 28238
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 114, 28239, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 233
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 112, 28241, 0
before receive testcase: 0 0
----- executor 0 signal number : 147
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 9 output_pos_value 4814
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 106, 28243, 0
before receive testcase: 0 0
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:39:43 wg wait finish
2023/03/25 12:39:43 ------ all executors finish execution
2023/03/25 12:39:43 exec time: 28334
2023/03/25 12:39:43 ----- PS len: 4
2023/03/25 12:39:43 [CLIENT] executor 3 has 11 replies
2023/03/25 12:39:43 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 438 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 [SERVER] executor 0 has 9 replies
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 2767 signal and 0 cover from userspace component
time breakdown 0: 95, 28244, 0
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 1231 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 233 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 147 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:39:43 [SERVER] executor 1 has 0 replies
2023/03/25 12:39:43 [SERVER] executor 2 has 0 replies
2023/03/25 12:39:43 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:39:43 ----- no new client coverage: false, true
2023/03/25 12:39:43 mutate testcase with failures
2023/03/25 12:39:43 ----- insertCall()
2023/03/25 12:39:43 ----- generateCall 2781 readlinkat readlinkat
2023/03/25 12:39:43 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:39:43 disable threaded and collide
2023/03/25 12:39:43 prog length: 6
2023/03/25 12:39:43 prog length: 20
2023/03/25 12:39:43 HasCrashFail:true HasNetFail:false
12:39:43 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
syz_failure_sync(0x0, 0x3)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
readlinkat(r1, &(0x7f0000002e00)='./file0/file0\x00', &(0x7f0000002e40)=""/4096, 0x1000)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4512
remove dir: /root/orangefs-client/dfs-0-55
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 46
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-56 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-56
receive_execute: 2, 59
receive_execute: 3, 59
receive_execute: 4, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 6, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 769 tid 769

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 769, pid 769, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:39:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 50, 0
execute_one time: 0, 50
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32739, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 45, 0
execute_one time: 1, 45
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 66, 51, 0
before receive testcase: 0 1
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 12248, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2128
time breakdown 1: 62, 54, 0
before receive testcase: 0 0
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 64, 53, 0
before receive testcase: 0 0
2023/03/25 12:39:43 for select break: 1
2023/03/25 12:39:43 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:39:43 wg wait finish
2023/03/25 12:39:43 ------ all executors finish execution
2023/03/25 12:39:43 exec time: 114
2023/03/25 12:39:43 ----- PS len: 4
2023/03/25 12:39:43 [CLIENT] executor 3 has 20 replies
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:43 [SERVER] executor 0 has 4 replies
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:39:43 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 61, 55, 0
before receive testcase: 0 0
2023/03/25 12:39:43 [SERVER] executor 1 has 1 replies
2023/03/25 12:39:43 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:39:43 [SERVER] executor 2 has 0 replies
2023/03/25 12:39:43 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:39:43 ----- no new client coverage: false, true
2023/03/25 12:39:43 mutate testcase with failures
2023/03/25 12:39:43 ----- mutateArg()
2023/03/25 12:39:43 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:39:43 disable threaded and collide
2023/03/25 12:39:43 prog length: 6
2023/03/25 12:39:43 prog length: 8
2023/03/25 12:39:43 HasCrashFail:true HasNetFail:false
12:39:43 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000040)='./file0/file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1000
remove dir: /root/orangefs-client/dfs-0-56
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 19
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:39:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:39:43] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:39:43] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:39:43] Error: Could not initialize server subsystems
[E 03/25/2023 11:39:43] Error: Could not initialize server; aborting.
receive_execute: 1, 4067
receive_execute: 2, 4067
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 4067
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
mkdir time 4048
executor 3 create dir /root/orangefs-client/dfs-0-57 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-57
receive_execute: 4, 4067
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 32765, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3035
----- completed 1
execute_call 0, 16, 0, 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 29
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2668
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1244
----- executor 0 executes write_coverage_signal cov->size 4668, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 5002, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4306
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1032 tid 1032

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1032, pid 1032, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:39:47] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 53, 0
execute_one time: 0, 53
----- executor 3 write_call_output, size 0, pid 469, write pid:469
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 0, 53, 0
execute_one time: 0, 53
2023/03/25 12:39:47 for select break: 1
2023/03/25 12:39:47 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4071, 54, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:39:47 for select break: 1
2023/03/25 12:39:47 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4069, 56, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 223
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 144
----- executor 0 executes write_coverage_signal cov->size 4925, flag collect 0
----- executor 0 signal number : 58
----- executor 0 executes write_coverage_signal cov->size 5074, flag collect 0
----- executor 0 signal number : 12
executor 0 server cover_cnt 8 output_pos_value 4755
before receive testcase: 0 0
2023/03/25 12:39:47 for select break: 1
2023/03/25 12:39:47 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4070, 56, 0
before receive testcase: 0 0
2023/03/25 12:39:47 for select break: 1
2023/03/25 12:39:47 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:39:47 wg wait finish
2023/03/25 12:39:47 ------ all executors finish execution
2023/03/25 12:39:47 exec time: 4124
2023/03/25 12:39:47 ----- PS len: 4
2023/03/25 12:39:47 [CLIENT] executor 3 has 8 replies
2023/03/25 12:39:47 fuzzer receive 3035 signal and 0 cover from executor 3
2023/03/25 12:39:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:47 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 12:39:47 [SERVER] executor 1 has 0 replies
2023/03/25 12:39:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:47 [SERVER] executor 0 has 8 replies
time breakdown 0: 4068, 57, 0
2023/03/25 12:39:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 2668 signal and 0 cover from userspace component
2023/03/25 12:39:47 [SERVER] executor 2 has 0 replies
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 1244 signal and 0 cover from userspace component
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 223 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 144 signal and 0 cover from userspace component
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 58 signal and 0 cover from userspace component
2023/03/25 12:39:47 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 12:39:47 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:39:47 ----- no new client coverage: false, true
2023/03/25 12:39:47 mutate testcase with failures
2023/03/25 12:39:47 ----- insertCall()
2023/03/25 12:39:47 ----- insertCall()
2023/03/25 12:39:47 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:39:47 disable threaded and collide
2023/03/25 12:39:47 prog length: 6
2023/03/25 12:39:47 prog length: 22
2023/03/25 12:39:47 HasCrashFail:true HasNetFail:false
12:39:47 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
syz_failure_sync(0x1, 0x3)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000004c0)=ANY=[@ANYBLOB="e5b1faf17fa02bad06020c00992029002bf9167ac8c4f364f2702f1e797f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b8cafcc0bce49d50000000000000000"], 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4680
remove dir: /root/orangefs-client/dfs-0-57
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:39:47] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:39:47] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2056
-----finish removing dir
receive_execute: 2, 6102
mkdir time 4046
executor 3 create dir /root/orangefs-client/dfs-0-58 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-58
receive_execute: 3, 6102
receive_execute: 3, 6102
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 5, 6103
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1048 tid 1048

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1048, pid 1048, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:39:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:39:53] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:39:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:39:55 for select break: 1
2023/03/25 12:39:55 --------- executor 3 receive reply, reply.done 1
----- executor 3 signal number : 2000
----- completed 9
execute_call 0, 2012, 0, 2
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 471, write pid:471
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 2039, 0
execute_one time: 0, 2040
time breakdown 3: 6108, 2040, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:39:55 for select break: 1
2023/03/25 12:39:55 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:39:55 for select break: 1
2023/03/25 12:39:55 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 12275, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 1: 6105, 2042, 0
before receive testcase: 0 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1618
time breakdown 2: 6105, 2043, 0
before receive testcase: 0 0
2023/03/25 12:39:55 for select break: 1
2023/03/25 12:39:55 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:39:55 wg wait finish
2023/03/25 12:39:55 ------ all executors finish execution
2023/03/25 12:39:55 exec time: 8145
2023/03/25 12:39:55 ----- PS len: 4
2023/03/25 12:39:55 [CLIENT] executor 3 has 22 replies
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 2000 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:39:55 [SERVER] executor 0 has 5 replies
2023/03/25 12:39:55 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 12:39:55 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:39:55 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 12:39:55 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:39:55 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 12:39:55 [SERVER] executor 1 has 0 replies
2023/03/25 12:39:55 [SERVER] executor 2 has 0 replies
time breakdown 0: 6104, 2044, 0
before receive testcase: 0 0
2023/03/25 12:39:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:39:55 ----- no new client coverage: false, true
2023/03/25 12:39:55 mutate testcase with failures
2023/03/25 12:39:55 ----- insertCall()
2023/03/25 12:39:55 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/25 12:39:55 ----- insertCall()
2023/03/25 12:39:55 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 12:39:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:39:55 disable threaded and collide
2023/03/25 12:39:55 prog length: 6
2023/03/25 12:39:55 prog length: 15
2023/03/25 12:39:55 HasCrashFail:true HasNetFail:false
12:39:55 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x0, 0x3)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000440), &(0x7f0000000480), 0x4, 0x1)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0xffffffffffff92e9)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3240
remove dir: /root/orangefs-client/dfs-0-58
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 3, 2053
receive_execute: 1, 2053
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 2028
executor 3 create dir /root/orangefs-client/dfs-0-59 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-59
receive_execute: 4, 2053
receive_execute: 1, 2054
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 5
execute_call 0, 30103, 0, 1
execute_one loop: 0, 0, 30104
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30106, 0, 0
execute_one loop: 0, 0, 30106
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1997
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2713
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
[E 03/25/2023 11:40:28] PVFS2 server got signal 15 (server_status_flag: 2080767)
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1064 tid 1064

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1064, pid 1064, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:40:28] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30141, 0
execute_one time: 0, 30141
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[D 03/25/2023 11:40:28] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 32765, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:40:30 for select break: 1
2023/03/25 12:40:30 --------- executor 3 receive reply, reply.done 1
----- executor 3 signal number : 720
----- completed 14
execute_call 0, 2028, 0, 7
execute_one loop: 0, 0, 2035
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 32175, 0
execute_one time: 1, 32175
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:40:30 for select break: 1
2023/03/25 12:40:30 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 32
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2056, 32177, 0
before receive testcase: 0 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:40:30 for select break: 1
2023/03/25 12:40:30 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2055, 32178, 0
before receive testcase: 0 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2057, 32177, 0
before receive testcase: 0 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 618
executor 0 server cover_cnt 10 output_pos_value 3398
2023/03/25 12:40:30 for select break: 1
2023/03/25 12:40:30 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:40:30 wg wait finish
2023/03/25 12:40:30 ------ all executors finish execution
2023/03/25 12:40:30 exec time: 34234
2023/03/25 12:40:30 ----- PS len: 4
2023/03/25 12:40:30 [CLIENT] executor 3 has 15 replies
time breakdown 0: 2054, 32179, 0
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 2059 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 12:40:30 [SERVER] executor 0 has 10 replies
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 1997 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 12:40:30 [SERVER] executor 1 has 0 replies
2023/03/25 12:40:30 [SERVER] executor 2 has 0 replies
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 720 signal and 0 cover from executor 3
2023/03/25 12:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 32 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 12:40:30 ------- fuzzer executor 0 receive 618 signal and 0 cover from userspace component
2023/03/25 12:40:30 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:40:30 ----- no new client coverage: false, true
2023/03/25 12:40:30 mutate testcase with failures
2023/03/25 12:40:30 ----- mutateArg()
2023/03/25 12:40:30 ----- mutateArg()
2023/03/25 12:40:30 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:40:30 disable threaded and collide
2023/03/25 12:40:30 prog length: 6
2023/03/25 12:40:30 prog length: 18
2023/03/25 12:40:30 HasCrashFail:true HasNetFail:false
12:40:30 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=ANY=[@ANYBLOB="03020afffff800006639384e14a3f2ddba63d8a782d563d003966a54aa318c4b9560c5584bce0500000033e7ba7c190e067e2dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"], 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f0000000880)=ANY=[@ANYBLOB="2c3a2210cd925121ca97a35bb86597d43f6dfc33cbd4c15f1ccfa4d0a71c8559cf1a179a150454172b3f2c31abdaee046476eb672f379db09e03af4fe198e3105f3c5994078cf84b60022b5cdf02"], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0x63, 0x7)
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
syz_failure_sync(0x1, 0x3)
r1 = open(&(0x7f00000003c0)='./file0\x00', 0x1, 0x1)
fsetxattr$smack_xattr_label(r1, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x58, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3960
remove dir: /root/orangefs-client/dfs-0-59
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 45
-----finish removing dir
receive_execute: 2, 64
receive_execute: 4, 64
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-60 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-60
receive_execute: 4, 64
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 65
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 2063
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6449, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6449, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_call 0, 30, 0, 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_one loop: 0, 0, 30
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 13752, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3501, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 3591, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2114
/root/orangefs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:40:30] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 10044, 0, 0
execute_one loop: 0, 0, 10044
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10044, 0, 0
execute_one loop: 0, 0, 10045
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1081 tid 1081

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1081, pid 1081, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:40:40] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10112, 0
execute_one time: 1, 10112
----- executor 3 write_call_output, size 32765, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 362
----- completed 16
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
[D 03/25/2023 11:40:40] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 130
----- completed 17
execute_call 0, 2017, 0, 1
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12130, 0
execute_one time: 1, 12130
2023/03/25 12:40:42 for select break: 1
2023/03/25 12:40:42 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 70, 12131, 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:40:42 for select break: 1
2023/03/25 12:40:42 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 16487, flag collect 0
time breakdown 1: 68, 12133, 1
before receive testcase: 0 0
2023/03/25 12:40:42 for select break: 1
2023/03/25 12:40:42 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 68, 12133, 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2344
before receive testcase: 0 0
2023/03/25 12:40:42 for select break: 1
2023/03/25 12:40:42 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:40:42 wg wait finish
2023/03/25 12:40:42 ------ all executors finish execution
2023/03/25 12:40:42 exec time: 12199
2023/03/25 12:40:42 ----- PS len: 4
2023/03/25 12:40:42 [CLIENT] executor 3 has 18 replies
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 362 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/25 12:40:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:40:42 [SERVER] executor 0 has 9 replies
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 12:40:42 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:40:42 [SERVER] executor 1 has 0 replies
2023/03/25 12:40:42 [SERVER] executor 2 has 0 replies
2023/03/25 12:40:42 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:40:42 ----- no new client coverage: false, true
2023/03/25 12:40:42 mutate testcase with failures
2023/03/25 12:40:42 ----- mutateArg()
2023/03/25 12:40:42 ----- mutateArg()
2023/03/25 12:40:42 ----- mutateArg()
2023/03/25 12:40:42 ----- insertCall()
2023/03/25 12:40:42 ----- generateCall 2458 open open
2023/03/25 12:40:42 ----- insertCall()
2023/03/25 12:40:42 ----- generateCall 2458 open open
2023/03/25 12:40:42 ----- insertCall()
2023/03/25 12:40:42 ----- generateCall 2458 open open
2023/03/25 12:40:42 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:40:42 disable threaded and collide
2023/03/25 12:40:42 prog length: 6
2023/03/25 12:40:42 prog length: 6
2023/03/25 12:40:42 HasCrashFail:true HasNetFail:false
12:40:42 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$user(&(0x7f0000000000)='./file0\x00', 0x0, 0x0, 0xfc, 0x1)
open(&(0x7f0000000080)='./file0\x00', 0x200200, 0x26)
syz_failure_sync(0x0, 0x3)
open(&(0x7f00000000c0)='./file1\x00', 0x100c0, 0x24)
open(&(0x7f0000000040)='./file0\x00', 0x210000, 0x80)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 744
remove dir: /root/orangefs-client/dfs-0-60
time breakdown 0: 66, 12135, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 18
-----finish removing dir
receive_execute: 1, 2052
receive_execute: 2, 2052
mkdir time 2034
executor 3 create dir /root/orangefs-client/dfs-0-61 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-61
receive_execute: 2, 2052
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 3, 2053
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8169, flag collect 0
----- executor 0 signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 3056, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2088
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:40:44] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10041, 0, 0
execute_one loop: 0, 0, 10041
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 309
----- completed 5
execute_call 0, 10040, 0, 1
execute_one loop: 0, 0, 10041
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20083, 0, 0
execute_one loop: 0, 0, 20084
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1097 tid 1097

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1097, pid 1097, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:41:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 477, write pid:477
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
executor 3, execute_one inner time: 0, 20133, 0
execute_one time: 1, 20133
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 20133, 0
execute_one time: 0, 20135
2023/03/25 12:41:04 for select break: 1
2023/03/25 12:41:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2056, 20135, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
2023/03/25 12:41:04 for select break: 1
2023/03/25 12:41:04 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 501
----- executor 0 executes write_coverage_signal cov->size 3104, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 1373, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 924, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 2636
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2054, 20136, 0
before receive testcase: 0 0
2023/03/25 12:41:04 for select break: 1
2023/03/25 12:41:04 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:41:04 for select break: 1
2023/03/25 12:41:04 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:41:04 wg wait finish
2023/03/25 12:41:04 ------ all executors finish execution
2023/03/25 12:41:04 exec time: 22194
2023/03/25 12:41:04 ----- PS len: 4
2023/03/25 12:41:04 [CLIENT] executor 3 has 6 replies
2023/03/25 12:41:04 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:41:04 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:41:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:04 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 12:41:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:04 [SERVER] executor 2 has 0 replies
2023/03/25 12:41:04 [SERVER] executor 0 has 8 replies
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 1409 signal and 0 cover from userspace component
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:41:04 [SERVER] executor 1 has 0 replies
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 501 signal and 0 cover from userspace component
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 12:41:04 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2054, 20141, 0
before receive testcase: 0 0
time breakdown 0: 2053, 20137, 0
before receive testcase: 0 0
2023/03/25 12:41:04 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:04 ----- no new client coverage: false, true
2023/03/25 12:41:04 mutate testcase with failures
2023/03/25 12:41:04 ----- mutateArg()
2023/03/25 12:41:04 ----- insertCall()
2023/03/25 12:41:04 ----- insertCall()
2023/03/25 12:41:04 ----- insertCall()
2023/03/25 12:41:04 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:04 disable threaded and collide
2023/03/25 12:41:04 prog length: 6
2023/03/25 12:41:04 prog length: 22
2023/03/25 12:41:04 HasCrashFail:true HasNetFail:false
12:41:04 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001a80)='./file0/file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
syz_failure_sync(0x1, 0x3)
write$binfmt_script(r4, &(0x7f0000001ac0)=ANY=[@ANYBLOB="2321202e2f66696c6530206306000000000000002e73797374656d2e49fb608ed87bca5365637572697479002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7c292ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3e349453bba2a93e906bfd115ad87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad10200d2f99286bfcc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0af3f05114ae598600975000f4c7ca97876f5974f41e732feb5c863a12bfcdd6804168bc0b5f"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8552
remove dir: /root/orangefs-client/dfs-0-61
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
[D 03/25/2023 11:41:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2048
-----finish removing dir
mkdir time 2031
executor 3 create dir /root/orangefs-client/dfs-0-62 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-62
receive_execute: 6, 4079
receive_execute: 2, 4079
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 7, 4080
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
receive_execute: 7, 4079
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 794 tid 794

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 794, pid 794, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:41:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 42, 0
execute_one time: 0, 43
2023/03/25 12:41:08 for select break: 1
2023/03/25 12:41:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4087, 44, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:41:08 for select break: 1
2023/03/25 12:41:08 --------- executor 2 receive reply, reply.done 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 43, 0
execute_one time: 1, 43
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 12:41:08 for select break: 1
2023/03/25 12:41:08 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:41:08 for select break: 1
2023/03/25 12:41:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:41:08 wg wait finish
2023/03/25 12:41:08 ------ all executors finish execution
2023/03/25 12:41:08 exec time: 4126
2023/03/25 12:41:08 ----- PS len: 4
2023/03/25 12:41:08 [CLIENT] executor 3 has 22 replies
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28598, flag collect 0
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 10732, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3341, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2955, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2124
2023/03/25 12:41:08 [SERVER] executor 1 has 1 replies
2023/03/25 12:41:08 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:41:08 [SERVER] executor 2 has 0 replies
2023/03/25 12:41:08 [SERVER] executor 0 has 4 replies
2023/03/25 12:41:08 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 12:41:08 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:41:08 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:41:08 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 4085, 46, 0
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:08 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 4086, 46, 0
before receive testcase: 0 0
2023/03/25 12:41:08 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 12:41:08 ----- no new client coverage: false, true
2023/03/25 12:41:08 mutate testcase with failures
2023/03/25 12:41:08 ----- mutateFailPos()
2023/03/25 12:41:08 ----- mutateArg()
2023/03/25 12:41:08 ----- insertCall()
2023/03/25 12:41:08 ----- insertCall()
2023/03/25 12:41:08 ----- insertCall()
2023/03/25 12:41:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:08 disable threaded and collide
2023/03/25 12:41:08 prog length: 6
2023/03/25 12:41:08 prog length: 22
2023/03/25 12:41:08 HasCrashFail:true HasNetFail:false
12:41:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000001a80)=ANY=[@ANYBLOB=""], 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
syz_failure_sync(0x1, 0x3)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=ANY=[@ANYBLOB='\x00\x00\x00\x00rity.security.SMACK64TRANSMUTE\x00'], &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001980)={'#! ', './file0', [{0x20, 'com.apple.system.Security\x00'}, {0x20, 'security.SMACK64TRANSMUTE\x00'}, {}], 0xa, "4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"}, 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8560
remove dir: /root/orangefs-client/dfs-0-62
time breakdown 1: 4081, 46, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 19
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 11:41:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:41:08] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:41:08] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:41:08] Error: Could not initialize server subsystems
[E 03/25/2023 11:41:08] Error: Could not initialize server; aborting.
receive_execute: 5, 8061
mkdir time 8043
executor 3 create dir /root/orangefs-client/dfs-0-63 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-63
receive_execute: 4, 8062
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 8062
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 5, 8063
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 810 tid 810

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 810, pid 810, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:41:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 26, 0
execute_one time: 1, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 50, 0
execute_one time: 0, 50
time breakdown 3: 8068, 51, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28484, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
2023/03/25 12:41:16 for select break: 1
2023/03/25 12:41:16 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 1429
----- executor 0 executes write_coverage_signal cov->size 10942, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3341, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2955, flag collect 0
----- executor 0 signal number : 75
2023/03/25 12:41:16 for select break: 1
2023/03/25 12:41:16 --------- executor 2 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 8066, 53, 0
before receive testcase: 0 0
2023/03/25 12:41:16 for select break: 1
2023/03/25 12:41:16 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2119
time breakdown 0: 8064, 54, 0
2023/03/25 12:41:16 for select break: 1
before receive testcase: 0 1
2023/03/25 12:41:16 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:41:16 wg wait finish
2023/03/25 12:41:16 ------ all executors finish execution
2023/03/25 12:41:16 exec time: 8116
2023/03/25 12:41:16 ----- PS len: 4
2023/03/25 12:41:16 [CLIENT] executor 3 has 22 replies
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:16 [SERVER] executor 0 has 4 replies
2023/03/25 12:41:16 ------- fuzzer executor 0 receive 1429 signal and 0 cover from userspace component
2023/03/25 12:41:16 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 12:41:16 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:41:16 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:41:16 [SERVER] executor 1 has 1 replies
2023/03/25 12:41:16 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:41:16 [SERVER] executor 2 has 0 replies
2023/03/25 12:41:16 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:16 ----- no new client coverage: false, true
2023/03/25 12:41:16 mutate testcase with failures
2023/03/25 12:41:16 ----- mutateArg()
2023/03/25 12:41:16 ----- insertCall()
before receive testcase: 0 0
2023/03/25 12:41:16 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:16 disable threaded and collide
2023/03/25 12:41:16 prog length: 6
2023/03/25 12:41:16 prog length: 22
2023/03/25 12:41:16 HasCrashFail:true HasNetFail:false
12:41:16 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
syz_failure_sync(0x1, 0x3)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9f, 0x5)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)=ANY=[@ANYBLOB="02000000010001000000000002000500", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="040004000000000008000000", @ANYRES32=r6, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0xee01, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="10000100"/16], 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4160
remove dir: /root/orangefs-client/dfs-0-63
time breakdown 1: 8066, 54, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-64 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-64
receive_execute: 1, 33
receive_execute: 2, 33
receive_execute: 3, 33
receive_execute: 4, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1117 tid 1117

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1117, pid 1117, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:41:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 4
----- directly resend shmid 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 23, 0
execute_one time: 1, 23
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:41:16] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:41:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 11:41:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 11:41:16] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:41:16] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:41:16] Error: Could not initialize server subsystems
[E 03/25/2023 11:41:16] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2033, 0
execute_one time: 0, 2033
2023/03/25 12:41:18 for select break: 1
2023/03/25 12:41:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13625, flag collect 0
executor 2 write_server_output
time breakdown 3: 38, 2034, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 1926
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 1 signal number : 28
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 12389, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2224
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1641
2023/03/25 12:41:18 for select break: 1
2023/03/25 12:41:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 34, 2038, 0
before receive testcase: 0 0
2023/03/25 12:41:18 for select break: 1
2023/03/25 12:41:18 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:41:18 for select break: 1
2023/03/25 12:41:18 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:41:18 wg wait finish
2023/03/25 12:41:18 ------ all executors finish execution
2023/03/25 12:41:18 exec time: 2072
2023/03/25 12:41:18 ----- PS len: 4
2023/03/25 12:41:18 [CLIENT] executor 3 has 22 replies
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 [SERVER] executor 1 has 4 replies
2023/03/25 12:41:18 [SERVER] executor 2 has 0 replies
2023/03/25 12:41:18 ------- fuzzer executor 1 receive 1926 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 1 receive 28 signal and 0 cover from userspace component
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:18 [SERVER] executor 0 has 5 replies
2023/03/25 12:41:18 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:41:18 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 12:41:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:18 ----- no new client coverage: false, true
2023/03/25 12:41:18 mutate testcase with failures
2023/03/25 12:41:18 ----- insertCall()
2023/03/25 12:41:18 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/25 12:41:18 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:18 disable threaded and collide
2023/03/25 12:41:18 prog length: 6
2023/03/25 12:41:18 prog length: 9
2023/03/25 12:41:18 HasCrashFail:true HasNetFail:false
12:41:18 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lremovexattr(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)=@known='com.apple.system.Security\x00')
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1168
remove dir: /root/orangefs-client/dfs-0-64
time breakdown 1: 35, 2038, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 2: 36, 2037, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 4030
executor 3 create dir /root/orangefs-client/dfs-0-65 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-65
receive_execute: 1, 4052
receive_execute: 1, 4052
receive_execute: 2, 4052
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 4051
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1132 tid 1132

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1132, pid 1132, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:41:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 26, 0
execute_one time: 0, 26
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:41:22] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:41:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1991
----- completed 3
execute_call 0, 2033, 0, 1
execute_one loop: 0, 0, 2034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 370
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 2068, 0
execute_one time: 1, 2068
2023/03/25 12:41:25 for select break: 1
2023/03/25 12:41:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4056, 2069, 0
before receive testcase: 0 0
executor 2 write_server_output
2023/03/25 12:41:25 for select break: 1
2023/03/25 12:41:25 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:41:25 for select break: 1
2023/03/25 12:41:25 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4054, 2070, 0
time breakdown 1: 4053, 2070, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 17525, flag collect 0
----- executor 0 signal number : 109
executor 0 server cover_cnt 5 output_pos_value 1625
2023/03/25 12:41:25 for select break: 1
2023/03/25 12:41:25 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:41:25 wg wait finish
2023/03/25 12:41:25 ------ all executors finish execution
2023/03/25 12:41:25 exec time: 6125
2023/03/25 12:41:25 ----- PS len: 4
2023/03/25 12:41:25 [CLIENT] executor 3 has 9 replies
2023/03/25 12:41:25 [SERVER] executor 0 has 5 replies
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 fuzzer receive 1991 signal and 0 cover from executor 3
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 [SERVER] executor 1 has 0 replies
2023/03/25 12:41:25 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 12:41:25 [SERVER] executor 2 has 0 replies
2023/03/25 12:41:25 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 12:41:25 ------- fuzzer executor 0 receive 109 signal and 0 cover from userspace component
time breakdown 0: 4053, 2073, 0
before receive testcase: 0 0
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:25 fuzzer receive 370 signal and 0 cover from executor 3
2023/03/25 12:41:25 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:25 ----- no new client coverage: false, true
2023/03/25 12:41:25 mutate testcase with failures
2023/03/25 12:41:25 ----- mutateArg()
2023/03/25 12:41:25 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:25 disable threaded and collide
2023/03/25 12:41:25 prog length: 6
2023/03/25 12:41:25 prog length: 9
2023/03/25 12:41:25 HasCrashFail:true HasNetFail:false
12:41:25 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
syz_failure_sync(0x0, 0x3)
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x1, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1616
remove dir: /root/orangefs-client/dfs-0-65
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 52
-----finish removing dir
mkdir time 2025
executor 3 create dir /root/orangefs-client/dfs-0-66 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-66
receive_execute: 4, 2077
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 2077
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 2077
receive_execute: 5, 2078
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16337, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 6124, flag collect 0
----- executor 0 signal number : 317
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1608, flag collect 0
----- executor 0 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 2098
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:41:27] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10059, 0, 0
execute_one loop: 0, 0, 10059
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10059, 0, 0
execute_one loop: 0, 0, 10059
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1148 tid 1148

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1148, pid 1148, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:41:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 315
----- completed 7
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10088, 0
execute_one time: 1, 10088
[D 03/25/2023 11:41:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 486, write pid:486
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 117
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 12102, 0
execute_one time: 0, 12102
2023/03/25 12:41:39 for select break: 1
2023/03/25 12:41:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2083, 12103, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 234
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:41:39 for select break: 1
2023/03/25 12:41:39 --------- executor 2 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2081, 12105, 0
2023/03/25 12:41:39 for select break: 1
2023/03/25 12:41:39 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 2081, 12105, 0
before receive testcase: 0 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 14904, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2528
2023/03/25 12:41:39 for select break: 1
2023/03/25 12:41:39 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:41:39 wg wait finish
2023/03/25 12:41:39 ------ all executors finish execution
2023/03/25 12:41:39 exec time: 14185
2023/03/25 12:41:39 ----- PS len: 4
2023/03/25 12:41:39 [CLIENT] executor 3 has 9 replies
2023/03/25 12:41:39 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 315 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:39 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/25 12:41:39 [SERVER] executor 0 has 9 replies
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 317 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 234 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 12:41:39 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 12:41:39 [SERVER] executor 1 has 0 replies
2023/03/25 12:41:39 [SERVER] executor 2 has 0 replies
time breakdown 0: 2078, 12108, 0
before receive testcase: 0 0
2023/03/25 12:41:39 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:39 ----- no new client coverage: false, true
2023/03/25 12:41:39 mutate testcase with failures
2023/03/25 12:41:39 ----- insertCall()
2023/03/25 12:41:39 ----- generateCall 2458 open open
2023/03/25 12:41:39 ----- mutateArg()
2023/03/25 12:41:39 ----- insertCall()
2023/03/25 12:41:39 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 12:41:39 ----- mutateArg()
2023/03/25 12:41:39 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:39 disable threaded and collide
2023/03/25 12:41:39 prog length: 6
2023/03/25 12:41:39 prog length: 7
2023/03/25 12:41:39 HasCrashFail:true HasNetFail:false
12:41:39 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
open(&(0x7f0000000000)='./file0\x00', 0x0, 0xc9)
r0 = open$dir(&(0x7f0000000200)='./file0\x00', 0x408240, 0x11a)
pread64(r0, &(0x7f0000000100)=""/221, 0xdd, 0x4)
r1 = open(&(0x7f0000000040)='./file0\x00', 0x80, 0x82)
fsetxattr$security_ima(r1, &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x2, "3130ad13f3b9"}, 0x7, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1000
remove dir: /root/orangefs-client/dfs-0-66
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 18
-----finish removing dir
mkdir time 2022
executor 3 create dir /root/orangefs-client/dfs-0-67 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-67
receive_execute: 1, 2040
receive_execute: 4, 2039
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 2040
receive_execute: 4, 2040
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1165 tid 1165

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1165, pid 1165, value 1

----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:41:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 36, 0
execute_one time: 0, 36
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:41:41] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:41:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2003
----- completed 3
execute_call 0, 2005, 0, 1
execute_one loop: 0, 0, 2006
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 410
----- completed 6
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 2043, 0
execute_one time: 0, 2044
2023/03/25 12:41:43 for select break: 1
2023/03/25 12:41:43 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2045, 2044, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1422
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:41:43 for select break: 1
2023/03/25 12:41:43 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2044, 2045, 0
before receive testcase: 0 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 12:41:43 for select break: 1
2023/03/25 12:41:43 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2044, 2045, 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 12727, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1856
2023/03/25 12:41:43 for select break: 1
2023/03/25 12:41:43 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:41:43 wg wait finish
2023/03/25 12:41:43 ------ all executors finish execution
2023/03/25 12:41:43 exec time: 4087
2023/03/25 12:41:43 ----- PS len: 4
2023/03/25 12:41:43 [CLIENT] executor 3 has 7 replies
2023/03/25 12:41:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:43 fuzzer receive 2003 signal and 0 cover from executor 3
2023/03/25 12:41:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:43 fuzzer receive 410 signal and 0 cover from executor 3
2023/03/25 12:41:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:43 [SERVER] executor 0 has 5 replies
2023/03/25 12:41:43 ------- fuzzer executor 0 receive 1422 signal and 0 cover from userspace component
2023/03/25 12:41:43 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 12:41:43 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 12:41:43 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 12:41:43 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 2041, 2047, 0
2023/03/25 12:41:43 [SERVER] executor 1 has 0 replies
2023/03/25 12:41:43 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 12:41:43 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:43 ----- no new client coverage: false, true
2023/03/25 12:41:43 ----- enqueue testcases with server coveraged
before receive testcase: 0 0
2023/03/25 12:41:43 disable threaded and collide
2023/03/25 12:41:43 prog length: 6
2023/03/25 12:41:43 prog length: 7
2023/03/25 12:41:43 HasCrashFail:true HasNetFail:false
12:41:43 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
open(&(0x7f0000000000)='./file0\x00', 0x0, 0xc9)
r0 = open$dir(&(0x7f0000000200)='./file0\x00', 0x408240, 0x11a)
pread64(r0, &(0x7f0000000100)=""/221, 0xdd, 0x4)
r1 = open(&(0x7f0000000040)='./file0\x00', 0x80, 0x82)
fsetxattr$security_ima(r1, &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x2, "3130ad13f3b9"}, 0x7, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1000
remove dir: /root/orangefs-client/dfs-0-67
remove dir time 22
-----finish removing dir
receive_execute: 1, 10086
mkdir time 10063
executor 3 create dir /root/orangefs-client/dfs-0-68 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-68
receive_execute: 3, 10086
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 2, 10087
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
receive_execute: 5, 10087
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1182 tid 1182

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1182, pid 1182, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:41:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 25, 0
execute_one time: 1, 25
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 11:41:53] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:41:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 2021, 0, 0
execute_one loop: 0, 0, 2021
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 1
----- executor 3 cover number : 1750, signal number : 2061
----- completed 6
execute_call 0, 2, 0, 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2050, 0
execute_one time: 0, 2050
2023/03/25 12:41:55 for select break: 1
2023/03/25 12:41:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10092, 2051, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 12:41:55 for select break: 1
2023/03/25 12:41:55 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 10089, 2053, 0
2023/03/25 12:41:55 for select break: 1
before receive testcase: 0 0
2023/03/25 12:41:55 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10090, 2053, 0
before receive testcase: 0 0
----- executor 0 cover number : 918, signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 229, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 12620, flag collect 1
----- executor 0 cover number : 109, signal number : 102
executor 0 server cover_cnt 5 output_pos_value 3005
2023/03/25 12:41:55 for select break: 1
2023/03/25 12:41:55 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:41:55 wg wait finish
2023/03/25 12:41:55 ------ all executors finish execution
2023/03/25 12:41:55 exec time: 12159
2023/03/25 12:41:55 ----- PS len: 4
2023/03/25 12:41:55 [CLIENT] executor 3 has 7 replies
2023/03/25 12:41:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:55 [SERVER] executor 0 has 5 replies
2023/03/25 12:41:55 ------- fuzzer executor 0 receive 1104 signal and 918 cover from userspace component
2023/03/25 12:41:55 [SERVER] executor 2 has 0 replies
2023/03/25 12:41:55 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 12:41:55 [SERVER] executor 1 has 0 replies
2023/03/25 12:41:55 ------- fuzzer executor 0 receive 239 signal and 229 cover from userspace component
2023/03/25 12:41:55 ------- fuzzer executor 0 receive 152 signal and 126 cover from userspace component
2023/03/25 12:41:55 ------- fuzzer executor 0 receive 102 signal and 109 cover from userspace component
time breakdown 0: 10087, 2073, 0
before receive testcase: 0 0
2023/03/25 12:41:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:55 fuzzer receive 2061 signal and 1750 cover from executor 3
2023/03/25 12:41:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:41:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:41:55 ----- triage return due to empty signal extra
2023/03/25 12:41:55 mutate testcase with failures
2023/03/25 12:41:55 ----- insertCall()
2023/03/25 12:41:55 ----- generateCall 2808 removexattr removexattr
2023/03/25 12:41:55 ----- insertCall()
2023/03/25 12:41:55 ----- insertCall()
2023/03/25 12:41:55 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/25 12:41:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:41:55 disable threaded and collide
2023/03/25 12:41:55 prog length: 6
2023/03/25 12:41:55 prog length: 7
2023/03/25 12:41:55 HasCrashFail:true HasNetFail:false
12:41:55 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$security_selinux(&(0x7f0000000100)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x0)
setxattr$security_evm(&(0x7f0000000080)='./file0/file1\x00', &(0x7f00000000c0), &(0x7f0000000200)=@v2={0x3, 0x1, 0xb, 0x3, 0xde, "2ca07bc0a280ce7a78fe42b0664ba342affbde730f2c5c70296edad625df7b3a3badf44f7547c764f5e8ab4be33b98c24b5ba2bdd306e21d21cdf3c0e53ab1e4870e69b16e09edf82e8217db2376f149a655f735397c0d9d7aaeedc5405200ef59447a1eb3811f4994b7e1143d90fcd74432e9db621e9448d4d1f141d0190862a4dff37848f29ef5f9bc4e7e882d0bc0170a5af3567bd71245d1b27ee1f629a7f759213512ed59a1803a3580a1f014d0fe641a2cd745d45b34d4c7bc402cd7755f9a4c22dc27ed8e4d20b7853744122e52ada9ebb2983a45402c5ac5395b"}, 0xe7, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@random={'system.', ':\'\x00'})
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1576
remove dir: /root/orangefs-client/dfs-0-68
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 10171
executor 3 create dir /root/orangefs-client/dfs-0-69 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-69
receive_execute: 20, 10200
receive_execute: 0, 10201
receive_execute: 19, 10201
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 20, 10201
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 11:42:05] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10039, 0, 0
execute_one loop: 0, 0, 10039
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2006
----- completed 3
execute_call 0, 10060, 0, 1
execute_one loop: 0, 0, 10061
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10035, 0, 0
execute_one loop: 0, 0, 10035
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 106
----- completed 5
execute_call 0, 10046, 0, 1
execute_one loop: 0, 0, 10047
cover_reset in execute_call
execute_call 0, 50218, 0, 0
----- executor 3 write_call_output, size 0, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10034, 0, 1
execute_one loop: 0, 0, 10035
cover_reset in execute_call
executor 3 waits for recv msg
execute_one loop: 0, 0, 50218
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1198 tid 1198

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1198, pid 1198, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:42:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
2023/03/25 12:42:55 for select break: 1
2023/03/25 12:42:55 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 32765, pid 493, write pid:493
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 10
----- completed 7
execute_call 0, 17, 0, 1
execute_one loop: 0, 0, 18
executor 3, execute_one inner time: 0, 50248, 0
execute_one time: 1, 50248
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 12:42:55 for select break: 1
2023/03/25 12:42:55 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10220, 50250, 0
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 50247, 0
execute_one time: 0, 50248
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1256
before receive testcase: 0 0
2023/03/25 12:42:55 for select break: 1
2023/03/25 12:42:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10220, 50251, 0
before receive testcase: 0 0
2023/03/25 12:42:55 for select break: 1
2023/03/25 12:42:55 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:42:55 wg wait finish
2023/03/25 12:42:55 ------ all executors finish execution
2023/03/25 12:42:55 exec time: 60454
2023/03/25 12:42:55 ----- PS len: 4
2023/03/25 12:42:55 [CLIENT] executor 3 has 7 replies
2023/03/25 12:42:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:42:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:42:55 fuzzer receive 2006 signal and 0 cover from executor 3
2023/03/25 12:42:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:42:55 fuzzer receive 106 signal and 0 cover from executor 3
2023/03/25 12:42:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:42:55 fuzzer receive 10 signal and 0 cover from executor 3
time breakdown 0: 10201, 50251, 0
2023/03/25 12:42:55 [SERVER] executor 0 has 4 replies
2023/03/25 12:42:55 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 12:42:55 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 12:42:55 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 12:42:55 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 12:42:55 [SERVER] executor 1 has 0 replies
2023/03/25 12:42:55 [SERVER] executor 2 has 0 replies
time breakdown 3: 10221, 50249, 0
before receive testcase: 0 0
2023/03/25 12:42:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:42:55 ----- no new client coverage: false, true
2023/03/25 12:42:55 mutate testcase with failures
2023/03/25 12:42:55 ----- insertCall()
2023/03/25 12:42:55 ----- mutateFailPos()
2023/03/25 12:42:55 insert call 3 at pos 0
2023/03/25 12:42:55 ----- mutateFailPos()
2023/03/25 12:42:55 insert call 0 at pos 0
2023/03/25 12:42:55 ----- insertCall()
2023/03/25 12:42:55 ----- mutateArg()
2023/03/25 12:42:55 ----- mutateArg()
2023/03/25 12:42:55 ----- insertCall()
2023/03/25 12:42:55 ----- mutateArg()
2023/03/25 12:42:55 ----- mutateArg()
2023/03/25 12:42:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:42:55 disable threaded and collide
2023/03/25 12:42:55 prog length: 6
2023/03/25 12:42:55 prog length: 22
before receive testcase: 0 0
2023/03/25 12:42:55 HasCrashFail:true HasNetFail:false
12:42:55 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
syz_failure_sync(0x1, 0x3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@random={'os2.', '[-.\x00'})
r5 = dup2(0xffffffffffffffff, r4)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v1={0x2, "be9fe53a059136794521f9"}, 0xc, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4664
remove dir: /root/orangefs-client/dfs-0-69
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 11:42:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2050
-----finish removing dir
receive_execute: 3, 14249
receive_execute: 4, 14249
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 12199
executor 3 create dir /root/orangefs-client/dfs-0-70 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-70
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 14251
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 3, 14250
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6467, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 6467, flag collect 0
----- executor 3 signal number : 2065
----- completed 8
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 840 tid 840

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 840, pid 840, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 11:43:10] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 497, write pid:497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 44, 0
execute_one time: 0, 44
2023/03/25 12:43:10 for select break: 1
2023/03/25 12:43:10 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 14256, 45, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4085, flag collect 0
----- executor 0 signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 1564, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1007, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 0 signal number : 75
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 4 output_pos_value 2097
2023/03/25 12:43:10 for select break: 1
2023/03/25 12:43:10 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 14253, 47, 0
before receive testcase: 0 0
2023/03/25 12:43:10 for select break: 1
2023/03/25 12:43:10 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:43:10 for select break: 1
2023/03/25 12:43:10 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:43:10 wg wait finish
2023/03/25 12:43:10 ------ all executors finish execution
2023/03/25 12:43:10 exec time: 14298
2023/03/25 12:43:10 ----- PS len: 4
2023/03/25 12:43:10 [CLIENT] executor 3 has 22 replies
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 14253, 47, 0
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:10 [SERVER] executor 2 has 0 replies
2023/03/25 12:43:10 [SERVER] executor 1 has 1 replies
2023/03/25 12:43:10 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 12:43:10 [SERVER] executor 0 has 4 replies
2023/03/25 12:43:10 ------- fuzzer executor 0 receive 1404 signal and 0 cover from userspace component
2023/03/25 12:43:10 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 12:43:10 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 12:43:10 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 12:43:10 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 12:43:10 ----- no new client coverage: false, true
2023/03/25 12:43:10 mutate testcase with failures
2023/03/25 12:43:10 ----- mutateArg()
2023/03/25 12:43:10 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:43:10 disable threaded and collide
2023/03/25 12:43:10 prog length: 6
2023/03/25 12:43:10 prog length: 5
2023/03/25 12:43:10 HasCrashFail:true HasNetFail:false
12:43:10 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x51)
unlink(&(0x7f0000000000)='./file0\x00')
syz_failure_sync(0x1, 0x3)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 528
remove dir: /root/orangefs-client/dfs-0-70
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 39, 0
execute_one time: 6, 39
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 1: 14253, 47, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 16
-----finish removing dir
[D 03/25/2023 11:43:10] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 11:43:10] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 11:43:10] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 11:43:10] Error: Could not initialize server subsystems
[E 03/25/2023 11:43:10] Error: Could not initialize server; aborting.
mkdir time 4047
executor 3 create dir /root/orangefs-client/dfs-0-71 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-71
receive_execute: 2, 4062
receive_execute: 2, 4063
receive_execute: 2, 4063
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 4063
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6443, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28991, flag collect 0
----- executor 0 signal number : 2535
----- executor 0 executes write_coverage_signal cov->size 17988, flag collect 0
----- executor 0 signal number : 1130
----- executor 0 executes write_coverage_signal cov->size 3112, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 2641, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4051
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 333
----- completed 3
execute_call 0, 33, 0, 1
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 3 write_call_output, size 6306, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6306, flag collect 0
----- executor 3 signal number : 368
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1217 tid 1217

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1217, pid 1217, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 11:43:14] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 78, 0
execute_one time: 0, 78
2023/03/25 12:43:14 for select break: 1
2023/03/25 12:43:14 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 78, 0
execute_one time: 0, 78
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 4066, 78, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 18036, flag collect 0
----- executor 0 signal number : 87
----- executor 0 executes write_coverage_signal cov->size 3575, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 2767, flag collect 0
----- executor 0 signal number : 11
executor 0 server cover_cnt 8 output_pos_value 4496
2023/03/25 12:43:14 for select break: 1
2023/03/25 12:43:14 --------- executor 2 receive reply, reply.done 1
2023/03/25 12:43:14 for select break: 1
2023/03/25 12:43:14 --------- executor 1 receive reply, reply.done 1
2023/03/25 12:43:14 for select break: 1
2023/03/25 12:43:14 --------- executor 0 receive reply, reply.done 1
2023/03/25 12:43:14 wg wait finish
2023/03/25 12:43:14 ------ all executors finish execution
2023/03/25 12:43:14 exec time: 4144
2023/03/25 12:43:14 ----- PS len: 4
2023/03/25 12:43:14 [CLIENT] executor 3 has 5 replies
2023/03/25 12:43:14 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 12:43:14 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 4065, 80, 0
2023/03/25 12:43:14 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/25 12:43:14 fuzzer receive 368 signal and 0 cover from executor 3
2023/03/25 12:43:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 12:43:14 [SERVER] executor 1 has 0 replies
2023/03/25 12:43:14 [SERVER] executor 2 has 0 replies
2023/03/25 12:43:14 [SERVER] executor 0 has 8 replies
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 2535 signal and 0 cover from userspace component
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 1130 signal and 0 cover from userspace component
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
time breakdown 0: 4065, 80, 0
before receive testcase: 0 0
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 87 signal and 0 cover from userspace component
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/25 12:43:14 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 12:43:14 fsMds: [map[] map[] map[] map[]]
2023/03/25 12:43:14 ----- no new client coverage: false, true
2023/03/25 12:43:14 mutate testcase with failures
2023/03/25 12:43:14 ----- insertCall()
2023/03/25 12:43:14 ----- generateCall 222 fremovexattr fremovexattr
2023/03/25 12:43:14 ----- mutateArg()
2023/03/25 12:43:14 HasCrashFail: true, .HasNetFail: false
2023/03/25 12:43:14 disable threaded and collide
2023/03/25 12:43:14 prog length: 6
2023/03/25 12:43:14 prog length: 15
2023/03/25 12:43:14 HasCrashFail:true HasNetFail:false
12:43:14 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open$dir(&(0x7f0000000440)='./file0\x00', 0x200600, 0x1)
fremovexattr(r0, &(0x7f0000000480)=@known='system.advise\x00')
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r2 = fcntl$dupfd(r1, 0x406, r1)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f00000000c0))
pwritev(r3, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r2, &(0x7f0000000380), &(0x7f00000004c0)=ANY=[], 0x63, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2800
remove dir: /root/orangefs-client/dfs-0-71
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 2: 4065, 81, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[E 03/25/2023 11:43:14] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 11:43:14] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
Node-3:/root/daemon-log.363
opendir(/root/orangefs-client/dfs-0-71) failedremove dir time 2025
-----finish removing dir
=================================================================
==363==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffffffe250 at pc 0x7ffff75faa6d bp 0x7fffffff8920 sp 0x7fffffff80c8
READ of size 5 at 0x7fffffffe250 thread T0
    #0 0x7ffff75faa6c  (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c)
    #1 0x555555796371 in PINT_encrypt_dirdata (/opt/orangefs/bin/pvfs2fuse+0x242371)
    #2 0x5555556e8a55 in remove_rmdirent_setup_msgpair (/opt/orangefs/bin/pvfs2fuse+0x194a55)
    #3 0x55555578989b in PINT_state_machine_invoke (/opt/orangefs/bin/pvfs2fuse+0x23589b)
    #4 0x55555578a706 in PINT_state_machine_next (/opt/orangefs/bin/pvfs2fuse+0x236706)
    #5 0x55555578a785 in PINT_state_machine_continue (/opt/orangefs/bin/pvfs2fuse+0x236785)
    #6 0x555555679ad1 in PINT_client_state_machine_test (/opt/orangefs/bin/pvfs2fuse+0x125ad1)
    #7 0x55555567aef5 in PINT_client_wait_internal (/opt/orangefs/bin/pvfs2fuse+0x126ef5)
    #8 0x55555567b5c2 in PVFS_sys_wait (/opt/orangefs/bin/pvfs2fuse+0x1275c2)
    #9 0x55555567e70e in PVFS_sys_getattr (/opt/orangefs/bin/pvfs2fuse+0x12a70e)
    #10 0x555555665504 in pvfs_fuse_getattr_pfhp (/opt/orangefs/bin/pvfs2fuse+0x111504)
    #11 0x5555556664f7 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1124f7)
    #12 0x7ffff710b7a6 in fuse_fs_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0xd7a6)
    #13 0x7ffff710ec5f in fuse_lib_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x10c5f)
    #14 0x7ffff71189a9 in do_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x1a9a9)
    #15 0x7ffff711c72e in fuse_ll_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x1e72e)
    #16 0x7ffff711f155 in fuse_session_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x21155)
    #17 0x7ffff7115702 in fuse_session_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x17702)
    #18 0x7ffff7113e30 in fuse_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x15e30)
    #19 0x7ffff7121bdf in fuse_main_common (/lib/x86_64-linux-gnu/libfuse.so.2+0x23bdf)
    #20 0x7ffff7121c5f in fuse_main_real (/lib/x86_64-linux-gnu/libfuse.so.2+0x23c5f)
    #21 0x55555566bc4f in pvfs_fuse_main (/opt/orangefs/bin/pvfs2fuse+0x117c4f)
    #22 0x55555566cdb0 in main (/opt/orangefs/bin/pvfs2fuse+0x118db0)
    #23 0x7ffff6f280b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #24 0x555555664c8d in _start (/opt/orangefs/bin/pvfs2fuse+0x110c8d)

Address 0x7fffffffe250 is located in stack of thread T0 at offset 0 in frame
    #0 0x5555556663e0 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1123e0)

  This frame has 1 object(s):
    [48, 128) 'pfh' (line 301)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c) 
Shadow bytes around the buggy address:
  0x10007fff7bf0: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c00: 04 f2 00 f3 f3 f3 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f3 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00
=>0x10007fff7c40: 00 00 00 00 00 00 00 00 00 00[f1]f1 f1 f1 f1 f1
  0x10007fff7c50: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00
  0x10007fff7c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==363==ABORTING

VM DIAGNOSIS:
12:43:16  Registers:
info registers vcpu 0
RAX=00007ffff71c3000 RBX=0000000000000000 RCX=0000000000000001 RDX=0000000000000000
RSI=00007ffff73fd087 RDI=00007fffffffdd90 RBP=00007fffffffe420 RSP=00007fffffffdff0
R8 =0000000000000000 R9 =00007fffffffde80 R10=000000000000000a R11=0000000000000048
R12=0000000000000000 R13=0000000000000000 R14=0000000000000001 R15=0000000000000000
RIP=00007ffff730295a RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff480 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7f1d608 CR3=000000010f9b0005 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000000012001 Opmask01=0000000000000000 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116 00007fffffffe050
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffdff0 0000003000000018
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050 00007fffffffe050
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748caa0 00007ffff7402ef2
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7387d88 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 2525252525252525 2525252525252525 2525252525252525 2525252525252525
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 656d697420726964 2065766f6d657200 0a7325203a726964 2065766f6d657200
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 40484c5105574c41 0540534a48405700 0a5600051f574c41 0540534a48405700
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
info registers vcpu 1
RAX=ffffffff81b939b0 RBX=0000000000000001 RCX=0000000000000000 RDX=ff1100026572e7e0
RSI=ff110001002cfe78 RDI=0000000000e0dfb0 RBP=ff110001002b9680 RSP=ff110001002cfee8
R8 =0000000000e0dfaf R9 =ff110001136aadc0 R10=ff1100026572da40 R11=000000000000f000
R12=ff110001002b9680 R13=ff110001002b9680 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81b939bb RFL=00000212 [----A--] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265700000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff07d4000 CR3=0000000103da0002 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000001c40000 Opmask01=0000000000000000 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240 0000000000000000
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 6161616161616161 6161616161616161
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffff0000
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffffffff
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffff0000
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748cac0 00007ffff748caa0 00007ffff748caa8 00007ffff748caa0
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 303a303030302f73 6563697665642f69 63702f7375622f73 79732f000000000a
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 151f151515150a56 40464c5340410a4c 46550a5650470a56 5c560a000000000a
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
