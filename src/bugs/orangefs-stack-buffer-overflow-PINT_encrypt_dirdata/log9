e 140 signal and 0 cover from userspace component
2023/03/25 19:32:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:56 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
time breakdown 1: 28, 2100, 0
2023/03/25 19:32:56 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 19:32:56 [SERVER] executor 0 has 9 replies
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 2746 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 953 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 388 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 282 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 1230 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 54 signal and 0 cover from userspace component
2023/03/25 19:32:56 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:32:56 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:32:56 ----- no new client coverage: false, true
2023/03/25 19:32:56 mutate testcase with failures
2023/03/25 19:32:56 ----- insertCall()
2023/03/25 19:32:56 ----- insertCall()
2023/03/25 19:32:56 ----- mutateArg()
2023/03/25 19:32:56 ----- mutateArg()
2023/03/25 19:32:56 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:32:56 disable threaded and collide
2023/03/25 19:32:56 prog length: 6
2023/03/25 19:32:56 prog length: 22
2023/03/25 19:32:56 HasCrashFail:true HasNetFail:false
19:32:56 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040), 0x4, 0x3)
r0 = open(&(0x7f0000000080)='./file0\x00', 0x400400, 0x44)
r1 = dup(r0)
r2 = dup(r1)
fsetxattr$security_ima(r2, &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x5, 0x1, 0x12, 0x1, 0xed, "d29a1001177e33a19d7319821fe973bb7633e17071fabd9eb5aa5eaa47e32823d58998b63865d4a04531b9b9e351be677e639824ee1b0cd36237e12df640af1a100c82713235c1f77b35cc3f97d60284c301beb38b367ed271fb38e801247de6abe91e0ba39fb8ef6d450c690eae759a95ba97b322f994b7d5c96e50962cff19d02adbd4defe239857db4ea35bc6055d7bcca6992e85f9bd6dd73c52c1d0c684ca6b74f355b541d6e8f42ad5dd8a766485590244000f45a48d9edcd5106f73b4cfbfccf5110a7d517cb4ca42c102cfca061be33d06369859dcd9c72dd2e327edee5eb31f7d3b0905ae45ca3b55"}, 0xf6, 0x3)
r3 = dup(r0)
write$binfmt_aout(r3, &(0x7f0000000200)={{0xcc, 0x5, 0x8d, 0x73, 0x1f3, 0x42, 0x4b, 0xaa55}, "bc6879c31f3c48df6675c132b9e18bdb4c919fdbb40612cc06fea00e626cbbd428641fafc03dd0b70d439fa4c8691104bb3890a01d4f1d024c966b666e00bfae80d99c15b89eb1e2f89ce374195308b9f75e2757f2da81cda3350e9ea6952a13a26b3bf0414bb85170c28aa451e0bdf4cd023e2ac4ca52467a04d85658169cb19709ddc6ed982dd1308b27be84c40a1b44e43b2e459919dc105613cc7174a5df6a7a3af9f25407231af77658fed072f7eb5a94f4e5df39c3e0354f0b1e0173", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x6df)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000900), &(0x7f0000000940)='./file0\x00', 0x8, 0x3)
r4 = dup(r2)
fstat(r4, &(0x7f0000000980))
fsetxattr$user(r1, &(0x7f0000000a00), &(0x7f0000000a40)='security.ima\x00', 0xd, 0x2)
fstat(0xffffffffffffffff, &(0x7f0000000a80))
fcntl$setpipe(r3, 0x407, 0x8dc)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000b00)='security.SMACK64EXEC\x00', &(0x7f0000000b40)={'trusted.overlay.redirect\x00'}, 0x1a, 0x2)
syz_failure_sync(0x0, 0x3)
r5 = dup(r0)
fcntl$setpipe(r5, 0x407, 0x7ff)
r6 = fcntl$dupfd(r1, 0x406, r1)
fstat(r6, &(0x7f0000000b80))
write$binfmt_script(r0, &(0x7f0000000c00)={'#! ', './file0', [{0x20, 'trusted.overlay.redirect\x00'}], 0xa, "1672feaee405846305df55af3b2024dc6d26024234863d02217a536581f58bb6c960439dc442b3ecd97bd5fd479bb5148065a5889b163df5356cf95e9fd6dc975e27d951eea67ea6aaf9718d760a454e18f816ec5ffe689bd21f032eedc492f4c37adf9ca79a1c8710dbe5863e06bf7b8b141f362ab35fe610c719ab45bebcdab1b8f2"}, 0xa8)
syz_failure_sync(0x1, 0x3)
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000cc0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6152
remove dir: /root/orangefs-client/dfs-0-5
remove dir time 51
-----finish removing dir
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-6 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-6
receive_execute: 5, 78
receive_execute: 3, 78
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 78
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 3, 77
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 405 tid 405

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 405, pid 405, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:32:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 6
----- directly resend shmid 6
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 38, 0
execute_one time: 0, 38
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 377, write pid:377
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 39, 0
execute_one time: 0, 39
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 824, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 0 signal number : 44
time breakdown 3: 84, 40, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
before receive testcase: 0 0
executor 0 server cover_cnt 3 output_pos_value 210
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 899
----- executor 1 executes write_coverage_signal cov->size 16472, flag collect 0
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 83, 40, 0
before receive testcase: 0 0
----- executor 1 signal number : 394
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 11
----- executor 1 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 1 signal number : 144
----- executor 1 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 1 signal number : 43
executor 1 server cover_cnt 5 output_pos_value 1507
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 0 receive reply, reply.done 1
-----executor 1 collect shmids 7
----- directly resend shmid 7
time breakdown 0: 81, 41, 0
before receive testcase: 0 0
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:32:57 wg wait finish
2023/03/25 19:32:57 ------ all executors finish execution
2023/03/25 19:32:57 exec time: 122
2023/03/25 19:32:57 ----- PS len: 4
2023/03/25 19:32:57 [CLIENT] executor 3 has 22 replies
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 [SERVER] executor 2 has 3 replies
2023/03/25 19:32:57 [SERVER] executor 1 has 5 replies
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 394 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 144 signal and 0 cover from userspace component
2023/03/25 19:32:57 [SERVER] executor 0 has 3 replies
2023/03/25 19:32:57 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/25 19:32:57 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:32:57 ----- no new client coverage: false, true
2023/03/25 19:32:57 mutate testcase with failures
2023/03/25 19:32:57 ----- mutateArg()
2023/03/25 19:32:57 ----- insertCall()
2023/03/25 19:32:57 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:32:57 disable threaded and collide
2023/03/25 19:32:57 prog length: 6
2023/03/25 19:32:57 prog length: 22
2023/03/25 19:32:57 HasCrashFail:true HasNetFail:false
19:32:57 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
syz_failure_sync(0x1, 0x3)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x204a00, 0x103)
write$binfmt_script(r4, &(0x7f0000001980)=ANY=[@ANYBLOB="2321202e2f66653020636f6d2e6170706c652e73797374656d2e5365637572697479002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7a792256638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4d04ae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fc3abe78a4a7"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8504
remove dir: /root/orangefs-client/dfs-0-6
time breakdown 1: 82, 42, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 3
----- directly resend shmid 3
remove dir time 25
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
mkdir time 38
executor 3 create dir /root/orangefs-client/dfs-0-7 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7
receive_execute: 4, 63
receive_execute: 1, 63
receive_execute: 3, 63
receive_execute: 5, 63
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
-----executor 1 collect shmids 4
----- directly resend shmid 4
executor 1 server cover_cnt 1 output_pos_value 16
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 420 tid 420

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 420, pid 420, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:32:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 38, 0
execute_one time: 1, 38
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 5947, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 5947, flag collect 0
----- executor 3 signal number : 2061
----- completed 6
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5947, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 5947, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6189, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 6189, flag collect 0
----- executor 3 signal number : 29
----- completed 11
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5955, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 5955, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5947, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 5947, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5947, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 5947, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 378, write pid:378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 67, 0
execute_one time: 1, 67
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 69, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 29206, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1442, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
----- executor 2 signal number : 1437
----- executor 2 executes write_coverage_signal cov->size 10919, flag collect 0
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 1326
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 1 signal number : 14
executor 1 server cover_cnt 4 output_pos_value 1365
time breakdown 0: 66, 69, 0
before receive testcase: 0 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 3381, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 3009, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2124
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:32:57 for select break: 1
2023/03/25 19:32:57 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:32:57 wg wait finish
2023/03/25 19:32:57 ------ all executors finish execution
2023/03/25 19:32:57 exec time: 134
2023/03/25 19:32:57 ----- PS len: 4
2023/03/25 19:32:57 [CLIENT] executor 3 has 22 replies
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:57 [SERVER] executor 0 has 3 replies
2023/03/25 19:32:57 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
time breakdown 2: 67, 71, 0
before receive testcase: 0 0
2023/03/25 19:32:57 [SERVER] executor 1 has 4 replies
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 1326 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 1 receive 14 signal and 0 cover from userspace component
2023/03/25 19:32:57 [SERVER] executor 2 has 4 replies
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 1437 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:32:57 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:32:57 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:32:57 ----- no new client coverage: false, true
2023/03/25 19:32:57 mutate testcase with failures
2023/03/25 19:32:57 ----- mutateArg()
2023/03/25 19:32:57 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:32:57 disable threaded and collide
2023/03/25 19:32:57 prog length: 6
2023/03/25 19:32:57 prog length: 22
2023/03/25 19:32:57 HasCrashFail:true HasNetFail:false
19:32:57 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
syz_failure_sync(0x1, 0x3)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x28c03, 0x4)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)=ANY=[@ANYBLOB="2321202e2f66696c65302023205d202b0a38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991bb9fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"], 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)=ANY=[@ANYBLOB="02000000010001000000000002000500", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="040004000000000008000000", @ANYRES32=r6, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0xee01, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="10000100000000003000000000000000"], 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 64, 71, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3816
remove dir: /root/orangefs-client/dfs-0-7
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 11
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 18:32:57] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:32:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:32:57] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:32:57] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:32:57] Error: Could not initialize server subsystems
[E 03/25/2023 18:32:57] Error: Could not initialize server; aborting.
[D 03/25/2023 18:32:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:32:57] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:32:57] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:32:57] Error: Could not initialize server subsystems
[E 03/25/2023 18:32:57] Error: Could not initialize server; aborting.
mkdir time 2032
executor 3 create dir /root/orangefs-client/dfs-0-8 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8
receive_execute: 1, 2044
receive_execute: 4, 2043
receive_execute: 2, 2044
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2044
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 435 tid 435

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 435, pid 435, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:32:59] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 23, 0
execute_one time: 0, 23
----- executor 3 write_call_output, size 5951, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 5951, flag collect 0
----- executor 3 signal number : 2061
----- completed 9
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 379, write pid:379
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 32, 0
execute_one time: 0, 32
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2048, 32, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4092, flag collect 0
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 1549, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2095
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2045, 34, 0
before receive testcase: 0 0
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:32:59 wg wait finish
2023/03/25 19:32:59 ------ all executors finish execution
2023/03/25 19:32:59 exec time: 2078
2023/03/25 19:32:59 ----- PS len: 4
2023/03/25 19:32:59 [CLIENT] executor 3 has 22 replies
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 [SERVER] executor 0 has 3 replies
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:32:59 [SERVER] executor 1 has 1 replies
2023/03/25 19:32:59 [SERVER] executor 2 has 4 replies
2023/03/25 19:32:59 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
time breakdown 0: 2047, 35, 0
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:32:59 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:32:59 ----- no new client coverage: false, true
time breakdown 1: 2046, 34, 0
before receive testcase: 0 0
2023/03/25 19:32:59 mutate testcase with failures
2023/03/25 19:32:59 ----- insertCall()
2023/03/25 19:32:59 ----- generateCall 231 fsetxattr fsetxattr
2023/03/25 19:32:59 HasCrashFail: true, .HasNetFail: false
before receive testcase: 0 0
2023/03/25 19:32:59 disable threaded and collide
2023/03/25 19:32:59 prog length: 6
2023/03/25 19:32:59 prog length: 9
2023/03/25 19:32:59 HasCrashFail:true HasNetFail:false
19:32:59 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
fsetxattr(r0, &(0x7f0000000040)=@random={'trusted.', './binderfs\x00'}, &(0x7f0000000080)='\xfc\x00', 0x2, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1288
remove dir: /root/orangefs-client/dfs-0-8
remove dir time 14
-----finish removing dir
receive_execute: 1, 37
receive_execute: 3, 36
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-9 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-9
receive_execute: 3, 36
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 37
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 32765, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 signal number : 3201
----- completed 1
execute_call 0, 23, 0, 3
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 10495, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 10495, flag collect 0
----- executor 3 signal number : 169
----- completed 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5951, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 5951, flag collect 0
----- executor 3 signal number : 35
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2668
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1246
----- executor 0 executes write_coverage_signal cov->size 4668, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 5002, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4308
Terminated
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 528 tid 528

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 528, pid 528, value 1

-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:32:59] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 380, write pid:380
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
executor 3, execute_one inner time: 0, 76, 0
execute_one time: 0, 76
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 41, 77, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13625, flag collect 0
----- executor 1 signal number : 1926
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 76, 0
execute_one time: 0, 76
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 224
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 1 signal number : 28
-----executor 0 collect shmids 2
----- directly resend shmid 2
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 1 receive reply, reply.done 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 0 signal number : 171
----- executor 0 executes write_coverage_signal cov->size 5131, flag collect 0
----- executor 0 signal number : 58
----- executor 0 executes write_coverage_signal cov->size 5128, flag collect 0
----- executor 0 signal number : 12
executor 0 server cover_cnt 8 output_pos_value 4785
-----executor 0 collect shmids 1
----- directly resend shmid 1
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2029, flag collect 0
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 409
time breakdown 2: 39, 82, 0
before receive testcase: 0 0
2023/03/25 19:32:59 for select break: 1
2023/03/25 19:32:59 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:32:59 wg wait finish
2023/03/25 19:32:59 ------ all executors finish execution
2023/03/25 19:32:59 exec time: 118
2023/03/25 19:32:59 ----- PS len: 4
2023/03/25 19:32:59 [CLIENT] executor 3 has 9 replies
2023/03/25 19:32:59 fuzzer receive 3201 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:32:59 [SERVER] executor 0 has 8 replies
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 2668 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 1246 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 224 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 171 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 58 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 19:32:59 [SERVER] executor 1 has 4 replies
time breakdown 0: 38, 81, 0
before receive testcase: 0 0
2023/03/25 19:32:59 ------- fuzzer executor 1 receive 1926 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 1 receive 28 signal and 0 cover from userspace component
2023/03/25 19:32:59 [SERVER] executor 2 has 3 replies
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
2023/03/25 19:32:59 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
-----executor 0 collect shmids 1
----- directly resend shmid 1
2023/03/25 19:32:59 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:32:59 ----- no new client coverage: false, true
executor 1 server cover_cnt 4 output_pos_value 2224
time breakdown 1: 39, 80, 0
before receive testcase: 0 1
2023/03/25 19:32:59 mutate testcase with failures
2023/03/25 19:32:59 ----- insertCall()
2023/03/25 19:32:59 ----- generateCall 2343 link link
2023/03/25 19:32:59 ----- insertCall()
2023/03/25 19:32:59 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/25 19:32:59 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:32:59 disable threaded and collide
2023/03/25 19:32:59 prog length: 6
2023/03/25 19:32:59 prog length: 19
2023/03/25 19:32:59 HasCrashFail:true HasNetFail:false
19:32:59 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
syz_failure_sync(0x0, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file1/file0\x00', &(0x7f0000000940)='security.SMACK64IPIN\x00', &(0x7f0000000980)={'user.syz\x00'}, 0xa, 0x3)
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0)='./file1/file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4480
remove dir: /root/orangefs-client/dfs-0-9
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
[E 03/25/2023 18:32:59] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:32:59] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:32:59] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:32:59] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:32:59] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:32:59] Error: Could not initialize server subsystems
[E 03/25/2023 18:32:59] Error: Could not initialize server; aborting.
remove dir time 2053
-----finish removing dir
receive_execute: 3, 2063
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-10 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-10
receive_execute: 3, 2063
receive_execute: 7, 2063
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 2062
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 451 tid 451

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 451, pid 451, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:33:01] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 40, 0
execute_one time: 2, 40
----- executor 3 write_call_output, size 6205, pid 381, write pid:381
----- executor 3 executes write_coverage_signal cov->size 6205, flag collect 0
----- executor 3 signal number : 29
----- completed 19
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 0, 54, 0
execute_one time: 1, 54
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
time breakdown 3: 2070, 56, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 1437
----- executor 0 executes write_coverage_signal cov->size 17304, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 4874, flag collect 0
2023/03/25 19:33:01 for select break: 1
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4896, flag collect 0
2023/03/25 19:33:01 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2130
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2066, 57, 0
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:33:01 wg wait finish
2023/03/25 19:33:01 ------ all executors finish execution
2023/03/25 19:33:01 exec time: 2122
2023/03/25 19:33:01 ----- PS len: 4
2023/03/25 19:33:01 [CLIENT] executor 3 has 19 replies
2023/03/25 19:33:01 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 15 signal and 0 cover from executor 3
time breakdown 0: 2066, 58, 0
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 19:33:01 [SERVER] executor 1 has 1 replies
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:33:01 [SERVER] executor 0 has 4 replies
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 1437 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:33:01 [SERVER] executor 2 has 3 replies
2023/03/25 19:33:01 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/25 19:33:01 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:33:01 ----- no new client coverage: false, true
2023/03/25 19:33:01 mutate testcase with failures
2023/03/25 19:33:01 ----- insertCall()
2023/03/25 19:33:01 ----- generateCall 3761 stat stat
2023/03/25 19:33:01 ----- insertCall()
2023/03/25 19:33:01 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/25 19:33:01 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:01 disable threaded and collide
2023/03/25 19:33:01 prog length: 6
2023/03/25 19:33:01 prog length: 10
2023/03/25 19:33:01 HasCrashFail:true HasNetFail:false
19:33:01 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000080)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x0)
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_origin(0xffffffffffffffff, 0x0, &(0x7f0000000240), 0x2, 0x2)
fcntl$getflags(0xffffffffffffffff, 0x0)
syz_failure_sync(0x1, 0x3)
setxattr$system_posix_acl(&(0x7f0000001380)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
lsetxattr$security_ima(0x0, 0x0, 0x0, 0x0, 0x0)
stat(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0))
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1200
remove dir: /root/orangefs-client/dfs-0-10
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 2068, 57, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 14
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-11 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-11
receive_execute: 2, 26
receive_execute: 2, 27
receive_execute: 0, 27
receive_execute: 3, 27
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 239, flag collect 0
----- executor 1 signal number : 164
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
executor 1 server cover_cnt 3 output_pos_value 275
-----executor 1 collect shmids 3
----- directly resend shmid 3
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 466 tid 466

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 466, pid 466, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:33:01] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 15
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5963, pid 382, write pid:382
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 1, 30
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12941, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 3: 30, 32, 0
before receive testcase: 0 0
----- executor 0 signal number : 1499
----- executor 0 executes write_coverage_signal cov->size 4344, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1579, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 1305, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 1954
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2192
----- executor 1 signal number : 157
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
time breakdown 2: 27, 33, 0
before receive testcase: 0 0
----- executor 1 signal number : 26
executor 1 server cover_cnt 7 output_pos_value 2427
time breakdown 0: 28, 33, 0
2023/03/25 19:33:01 for select break: 1
2023/03/25 19:33:01 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:33:01 wg wait finish
2023/03/25 19:33:01 ------ all executors finish execution
2023/03/25 19:33:01 exec time: 61
2023/03/25 19:33:01 ----- PS len: 4
2023/03/25 19:33:01 [CLIENT] executor 3 has 10 replies
2023/03/25 19:33:01 [SERVER] executor 2 has 3 replies
2023/03/25 19:33:01 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/25 19:33:01 [SERVER] executor 0 has 4 replies
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 1499 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:33:01 [SERVER] executor 1 has 7 replies
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 164 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 1954 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 157 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/25 19:33:01 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/25 19:33:01 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:01 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:33:01 ----- no new client coverage: false, true
2023/03/25 19:33:01 mutate testcase with failures
2023/03/25 19:33:01 ----- insertCall()
2023/03/25 19:33:01 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 19:33:01 ----- mutateArg()
2023/03/25 19:33:01 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:01 disable threaded and collide
2023/03/25 19:33:01 prog length: 6
2023/03/25 19:33:01 prog length: 5
2023/03/25 19:33:01 HasCrashFail:true HasNetFail:false
19:33:01 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
dup(r0)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000080), &(0x7f0000000040), 0x4, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 632
remove dir: /root/orangefs-client/dfs-0-11
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 29, 34, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 19
-----finish removing dir
receive_execute: 3, 36
mkdir time 17
executor 3 create dir /root/orangefs-client/dfs-0-12 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-12
receive_execute: 2, 35
receive_execute: 2, 36
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
receive_execute: 4, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 18:33:01] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:33:01] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:33:01] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:33:01] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:33:01] Error: Could not initialize server subsystems
[E 03/25/2023 18:33:01] Error: Could not initialize server; aborting.
[D 03/25/2023 18:33:01] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:33:01] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:33:01] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:33:01] Error: Could not initialize server subsystems
[E 03/25/2023 18:33:01] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 5963, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 5963, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 30189, 0, 0
execute_one loop: 0, 0, 30189
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30190, 0, 0
execute_one loop: 0, 0, 30190
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 545 tid 545

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 545, pid 545, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:33:31] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30209, 0
execute_one time: 0, 30209
----- executor 3 write_call_output, size 0, pid 383, write pid:383
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 30209, 0
execute_one time: 0, 30209
time breakdown 3: 40, 30210, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 19242, flag collect 0
----- executor 1 signal number : 2353
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 947
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 257, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1150
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 248
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
2023/03/25 19:33:31 for select break: 1
2023/03/25 19:33:31 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 38, 30212, 0
executor 1 server cover_cnt 5 output_pos_value 2827
before receive testcase: 0 0
2023/03/25 19:33:31 for select break: 1
2023/03/25 19:33:31 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:33:31 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2001
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 333
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 389
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 2813
time breakdown 2: 39, 30213, 0
2023/03/25 19:33:31 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:33:31 for select break: 1
2023/03/25 19:33:31 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:33:31 wg wait finish
2023/03/25 19:33:31 ------ all executors finish execution
2023/03/25 19:33:31 exec time: 30250
2023/03/25 19:33:31 ----- PS len: 4
2023/03/25 19:33:31 [CLIENT] executor 3 has 5 replies
2023/03/25 19:33:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:31 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:33:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:31 [SERVER] executor 0 has 4 replies
2023/03/25 19:33:31 ------- fuzzer executor 0 receive 947 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:33:31 [SERVER] executor 1 has 5 replies
2023/03/25 19:33:31 ------- fuzzer executor 1 receive 2353 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 1 receive 248 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 19:33:31 [SERVER] executor 2 has 4 replies
time breakdown 1: 37, 30214, 0
2023/03/25 19:33:31 ------- fuzzer executor 2 receive 2001 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 2 receive 333 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 2 receive 389 signal and 0 cover from userspace component
2023/03/25 19:33:31 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:33:31 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:33:31 ----- no new client coverage: false, true
2023/03/25 19:33:31 mutate testcase with failures
2023/03/25 19:33:31 ----- mutateFailPos()
2023/03/25 19:33:31 insert call 3 at pos 4
2023/03/25 19:33:31 ----- mutateArg()
2023/03/25 19:33:31 ----- mutateArg()
2023/03/25 19:33:31 ----- insertCall()
2023/03/25 19:33:31 ----- generateCall 2344 linkat linkat
2023/03/25 19:33:31 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:31 disable threaded and collide
2023/03/25 19:33:31 prog length: 6
2023/03/25 19:33:31 prog length: 19
2023/03/25 19:33:31 HasCrashFail:true HasNetFail:false
19:33:31 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000000840)=@v2={0x3, 0x2, 0x12, 0xfffff800, 0x75, "39384e14a3f2ddba63d8a7594982d61b2b9c11a08a42f270e4ce82d563d003966a54aa318c4b9551c5584bce15b91a45605500b2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x7e, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
r1 = dup(r0)
linkat(r0, &(0x7f00000002c0)='./file1\x00', r1, &(0x7f0000000300)='./file1\x00', 0x0)
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000a40)=ANY=[@ANYBLOB="7472757374494f58a52e0fee00b44f66378ca700086f766972656374009b020a68f225e53e0db0e05bc1dcd93e6bb41248349cef13972bb86b9de87506ad8ac2101574b1fa5d797e5a6159c2f7daee414e2e4036889f211fdd5aaad2d5a53d298bd63438bd27d1bffa11b47fc98574566477e07be716d43d4525959f2733fe7fdd6130455f8a5d799853917c06e9fd685772318f84f1cd31e2d46d52c94dd0214ff6ad2d318439ea6bf741832791fa6bf9ca15ab0fd34f8a1c93df36cbc9fd352c9598a4a57770f2f20224d12090a253ae0cb68d8c9e6f3e8b2e314a52de0050576b0e041a62737ece788bef1539b5dcd26b9b444541d2e674d9988939426621e74ff5b0294fe40c18ca3ac2c8ca34000000000000000000000000000000a7cd2a48e1cad7d3f798042bc6631f4adc41dd9b65ed669842bf794b6acd3ea844ac856c1e0283224e8da6a3ac314612a5f08a046776643a58df0986e66b74fe26883b7ec74a3917d336b2a33eed34004e9d04a5f551fe1d7cf1694045d3a41b0ac3702254f3147dc6a5f940fc77b9dd59202618ee823d43f460abda"], 0x8a, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4688
remove dir: /root/orangefs-client/dfs-0-12
[D 03/25/2023 18:33:31] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2028
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-13 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-13
receive_execute: 3, 2040
receive_execute: 4, 2040
receive_execute: 7, 2039
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 2040
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 6027, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6027, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6027, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6027, flag collect 0
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8170, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1408
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2087
Terminated
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:33:33] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 333
----- completed 4
execute_call 0, 10044, 0, 2
execute_one loop: 0, 0, 10046
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10048
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 561 tid 561

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 561, pid 561, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:33:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10088, 0
execute_one time: 0, 10088
[D 03/25/2023 18:33:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 137
----- completed 6
execute_call 0, 2013, 0, 1
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 6047, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6047, flag collect 0
----- executor 3 signal number : 13
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 12094, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 12094, flag collect 0
----- executor 3 signal number : 33
----- completed 11
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6047, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6047, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6047, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6047, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6048, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 6048, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 385, write pid:385
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12119, 0
execute_one time: 0, 12119
2023/03/25 19:33:46 for select break: 1
2023/03/25 19:33:46 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8922, flag collect 0
time breakdown 3: 2046, 12119, 0
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 13992, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 501
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:33:46 for select break: 1
2023/03/25 19:33:46 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2044, 12119, 0
before receive testcase: 0 1
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 16268, flag collect 0
----- executor 0 signal number : 14
executor 2 server cover_cnt 4 output_pos_value 495
executor 0 server cover_cnt 9 output_pos_value 2786
before receive testcase: 0 1
2023/03/25 19:33:46 for select break: 1
2023/03/25 19:33:46 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:33:46 for select break: 1
time breakdown 0: 2044, 12123, 0
2023/03/25 19:33:46 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:33:46 wg wait finish
2023/03/25 19:33:46 ------ all executors finish execution
2023/03/25 19:33:46 exec time: 14163
2023/03/25 19:33:46 ----- PS len: 4
2023/03/25 19:33:46 [SERVER] executor 1 has 0 replies
2023/03/25 19:33:46 [CLIENT] executor 3 has 19 replies
2023/03/25 19:33:46 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:33:46 [SERVER] executor 0 has 9 replies
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 1408 signal and 0 cover from userspace component
2023/03/25 19:33:46 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/25 19:33:46 [SERVER] executor 2 has 4 replies
2023/03/25 19:33:46 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:33:46 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 501 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/25 19:33:46 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
time breakdown 2: 2043, 12122, 0
before receive testcase: 0 0
2023/03/25 19:33:46 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:33:46 ----- no new client coverage: false, true
2023/03/25 19:33:46 mutate testcase with failures
2023/03/25 19:33:46 ----- insertCall()
2023/03/25 19:33:46 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 19:33:46 ----- mutateArg()
2023/03/25 19:33:46 HasCrashFail: false, .HasNetFail: true
2023/03/25 19:33:46 disable threaded and collide
2023/03/25 19:33:46 prog length: 6
before receive testcase: 0 0
2023/03/25 19:33:46 prog length: 4
2023/03/25 19:33:46 HasCrashFail:false HasNetFail:true
19:33:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000280)='./file1\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file1', [{0x20, '/['}, {}, {0x20, 'I\xd8H\x19K1\x14\xaa\xed/\xff\x14\xa6/\xe1pv\v.\x00\x00\x00\xbd\x9a~\xf5\xa6pxIp\x05t:~\xdf0t\xc4\x13\xad\xf0\xd6\xb0\xe5\x9dkG\xf2T/}g\xab\x90`G\xc6\xc6\t\x00\x00\x00\x1a\t\xb7\t\xe8\x9a\x86|\xf4\xda(;#Y9L\xce\xa3M\x8a\xdfM\xd6\x9ai\\s}\x03}W\x11\xf5\xe6\xd7bs\xf4|sl\xb63v\nI\xfc\x91}\xad\x88(P['}, {0x20, '['}, {0x20, '{'}, {0x20, '),&#'}, {}, {0x20, '#^o#)#[{:#\xee\x88e\x06\xc7\x8eF\xd3\x16\xb6yr'}, {0x20, ':\xdf.!&$-,{]\'*):'}, {0x20, '/]#{#'}], 0xa, "89daba794a4da2d63c5aa4c73adfb68fd580c39e430ac2124bfd2d8fee23502287a890b5188a90b0d2f5740a745f868beed0af133338622c6169a8c3b14cbaebfcdf83edebb82e0797621dd18caee435344a44d879f01c005134049e214721d7ab54975c57d892ae662ab75f969a83a8d71238372f1c83f1731a360515ef30fcaf80db0f9f54d988fc390000fe73bb6c34c27bd200357d040fb149252d7cc055bc5111b27598e2c4e6b62c7669b6c0afc39463e899d73fc2acfaef5f8eedd46c24cc2db7344f"}, 0x181)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 1568
remove dir: /root/orangefs-client/dfs-0-13
remove dir time 23
-----finish removing dir
receive_execute: 5, 47
receive_execute: 7, 46
receive_execute: 4, 47
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-14 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6051, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 6051, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 387, write pid:387
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
executor 3, execute_one inner time: 0, 2028, 0
execute_one time: 0, 2028
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 56, 2030, 0
before receive testcase: 0 0
execute_call 0, 2002, 0, 0
execute_one loop: 0, 0, 2002
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2029, 0
execute_one time: 0, 2029
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1484, flag collect 0
----- executor 0 signal number : 282
----- executor 0 executes write_coverage_signal cov->size 2342, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 2033, 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 10586, flag collect 0
----- executor 0 signal number : 46
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2687
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 497
----- executor 2 signal number : 1230
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 322
----- executor 2 executes write_coverage_signal cov->size 14484, flag collect 0
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 80
executor 2 server cover_cnt 4 output_pos_value 4332
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:33:48 wg wait finish
2023/03/25 19:33:48 ------ all executors finish execution
2023/03/25 19:33:48 exec time: 2083
2023/03/25 19:33:48 ----- PS len: 4
2023/03/25 19:33:48 [CLIENT] executor 3 has 4 replies
2023/03/25 19:33:48 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 52, 2036, 0
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 [SERVER] executor 0 has 4 replies
before receive testcase: 0 0
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 282 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
2023/03/25 19:33:48 [SERVER] executor 1 has 0 replies
2023/03/25 19:33:48 [SERVER] executor 2 has 4 replies
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 2687 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 1230 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 322 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 80 signal and 0 cover from userspace component
2023/03/25 19:33:48 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 51, 2034, 0
before receive testcase: 0 0
2023/03/25 19:33:48 ----- no new client coverage: false, true
2023/03/25 19:33:48 mutate testcase with failures
2023/03/25 19:33:48 ----- mutateFailPos()
2023/03/25 19:33:48 insert call 4 at pos 0
2023/03/25 19:33:48 ----- mutateFailPos()
2023/03/25 19:33:48 insert call 15 at pos 17
2023/03/25 19:33:48 ----- mutateArg()
2023/03/25 19:33:48 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:48 disable threaded and collide
2023/03/25 19:33:48 prog length: 6
2023/03/25 19:33:48 prog length: 21
2023/03/25 19:33:48 HasCrashFail:true HasNetFail:false
19:33:48 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f00000010c0)=ANY=[@ANYBLOB="c4011b05a9030000550000003f00000065020000a00100000000000000000000e7e160ac04e696b12e14a0bddb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522d0b0e62f1cf4a4b5e80ba2e5fef598772dbae4a2d22d0e7957fef26ac8b496066da21753b38c826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f511dc87eb74e54260458db55a9905bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3eb0f1e61aafa10b0d1abc1dac9581584ab70541669b3ef4aa87714008c4f7b66e541dc4610c42a8d680ccbaa3294adc194c58a2a29d44115cf272fdf4754bb579073abd06dc8319ab0fec90ef7cb997ca827d93a11a79b52e28c8336e582db6cbc5842094bbac24094f73ea52fb0204d9adb8ce3ad1f80d17371a22ac7fbe961a8b6036fdcdb815"], 0x9f6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
syz_failure_sync(0x1, 0x3)
r6 = dup2(r4, r1)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x501040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6048
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/orangefs-client/dfs-0-14
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 66
-----finish removing dir
receive_execute: 6, 90
receive_execute: 10, 90
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-15 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-15
receive_execute: 7, 90
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 11, 91
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 6322, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 6322, flag collect 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 signal number : 2118
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6055, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 6055, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 584 tid 584

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 584, pid 584, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:33:48] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 388, write pid:388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 63, 0
execute_one time: 1, 63
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 102, 65, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28785, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 100, 66, 0
----- executor 2 signal number : 1433
----- executor 2 executes write_coverage_signal cov->size 10760, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 3940, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 2955, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2221
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 64, 0
execute_one time: 1, 64
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 933
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 257, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1136
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:33:48 for select break: 1
2023/03/25 19:33:48 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:33:48 wg wait finish
2023/03/25 19:33:48 ------ all executors finish execution
2023/03/25 19:33:48 exec time: 158
2023/03/25 19:33:48 ----- PS len: 4
2023/03/25 19:33:48 [CLIENT] executor 3 has 21 replies
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 2118 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:48 [SERVER] executor 1 has 0 replies
2023/03/25 19:33:48 [SERVER] executor 2 has 4 replies
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 1433 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
time breakdown 2: 96, 68, 0
2023/03/25 19:33:48 [SERVER] executor 0 has 4 replies
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 933 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/25 19:33:48 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:33:48 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:33:48 ----- no new client coverage: false, true
2023/03/25 19:33:48 mutate testcase with failures
2023/03/25 19:33:48 ----- insertCall()
2023/03/25 19:33:48 ----- mutateArg()
2023/03/25 19:33:48 ----- insertCall()
2023/03/25 19:33:48 ----- insertCall()
2023/03/25 19:33:48 ----- insertCall()
2023/03/25 19:33:48 ----- mutateArg()
2023/03/25 19:33:48 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:48 disable threaded and collide
2023/03/25 19:33:48 prog length: 6
2023/03/25 19:33:48 prog length: 20
2023/03/25 19:33:48 HasCrashFail:true HasNetFail:false
19:33:48 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
syz_failure_sync(0x0, 0x3)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a80)=ANY=[@ANYBLOB="0f131c0cd82ac5bd49d8bd9a8766e9c7fcbef4373c105c5eff2111"], 0x11, 0x3)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4680
remove dir: /root/orangefs-client/dfs-0-15
time breakdown 0: 97, 68, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[E 03/25/2023 18:33:48] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:33:48] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2028
-----finish removing dir
receive_execute: 3, 4061
mkdir time 2033
executor 3 create dir /root/orangefs-client/dfs-0-16 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-16
receive_execute: 4, 4061
receive_execute: 2, 4061
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 4064
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6063, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 6063, flag collect 0
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6063, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 6063, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12253, flag collect 0
executor 3 waits for recv msg
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 4320, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2092
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 599 tid 599

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 599, pid 599, value 1

-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:33:52] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 58, 0
execute_one time: 2, 58
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
[E 03/25/2023 18:33:52] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:33:52] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 407
----- completed 10
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 13
----- completed 11
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6067, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 6067, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 389, write pid:389
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2100, 0
execute_one time: 0, 2100
2023/03/25 19:33:54 for select break: 1
2023/03/25 19:33:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4069, 2100, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1486, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 2462, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 11072, flag collect 0
executor 1 write_server_output
----- executor 0 signal number : 723
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 15926, flag collect 0
time breakdown 1: 4065, 2105, 0
before receive testcase: 0 1
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 3012
2023/03/25 19:33:54 for select break: 1
2023/03/25 19:33:54 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:33:54 for select break: 1
2023/03/25 19:33:54 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:33:54 for select break: 1
2023/03/25 19:33:54 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:33:54 wg wait finish
2023/03/25 19:33:54 ------ all executors finish execution
2023/03/25 19:33:54 exec time: 6168
2023/03/25 19:33:54 ----- PS len: 4
2023/03/25 19:33:54 [CLIENT] executor 3 has 20 replies
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 407 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:54 [SERVER] executor 0 has 9 replies
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 723 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 19:33:54 [SERVER] executor 1 has 0 replies
2023/03/25 19:33:54 [SERVER] executor 2 has 4 replies
2023/03/25 19:33:54 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:33:54 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:33:54 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 4064, 2107, 0
before receive testcase: 0 0
2023/03/25 19:33:54 ----- no new client coverage: false, true
2023/03/25 19:33:54 mutate testcase with failures
executor 2 server cover_cnt 4 output_pos_value 493
time breakdown 2: 4063, 2106, 0
before receive testcase: 0 0
2023/03/25 19:33:54 ----- insertCall()
2023/03/25 19:33:54 ----- insertCall()
2023/03/25 19:33:54 ----- insertCall()
2023/03/25 19:33:54 ----- mutateArg()
2023/03/25 19:33:54 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:54 disable threaded and collide
2023/03/25 19:33:54 prog length: 6
2023/03/25 19:33:54 prog length: 21
2023/03/25 19:33:54 HasCrashFail:true HasNetFail:false
19:33:54 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x35)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f00000010c0)=ANY=[@ANYBLOB="c4011b05a9030000550000003f00000065020000a00100000000000000000000e7e160ac04e696b12e14a0bddb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522d0b0e62f1cf4a4b5e80ba2e5fef598772dbae4a2d22d0e7957fef26ac8b496066da21753b38caeedaee7243405e5cc10c7abf735826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f511dc87eb74e54260458db55a9905bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3ee3c6df63567e35433035"], 0x9f6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x501040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5952
remove dir: /root/orangefs-client/dfs-0-16
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 31
-----finish removing dir
receive_execute: 4, 4076
receive_execute: 4, 4077
receive_execute: 3, 4076
mkdir time 4045
executor 3 create dir /root/orangefs-client/dfs-0-17 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 4077
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 615 tid 615

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 615, pid 615, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:33:58] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
cover_reset in execute_call
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 55, 0
execute_one time: 0, 55
----- executor 3 write_call_output, size 6193, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 6193, flag collect 0
----- executor 3 signal number : 2104
----- completed 3
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6075, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 6075, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6075, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 6075, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6075, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 6075, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6075, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 6075, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6075, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 6075, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 391, write pid:391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 73, 0
execute_one time: 1, 73
2023/03/25 19:33:58 for select break: 1
2023/03/25 19:33:58 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 29378, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1433
----- executor 2 executes write_coverage_signal cov->size 10980, flag collect 0
2023/03/25 19:33:58 for select break: 1
2023/03/25 19:33:58 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 4150, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 3063, flag collect 0
----- executor 2 signal number : 75
----- executor 0 signal number : 1292
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1495
time breakdown 1: 4081, 76, 0
executor 2 server cover_cnt 4 output_pos_value 2221
before receive testcase: 0 0
2023/03/25 19:33:58 for select break: 1
2023/03/25 19:33:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:33:58 for select break: 1
2023/03/25 19:33:58 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:33:58 wg wait finish
2023/03/25 19:33:58 ------ all executors finish execution
2023/03/25 19:33:58 exec time: 4155
2023/03/25 19:33:58 ----- PS len: 4
2023/03/25 19:33:58 [CLIENT] executor 3 has 21 replies
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 2104 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:33:58 [SERVER] executor 0 has 4 replies
2023/03/25 19:33:58 ------- fuzzer executor 0 receive 1292 signal and 0 cover from userspace component
2023/03/25 19:33:58 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:33:58 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 19:33:58 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:33:58 [SERVER] executor 1 has 0 replies
2023/03/25 19:33:58 [SERVER] executor 2 has 4 replies
2023/03/25 19:33:58 ------- fuzzer executor 2 receive 1433 signal and 0 cover from userspace component
2023/03/25 19:33:58 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:33:58 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/25 19:33:58 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:33:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:33:58 ----- no new client coverage: false, true
2023/03/25 19:33:58 mutate testcase with failures
2023/03/25 19:33:58 ----- insertCall()
2023/03/25 19:33:58 ----- generateCall 3967 truncate truncate
2023/03/25 19:33:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:33:58 disable threaded and collide
2023/03/25 19:33:58 prog length: 6
2023/03/25 19:33:58 prog length: 10
2023/03/25 19:33:58 HasCrashFail:true HasNetFail:false
19:33:58 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
truncate(&(0x7f00000014c0)='./file0\x00', 0x400)
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 3: 4084, 75, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1728
remove dir: /root/orangefs-client/dfs-0-17
time breakdown 0: 4079, 77, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 2: 4080, 78, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[E 03/25/2023 18:33:58] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:33:58] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2059
-----finish removing dir
receive_execute: 2, 4095
receive_execute: 3, 4095
mkdir time 2036
executor 3 create dir /root/orangefs-client/dfs-0-18 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-18
receive_execute: 3, 4095
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 4096
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6083, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6083, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 26, 0, 1
execute_one loop: 0, 0, 27
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 6083, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6083, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 6350, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6350, flag collect 0
----- executor 3 signal number : 75
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6083, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6083, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6083, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6083, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 6083, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6083, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 631 tid 631

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 631, pid 631, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:34:02] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6083, pid 393, write pid:393
----- executor 3 executes write_coverage_signal cov->size 6083, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 69, 0
execute_one time: 0, 69
2023/03/25 19:34:02 for select break: 1
2023/03/25 19:34:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4100, 70, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32616, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 19:34:02 for select break: 1
2023/03/25 19:34:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1435
----- executor 2 executes write_coverage_signal cov->size 12236, flag collect 0
time breakdown 1: 4098, 72, 0
before receive testcase: 0 0
2023/03/25 19:34:02 for select break: 1
2023/03/25 19:34:02 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 4333, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 2 signal number : 75
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 65, 0
execute_one time: 1, 65
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 933
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1136
time breakdown 0: 4098, 72, 0
executor 2 server cover_cnt 4 output_pos_value 2223
2023/03/25 19:34:02 for select break: 1
2023/03/25 19:34:02 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:34:02 wg wait finish
2023/03/25 19:34:02 ------ all executors finish execution
2023/03/25 19:34:02 exec time: 4169
2023/03/25 19:34:02 ----- PS len: 4
before receive testcase: 0 0
2023/03/25 19:34:02 [CLIENT] executor 3 has 10 replies
2023/03/25 19:34:02 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:34:02 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:34:02 [SERVER] executor 0 has 4 replies
2023/03/25 19:34:02 ------- fuzzer executor 0 receive 933 signal and 0 cover from userspace component
2023/03/25 19:34:02 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:34:02 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 19:34:02 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:34:02 [SERVER] executor 1 has 0 replies
2023/03/25 19:34:02 [SERVER] executor 2 has 4 replies
2023/03/25 19:34:02 ------- fuzzer executor 2 receive 1435 signal and 0 cover from userspace component
2023/03/25 19:34:02 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:34:02 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/25 19:34:02 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:34:02 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:34:02 ----- no new client coverage: false, true
2023/03/25 19:34:02 mutate testcase with failures
2023/03/25 19:34:02 ----- insertCall()
2023/03/25 19:34:02 ----- mutateArg()
2023/03/25 19:34:02 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:34:02 disable threaded and collide
2023/03/25 19:34:02 prog length: 6
2023/03/25 19:34:02 prog length: 20
2023/03/25 19:34:02 HasCrashFail:true HasNetFail:false
19:34:02 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001f00)={'#! ', './file0', [{0x20, ':'}, {0x20, '\xea\xf61\xe8\x1e\xf67$\x168\x82}.\xed[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2f08000000c3e868c5ecce53eb31dc09a9e52a0775583f1c252547c738432e3ae9eec7d6bc3288a1ebbfc41395ebbfd09934834f4bbafde8acd7814fce387e694bf355a93b6400677e721c8afab086ccdda8f08be971f1eadba2eccfb17d42c529f61f9ba10ba8a3c8ead4ad3ebdb9fa552f3b8a564ca15bcbf95c51699b2582214de55ca0613cad804fb5c4f83959d2defaec8dbf5801b497b56e8e7871b8bf203091598a4582dfcd290a9baee72a754a0005a1743b4610adf33ae9251bbdfc0f3edd8806cc"}, 0x1a2)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=@ng={0x4, 0x13, "1c01d88f9abef4373c2e5c3ff42111"}, 0x11, 0x0)
syz_failure_sync(0x1, 0x3)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4944
remove dir: /root/orangefs-client/dfs-0-18
time breakdown 2: 4097, 73, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[E 03/25/2023 18:34:02] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:34:02] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2025
-----finish removing dir
receive_execute: 6, 2047
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-19 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-19
receive_execute: 5, 2050
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 2050
receive_execute: 6, 2051
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6087, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 6087, flag collect 0
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6087, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 6087, flag collect 0
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8186, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 984, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2102
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:34:04] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10039, 0, 0
execute_one loop: 0, 0, 10039
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10029, 0, 0
execute_one loop: 0, 0, 10029
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 416
----- completed 9
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 10035, 0, 0
execute_one loop: 0, 0, 10035
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 10029, 0, 0
execute_one loop: 0, 0, 10029
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 17
----- completed 12
execute_call 0, 10051, 0, 2
execute_one loop: 0, 0, 10053
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 10043, 0, 0
execute_one loop: 0, 0, 10043
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 70263, 0, 0
execute_one loop: 0, 0, 70263
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 647 tid 647

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 647, pid 647, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:35:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0, execute_one inner time: 0, 70313, 0
execute_one time: 1, 70313
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
[D 03/25/2023 18:35:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:35:17 for select break: 1
2023/03/25 19:35:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 501
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 15902, flag collect 0
2023/03/25 19:35:17 for select break: 1
2023/03/25 19:35:17 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 495
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2791
time breakdown 1: 2055, 72339, 0
before receive testcase: 0 1
2023/03/25 19:35:17 for select break: 1
2023/03/25 19:35:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2053, 72341, 0
before receive testcase: 0 0
----- executor 3 signal number : 61
----- completed 18
execute_call 0, 2018, 0, 5
execute_one loop: 0, 0, 2023
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 395, write pid:395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 72335, 0
execute_one time: 0, 72335
time breakdown 3: 2057, 72336, 0
before receive testcase: 0 0
2023/03/25 19:35:17 for select break: 1
2023/03/25 19:35:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:35:17 wg wait finish
2023/03/25 19:35:17 ------ all executors finish execution
2023/03/25 19:35:17 exec time: 74395
2023/03/25 19:35:17 ----- PS len: 4
2023/03/25 19:35:17 [CLIENT] executor 3 has 20 replies
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 416 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:17 [SERVER] executor 1 has 0 replies
2023/03/25 19:35:17 [SERVER] executor 0 has 9 replies
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/25 19:35:17 [SERVER] executor 2 has 4 replies
time breakdown 0: 2053, 72343, 0
2023/03/25 19:35:17 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 501 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/25 19:35:17 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:35:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:35:17 ----- no new client coverage: false, true
2023/03/25 19:35:17 mutate testcase with failures
2023/03/25 19:35:17 ----- insertCall()
2023/03/25 19:35:17 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/25 19:35:17 ----- mutateArg()
2023/03/25 19:35:17 HasCrashFail: true, .HasNetFail: true
2023/03/25 19:35:17 disable threaded and collide
2023/03/25 19:35:17 prog length: 6
2023/03/25 19:35:17 prog length: 6
2023/03/25 19:35:17 prog length: 6
2023/03/25 19:35:17 prog length: 8
2023/03/25 19:35:17 HasCrashFail:true HasNetFail:true
19:35:17 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.6 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.6 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_net_up()
syz_failure_send(0x5)
---
syz_failure_sync(0x2, 0x3)
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
syz_failure_sync(0x3, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x4, 0x3)
syz_failure_sync(0x1, 0x3)
syz_failure_sync(0x5, 0x3)
setxattr$incfs_id(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)={'0000000000000000000000000000000', 0x73}, 0x20, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 2032, prog_size 560
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 472
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 2592, prog_size 936
remove dir: /root/orangefs-client/dfs-0-19
remove dir time 26
-----finish removing dir
receive_execute: 6, 4067
receive_execute: 4, 4067
mkdir time 4041
executor 3 create dir /root/orangefs-client/dfs-0-20 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-20
receive_execute: 7, 4068
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 2, 4068
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6247, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 6247, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2028, 0
execute_one time: 1, 2029
----- executor 3 write_call_output, size 0, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2026, 0, 0
execute_one loop: 0, 0, 2026
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19571, flag collect 0
----- executor 0 signal number : 2833
----- executor 0 executes write_coverage_signal cov->size 12459, flag collect 0
----- executor 0 signal number : 953
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 386
----- executor 0 executes write_coverage_signal cov->size 12232, flag collect 0
----- executor 0 signal number : 78
executor 0 server cover_cnt 4 output_pos_value 4263
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2040, 0, 0
execute_one loop: 0, 0, 2040
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
----- executor 3 write_call_output, size 0, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 663 tid 663

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 663, pid 663, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:35:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2057, 0
execute_one time: 3, 2057
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 0, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
[E 03/25/2023 18:35:23] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:35:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 4061, 0
execute_one time: 2, 4061
----- executor 3 write_call_output, size 0, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 397, write pid:397
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:35:27 for select break: 1
2023/03/25 19:35:27 --------- executor 3 receive reply, reply.done 1
----- executor 3 signal number : 660
----- completed 8
execute_call 0, 2013, 0, 1
execute_one loop: 0, 0, 2014
executor 3, execute_one inner time: 0, 6077, 0
execute_one time: 0, 6077
time breakdown 3: 4075, 6078, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19572, flag collect 0
----- executor 2 signal number : 1854
----- executor 2 executes write_coverage_signal cov->size 13907, flag collect 0
----- executor 0 signal number : 362
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1030
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1189
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 345
----- executor 2 executes write_coverage_signal cov->size 32212, flag collect 0
----- executor 0 signal number : 43
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:35:27 for select break: 1
2023/03/25 19:35:27 --------- executor 2 receive reply, reply.done 1
----- executor 2 signal number : 81
executor 2 server cover_cnt 4 output_pos_value 3323
time breakdown 2: 4071, 6081, 0
before receive testcase: 0 1
2023/03/25 19:35:27 for select break: 1
2023/03/25 19:35:27 --------- executor 0 receive reply, reply.done 1
----- executor 0 signal number : 13
executor 0 server cover_cnt 9 output_pos_value 5890
time breakdown 0: 4070, 6086, 0
before receive testcase: 0 0
2023/03/25 19:35:27 for select break: 1
2023/03/25 19:35:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:35:27 wg wait finish
2023/03/25 19:35:27 ------ all executors finish execution
2023/03/25 19:35:27 exec time: 10157
2023/03/25 19:35:27 ----- PS len: 4
2023/03/25 19:35:27 [CLIENT] executor 3 has 8 replies
2023/03/25 19:35:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:27 fuzzer receive 660 signal and 0 cover from executor 3
2023/03/25 19:35:27 [SERVER] executor 0 has 9 replies
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 2833 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 953 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 386 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 362 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 1189 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:35:27 [SERVER] executor 1 has 0 replies
2023/03/25 19:35:27 [SERVER] executor 2 has 4 replies
2023/03/25 19:35:27 ------- fuzzer executor 2 receive 1854 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 2 receive 1030 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 2 receive 345 signal and 0 cover from userspace component
2023/03/25 19:35:27 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 4073, 6089, 0
before receive testcase: 0 0
2023/03/25 19:35:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:35:27 ----- no new client coverage: false, true
2023/03/25 19:35:27 mutate testcase with failures
2023/03/25 19:35:27 ----- insertCall()
2023/03/25 19:35:27 ----- generateCall 2462 openat openat
2023/03/25 19:35:27 ----- insertCall()
2023/03/25 19:35:27 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/25 19:35:27 HasCrashFail: false, .HasNetFail: true
2023/03/25 19:35:27 disable threaded and collide
2023/03/25 19:35:27 prog length: 6
2023/03/25 19:35:27 prog length: 5
2023/03/25 19:35:27 HasCrashFail:false HasNetFail:true
19:35:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.6 -j DROP;iptables -A OUTPUT -d 192.168.0.6 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
openat(0xffffffffffffff9c, &(0x7f0000000000)='.\x00', 0x22181, 0x0)
mkdir(&(0x7f0000000280)='./file1\x00', 0x0)
setxattr$security_ima(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f0000000100)=ANY=[@ANYBLOB="0414389595976e5bd1eb78c3d472a507709d1a"], 0x6, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 712
remove dir: /root/orangefs-client/dfs-0-20
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
remove dir time 32
-----finish removing dir
mkdir time 29
executor 3 create dir /root/orangefs-client/dfs-0-21 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-21
receive_execute: 10, 61
receive_execute: 1, 62
receive_execute: 4, 61
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 12, 62
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 399, write pid:399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
execute_call 0, 2002, 0, 0
execute_one loop: 0, 0, 2002
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2007, 0
execute_one time: 1, 2007
----- executor 3 write_call_output, size 0, pid 399, write pid:399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2002, 0, 0
execute_one loop: 0, 0, 2002
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 399, write pid:399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/25 19:35:39 for select break: 1
2023/03/25 19:35:39 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 6599, pid 399, write pid:399
----- executor 3 executes write_coverage_signal cov->size 6599, flag collect 0
----- executor 3 signal number : 2142
----- completed 4
execute_call 0, 10079, 0, 0
execute_one loop: 0, 0, 10079
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 399, write pid:399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12086, 0
execute_one time: 0, 12086
time breakdown 3: 74, 12087, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2013
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8914, flag collect 0
----- executor 2 signal number : 1070
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 139
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3312
2023/03/25 19:35:39 for select break: 1
2023/03/25 19:35:39 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:35:39 for select break: 1
2023/03/25 19:35:39 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 63, 12090, 0
before receive testcase: 0 0
----- executor 0 signal number : 282
----- executor 0 executes write_coverage_signal cov->size 13728, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 46
executor 0 server cover_cnt 4 output_pos_value 497
2023/03/25 19:35:39 for select break: 1
2023/03/25 19:35:39 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:35:39 wg wait finish
2023/03/25 19:35:39 ------ all executors finish execution
2023/03/25 19:35:39 exec time: 12155
2023/03/25 19:35:39 ----- PS len: 4
time breakdown 0: 65, 12094, 0
before receive testcase: 0 0
2023/03/25 19:35:39 [CLIENT] executor 3 has 5 replies
2023/03/25 19:35:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:39 fuzzer receive 2142 signal and 0 cover from executor 3
2023/03/25 19:35:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:35:39 [SERVER] executor 0 has 4 replies
2023/03/25 19:35:39 ------- fuzzer executor 0 receive 282 signal and 0 cover from userspace component
2023/03/25 19:35:39 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:35:39 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:35:39 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
2023/03/25 19:35:39 [SERVER] executor 2 has 4 replies
2023/03/25 19:35:39 [SERVER] executor 1 has 0 replies
2023/03/25 19:35:39 ------- fuzzer executor 2 receive 2013 signal and 0 cover from userspace component
2023/03/25 19:35:39 ------- fuzzer executor 2 receive 1070 signal and 0 cover from userspace component
2023/03/25 19:35:39 ------- fuzzer executor 2 receive 139 signal and 0 cover from userspace component
2023/03/25 19:35:39 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/25 19:35:39 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 71, 12091, 0
before receive testcase: 0 0
2023/03/25 19:35:39 ----- no new client coverage: false, true
2023/03/25 19:35:39 mutate testcase with failures
2023/03/25 19:35:39 ----- mutateArg()
2023/03/25 19:35:39 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:35:39 disable threaded and collide
2023/03/25 19:35:39 prog length: 6
2023/03/25 19:35:39 prog length: 5
2023/03/25 19:35:39 HasCrashFail:true HasNetFail:false
19:35:39 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$security_selinux(&(0x7f0000000100)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 688
remove dir: /root/orangefs-client/dfs-0-21
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 4037
executor 3 create dir /root/orangefs-client/dfs-0-22 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-22
receive_execute: 9, 4065
receive_execute: 8, 4066
receive_execute: 5, 4066
receive_execute: 11, 4066
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
----- executor 3 write_call_output, size 0, pid 401, write pid:401
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:35:43] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 401, write pid:401
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10030, 0, 0
execute_one loop: 0, 0, 10030
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 401, write pid:401
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10033, 0, 0
execute_one loop: 0, 0, 10033
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 401, write pid:401
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2002
----- completed 4
execute_call 0, 10038, 0, 5
execute_one loop: 0, 0, 10043
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30106, 0, 0
execute_one loop: 0, 0, 30106
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 687 tid 687

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 687, pid 687, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:13] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 401, write pid:401
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 30128, 0
execute_one time: 0, 30128
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 4077, 30130, 0
----- executor 2 executes write_coverage_signal cov->size 22290, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30128, 0
execute_one time: 0, 30128
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 947
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 273
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1278
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 4071, 30132, 0
before receive testcase: 0 1
----- executor 2 signal number : 46
executor 2 server cover_cnt 4 output_pos_value 657
before receive testcase: 0 1
time breakdown 2: 4074, 30133, 0
before receive testcase: 0 1
2023/03/25 19:36:13 for select break: 1
2023/03/25 19:36:13 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:36:13 for select break: 1
2023/03/25 19:36:13 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:13 for select break: 1
2023/03/25 19:36:13 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:13 for select break: 1
2023/03/25 19:36:13 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:13 wg wait finish
2023/03/25 19:36:13 ------ all executors finish execution
2023/03/25 19:36:13 exec time: 34205
2023/03/25 19:36:13 ----- PS len: 4
2023/03/25 19:36:13 [CLIENT] executor 3 has 5 replies
2023/03/25 19:36:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:13 fuzzer receive 2002 signal and 0 cover from executor 3
2023/03/25 19:36:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:13 [SERVER] executor 0 has 4 replies
2023/03/25 19:36:13 ------- fuzzer executor 0 receive 947 signal and 0 cover from userspace component
2023/03/25 19:36:13 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:36:13 ------- fuzzer executor 0 receive 273 signal and 0 cover from userspace component
2023/03/25 19:36:13 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:36:13 [SERVER] executor 1 has 0 replies
2023/03/25 19:36:13 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:13 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:36:13 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:13 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/25 19:36:13 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:36:13 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:13 ----- no new client coverage: false, true
2023/03/25 19:36:13 mutate testcase with failures
2023/03/25 19:36:13 ----- mutateArg()
2023/03/25 19:36:13 ----- insertCall()
2023/03/25 19:36:13 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:36:13 ----- mutateArg()
2023/03/25 19:36:13 ----- insertCall()
2023/03/25 19:36:13 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 19:36:13 ----- mutateArg()
2023/03/25 19:36:13 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:13 disable threaded and collide
2023/03/25 19:36:13 prog length: 6
2023/03/25 19:36:13 prog length: 12
2023/03/25 19:36:13 HasCrashFail:true HasNetFail:false
19:36:13 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = open(&(0x7f0000000040)='./file0\x00', 0x2401, 0x4a)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000080)='./binderfs\x00', 0x1ff)
r1 = dup2(r0, r0)
fcntl$addseals(r1, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', 0x0, &(0x7f00000003c0)={'U+'}, 0x16, 0x0)
r2 = fcntl$dupfd(r0, 0x203, 0xffffffffffffffff)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1712
remove dir: /root/orangefs-client/dfs-0-22
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 4074, 30138, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
[D 03/25/2023 18:36:13] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2034
-----finish removing dir
receive_execute: 3, 4054
receive_execute: 7, 4054
mkdir time 2020
executor 3 create dir /root/orangefs-client/dfs-0-23 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-23
receive_execute: 8, 4054
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 4055
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3136
----- completed 1
execute_call 0, 57, 0, 2
execute_one loop: 0, 0, 59
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 59, 0, 0
execute_one loop: 0, 0, 59
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2670
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1245
----- executor 0 executes write_coverage_signal cov->size 4119, flag collect 0
----- executor 0 signal number : 309
----- executor 0 executes write_coverage_signal cov->size 4114, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4317
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 703 tid 703

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 703, pid 703, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 84, 0
execute_one time: 1, 84
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:36:17] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:36:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2012, 0, 0
execute_one loop: 0, 0, 2012
cover_reset in execute_call
----- executor 3 write_call_output, size 6355, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 6355, flag collect 0
----- executor 3 signal number : 29
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6355, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 6355, flag collect 0
----- executor 3 signal number : 22
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 403, write pid:403
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2102, 0
execute_one time: 0, 2102
2023/03/25 19:36:19 for select break: 1
2023/03/25 19:36:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4064, 2103, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1486, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 2401, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 223
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 10801, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 4 output_pos_value 493
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:36:19 for select break: 1
2023/03/25 19:36:19 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 0 signal number : 51
----- executor 0 executes write_coverage_signal cov->size 18255, flag collect 0
2023/03/25 19:36:19 for select break: 1
2023/03/25 19:36:19 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4061, 2106, 0
before receive testcase: 0 0
----- executor 0 signal number : 13
executor 0 server cover_cnt 9 output_pos_value 4769
time breakdown 1: 4057, 2105, 0
before receive testcase: 0 0
2023/03/25 19:36:19 for select break: 1
2023/03/25 19:36:19 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:19 wg wait finish
2023/03/25 19:36:19 ------ all executors finish execution
2023/03/25 19:36:19 exec time: 6161
2023/03/25 19:36:19 ----- PS len: 4
2023/03/25 19:36:19 [CLIENT] executor 3 has 12 replies
2023/03/25 19:36:19 fuzzer receive 3136 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 [SERVER] executor 0 has 9 replies
2023/03/25 19:36:19 [SERVER] executor 1 has 0 replies
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 2670 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 1245 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 309 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 223 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 51 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:19 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:19 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:19 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:36:19 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:36:19 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:19 ----- no new client coverage: false, true
2023/03/25 19:36:19 mutate testcase with failures
2023/03/25 19:36:19 ----- insertCall()
2023/03/25 19:36:19 ----- insertCall()
2023/03/25 19:36:19 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/25 19:36:19 ----- mutateArg()
2023/03/25 19:36:19 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:19 disable threaded and collide
2023/03/25 19:36:19 prog length: 6
2023/03/25 19:36:19 prog length: 5
2023/03/25 19:36:19 HasCrashFail:true HasNetFail:false
19:36:19 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
syz_failure_sync(0x1, 0x3)
fcntl$getownex(r0, 0x10, &(0x7f0000000040)={0x0, <r1=>0x0})
fcntl$lock(r0, 0x6, &(0x7f0000000000)={0x0, 0x4, 0x7, 0x8, r1})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 784
remove dir: /root/orangefs-client/dfs-0-23
time breakdown 0: 4062, 2107, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 39
-----finish removing dir
receive_execute: 1, 55
receive_execute: 3, 55
receive_execute: 4, 55
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-24 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-24
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 56
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:36:19] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10048, 0, 0
execute_one loop: 0, 0, 10048
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10048, 0, 0
execute_one loop: 0, 0, 10048
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 719 tid 719

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 719, pid 719, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:29] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1995
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 405, write pid:405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 10068, 0
execute_one time: 0, 10068
time breakdown 3: 61, 10070, 0
executor 2 write_server_output
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10068, 0
execute_one time: 1, 10068
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 934
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 0 signal number : 41
----- executor 0 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 0 signal number : 12
executor 0 server cover_cnt 4 output_pos_value 1018
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 59, 10075, 0
before receive testcase: 0 1
2023/03/25 19:36:30 for select break: 1
2023/03/25 19:36:30 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:30 for select break: 1
2023/03/25 19:36:30 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:30 for select break: 1
2023/03/25 19:36:30 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 7430, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 11458, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 4 output_pos_value 493
time breakdown 2: 58, 10073, 0
before receive testcase: 0 1
2023/03/25 19:36:30 for select break: 1
2023/03/25 19:36:30 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:36:30 wg wait finish
2023/03/25 19:36:30 ------ all executors finish execution
2023/03/25 19:36:30 exec time: 10131
2023/03/25 19:36:30 ----- PS len: 4
2023/03/25 19:36:30 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:30 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:36:30 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:30 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:36:30 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:36:30 [SERVER] executor 0 has 4 replies
2023/03/25 19:36:30 ------- fuzzer executor 0 receive 934 signal and 0 cover from userspace component
2023/03/25 19:36:30 [CLIENT] executor 3 has 5 replies
2023/03/25 19:36:30 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:30 ------- fuzzer executor 0 receive 41 signal and 0 cover from userspace component
2023/03/25 19:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:30 [SERVER] executor 1 has 0 replies
2023/03/25 19:36:30 fuzzer receive 1995 signal and 0 cover from executor 3
2023/03/25 19:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:30 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 19:36:30 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 56, 10073, 0
before receive testcase: 0 1
2023/03/25 19:36:30 ----- no new client coverage: false, true
2023/03/25 19:36:30 mutate testcase with failures
2023/03/25 19:36:30 ----- insertCall()
2023/03/25 19:36:30 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/25 19:36:30 ----- insertCall()
2023/03/25 19:36:30 ----- generateCall 2343 link link
2023/03/25 19:36:30 ----- insertCall()
2023/03/25 19:36:30 ----- generateCall 3761 stat stat
2023/03/25 19:36:30 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:30 disable threaded and collide
2023/03/25 19:36:30 prog length: 6
2023/03/25 19:36:30 prog length: 12
2023/03/25 19:36:30 HasCrashFail:true HasNetFail:false
19:36:30 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
link(&(0x7f0000001580)='./file0\x00', &(0x7f00000015c0)='./file0\x00')
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
setxattr$security_capability(&(0x7f00000014c0)='./file0\x00', &(0x7f0000001500), &(0x7f0000001540)=@v2={0x2000000, [{0x6, 0x8}, {0x3, 0x2}]}, 0x14, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2320
remove dir: /root/orangefs-client/dfs-0-24
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 18:36:29] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2016
-----finish removing dir
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-25 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-25
receive_execute: 5, 2036
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 2036
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 6, 2037
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 2036
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 6398, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2068
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 18
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6387, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 6387, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 513 tid 513

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 513, pid 513, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:32] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 48, 0
execute_one time: 1, 48
2023/03/25 19:36:32 for select break: 1
2023/03/25 19:36:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 0, pid 407, write pid:407
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 0, 49, 0
execute_one time: 0, 49
time breakdown 3: 2043, 50, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1440
----- executor 2 executes write_coverage_signal cov->size 15283, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 2 signal number : 315
----- executor 2 executes write_coverage_signal cov->size 4350, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 4107, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 2131
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1030, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
time breakdown 0: 2041, 52, 0
2023/03/25 19:36:32 for select break: 1
2023/03/25 19:36:32 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:32 for select break: 1
2023/03/25 19:36:32 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:32 for select break: 1
2023/03/25 19:36:32 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:32 wg wait finish
2023/03/25 19:36:32 ------ all executors finish execution
2023/03/25 19:36:32 exec time: 2089
2023/03/25 19:36:32 ----- PS len: 4
2023/03/25 19:36:32 [CLIENT] executor 3 has 12 replies
2023/03/25 19:36:32 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/25 19:36:32 [SERVER] executor 0 has 3 replies
2023/03/25 19:36:32 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:32 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:36:32 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
time breakdown 2: 2041, 53, 0
before receive testcase: 0 0
2023/03/25 19:36:32 [SERVER] executor 1 has 1 replies
2023/03/25 19:36:32 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 19:36:32 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:32 ------- fuzzer executor 2 receive 1440 signal and 0 cover from userspace component
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 ------- fuzzer executor 2 receive 315 signal and 0 cover from userspace component
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:36:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:32 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/25 19:36:32 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:32 ----- no new client coverage: false, true
2023/03/25 19:36:32 mutate testcase with failures
2023/03/25 19:36:32 ----- insertCall()
2023/03/25 19:36:32 ----- generateCall 251 ftruncate ftruncate
2023/03/25 19:36:32 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:32 disable threaded and collide
2023/03/25 19:36:32 prog length: 6
2023/03/25 19:36:32 prog length: 14
2023/03/25 19:36:32 HasCrashFail:true HasNetFail:false
19:36:32 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
ftruncate(r0, 0x9)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2944
remove dir: /root/orangefs-client/dfs-0-25
time breakdown 1: 2039, 52, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-26 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-26
receive_execute: 4, 28
receive_execute: 3, 31
receive_execute: 2, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 31
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 736 tid 736

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 736, pid 736, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:32] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 24, 0
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 24
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 3
----- directly resend shmid 3
[D 03/25/2023 18:36:32] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:36:32] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:36:32] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:36:32] Error: Could not initialize server subsystems
[E 03/25/2023 18:36:32] Error: Could not initialize server; aborting.
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 18:36:32] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:36:32] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2044
----- completed 7
execute_call 0, 2020, 0, 3
execute_one loop: 0, 0, 2023
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 8
----- directly resend shmid 8
----- executor 3 write_call_output, size 5771, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 5771, flag collect 0
----- executor 3 signal number : 1045
----- completed 13
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 408, write pid:408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2067, 0
execute_one time: 0, 2067
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 2068, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 25224, flag collect 0
----- executor 1 signal number : 2484
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2798
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:34 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1134
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 13716, flag collect 0
----- executor 0 signal number : 104
executor 0 server cover_cnt 5 output_pos_value 1650
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 25367, flag collect 0
----- executor 2 signal number : 2790
----- executor 2 executes write_coverage_signal cov->size 20145, flag collect 0
----- executor 2 signal number : 1201
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 273
----- executor 2 executes write_coverage_signal cov->size 12760, flag collect 0
----- executor 2 signal number : 84
----- executor 2 executes write_coverage_signal cov->size 1917, flag collect 0
----- executor 2 signal number : 105
executor 2 server cover_cnt 5 output_pos_value 4469
time breakdown 2: 32, 2071, 0
before receive testcase: 0 0
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:34 wg wait finish
2023/03/25 19:36:34 ------ all executors finish execution
2023/03/25 19:36:34 exec time: 2103
2023/03/25 19:36:34 ----- PS len: 4
2023/03/25 19:36:34 [CLIENT] executor 3 has 14 replies
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 [SERVER] executor 0 has 5 replies
2023/03/25 19:36:34 [SERVER] executor 2 has 5 replies
2023/03/25 19:36:34 [SERVER] executor 1 has 5 replies
2023/03/25 19:36:34 ------- fuzzer executor 1 receive 2484 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 1134 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 104 signal and 0 cover from userspace component
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 2044 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 1045 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 2790 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 1201 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 273 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 84 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 105 signal and 0 cover from userspace component
2023/03/25 19:36:34 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:34 ----- no new client coverage: false, true
time breakdown 1: 33, 2072, 0
before receive testcase: 0 0
2023/03/25 19:36:34 mutate testcase with failures
2023/03/25 19:36:34 ----- mutateArg()
2023/03/25 19:36:34 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:34 disable threaded and collide
2023/03/25 19:36:34 prog length: 6
2023/03/25 19:36:34 prog length: 13
2023/03/25 19:36:34 HasCrashFail:true HasNetFail:false
19:36:34 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0xfffffffffffffff0, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2848
remove dir: /root/orangefs-client/dfs-0-26
time breakdown 0: 34, 2070, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 37
-----finish removing dir
receive_execute: 5, 48
receive_execute: 3, 50
receive_execute: 2, 49
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-27 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 50
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 18327, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 18327, flag collect 0
----- executor 3 signal number : 3077
----- completed 5
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 0 signal number : 43
executor 0 server cover_cnt 3 output_pos_value 208
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 751 tid 751

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 751, pid 751, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:34] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 32, 0
execute_one time: 0, 32
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 9
----- directly resend shmid 9
----- executor 3 write_call_output, size 9536, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 9536, flag collect 0
----- executor 3 signal number : 1034
----- completed 12
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 409, write pid:409
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 0, 40
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 55, 41, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 21961, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 3080
----- executor 2 executes write_coverage_signal cov->size 20828, flag collect 0
----- executor 0 signal number : 1130
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 7 output_pos_value 1360
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 2944, flag collect 0
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 404
----- executor 2 executes write_coverage_signal cov->size 2505, flag collect 0
time breakdown 1: 51, 42, 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1933, flag collect 0
----- executor 2 signal number : 138
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 4981
2023/03/25 19:36:34 for select break: 1
2023/03/25 19:36:34 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:34 wg wait finish
2023/03/25 19:36:34 ------ all executors finish execution
2023/03/25 19:36:34 exec time: 93
2023/03/25 19:36:34 ----- PS len: 4
2023/03/25 19:36:34 [CLIENT] executor 3 has 13 replies
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 1034 signal and 0 cover from executor 3
2023/03/25 19:36:34 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 53, 43, 0
2023/03/25 19:36:34 [SERVER] executor 0 has 7 replies
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 1130 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 19:36:34 [SERVER] executor 1 has 0 replies
2023/03/25 19:36:34 [SERVER] executor 2 has 5 replies
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 3080 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 404 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/25 19:36:34 ------- fuzzer executor 2 receive 138 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 53, 42, 0
before receive testcase: 0 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
2023/03/25 19:36:34 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:34 ----- no new client coverage: false, true
2023/03/25 19:36:34 mutate testcase with failures
2023/03/25 19:36:34 ----- insertCall()
2023/03/25 19:36:34 ----- generateCall 248 fstat fstat
2023/03/25 19:36:34 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:34 disable threaded and collide
2023/03/25 19:36:34 prog length: 6
2023/03/25 19:36:34 prog length: 18
2023/03/25 19:36:34 HasCrashFail:true HasNetFail:false
19:36:34 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fstat(r0, &(0x7f0000000880))
syz_failure_sync(0x1, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)=ANY=[@ANYBLOB='trusoverlay.direct\x00\x00\x00\x00'], 0x1a, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4032
remove dir: /root/orangefs-client/dfs-0-27
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:36:34] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:36:34] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2033
-----finish removing dir
receive_execute: 3, 2051
receive_execute: 4, 2051
receive_execute: 6, 2049
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-28 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-28
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 2052
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 530 tid 530

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 530, pid 530, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:36] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 48, 0
execute_one time: 1, 48
----- executor 3 write_call_output, size 6395, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 410, write pid:410
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 51, 0
execute_one time: 0, 51
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1437
----- executor 2 executes write_coverage_signal cov->size 15484, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 4350, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 4098, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2124
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2054, 54, 0
before receive testcase: 0 0
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 2057, 52, 0
before receive testcase: 0 0
time breakdown 1: 2055, 56, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1236, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
time breakdown 0: 2055, 67, 0
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:36 wg wait finish
2023/03/25 19:36:36 ------ all executors finish execution
2023/03/25 19:36:36 exec time: 2119
2023/03/25 19:36:36 ----- PS len: 4
2023/03/25 19:36:36 [CLIENT] executor 3 has 18 replies
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 1437 signal and 0 cover from userspace component
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:36:36 [SERVER] executor 0 has 3 replies
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 1 has 1 replies
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:36:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:36 ----- no new client coverage: false, true
2023/03/25 19:36:36 mutate testcase with failures
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- mutateArg()
before receive testcase: 0 1
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:36 disable threaded and collide
2023/03/25 19:36:36 prog length: 6
2023/03/25 19:36:36 prog length: 22
2023/03/25 19:36:36 HasCrashFail:true HasNetFail:false
19:36:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040), 0x4, 0x3)
r0 = open(&(0x7f0000000080)='./file0\x00', 0x80, 0x44)
r1 = dup(r0)
r2 = dup(r1)
fsetxattr$security_ima(r2, &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x5, 0x1, 0x12, 0x1, 0xed, "d29a1001177e33a19d7319821fe973bb7633e17071fabd9eb5aa5eaa47e32823d58998b63865d4a04531b9b9e351be677e639824ee1b0cd36237e12df640af1a100c82713235c1f77b35cc3f97d60284c301beb38b367ed271fb38e801247de6abe91e0ba39fb8ef6d450c690eae759a95ba97b322f994b7d5c96e50962cff19d02adbd4defe239857db4ea35bc6055d7bcca6992e85f9bd6dd73c52c1d0c684ca6b74f355b541d6e8f42ad5dd8a766485590244000f45a48d9edcd5106f73b4cfbfccf5110a7d517cb4ca42c102cfca061be33d06369859dcd9c72dd2e327edee5eb31f7d3b0905ae45ca3b55"}, 0xf6, 0x3)
r3 = dup(r0)
write$binfmt_aout(r3, &(0x7f0000000dc0)=ANY=[@ANYBLOB="cc00058d73000000f3010000000000004b00000055aa00000000000000000000bc6879c31f3c48df6675c132b9e18bdb4c919fdbb40612cc06fea00e626cbbd428641fafc03dd0b70d439fa4c8691104bb3890a01d4f1d024c966b666e00bfae80d99c15b89eb1e2f89ce374195308b9f75e2757f2da81cda3350e9ea6952a13a26b3bf0414bb85170c28aa451e0bdf4cd023e2ac4ca52467a04d85658169cb19709ddc6ed982dd1308b27be84c40a1b44e43b2e459919dc105613cc7174a5df6a7a3af9f25407231af77658fed072f7eb5a94f4e5df39c3e0354f0b1e017300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000363f7cfaffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f7e61ef284af915bx6df)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000900), &(0x7f0000000940)='./file0\x00', 0x8, 0x3)
r4 = dup(r2)
fstat(r4, &(0x7f0000000980))
fsetxattr$user(r2, &(0x7f0000000a00), &(0x7f0000000d00)='seguP\x881\xd9\xaa\xcax`\x00', 0xd, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000a80))
fcntl$setpipe(r3, 0x407, 0x8dc)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000b00)='security.SMACK64EXEC\x00', &(0x7f0000000b40)={'trusted.overlay.redirect\x00'}, 0x1a, 0x2)
r5 = dup(r0)
syz_failure_sync(0x0, 0x3)
fcntl$setpipe(r5, 0x407, 0x7ff)
fcntl$dupfd(0xffffffffffffffff, 0x406, r1)
fstat(r3, &(0x7f0000000200))
syz_failure_sync(0x1, 0x3)
write$binfmt_script(r0, &(0x7f0000000c00)={'#! ', './file0', [{0x20, 'trusted.overlay.redirect\x00'}], 0xa, "1672feaee405846305df55af3b2024dc6d26024234863d02217a536581f58bb6c960439dc442b3ecd97bd5fd479bb5148065a5889b163df5356cf95e9fd6dc975e27d951eea67ea6aaf9718d760a454e18f816ec5ffe689bd21f032eedc492f4c37adf9ca79a1c8710dbe5863e06bf7b8b141f362ab35fe610c719ab45bebcdab1b8f2"}, 0xa8)
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000cc0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5584
remove dir: /root/orangefs-client/dfs-0-28
remove dir time 13
-----finish removing dir
receive_execute: 16, 34
receive_execute: 3, 35
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-29 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-29
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 14, 36
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 17, 35
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6395, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 6808, flag collect 0
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 163
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
----- executor 1 signal number : 86
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 38
executor 1 server cover_cnt 4 output_pos_value 1419
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 545 tid 545

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 545, pid 545, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:36] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 25, 0
execute_one time: 5, 25
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 411, write pid:411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 29, 0
execute_one time: 1, 29
time breakdown 3: 52, 31, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4147, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 signal number : 44
----- executor 2 signal number : 1407
----- executor 2 executes write_coverage_signal cov->size 1563, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 2 signal number : 75
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 2094
----- executor 1 signal number : 894
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 210
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 38, 32, 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 8 output_pos_value 2325
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:36 wg wait finish
2023/03/25 19:36:36 ------ all executors finish execution
2023/03/25 19:36:36 exec time: 67
2023/03/25 19:36:36 ----- PS len: 4
2023/03/25 19:36:36 [CLIENT] executor 3 has 22 replies
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 0 has 3 replies
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
time breakdown 1: 50, 32, 0
before receive testcase: 0 1
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:36:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 1 has 8 replies
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 1407 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 163 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 86 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 38 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 894 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
time breakdown 2: 50, 33, 0
before receive testcase: 0 0
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 19:36:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:36 ----- no new client coverage: false, true
2023/03/25 19:36:36 mutate testcase with failures
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- generateCall 248 fstat fstat
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- generateCall 204 fcntl$getflags fcntl$getflags
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- generateCall 2462 openat openat
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:36 disable threaded and collide
2023/03/25 19:36:36 prog length: 6
2023/03/25 19:36:36 prog length: 13
2023/03/25 19:36:36 HasCrashFail:true HasNetFail:false
19:36:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000080)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x7)
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x400603, 0x112)
r1 = openat(r0, &(0x7f0000000140)='./file0/file0\x00', 0x2200, 0x67)
fstat(r1, &(0x7f00000000c0))
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_origin(0xffffffffffffffff, 0x0, &(0x7f0000000240), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
r2 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x0, 0x4)
fcntl$getflags(r2, 0xb)
fcntl$getflags(0xffffffffffffffff, 0x0)
setxattr$system_posix_acl(&(0x7f0000001380)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_ima(0x0, 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1720
remove dir: /root/orangefs-client/dfs-0-29
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 21
-----finish removing dir
receive_execute: 5, 38
mkdir time 17
executor 3 create dir /root/orangefs-client/dfs-0-30 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-30
receive_execute: 5, 38
receive_execute: 5, 38
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 39
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 687, flag collect 0
----- executor 1 signal number : 252
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
executor 1 server cover_cnt 2 output_pos_value 264
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 560 tid 560

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 560, pid 560, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:36] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 412, write pid:412
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 28, 0
execute_one time: 0, 28
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 45, 29, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 signal number : 44
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12464, flag collect 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 25, 0
execute_one time: 0, 25
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 210
----- executor 2 signal number : 1417
----- executor 2 executes write_coverage_signal cov->size 4641, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 1599, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1305, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2104
----- executor 1 signal number : 1013
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 43, 31, 0
before receive testcase: 0 1
time breakdown 2: 43, 31, 0
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 1 signal number : 88
executor 1 server cover_cnt 6 output_pos_value 1390
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:36 wg wait finish
2023/03/25 19:36:36 ------ all executors finish execution
2023/03/25 19:36:36 exec time: 72
2023/03/25 19:36:36 ----- PS len: 4
2023/03/25 19:36:36 [CLIENT] executor 3 has 13 replies
2023/03/25 19:36:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 0 has 3 replies
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:36:36 [SERVER] executor 1 has 6 replies
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 252 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 1013 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
time breakdown 1: 43, 34, 0
before receive testcase: 0 0
2023/03/25 19:36:36 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 1417 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:36:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:36 ----- no new client coverage: false, true
2023/03/25 19:36:36 mutate testcase with failures
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- generateCall 2343 link link
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- mutateFailPos()
2023/03/25 19:36:36 insert call 15 at pos 0
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- mutateFailPos()
2023/03/25 19:36:36 insert call 0 at pos 0
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:36 disable threaded and collide
2023/03/25 19:36:36 prog length: 6
2023/03/25 19:36:36 prog length: 20
2023/03/25 19:36:36 HasCrashFail:true HasNetFail:false
19:36:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000940)='./binderfs\x00', 0x1ff)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
lsetxattr$trusted_overlay_origin(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0), &(0x7f0000000900), 0x2, 0x5)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aeee506ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
link(&(0x7f0000000980)='./file0\x00', &(0x7f0000000840)='./file0/file0\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000a00)=ANY=[@ANYBLOB="74727573726c61792e72656469726563740000000000000000004468b8cbd27a7eb32f4a320aa5743978ee177c40cd1f30aa05036eb3f71c09f8fb125ae51158e6e9e95e5864683ca62fbd769b2e62b3fdc0960b09a583848a5b7f73e61839f425ee7c24048dbd354cdfdaf722715a032c2e4c746e9a652c70e9e38a4d0ed97b827c4562fca6e1fb9511b771b879019e52a38f3325c19df8d47d14c9f3f0647fc01480883d2b61cc603190214e90e65702073d910f3467a5cb2e8d63595c62cfe19ec14e9e20f2123e46ab879a9320"], 0x1a, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4704
remove dir: /root/orangefs-client/dfs-0-30
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 25
-----finish removing dir
receive_execute: 4, 35
receive_execute: 4, 33
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-31 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 35
receive_execute: 2, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 569, flag collect 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 1 signal number : 125
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 1 output_pos_value 129
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6419, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6419, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 60, 0, 0
execute_one loop: 0, 0, 60
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 574 tid 574

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 574, pid 574, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:36] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 85, 0
execute_one time: 1, 85
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 413, write pid:413
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 84, 0
execute_one time: 1, 84
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 40, 86, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1449
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
----- executor 0 signal number : 2705
----- executor 0 executes write_coverage_signal cov->size 27146, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 1605
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 35, 88, 0
----- executor 0 signal number : 976
----- executor 0 executes write_coverage_signal cov->size 7256, flag collect 0
----- executor 0 signal number : 362
----- executor 0 executes write_coverage_signal cov->size 6705, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 23216, flag collect 0
----- executor 2 signal number : 2243
----- executor 2 executes write_coverage_signal cov->size 23479, flag collect 0
----- executor 2 signal number : 1114
----- executor 2 executes write_coverage_signal cov->size 3433, flag collect 0
----- executor 2 signal number : 298
----- executor 2 executes write_coverage_signal cov->size 2521, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 3747
----- executor 0 signal number : 76
time breakdown 2: 38, 88, 0
before receive testcase: 0 1
executor 0 server cover_cnt 4 output_pos_value 4132
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 89, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 19:36:36 for select break: 1
2023/03/25 19:36:36 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:36 wg wait finish
2023/03/25 19:36:36 ------ all executors finish execution
2023/03/25 19:36:36 exec time: 132
2023/03/25 19:36:36 ----- PS len: 4
2023/03/25 19:36:36 [CLIENT] executor 3 has 20 replies
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 [SERVER] executor 1 has 4 replies
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 125 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 1449 signal and 0 cover from userspace component
2023/03/25 19:36:36 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 2243 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:36 [SERVER] executor 0 has 4 replies
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 2705 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 1114 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 976 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 362 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 298 signal and 0 cover from userspace component
2023/03/25 19:36:36 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:36 ----- no new client coverage: false, true
2023/03/25 19:36:36 mutate testcase with failures
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- mutateArg()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 ----- insertCall()
2023/03/25 19:36:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:36 disable threaded and collide
2023/03/25 19:36:36 prog length: 6
2023/03/25 19:36:36 prog length: 22
2023/03/25 19:36:36 HasCrashFail:true HasNetFail:false
19:36:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001980))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=ANY=[@ANYBLOB="73656375726974561b73656375726974792e534d41434b36345452414e534d55544500"], &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001a00)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e5365637572697478002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552145e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d67405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a750440499dd50f147e96235550ab587aa927d730c3c5173496d97a08bed2f870bd8afd0a4531fa26ac28ba7991899a2a97000000000000000000f5247bf303b0a124ed4948a8f74271443ce22cadfc692c89c46a40666944f562939f70fa8bc281303997e62fcb45ba7fb58ca3805a8964cf52e9f79682fa38530d25bb48a6c744659d8bbd6120893fb0dad256a416758df808c70000000026e98672d5e96b36a7cab63032d173077c55ebafeea4b0f4eef7bb153657161d579e124948cc2cf1eec2eabdd672b16bf2e7ace83ce8fa26c1cfbab4a8414ace66c3100474a5605704ab9b2e0e640f1086c5eceaf74ada155525f8071f541b095240a4099d575694c815965bc191f200116f24dfe023c4469c319197cc27b4be21dfb3a9be29c2da54bac1de83434ad8cc3a635bf1c443fac2b147acc20700000090aacfb3ab6439e39ccea1ac2ba80e5234000000000000000000000000000000000000009fd7c4c0beb40a002b6b0bb02ee1bdb666c6"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8784
remove dir: /root/orangefs-client/dfs-0-31
remove dir time 58
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:36:36] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:36:36] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:36:36] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:36:36] Error: Could not initialize server subsystems
[E 03/25/2023 18:36:36] Error: Could not initialize server; aborting.
[D 03/25/2023 18:36:36] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:36:36] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:36:36] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:36:36] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:36:36] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:36:36] Error: Could not initialize server subsystems
[E 03/25/2023 18:36:36] Error: Could not initialize server; aborting.
mkdir time 2051
executor 3 create dir /root/orangefs-client/dfs-0-32 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-32
receive_execute: 12, 2109
receive_execute: 10, 2109
receive_execute: 11, 2109
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 13, 2110
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6643, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6643, flag collect 0
----- executor 3 signal number : 29
----- completed 13
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6395, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 589 tid 589

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 589, pid 589, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:38] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 414, write pid:414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 51, 0
execute_one time: 0, 51
2023/03/25 19:36:38 for select break: 1
2023/03/25 19:36:38 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28595, flag collect 0
executor 2 write_server_output
time breakdown 3: 2123, 51, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 0 signal number : 1429
----- executor 0 executes write_coverage_signal cov->size 10116, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3341, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2955, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 51, 0
execute_one time: 0, 51
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 75
2023/03/25 19:36:38 for select break: 1
2023/03/25 19:36:38 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2122
time breakdown 2: 2120, 53, 0
2023/03/25 19:36:38 for select break: 1
2023/03/25 19:36:38 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2119, 54, 0
2023/03/25 19:36:38 for select break: 1
2023/03/25 19:36:38 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:38 wg wait finish
2023/03/25 19:36:38 ------ all executors finish execution
2023/03/25 19:36:38 exec time: 2163
2023/03/25 19:36:38 ----- PS len: 4
2023/03/25 19:36:38 [CLIENT] executor 3 has 22 replies
2023/03/25 19:36:38 [SERVER] executor 0 has 4 replies
2023/03/25 19:36:38 ------- fuzzer executor 0 receive 1429 signal and 0 cover from userspace component
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:36:38 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:36:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 [SERVER] executor 2 has 3 replies
2023/03/25 19:36:38 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:38 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:38 [SERVER] executor 1 has 1 replies
2023/03/25 19:36:38 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:36:38 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:38 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 19:36:38 mutate testcase with failures
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- mutateArg()
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- insertCall()
2023/03/25 19:36:38 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 19:36:38 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:38 disable threaded and collide
2023/03/25 19:36:38 prog length: 6
2023/03/25 19:36:38 prog length: 20
2023/03/25 19:36:38 HasCrashFail:true HasNetFail:false
19:36:38 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f0000000680)='./file0/file0\x00', &(0x7f0000000e40)=@known='system.advise\x00', &(0x7f00000000c0)=""/229, 0xffffffffffffff2b)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)=ANY=[@ANYBLOB="02000000010002000000000002000400", @ANYRES32=0xee00, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000600", @ANYRES32=r0, @ANYBLOB="02000300", @ANYRES32=0x0, @ANYBLOB="040000000000000008002b04", @ANYRES32=0x0, @ANYBLOB="1000040000000000"], 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000b00)=ANY=[@ANYBLOB="00fbc30205bed60a67a8d3e9550de61a4195f744251389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf05366db5d7c82e0081a39c11ba0a4451d918db8bfec444dca80ea1a8d400cabf83ff3e5b9001b79750203fbe2e5a033e33f6c4d488a91bc38ddaba46cc648a5b6835f4a6ab7eca77b23918e9bc01879f"], 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
lgetxattr(&(0x7f0000000cc0)='./file1\x00', &(0x7f0000000d00)=@known='security.selinux\x00', &(0x7f0000000d40)=""/144, 0x90)
listxattr(&(0x7f0000000640)='./file2\x00', &(0x7f0000000e00)=""/22, 0xf)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
lsetxattr$user(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0), &(0x7f0000000500)='-{,.\x00', 0x5, 0x1)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1\x00', &(0x7f0000000c40)='security.SMACK64MMAP\x00', &(0x7f0000000c80)={'-{,.\x00'}, 0x6, 0x1)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5488
remove dir: /root/orangefs-client/dfs-0-32
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 2121, 53, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-33 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-33
receive_execute: 3, 23
receive_execute: 2, 22
receive_execute: 2, 23
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 23
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6395, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6395, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1440, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2081
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 771 tid 771

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 771, pid 771, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:38] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 18:36:38] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:36:38] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:36:38] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:36:38] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:36:38] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:36:38] Error: Could not initialize server subsystems
[E 03/25/2023 18:36:38] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2024, 0, 0
execute_one loop: 0, 0, 2024
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6639, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6639, flag collect 0
----- executor 3 signal number : 29
----- completed 7
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6423, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6423, flag collect 0
----- executor 3 signal number : 20
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6423, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6423, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6417, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6417, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 415, write pid:415
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 2117, 0
execute_one time: 0, 2117
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 28090, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1486, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 2377, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2555
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 10693, flag collect 0
time breakdown 3: 28, 2118, 0
before receive testcase: 0 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 4 output_pos_value 657
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2869
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 24, 2122, 0
before receive testcase: 0 0
time breakdown 1: 25, 2122, 0
before receive testcase: 0 1
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:41 wg wait finish
2023/03/25 19:36:41 ------ all executors finish execution
2023/03/25 19:36:41 exec time: 2156
2023/03/25 19:36:41 ----- PS len: 4
2023/03/25 19:36:41 [CLIENT] executor 3 has 20 replies
2023/03/25 19:36:41 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 906
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 27
----- executor 0 executes write_coverage_signal cov->size 18979, flag collect 0
----- executor 0 signal number : 16
executor 0 server cover_cnt 9 output_pos_value 3189
2023/03/25 19:36:41 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 0: 26, 2133, 0
before receive testcase: 0 1
2023/03/25 19:36:41 [SERVER] executor 0 has 9 replies
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 906 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/25 19:36:41 [SERVER] executor 1 has 5 replies
2023/03/25 19:36:41 ------- fuzzer executor 1 receive 2555 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 19:36:41 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:36:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:41 ----- no new client coverage: false, true
2023/03/25 19:36:41 mutate testcase with failures
2023/03/25 19:36:41 ----- mutateArg()
2023/03/25 19:36:41 ----- insertCall()
2023/03/25 19:36:41 ----- insertCall()
2023/03/25 19:36:41 ----- insertCall()
2023/03/25 19:36:41 ----- mutateArg()
2023/03/25 19:36:41 ----- insertCall()
2023/03/25 19:36:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:41 disable threaded and collide
2023/03/25 19:36:41 prog length: 6
2023/03/25 19:36:41 prog length: 20
2023/03/25 19:36:41 HasCrashFail:true HasNetFail:false
19:36:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000001d40)=ANY=[@ANYBLOB="00fb7e020c2c2c74ebac18f03bce919df3e8c5d10a46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3dbe32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d85758277f70f22ccdcffb10548b64be437078e8e00d6fc573a5ee371d75208c09831463fa0f502bacfe99530e0750f3a494c8fd4f1546713bb04640e0e5cffffff7fc6e551470103fa5c7a96fddf621b0cc47fdf9aa1e37f00c7060f3cefc879d4f2d74fdf52e8c68a8bde522f5ebbfc29174d3097753d6eb010e28698864e47274dcc83f6d58fb7e7350c238d1a9bd5cf4cfc651374e811052ee8cc3186997fc4b1f646847524a83f067defe69e4640ae8f3f9449b2e0b3be49e6b0cf80876f2102a32745a633bb48aea8930d463a00a57e6383932b14500e90f953df55e976ec515eef9f461964010c66ccfe4ce1944ee8b579050e67048551046d6ed8eb9d06764ffce68a14b1474c1b27c875bafea8b3c85d"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780))
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v2={0x2000000, [{0xa5, 0x7}, {0x5, 0x81}]}, 0x14, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r1 = dup2(r0, r0)
pread64(r1, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000000580)=ANY=[@ANYBLOB="04131c01d88f9abef4372331e19f158abbb0db3da0c7b63c2e5c3ff42111"], 0x11, 0x0)
fstat(r1, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r1, &(0x7f0000001c40))
fstat(r1, &(0x7f0000001cc0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4616
remove dir: /root/orangefs-client/dfs-0-33
remove dir time 35
-----finish removing dir
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-34 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-34
receive_execute: 14, 52
receive_execute: 2, 53
receive_execute: 16, 53
receive_execute: 14, 52
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 0 signal number : 43
executor 0 server cover_cnt 3 output_pos_value 208
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 786 tid 786

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 786, pid 786, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

[E 03/25/2023 18:36:41] PVFS2 server got signal 15 (server_status_flag: 2080767)
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 6525, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6525, flag collect 0
----- executor 3 signal number : 65
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 40, 0
execute_one time: 0, 40
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 416, write pid:416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 61, 0
execute_one time: 0, 61
time breakdown 3: 69, 62, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1269
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 7 output_pos_value 1504
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 66, 66, 0
before receive testcase: 0 1
time breakdown 0: 55, 63, 0
before receive testcase: 0 0
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:41 wg wait finish
2023/03/25 19:36:41 ------ all executors finish execution
2023/03/25 19:36:41 exec time: 122
2023/03/25 19:36:41 ----- PS len: 4
2023/03/25 19:36:41 [CLIENT] executor 3 has 20 replies
----- executor 2 signal number : 1436
----- executor 2 executes write_coverage_signal cov->size 15570, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 signal number : 388
----- executor 2 executes write_coverage_signal cov->size 4152, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2225
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 [SERVER] executor 1 has 0 replies
time breakdown 2: 66, 70, 0
2023/03/25 19:36:41 [SERVER] executor 0 has 7 replies
2023/03/25 19:36:41 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 19:36:41 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 1436 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 388 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 1269 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 19:36:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:41 ----- no new client coverage: false, true
2023/03/25 19:36:41 mutate testcase with failures
2023/03/25 19:36:41 ----- mutateArg()
2023/03/25 19:36:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:41 disable threaded and collide
2023/03/25 19:36:41 prog length: 6
2023/03/25 19:36:41 prog length: 22
2023/03/25 19:36:41 HasCrashFail:true HasNetFail:false
19:36:41 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(0xffffffffffffffff, &(0x7f0000001540)=[{&(0x7f0000001a80)=""/25, 0x19}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
syz_failure_sync(0x1, 0x3)
write$binfmt_script(r4, &(0x7f0000001980)={'#! ', './file0', [{0x20, 'com.apple.system.Security\x00'}, {0x20, 'security.SMACK64TRANSMUTE\x00'}, {}], 0xa, "4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"}, 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8784
remove dir: /root/orangefs-client/dfs-0-34
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 152
-----finish removing dir
receive_execute: 2, 165
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-35 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-35
receive_execute: 6, 164
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 165
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 165
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6415, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6415, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6407, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 6407, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 606 tid 606

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 606, pid 606, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:36:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 417, write pid:417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 36, 0
execute_one time: 1, 36
time breakdown 3: 174, 38, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 29238, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 824, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 0 signal number : 44
before receive testcase: 0 1
executor 0 server cover_cnt 3 output_pos_value 210
----- executor 2 signal number : 1433
----- executor 2 executes write_coverage_signal cov->size 10895, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 2901, flag collect 0
2023/03/25 19:36:41 for select break: 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 36, 0
execute_one time: 1, 36
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 2 signal number : 75
2023/03/25 19:36:41 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 2120
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 173, 39, 0
2023/03/25 19:36:41 for select break: 1
2023/03/25 19:36:41 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:36:41 wg wait finish
2023/03/25 19:36:41 ------ all executors finish execution
2023/03/25 19:36:41 exec time: 204
2023/03/25 19:36:41 ----- PS len: 4
2023/03/25 19:36:41 [CLIENT] executor 3 has 22 replies
2023/03/25 19:36:41 [SERVER] executor 0 has 3 replies
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:41 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:41 [SERVER] executor 1 has 1 replies
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 1433 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:36:41 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:41 ----- no new client coverage: false, true
2023/03/25 19:36:41 mutate testcase with failures
2023/03/25 19:36:41 ----- mutateArg()
2023/03/25 19:36:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:41 disable threaded and collide
2023/03/25 19:36:41 prog length: 6
2023/03/25 19:36:41 prog length: 21
2023/03/25 19:36:41 HasCrashFail:true HasNetFail:false
19:36:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f0000000300)={{0x1c4, 0x1b, 0x5, 0x3a9, 0x55, 0x3f, 0x265, 0x1a0}, "e7e160ac04e696b12e14a0bddb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522d0b0e62f1cf4a4b5e80ba2e5fef598772dbae4a2d22d0e7957fef26ac8b496066da21753b38caeedaee7243405e5cc10c7abf735826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f511dc87eb74e54260458db55a9905bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3e657", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x9f6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x501040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6600
remove dir: /root/orangefs-client/dfs-0-35
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 2: 167, 39, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 170, 39, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 14
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:36:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:36:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:36:41] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:36:41] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:36:41] Error: Could not initialize server subsystems
[E 03/25/2023 18:36:41] Error: Could not initialize server; aborting.
mkdir time 6051
executor 3 create dir /root/orangefs-client/dfs-0-36 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-36
receive_execute: 0, 6065
receive_execute: 3, 6065
receive_execute: 2, 6065
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 6066
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6419, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 6419, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4085, flag collect 0
----- executor 0 signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 1440, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2082
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 802 tid 802

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 802, pid 802, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:47] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:36:47] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:36:47] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 396
----- completed 4
execute_call 0, 2025, 0, 1
execute_one loop: 0, 0, 2026
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6423, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 6423, flag collect 0
----- executor 3 signal number : 12
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6423, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 6423, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6423, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 6423, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/25 19:36:49 for select break: 1
2023/03/25 19:36:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 3 write_call_output, size 6423, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 6423, flag collect 0
2023/03/25 19:36:49 for select break: 1
2023/03/25 19:36:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6068, 2081, 0
before receive testcase: 0 0
2023/03/25 19:36:49 for select break: 1
2023/03/25 19:36:49 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 906
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 27
----- executor 0 executes write_coverage_signal cov->size 14891, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 3189
----- executor 2 executes write_coverage_signal cov->size 1486, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 2330, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 10478, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 4 output_pos_value 657
time breakdown 2: 6067, 2081, 0
before receive testcase: 0 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 418, write pid:418
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2062, 0
execute_one time: 0, 2062
time breakdown 3: 6069, 2079, 0
before receive testcase: 0 0
2023/03/25 19:36:49 for select break: 1
2023/03/25 19:36:49 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:36:49 wg wait finish
2023/03/25 19:36:49 ------ all executors finish execution
2023/03/25 19:36:49 exec time: 8158
2023/03/25 19:36:49 ----- PS len: 4
2023/03/25 19:36:49 [CLIENT] executor 3 has 21 replies
2023/03/25 19:36:49 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 396 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:36:49 [SERVER] executor 2 has 4 replies
2023/03/25 19:36:49 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:36:49 [SERVER] executor 1 has 0 replies
2023/03/25 19:36:49 [SERVER] executor 0 has 9 replies
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 1404 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 906 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 19:36:49 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
time breakdown 0: 6065, 2093, 0
before receive testcase: 0 0
2023/03/25 19:36:49 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:36:49 ----- no new client coverage: false, true
2023/03/25 19:36:49 mutate testcase with failures
2023/03/25 19:36:49 ----- mutateArg()
2023/03/25 19:36:49 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:36:49 disable threaded and collide
2023/03/25 19:36:49 prog length: 6
2023/03/25 19:36:49 prog length: 5
2023/03/25 19:36:49 HasCrashFail:true HasNetFail:false
19:36:49 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
symlink(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000140)='./file0\x00')
open(&(0x7f00000001c0)='./file1\x00', 0x40, 0x0)
readlink(&(0x7f0000000080)='./file0\x00', &(0x7f0000000000)=""/63, 0x3f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 584
remove dir: /root/orangefs-client/dfs-0-36
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-37 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-37
receive_execute: 3, 29
receive_execute: 14, 29
receive_execute: 14, 29
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 14, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 420, write pid:420
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 818 tid 818

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 818, pid 818, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:36:49] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 420, write pid:420
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 19, 0
execute_one time: 0, 19
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 18:36:49] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:36:49] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 420, write pid:420
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1995
----- completed 3
execute_call 0, 2045, 0, 1
execute_one loop: 0, 0, 2046
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 420, write pid:420
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 831
----- completed 4
execute_call 0, 20104, 0, 0
execute_one loop: 0, 0, 20104
cover_reset in execute_call
----- executor 3 write_call_output, size 15779, pid 420, write pid:420
----- executor 3 executes write_coverage_signal cov->size 15779, flag collect 0
----- executor 3 signal number : 710
----- completed 5
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 0, 22174, 0
execute_one time: 0, 22174
2023/03/25 19:37:11 for select break: 1
2023/03/25 19:37:11 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 23690, flag collect 0
----- executor 2 signal number : 1830
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 44, 22175, 0
----- executor 2 signal number : 952
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 139
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:37:11 for select break: 1
2023/03/25 19:37:11 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 43, 22177, 0
before receive testcase: 0 0
----- executor 2 signal number : 35
executor 2 server cover_cnt 4 output_pos_value 2969
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 109
executor 0 server cover_cnt 5 output_pos_value 1625
2023/03/25 19:37:11 for select break: 1
2023/03/25 19:37:11 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/25 19:37:11 for select break: 1
2023/03/25 19:37:11 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:37:11 wg wait finish
2023/03/25 19:37:11 ------ all executors finish execution
2023/03/25 19:37:11 exec time: 22207
2023/03/25 19:37:11 ----- PS len: 4
2023/03/25 19:37:11 [CLIENT] executor 3 has 5 replies
2023/03/25 19:37:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:11 fuzzer receive 1995 signal and 0 cover from executor 3
2023/03/25 19:37:11 fuzzer receive 831 signal and 0 cover from executor 3
2023/03/25 19:37:11 fuzzer receive 710 signal and 0 cover from executor 3
2023/03/25 19:37:11 [SERVER] executor 1 has 0 replies
2023/03/25 19:37:11 [SERVER] executor 0 has 5 replies
2023/03/25 19:37:11 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 19:37:11 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
time breakdown 2: 43, 22179, 0
2023/03/25 19:37:11 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 19:37:11 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:37:11 ------- fuzzer executor 0 receive 109 signal and 0 cover from userspace component
2023/03/25 19:37:11 [SERVER] executor 2 has 4 replies
2023/03/25 19:37:11 ------- fuzzer executor 2 receive 1830 signal and 0 cover from userspace component
2023/03/25 19:37:11 ------- fuzzer executor 2 receive 952 signal and 0 cover from userspace component
2023/03/25 19:37:11 ------- fuzzer executor 2 receive 139 signal and 0 cover from userspace component
2023/03/25 19:37:11 ------- fuzzer executor 2 receive 35 signal and 0 cover from userspace component
2023/03/25 19:37:11 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:37:11 ----- no new client coverage: false, true
time breakdown 0: 32, 22177, 0
before receive testcase: 0 0
2023/03/25 19:37:11 mutate testcase with failures
2023/03/25 19:37:11 ----- insertCall()
2023/03/25 19:37:11 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 19:37:11 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:37:11 disable threaded and collide
2023/03/25 19:37:11 prog length: 6
2023/03/25 19:37:11 prog length: 14
2023/03/25 19:37:11 HasCrashFail:true HasNetFail:false
19:37:11 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
syz_failure_sync(0x0, 0x3)
ftruncate(0xffffffffffffffff, 0x4)
lsetxattr$trusted_overlay_origin(&(0x7f0000000440)='./file1\x00', &(0x7f0000000480), &(0x7f00000004c0), 0x2, 0x3)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x1, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3128
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir: /root/orangefs-client/dfs-0-37
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 4030
executor 3 create dir /root/orangefs-client/dfs-0-38 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-38
receive_execute: 4, 4062
receive_execute: 5, 4062
receive_execute: 3, 4062
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 4063
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 18495, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 18495, flag collect 0
----- executor 3 signal number : 1032
----- completed 7
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 626 tid 626

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 626, pid 626, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:37:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 37, 0
execute_one time: 1, 37
-----executor 2 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 9381, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 9381, flag collect 0
----- executor 3 signal number : 973
----- completed 13
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 423, write pid:423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 48, 0
execute_one time: 0, 48
2023/03/25 19:37:15 for select break: 1
2023/03/25 19:37:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16089, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 14442, flag collect 0
time breakdown 3: 4069, 49, 0
before receive testcase: 0 1
----- executor 2 signal number : 2639
----- executor 2 executes write_coverage_signal cov->size 14092, flag collect 0
----- executor 0 signal number : 2233
----- executor 0 executes write_coverage_signal cov->size 8384, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 2202, flag collect 0
----- executor 0 signal number : 940
----- executor 0 executes write_coverage_signal cov->size 2174, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1509, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1919, flag collect 0
----- executor 2 signal number : 122
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1611, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3595
executor 2 server cover_cnt 5 output_pos_value 4269
2023/03/25 19:37:15 for select break: 1
2023/03/25 19:37:15 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:37:15 for select break: 1
2023/03/25 19:37:15 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:37:15 for select break: 1
2023/03/25 19:37:15 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:37:15 wg wait finish
2023/03/25 19:37:15 ------ all executors finish execution
2023/03/25 19:37:15 exec time: 4114
2023/03/25 19:37:15 ----- PS len: 4
2023/03/25 19:37:15 [CLIENT] executor 3 has 14 replies
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:37:15 [SERVER] executor 1 has 1 replies
2023/03/25 19:37:15 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:37:15 [SERVER] executor 0 has 4 replies
2023/03/25 19:37:15 ------- fuzzer executor 0 receive 2233 signal and 0 cover from userspace component
2023/03/25 19:37:15 [SERVER] executor 2 has 5 replies
2023/03/25 19:37:15 ------- fuzzer executor 0 receive 940 signal and 0 cover from userspace component
2023/03/25 19:37:15 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/25 19:37:15 ------- fuzzer executor 2 receive 2639 signal and 0 cover from userspace component
time breakdown 0: 4066, 52, 0
2023/03/25 19:37:15 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:37:15 fuzzer receive 1032 signal and 0 cover from executor 3
2023/03/25 19:37:15 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 973 signal and 0 cover from executor 3
2023/03/25 19:37:15 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 4065, 52, 0
before receive testcase: 0 0
2023/03/25 19:37:15 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 4067, 51, 0
before receive testcase: 0 0
2023/03/25 19:37:15 ----- no new client coverage: false, true
2023/03/25 19:37:15 mutate testcase with failures
2023/03/25 19:37:15 ----- mutateArg()
2023/03/25 19:37:15 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:37:15 disable threaded and collide
2023/03/25 19:37:15 prog length: 6
2023/03/25 19:37:15 prog length: 5
2023/03/25 19:37:15 HasCrashFail:true HasNetFail:false
19:37:15 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f00000009c0)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, 0x0, 0xffffff65)
syz_failure_sync(0x0, 0x3)
rmdir(&(0x7f00000000c0)='./file0\x00')
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 448
remove dir: /root/orangefs-client/dfs-0-38
remove dir time 25
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-39 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-39
receive_execute: 3, 39
receive_execute: 4, 39
receive_execute: 3, 39
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 39
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 6447, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 20, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23053, flag collect 0
----- executor 0 signal number : 2235
----- executor 0 executes write_coverage_signal cov->size 23156, flag collect 0
----- executor 0 signal number : 1117
----- executor 0 executes write_coverage_signal cov->size 2705, flag collect 0
----- executor 0 signal number : 360
----- executor 0 executes write_coverage_signal cov->size 2305, flag collect 0
----- executor 0 signal number : 80
-----executor 1 collect shmids 3
----- directly resend shmid 3
executor 0 server cover_cnt 4 output_pos_value 3805
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:37:15] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:37:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:37:15] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:37:15] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:37:15] Error: Could not initialize server subsystems
[E 03/25/2023 18:37:15] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10040, 0, 0
execute_one loop: 0, 0, 10040
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10040, 0, 0
execute_one loop: 0, 0, 10040
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 838 tid 838

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 838, pid 838, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:37:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 425, write pid:425
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 465
----- completed 5
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
executor 3, execute_one inner time: 0, 10093, 0
execute_one time: 1, 10093
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10092, 0
execute_one time: 1, 10092
2023/03/25 19:37:25 for select break: 1
2023/03/25 19:37:25 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 44, 10096, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30513, flag collect 0
----- executor 2 signal number : 2999
----- executor 2 executes write_coverage_signal cov->size 28368, flag collect 0
----- executor 0 signal number : 170
----- executor 0 executes write_coverage_signal cov->size 23192, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13522, flag collect 0
----- executor 1 signal number : 1849
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1053
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 82
----- executor 1 signal number : 160
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3094, flag collect 0
----- executor 0 signal number : 31
----- executor 0 executes write_coverage_signal cov->size 2377, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 8 output_pos_value 4110
----- executor 2 signal number : 491
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 90
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 4 output_pos_value 2147
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 4634
2023/03/25 19:37:25 for select break: 1
2023/03/25 19:37:25 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 43, 10098, 0
2023/03/25 19:37:25 for select break: 1
2023/03/25 19:37:25 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:37:26 for select break: 1
2023/03/25 19:37:26 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:37:26 wg wait finish
2023/03/25 19:37:26 ------ all executors finish execution
2023/03/25 19:37:26 exec time: 10138
2023/03/25 19:37:26 ----- PS len: 4
2023/03/25 19:37:26 [CLIENT] executor 3 has 5 replies
2023/03/25 19:37:26 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:37:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:26 fuzzer receive 465 signal and 0 cover from executor 3
2023/03/25 19:37:26 [SERVER] executor 0 has 8 replies
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 2235 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 1117 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 360 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 170 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 31 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
time breakdown 2: 42, 10099, 0
before receive testcase: 0 0
2023/03/25 19:37:26 [SERVER] executor 1 has 4 replies
2023/03/25 19:37:26 [SERVER] executor 2 has 4 replies
2023/03/25 19:37:26 ------- fuzzer executor 1 receive 1849 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 2 receive 2999 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 1 receive 160 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 1 receive 90 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 2 receive 1053 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/25 19:37:26 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:37:26 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:37:26 ----- no new client coverage: false, true
time breakdown 0: 42, 10099, 0
before receive testcase: 0 0
2023/03/25 19:37:26 mutate testcase with failures
2023/03/25 19:37:26 ----- mutateArg()
2023/03/25 19:37:26 ----- insertCall()
2023/03/25 19:37:26 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/25 19:37:26 ----- mutateArg()
2023/03/25 19:37:26 ----- insertCall()
2023/03/25 19:37:26 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 19:37:26 ----- mutateArg()
2023/03/25 19:37:26 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:37:26 disable threaded and collide
2023/03/25 19:37:26 prog length: 6
2023/03/25 19:37:26 prog length: 11
2023/03/25 19:37:26 HasCrashFail:true HasNetFail:false
19:37:26 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f00000015c0)=@v3={0x3000000, [{0x10000, 0x6}, {0x2, 0x401}], 0xffffffffffffffff}, 0x18, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f0000001680))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000240)='./file0\x00', &(0x7f0000001600)='security.SMACK64IPOUT\x00', &(0x7f0000001640)={'([!'}, 0x4, 0x3)
syz_failure_sync(0x1, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
setxattr$security_ima(&(0x7f0000000480)='./file0\x00', &(0x7f0000001540), &(0x7f0000001580)=@md5={0x1, "f7e66a8455409c12fb5edc1c858201b0"}, 0x11, 0x2)
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f00000014c0)=ANY=[@ANYBLOB="62749c20830225b57f66732e062a5c00b8f4cfb9e51c83a171c75152b6739bf2c4cb3c7f84e0569d884590eaaa71fa955581ed1f00763baaef9a9d224c063bc791a2bd3a1fbc58cf40f5adbb7b1a9857a6f331fb54122c6c30552d815d48456bcf399681503a6839de3df4da9940658c5cc2c35a071f01272a2d8a167b83"], &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2456
remove dir: /root/orangefs-client/dfs-0-39
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 18:37:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2031
-----finish removing dir
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-40 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-40
receive_execute: 3, 2052
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 4, 2052
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 2053
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 2054
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6444, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6444, flag collect 0
----- executor 3 signal number : 2060
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6444, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6444, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 6462, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6462, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 12902, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 12902, flag collect 0
----- executor 3 signal number : 33
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 645 tid 645

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 645, pid 645, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:37:28] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 428, write pid:428
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 53, 0
execute_one time: 1, 53
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 49, 0
execute_one time: 1, 49
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2060, 55, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1260, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 3 output_pos_value 211
----- executor 0 signal number : 1437
----- executor 0 executes write_coverage_signal cov->size 13077, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4119, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3753, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2127
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2055, 58, 0
before receive testcase: 0 0
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2056, 59, 0
before receive testcase: 0 0
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2056, 59, 0
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:37:28 wg wait finish
2023/03/25 19:37:28 ------ all executors finish execution
2023/03/25 19:37:28 exec time: 2113
2023/03/25 19:37:28 ----- PS len: 4
2023/03/25 19:37:28 [CLIENT] executor 3 has 11 replies
2023/03/25 19:37:28 fuzzer receive 2060 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:37:28 [SERVER] executor 2 has 3 replies
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/25 19:37:28 [SERVER] executor 1 has 1 replies
2023/03/25 19:37:28 [SERVER] executor 0 has 4 replies
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 1437 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:37:28 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:37:28 ----- no new client coverage: false, true
2023/03/25 19:37:28 mutate testcase with failures
2023/03/25 19:37:28 ----- insertCall()
2023/03/25 19:37:28 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 19:37:28 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:37:28 disable threaded and collide
2023/03/25 19:37:28 prog length: 6
2023/03/25 19:37:28 prog length: 14
2023/03/25 19:37:28 HasCrashFail:true HasNetFail:false
19:37:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x0, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000440), &(0x7f0000000480), 0x4, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000004c0)=ANY=[@ANYBLOB="050302000000030004d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85deee26ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a27122d09f2dcd5b2ce86ab92650008ba6b2b50bd60c0d15fa4155aa966b2c5fd5a3ebe5babd6cb97ebff10b7f9e80723678919592640e5e3069ebd7953e4e18d14552c77ed"], 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3000
remove dir: /root/orangefs-client/dfs-0-40
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 17
-----finish removing dir
receive_execute: 3, 40
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-41 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-41
receive_execute: 1, 41
receive_execute: 4, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 18507, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 18507, flag collect 0
----- executor 3 signal number : 3077
----- completed 5
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 0 signal number : 43
executor 0 server cover_cnt 3 output_pos_value 208
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 855 tid 855

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 855, pid 855, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:37:28] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 38, 0
execute_one time: 0, 38
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 9507, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 9507, flag collect 0
----- executor 3 signal number : 1025
----- completed 13
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 429, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 49, 0
execute_one time: 1, 49
-----executor 1 collect shmids 1
----- directly resend shmid 1
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 3 receive reply, reply.done 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 21908, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 22446, flag collect 0
time breakdown 3: 46, 52, 0
before receive testcase: 0 0
----- executor 1 signal number : 2413
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3080
----- executor 2 executes write_coverage_signal cov->size 21125, flag collect 0
----- executor 0 signal number : 1269
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 7 output_pos_value 1504
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 3154, flag collect 0
----- executor 2 signal number : 406
----- executor 2 executes write_coverage_signal cov->size 2559, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1947, flag collect 0
2023/03/25 19:37:28 for select break: 1
----- executor 2 signal number : 138
2023/03/25 19:37:28 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2727
executor 2 server cover_cnt 5 output_pos_value 4983
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 43, 55, 0
2023/03/25 19:37:28 for select break: 1
2023/03/25 19:37:28 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:37:28 wg wait finish
2023/03/25 19:37:28 ------ all executors finish execution
2023/03/25 19:37:28 exec time: 95
2023/03/25 19:37:28 ----- PS len: 4
2023/03/25 19:37:28 [CLIENT] executor 3 has 14 replies
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 [SERVER] executor 0 has 7 replies
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 1025 signal and 0 cover from executor 3
2023/03/25 19:37:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:28 [SERVER] executor 1 has 5 replies
2023/03/25 19:37:28 ------- fuzzer executor 1 receive 2413 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 19:37:28 [SERVER] executor 2 has 5 replies
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 3080 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 406 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 2 receive 138 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 1269 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 19:37:28 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
time breakdown 2: 45, 54, 0
before receive testcase: 0 0
2023/03/25 19:37:28 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:37:28 ----- no new client coverage: false, true
time breakdown 0: 42, 53, 0
before receive testcase: 0 1
2023/03/25 19:37:28 mutate testcase with failures
2023/03/25 19:37:28 ----- mutateArg()
2023/03/25 19:37:28 ----- mutateArg()
2023/03/25 19:37:28 ----- insertCall()
2023/03/25 19:37:28 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:37:28 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:37:28 disable threaded and collide
2023/03/25 19:37:28 prog length: 6
2023/03/25 19:37:28 prog length: 11
2023/03/25 19:37:28 HasCrashFail:true HasNetFail:false
19:37:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs2\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000080)='./binderfs\x00', 0x1ff)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x40000, 0x43)
r1 = fcntl$dupfd(r0, 0x0, r0)
r2 = dup2(r0, r1)
fcntl$addseals(r2, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1464
remove dir: /root/orangefs-client/dfs-0-41
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 18:37:28] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:37:28] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:37:28] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:37:28] Error: Could not initialize server subsystems
[E 03/25/2023 18:37:28] Error: Could not initialize server; aborting.
remove dir time 168
-----finish removing dir
[E 03/25/2023 18:37:28] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:37:28] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
receive_execute: 3, 6217
receive_execute: 2, 6216
mkdir time 6048
executor 3 create dir /root/orangefs-client/dfs-0-42 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-42
receive_execute: 2, 6217
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 6217
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 870 tid 870

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 870, pid 870, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:37:34] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 21, 0
execute_one time: 0, 21
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:37:34] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:37:34] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2003
----- completed 3
execute_call 0, 10070, 0, 2
execute_one loop: 0, 0, 10072
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6475, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6475, flag collect 0
----- executor 3 signal number : 410
----- completed 5
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 431, write pid:431
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 10128, 0
execute_one time: 0, 10128
2023/03/25 19:37:44 for select break: 1
2023/03/25 19:37:44 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30701, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2351
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:37:44 for select break: 1
2023/03/25 19:37:44 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6218, 10130, 0
before receive testcase: 0 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1136
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 139
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1580
----- executor 2 signal number : 33
executor 2 server cover_cnt 4 output_pos_value 3672
2023/03/25 19:37:44 for select break: 1
2023/03/25 19:37:44 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:37:44 for select break: 1
2023/03/25 19:37:44 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:37:44 wg wait finish
2023/03/25 19:37:44 ------ all executors finish execution
2023/03/25 19:37:44 exec time: 16350
2023/03/25 19:37:44 ----- PS len: 4
2023/03/25 19:37:44 [CLIENT] executor 3 has 11 replies
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 2003 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 410 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 [SERVER] executor 0 has 5 replies
2023/03/25 19:37:44 ------- fuzzer executor 0 receive 1126 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
time breakdown 2: 6219, 10132, 0
2023/03/25 19:37:44 [SERVER] executor 2 has 4 replies
2023/03/25 19:37:44 ------- fuzzer executor 2 receive 2351 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 2 receive 1136 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 2 receive 139 signal and 0 cover from userspace component
2023/03/25 19:37:44 ------- fuzzer executor 2 receive 33 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:37:44 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:37:44 fuzzer receive 20 signal and 0 cover from executor 3
time breakdown 3: 6221, 10129, 0
before receive testcase: 0 0
time breakdown 0: 6220, 10132, 0
before receive testcase: 0 0
2023/03/25 19:37:44 [SERVER] executor 1 has 0 replies
2023/03/25 19:37:44 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:37:44 ----- no new client coverage: false, true
2023/03/25 19:37:44 mutate testcase with failures
2023/03/25 19:37:44 ----- insertCall()
2023/03/25 19:37:44 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/25 19:37:44 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:37:44 disable threaded and collide
2023/03/25 19:37:44 prog length: 6
2023/03/25 19:37:44 prog length: 20
2023/03/25 19:37:44 HasCrashFail:true HasNetFail:false
19:37:44 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
r2 = open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=ANY=[@ANYBLOB="04149f0714050059181c4fe20bd3b81fd59e6736"], 0x14, 0x0)
fstat(r2, &(0x7f0000000cc0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000d40)='./file0/file0\x00', &(0x7f0000000d80)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000b40)='system.posix_acl_default\x00', &(0x7f0000000e00)={{}, {0x1, 0x4}, [{}, {0x2, 0x1}, {0x2, 0x2, r3}, {0x2, 0x6, 0xee01}, {0x2, 0x3, r4}], {0x4, 0x1}, [], {0x10, 0x5}}, 0x4c, 0x1)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 7152
remove dir: /root/orangefs-client/dfs-0-42
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 72
-----finish removing dir
receive_execute: 8, 91
receive_execute: 6, 91
receive_execute: 5, 92
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-43 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 92
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16337, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 5796, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2093
/root/orangefs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:37:44] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10027, 0, 0
execute_one loop: 0, 0, 10027
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 316
----- completed 7
execute_call 0, 10035, 0, 0
execute_one loop: 0, 0, 10035
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20063, 0, 0
execute_one loop: 0, 0, 20063
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 886 tid 886

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 886, pid 886, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:38:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20108, 0
execute_one time: 0, 20108
----- executor 3 write_call_output, size 0, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
[D 03/25/2023 18:38:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 91
----- completed 10
execute_call 0, 2021, 0, 2
execute_one loop: 0, 0, 2023
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 12
----- completed 11
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 433, write pid:433
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 22157, 0
execute_one time: 1, 22157
2023/03/25 19:38:06 for select break: 1
2023/03/25 19:38:06 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 101, 22159, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16346, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 25352, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:38:06 for select break: 1
2023/03/25 19:38:06 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 46
time breakdown 1: 99, 22162, 0
executor 2 server cover_cnt 4 output_pos_value 657
2023/03/25 19:38:06 for select break: 1
2023/03/25 19:38:06 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 97, 22162, 0
before receive testcase: 0 0
----- executor 0 signal number : 235
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 18300, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2524
2023/03/25 19:38:06 for select break: 1
2023/03/25 19:38:06 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:38:06 wg wait finish
2023/03/25 19:38:06 ------ all executors finish execution
2023/03/25 19:38:06 exec time: 22255
2023/03/25 19:38:06 ----- PS len: 4
2023/03/25 19:38:06 [SERVER] executor 0 has 9 replies
2023/03/25 19:38:06 [CLIENT] executor 3 has 20 replies
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 19:38:06 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 0: 97, 22163, 0
2023/03/25 19:38:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 235 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 19:38:06 fuzzer receive 316 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:06 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:06 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/25 19:38:06 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:38:06 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:06 ----- no new client coverage: false, true
2023/03/25 19:38:06 mutate testcase with failures
2023/03/25 19:38:06 ----- insertCall()
2023/03/25 19:38:06 ----- insertCall()
2023/03/25 19:38:06 ----- insertCall()
2023/03/25 19:38:06 ----- insertCall()
2023/03/25 19:38:06 ----- insertCall()
2023/03/25 19:38:06 ----- insertCall()
2023/03/25 19:38:06 ----- mutateArg()
2023/03/25 19:38:06 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:06 disable threaded and collide
2023/03/25 19:38:06 prog length: 6
2023/03/25 19:38:06 prog length: 20
2023/03/25 19:38:06 HasCrashFail:true HasNetFail:false
19:38:06 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0), 0x40)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001d40)=ANY=[@ANYBLOB="04131c01d88f9abef4373c2e5c3ff421119aed1312c8ace163b48c06eed3ed2b9776e48456d800aa85a87ecf866d38ce5447967aab3bab8d43c4919e9db45f9cf59181dd0b140080d666611a8c10fdfd9d3d33c04954b216509b974dc49a0584554ea190c0c6934ab8a0abe1468e0b85ea51bee58667a65e43c726cca6b6b528499a946e4403d9995569a9ab6c77503b95a5bac48af11bd3190d5d408b0480764423409358709b557b5d5042bfb98eac00000000000000000ea4232c8e095d592467c31a0f986a45ef578e"], 0x11, 0x0)
syz_failure_sync(0x0, 0x3)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4624
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/orangefs-client/dfs-0-43
remove dir time 18
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-44 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-44
receive_execute: 1, 34
receive_execute: 3, 32
receive_execute: 2, 34
receive_execute: 3, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20, 1, 0
execute_one loop: 0, 0, 21
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 12960, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3501, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 3591, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2112
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:38:06] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 309
----- completed 17
execute_call 0, 10029, 0, 1
execute_one loop: 0, 0, 10030
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10030, 0, 0
execute_one loop: 0, 0, 10030
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 902 tid 902

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 902, pid 902, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:38:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 0, 10082, 0
execute_one time: 0, 10082
2023/03/25 19:38:16 for select break: 1
2023/03/25 19:38:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 38, 10082, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7430, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 11433, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
2023/03/25 19:38:16 for select break: 1
2023/03/25 19:38:16 --------- executor 1 receive reply, reply.done 1
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10082, 0
execute_one time: 0, 10082
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 12996, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 3890, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 3663, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 2191
executor 2 server cover_cnt 4 output_pos_value 493
time breakdown 1: 35, 10084, 0
before receive testcase: 0 0
2023/03/25 19:38:16 for select break: 1
2023/03/25 19:38:16 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 36, 10085, 0
before receive testcase: 0 0
2023/03/25 19:38:16 for select break: 1
2023/03/25 19:38:16 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:38:16 wg wait finish
2023/03/25 19:38:16 ------ all executors finish execution
2023/03/25 19:38:16 exec time: 10120
2023/03/25 19:38:16 ----- PS len: 4
2023/03/25 19:38:16 [CLIENT] executor 3 has 20 replies
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:16 [SERVER] executor 0 has 8 replies
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 19:38:16 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:16 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:16 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 19:38:16 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/25 19:38:16 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:16 ----- no new client coverage: false, true
time breakdown 0: 36, 10085, 0
before receive testcase: 0 0
2023/03/25 19:38:16 mutate testcase with failures
2023/03/25 19:38:16 ----- mutateArg()
2023/03/25 19:38:16 ----- insertCall()
2023/03/25 19:38:16 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/25 19:38:16 ----- insertCall()
2023/03/25 19:38:16 ----- generateCall 200 fcntl$F_SET_FILE_RW_HINT fcntl$F_SET_FILE_RW_HINT
2023/03/25 19:38:16 ----- insertCall()
2023/03/25 19:38:16 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/25 19:38:16 ----- insertCall()
2023/03/25 19:38:16 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/25 19:38:16 HasCrashFail: false, .HasNetFail: true
2023/03/25 19:38:16 disable threaded and collide
2023/03/25 19:38:16 prog length: 6
2023/03/25 19:38:16 prog length: 14
2023/03/25 19:38:16 HasCrashFail:false HasNetFail:true
19:38:16 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000000)={0x0, <r0=>0x0})
fcntl$setownex(0xffffffffffffffff, 0xf, &(0x7f0000000040)={0x2, r0})
fstat(0xffffffffffffffff, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f0000000140)='system.posix_acl_default\x00', &(0x7f0000000500)={{}, {0x1, 0x5}, [{0x2, 0x3}, {0x2, 0x4, 0xffffffffffffffff}, {0x2, 0x3, 0xee01}, {0x2, 0x1, 0xee00}, {0x2, 0x6, r1}, {0x2, 0x5, 0xee00}, {}, {0x2, 0x1, r2}, {0x2, 0x6, 0xee00}], {0x4, 0x5}, [{0x8, 0x0, r3}, {}, {0x8, 0x1, r4}, {0x8, 0x2, 0xffffffffffffffff}, {0x8, 0x5, r5}, {0x8, 0x2, r6}, {0x8, 0x3, 0xee00}], {}, {0x20, 0x6}}, 0xa4, 0x3)
syz_failure_sync(0x1, 0x3)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f00000000c0), &(0x7f0000000100)={'L-', 0x4b8}, 0x16, 0x7)
r7 = open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
fcntl$F_SET_FILE_RW_HINT(r7, 0x40e, &(0x7f0000000080)=0x1)
---

end of program
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 4512
remove dir: /root/orangefs-client/dfs-0-44
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
executor 0: prog_data_offset 1312, prog_size 392
[D 03/25/2023 18:38:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2029
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-45 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-45
receive_execute: 3, 2043
receive_execute: 4, 2044
receive_execute: 3, 2044
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 4, 2046
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2009, 0
execute_one time: 1, 2009
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 18849, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 18849, flag collect 0
----- executor 3 signal number : 1119
----- completed 13
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2017, 0
execute_one time: 0, 2017
2023/03/25 19:38:21 for select break: 1
2023/03/25 19:38:21 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19425, flag collect 0
time breakdown 3: 2050, 2017, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1486, flag collect 0
----- executor 0 signal number : 281
----- executor 0 executes write_coverage_signal cov->size 2354, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2323
----- executor 2 executes write_coverage_signal cov->size 23072, flag collect 0
----- executor 2 signal number : 1218
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 10478, flag collect 0
----- executor 0 signal number : 46
2023/03/25 19:38:21 for select break: 1
2023/03/25 19:38:21 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 496
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 12610, flag collect 0
----- executor 2 signal number : 80
executor 2 server cover_cnt 4 output_pos_value 3921
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2048, 2021, 0
before receive testcase: 0 0
2023/03/25 19:38:21 for select break: 1
2023/03/25 19:38:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2046, 2023, 0
2023/03/25 19:38:21 for select break: 1
2023/03/25 19:38:21 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:38:21 wg wait finish
2023/03/25 19:38:21 ------ all executors finish execution
2023/03/25 19:38:21 exec time: 4066
2023/03/25 19:38:21 ----- PS len: 4
2023/03/25 19:38:21 [CLIENT] executor 3 has 14 replies
2023/03/25 19:38:21 [SERVER] executor 0 has 4 replies
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 2047, 2023, 0
2023/03/25 19:38:21 ------- fuzzer executor 0 receive 281 signal and 0 cover from userspace component
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
2023/03/25 19:38:21 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:21 ------- fuzzer executor 2 receive 2323 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:38:21 ------- fuzzer executor 2 receive 1218 signal and 0 cover from userspace component
2023/03/25 19:38:21 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/25 19:38:21 ------- fuzzer executor 2 receive 80 signal and 0 cover from userspace component
2023/03/25 19:38:21 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 1119 signal and 0 cover from executor 3
2023/03/25 19:38:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:21 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:21 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 19:38:21 mutate testcase with failures
2023/03/25 19:38:21 ----- insertCall()
2023/03/25 19:38:21 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/25 19:38:21 ----- insertCall()
2023/03/25 19:38:21 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 19:38:21 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:21 disable threaded and collide
2023/03/25 19:38:21 prog length: 6
2023/03/25 19:38:21 prog length: 6
2023/03/25 19:38:21 HasCrashFail:true HasNetFail:false
19:38:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000100)=@v3={0x3000000, [{0x0, 0x2}, {0x6, 0x3f}], r0}, 0x18, 0x1)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000140), &(0x7f0000000180)=@v1={0x2, "2492dc604f97552d946b194bf07be7d0f7b1"}, 0x13, 0x2)
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1200
remove dir: /root/orangefs-client/dfs-0-45
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 42
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-46 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-46
receive_execute: 4, 56
receive_execute: 2, 57
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 57
receive_execute: 2, 57
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:38:21] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 926 tid 926

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 926, pid 926, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:38:31] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2007
----- completed 4
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10068, 0
execute_one time: 0, 10068
[D 03/25/2023 18:38:31] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 142
----- completed 6
execute_call 0, 2051, 0, 1
execute_one loop: 0, 0, 2052
executor 3, execute_one inner time: 0, 12119, 0
execute_one time: 1, 12120
2023/03/25 19:38:33 for select break: 1
2023/03/25 19:38:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 63, 12121, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8916, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 13836, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 933
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 46
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 657
2023/03/25 19:38:33 for select break: 1
2023/03/25 19:38:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 60, 12124, 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 15456, flag collect 0
2023/03/25 19:38:33 for select break: 1
2023/03/25 19:38:33 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 0 signal number : 90
executor 0 server cover_cnt 5 output_pos_value 1562
2023/03/25 19:38:33 for select break: 1
2023/03/25 19:38:33 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:38:33 wg wait finish
2023/03/25 19:38:33 ------ all executors finish execution
2023/03/25 19:38:33 exec time: 12182
2023/03/25 19:38:33 ----- PS len: 4
2023/03/25 19:38:33 [SERVER] executor 0 has 5 replies
2023/03/25 19:38:33 ------- fuzzer executor 0 receive 933 signal and 0 cover from userspace component
2023/03/25 19:38:33 [CLIENT] executor 3 has 6 replies
2023/03/25 19:38:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:33 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:38:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:33 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
time breakdown 0: 59, 12124, 0
2023/03/25 19:38:33 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:33 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:33 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/25 19:38:33 fuzzer receive 2007 signal and 0 cover from executor 3
2023/03/25 19:38:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 19:38:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:33 fuzzer receive 142 signal and 0 cover from executor 3
2023/03/25 19:38:33 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 19:38:33 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/25 19:38:33 ------- fuzzer executor 0 receive 90 signal and 0 cover from userspace component
2023/03/25 19:38:33 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:38:33 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 19:38:33 ----- no new client coverage: false, true
2023/03/25 19:38:33 mutate testcase with failures
2023/03/25 19:38:33 ----- insertCall()
2023/03/25 19:38:33 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 19:38:33 HasCrashFail: false, .HasNetFail: true
2023/03/25 19:38:33 disable threaded and collide
2023/03/25 19:38:33 prog length: 6
2023/03/25 19:38:33 prog length: 4
2023/03/25 19:38:33 HasCrashFail:false HasNetFail:true
19:38:33 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f0000000080)={'-\xae'}, 0x3, 0x1)
syz_failure_sync(0x1, 0x3)
open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 608
remove dir: /root/orangefs-client/dfs-0-46
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
time breakdown 2: 59, 12123, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
remove dir time 33
-----finish removing dir
receive_execute: 3, 53
receive_execute: 3, 53
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-47 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-47
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 54
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 2, 53
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2010, 0
execute_one time: 1, 2010
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
cover_reset in execute_call
----- executor 3 write_call_output, size 19065, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 19065, flag collect 0
----- executor 3 signal number : 1120
----- completed 4
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
executor 3, execute_one inner time: 0, 2032, 0
execute_one time: 0, 2032
2023/03/25 19:38:35 for select break: 1
2023/03/25 19:38:35 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8753, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16573, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2404
----- executor 2 executes write_coverage_signal cov->size 10876, flag collect 0
----- executor 0 signal number : 1812
----- executor 0 executes write_coverage_signal cov->size 14506, flag collect 0
----- executor 0 signal number : 1092
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 941
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 142
----- executor 0 executes write_coverage_signal cov->size 11107, flag collect 0
----- executor 2 signal number : 278
----- executor 2 executes write_coverage_signal cov->size 11657, flag collect 0
----- executor 2 signal number : 77
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 3139
executor 2 server cover_cnt 4 output_pos_value 3713
2023/03/25 19:38:35 for select break: 1
2023/03/25 19:38:35 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:38:35 for select break: 1
2023/03/25 19:38:35 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:38:35 for select break: 1
2023/03/25 19:38:35 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 58, 2033, 0
before receive testcase: 0 0
2023/03/25 19:38:35 wg wait finish
2023/03/25 19:38:35 ------ all executors finish execution
2023/03/25 19:38:35 exec time: 2091
2023/03/25 19:38:35 ----- PS len: 4
2023/03/25 19:38:35 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:35 [CLIENT] executor 3 has 4 replies
2023/03/25 19:38:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:35 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:35 fuzzer receive 1120 signal and 0 cover from executor 3
2023/03/25 19:38:35 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:35 ------- fuzzer executor 2 receive 2404 signal and 0 cover from userspace component
2023/03/25 19:38:35 ------- fuzzer executor 2 receive 941 signal and 0 cover from userspace component
2023/03/25 19:38:35 ------- fuzzer executor 2 receive 278 signal and 0 cover from userspace component
2023/03/25 19:38:35 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/25 19:38:35 [SERVER] executor 0 has 4 replies
2023/03/25 19:38:35 ------- fuzzer executor 0 receive 1812 signal and 0 cover from userspace component
2023/03/25 19:38:35 ------- fuzzer executor 0 receive 1092 signal and 0 cover from userspace component
2023/03/25 19:38:35 ------- fuzzer executor 0 receive 142 signal and 0 cover from userspace component
2023/03/25 19:38:35 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
time breakdown 1: 56, 2035, 0
before receive testcase: 0 1
time breakdown 2: 56, 2036, 0
before receive testcase: 0 0
2023/03/25 19:38:35 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:35 ----- no new client coverage: false, true
2023/03/25 19:38:35 mutate testcase with failures
2023/03/25 19:38:35 ----- insertCall()
2023/03/25 19:38:35 ----- generateCall 2459 open$dir open$dir
2023/03/25 19:38:35 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:35 disable threaded and collide
2023/03/25 19:38:35 prog length: 6
2023/03/25 19:38:35 prog length: 20
2023/03/25 19:38:35 HasCrashFail:true HasNetFail:false
19:38:35 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
open$dir(&(0x7f0000002e00)='./file0/file0\x00', 0x141800, 0x110)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4464
remove dir: /root/orangefs-client/dfs-0-47
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 0: 55, 2037, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 2028
executor 3 create dir /root/orangefs-client/dfs-0-48 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-48
receive_execute: 6, 2056
receive_execute: 7, 2057
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
receive_execute: 5, 2057
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 2057
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 7
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 673 tid 673

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 673, pid 673, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:38:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 49, 0
execute_one time: 1, 49
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 60, 0
execute_one time: 1, 60
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 2064, 61, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1030, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 210
----- executor 2 signal number : 1439
----- executor 2 executes write_coverage_signal cov->size 13761, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 4167, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 3753, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2126
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 2061, 63, 0
time breakdown 2: 2062, 63, 0
before receive testcase: 0 1
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:38:37 wg wait finish
2023/03/25 19:38:37 ------ all executors finish execution
2023/03/25 19:38:37 exec time: 2121
2023/03/25 19:38:37 ----- PS len: 4
2023/03/25 19:38:37 [CLIENT] executor 3 has 20 replies
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 2062, 64, 0
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:37 [SERVER] executor 0 has 3 replies
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:38:37 [SERVER] executor 1 has 1 replies
2023/03/25 19:38:37 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 1439 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:38:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:37 ----- no new client coverage: false, true
2023/03/25 19:38:37 mutate testcase with failures
2023/03/25 19:38:37 ----- insertCall()
2023/03/25 19:38:37 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
before receive testcase: 0 0
2023/03/25 19:38:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:37 disable threaded and collide
2023/03/25 19:38:37 prog length: 6
2023/03/25 19:38:37 prog length: 14
2023/03/25 19:38:37 HasCrashFail:true HasNetFail:false
19:38:37 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x0, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$dupfd(r1, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2992
remove dir: /root/orangefs-client/dfs-0-48
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 21
-----finish removing dir
receive_execute: 2, 45
receive_execute: 2, 46
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-49 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-49
receive_execute: 2, 46
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 18483, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 18483, flag collect 0
----- executor 3 signal number : 3075
----- completed 5
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 9
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7086, flag collect 0
----- executor 1 signal number : 1240
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 172
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 46, flag collect 0
----- executor 1 signal number : 17
executor 1 server cover_cnt 4 output_pos_value 1530
-----executor 1 collect shmids 3
----- directly resend shmid 3
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 12
----- directly resend shmid 12
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 688 tid 688

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 688, pid 688, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:38:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 37, 0
execute_one time: 2, 37
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 443, write pid:443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 38, 0
execute_one time: 0, 38
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 51, 39, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 10346, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15775, flag collect 0
----- executor 0 signal number : 2220
----- executor 0 executes write_coverage_signal cov->size 6955, flag collect 0
----- executor 2 signal number : 2635
----- executor 2 executes write_coverage_signal cov->size 13548, flag collect 0
----- executor 0 signal number : 938
----- executor 0 executes write_coverage_signal cov->size 1785, flag collect 0
----- executor 0 signal number : 332
----- executor 0 executes write_coverage_signal cov->size 1212, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3578
----- executor 2 signal number : 1128
----- executor 2 executes write_coverage_signal cov->size 1992, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1455, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1905, flag collect 0
----- executor 2 signal number : 122
executor 2 server cover_cnt 5 output_pos_value 4268
before receive testcase: 0 0
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 47, 42, 0
before receive testcase: 0 0
----- executor 1 signal number : 874
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:38:37 for select break: 1
2023/03/25 19:38:37 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:38:37 wg wait finish
2023/03/25 19:38:37 ------ all executors finish execution
2023/03/25 19:38:37 exec time: 92
2023/03/25 19:38:37 ----- PS len: 4
2023/03/25 19:38:37 [CLIENT] executor 3 has 14 replies
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 3075 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:37 fuzzer receive 0 signal and 0 cover from executor 3
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 100, flag collect 0
----- executor 1 signal number : 9
executor 1 server cover_cnt 8 output_pos_value 2427
time breakdown 1: 48, 46, 0
before receive testcase: 0 1
2023/03/25 19:38:37 [SERVER] executor 0 has 4 replies
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 2220 signal and 0 cover from userspace component
2023/03/25 19:38:37 [SERVER] executor 1 has 8 replies
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 1240 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 172 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 874 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/25 19:38:37 [SERVER] executor 2 has 5 replies
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 2635 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 1128 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 938 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 332 signal and 0 cover from userspace component
2023/03/25 19:38:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 48, 42, 0
before receive testcase: 0 0
2023/03/25 19:38:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:37 ----- no new client coverage: false, true
2023/03/25 19:38:37 mutate testcase with failures
2023/03/25 19:38:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:37 disable threaded and collide
2023/03/25 19:38:37 prog length: 6
2023/03/25 19:38:37 prog length: 19
2023/03/25 19:38:37 HasCrashFail:true HasNetFail:false
19:38:37 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000002e00)=ANY=[@ANYBLOB="7379e834656d2e73656375726974792e73656c696e757800b788d9de9f659141e1b4ab66963eae26f5c7e72bf72c4762b9ad99f7f93ad8de9601e21ff8fff2f2974e34637bb12040d41f9ef399f9f02f356b9d74918c5571bf24549cc32dea148ec9c4d681d14c9d409ffc2acf342f2385753e830154ed29a17c0c6afa896105316f838c1b1a1dfba6afdfd7d3e3d779a5411a53717e035e12b79fda744a096c527537effa54ffb2cd52"], &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4432
remove dir: /root/orangefs-client/dfs-0-49
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 40
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:38:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:38:37] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:38:37] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:38:37] Error: Could not initialize server subsystems
[E 03/25/2023 18:38:37] Error: Could not initialize server; aborting.
[D 03/25/2023 18:38:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:38:37] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:38:37] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:38:37] Error: Could not initialize server subsystems
[E 03/25/2023 18:38:37] Error: Could not initialize server; aborting.
mkdir time 4041
executor 3 create dir /root/orangefs-client/dfs-0-50 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-50
receive_execute: 3, 4083
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 7, 4083
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 4082
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 7, 4085
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 703 tid 703

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 703, pid 703, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:38:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 3, execute_one inner time: 0, 49, 0
execute_one time: 0, 49
2023/03/25 19:38:41 for select break: 1
2023/03/25 19:38:41 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32756, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1030, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 0 signal number : 44
time breakdown 3: 4092, 50, 0
executor 0 server cover_cnt 3 output_pos_value 210
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 51, 0
execute_one time: 0, 51
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1435
----- executor 2 executes write_coverage_signal cov->size 12280, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 3564, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2122
time breakdown 0: 4090, 54, 0
2023/03/25 19:38:41 for select break: 1
2023/03/25 19:38:41 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 899
2023/03/25 19:38:41 for select break: 1
2023/03/25 19:38:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4090, 55, 0
before receive testcase: 0 0
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 19:38:41 for select break: 1
2023/03/25 19:38:41 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:38:41 wg wait finish
2023/03/25 19:38:41 ------ all executors finish execution
2023/03/25 19:38:41 exec time: 4140
2023/03/25 19:38:41 ----- PS len: 4
2023/03/25 19:38:41 [CLIENT] executor 3 has 19 replies
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:38:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:41 [SERVER] executor 2 has 4 replies
2023/03/25 19:38:41 ------- fuzzer executor 2 receive 1435 signal and 0 cover from userspace component
2023/03/25 19:38:41 [SERVER] executor 1 has 1 replies
2023/03/25 19:38:41 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/25 19:38:41 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/25 19:38:41 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:38:41 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/25 19:38:41 [SERVER] executor 0 has 3 replies
2023/03/25 19:38:41 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:38:41 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/25 19:38:41 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:38:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:41 ----- no new client coverage: false, true
2023/03/25 19:38:41 mutate testcase with failures
2023/03/25 19:38:41 ----- insertCall()
2023/03/25 19:38:41 ----- insertCall()
2023/03/25 19:38:41 ----- mutateArg()
2023/03/25 19:38:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:41 disable threaded and collide
2023/03/25 19:38:41 prog length: 6
2023/03/25 19:38:41 prog length: 22
2023/03/25 19:38:41 HasCrashFail:true HasNetFail:false
19:38:41 ---executing program 0:
---
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)=ANY=[@ANYBLOB="2321202e2f66696c65302023205d202b0a38b5ecf63cceb0b2e26ea32afc73d3a0466d50c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991637306c18a70000000000000cc05055352334a5ff0"], 0x5b)
syz_failure_sync(0x0, 0x3)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
syz_failure_sync(0x1, 0x3)
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x7}, {0x8, 0x5, 0xee01}, {0x8, 0x9}]}, 0x54, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4512
remove dir: /root/orangefs-client/dfs-0-50
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 248
time breakdown 1: 4086, 57, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 16
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:38:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:38:41] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:38:41] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:38:41] Error: Could not initialize server subsystems
[E 03/25/2023 18:38:41] Error: Could not initialize server; aborting.
receive_execute: 4, 2040
mkdir time 2024
executor 3 create dir /root/orangefs-client/dfs-0-51 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-51
receive_execute: 6, 2037
receive_execute: 5, 2040
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 2041
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 2 collect shmids 6
----- directly resend shmid 6
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 489 tid 489

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 489, pid 489, value 1

-----executor 2 collect shmids 7
----- directly resend shmid 7
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 18:38:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 5
----- directly resend shmid 5
-----executor 2 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 52, 0
execute_one time: 0, 52
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
time breakdown 3: 2048, 52, 0
2023/03/25 19:38:43 for select break: 1
2023/03/25 19:38:43 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:38:43 for select break: 1
2023/03/25 19:38:43 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1488, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1922, flag collect 0
----- executor 0 signal number : 394
----- executor 0 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 0 signal number : 75
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 2043, 54, 0
2023/03/25 19:38:43 for select break: 1
2023/03/25 19:38:43 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2201
time breakdown 0: 2044, 54, 0
before receive testcase: 0 0
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 53, 0
execute_one time: 0, 53
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 899
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 signal number : 766
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 681, flag collect 0
----- executor 2 signal number : 142
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 27
executor 2 server cover_cnt 5 output_pos_value 1868
2023/03/25 19:38:43 for select break: 1
2023/03/25 19:38:43 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:38:43 wg wait finish
2023/03/25 19:38:43 ------ all executors finish execution
2023/03/25 19:38:43 exec time: 2098
2023/03/25 19:38:43 ----- PS len: 4
2023/03/25 19:38:43 [CLIENT] executor 3 has 22 replies
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:43 [SERVER] executor 0 has 4 replies
2023/03/25 19:38:43 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 0 receive 394 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:38:43 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:43 [SERVER] executor 2 has 5 replies
2023/03/25 19:38:43 ------- fuzzer executor 2 receive 899 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 2 receive 766 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 2 receive 142 signal and 0 cover from userspace component
2023/03/25 19:38:43 ------- fuzzer executor 2 receive 27 signal and 0 cover from userspace component
2023/03/25 19:38:43 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:43 ----- no new client coverage: false, true
time breakdown 2: 2045, 58, 0
before receive testcase: 0 0
2023/03/25 19:38:43 mutate testcase with failures
2023/03/25 19:38:43 ----- mutateArg()
2023/03/25 19:38:43 ----- insertCall()
2023/03/25 19:38:43 ----- generateCall 2346 listxattr listxattr
2023/03/25 19:38:43 ----- insertCall()
2023/03/25 19:38:43 ----- generateCall 2343 link link
2023/03/25 19:38:43 ----- insertCall()
2023/03/25 19:38:43 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 19:38:43 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:43 disable threaded and collide
2023/03/25 19:38:43 prog length: 6
2023/03/25 19:38:43 prog length: 6
2023/03/25 19:38:43 HasCrashFail:true HasNetFail:false
19:38:43 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f00000009c0)='./file0\x00', 0x4)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000a00)={'#! ', './file0', [{0x20, '\\-\x7f+\\^%'}, {0x20, ']+/+'}, {0x20, '[*,-'}], 0xa, ""}, 0x101d)
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/105, 0x69)
syz_failure_sync(0x1, 0x3)
link(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100)='./file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5144
remove dir: /root/orangefs-client/dfs-0-51
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
-----executor 2 collect shmids 3
----- directly resend shmid 3
remove dir time 20
-----finish removing dir
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 18:38:43] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:38:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:38:43] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 18:38:43] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:38:43] Error: Could not initialize server subsystems
[E 03/25/2023 18:38:43] Error: Could not initialize server; aborting.
mkdir time 6043
executor 3 create dir /root/orangefs-client/dfs-0-52 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-52
receive_execute: 6, 6063
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 6064
receive_execute: 7, 6063
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 6061
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 6443, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 8051, 0, 0
execute_one loop: 0, 0, 8051
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8051, 0, 0
execute_one loop: 0, 0, 8052
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2590
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1151
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4121
Terminated
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 954 tid 954

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 954, pid 954, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:38:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 8080, 0
execute_one time: 1, 8080
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 18:38:57] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:38:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2007, 0, 0
execute_one loop: 0, 0, 2007
executor 3, execute_one inner time: 0, 10087, 0
execute_one time: 0, 10087
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 6072, 10088, 0
before receive testcase: 0 1
----- executor 0 signal number : 175
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:38:59 for select break: 1
2023/03/25 19:38:59 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:38:59 for select break: 1
2023/03/25 19:38:59 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 6066, 10090, 0
before receive testcase: 0 1
2023/03/25 19:38:59 for select break: 1
2023/03/25 19:38:59 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 115
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 6070, 10089, 0
before receive testcase: 0 1
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3
executor 0 server cover_cnt 9 output_pos_value 4452
2023/03/25 19:38:59 for select break: 1
2023/03/25 19:38:59 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:38:59 wg wait finish
2023/03/25 19:38:59 ------ all executors finish execution
2023/03/25 19:38:59 exec time: 16155
2023/03/25 19:38:59 ----- PS len: 4
2023/03/25 19:38:59 [CLIENT] executor 3 has 6 replies
2023/03/25 19:38:59 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:38:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:38:59 [SERVER] executor 0 has 9 replies
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 2590 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 1151 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 175 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 115 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 19:38:59 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
time breakdown 0: 6069, 10092, 0
before receive testcase: 0 0
2023/03/25 19:38:59 [SERVER] executor 1 has 0 replies
2023/03/25 19:38:59 [SERVER] executor 2 has 0 replies
2023/03/25 19:38:59 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:38:59 ----- no new client coverage: false, true
2023/03/25 19:38:59 mutate testcase with failures
2023/03/25 19:38:59 ----- insertCall()
2023/03/25 19:38:59 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/25 19:38:59 ----- insertCall()
2023/03/25 19:38:59 ----- mutateArg()
2023/03/25 19:38:59 ----- insertCall()
2023/03/25 19:38:59 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/25 19:38:59 ----- insertCall()
2023/03/25 19:38:59 ----- generateCall 2782 readv readv
2023/03/25 19:38:59 ----- insertCall()
2023/03/25 19:38:59 ----- insertCall()
2023/03/25 19:38:59 ----- generateCall 2462 openat openat
2023/03/25 19:38:59 ----- mutateArg()
2023/03/25 19:38:59 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:38:59 disable threaded and collide
2023/03/25 19:38:59 prog length: 6
2023/03/25 19:38:59 prog length: 10
2023/03/25 19:38:59 HasCrashFail:true HasNetFail:false
19:38:59 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
readv(0xffffffffffffffff, &(0x7f0000000380)=[{&(0x7f0000000240)=""/112, 0x70}, {&(0x7f00000002c0)=""/154, 0x9a}], 0x2)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
openat(r0, &(0x7f00000003c0)='./file0/file0\x00', 0x28000, 0x0)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x88, 0x2, 0x40, "9000dfbb6674f1390b11e510001214e9", "25ef0ae928eddeca78290808e7a62f61d95fc7511228731b9d200b2c2f229344fa4b2b19063f9e01bb86e1d031b93ff91286325a6da647c2fdfe2a4aaa556a856e33ac09af080b19eb4338cc5e7891c975c56daab0d1dc382f9348b5c66cb28a218c7d5e06d482dab0e074a0072867f40b8391"}, 0x88, 0x1)
syz_failure_sync(0x0, 0x3)
setxattr$security_selinux(&(0x7f0000000100)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x52)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000140)='./file0/file0\x00', &(0x7f0000000180)='security.SMACK64MMAP\x00', &(0x7f0000000200)={'\'$$)\x0e-'}, 0x7, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2160
remove dir: /root/orangefs-client/dfs-0-52
remove dir time 39
-----finish removing dir
receive_execute: 2, 2059
receive_execute: 5, 2059
receive_execute: 4, 2059
mkdir time 2020
executor 3 create dir /root/orangefs-client/dfs-0-53 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-53
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 2061
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:39:01] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2006
----- completed 7
execute_call 0, 10033, 0, 1
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10041, 0, 0
execute_one loop: 0, 0, 10041
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30113, 0, 0
execute_one loop: 0, 0, 30113
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 970 tid 970

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 970, pid 970, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:39:32] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30145, 0
execute_one time: 0, 30145
[D 03/25/2023 18:39:32] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2023, 0, 0
execute_one loop: 0, 0, 2023
executor 3, execute_one inner time: 0, 32167, 0
execute_one time: 0, 32167
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 939
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2064, 32170, 0
before receive testcase: 0 1
time breakdown 2: 2063, 32170, 0
before receive testcase: 0 1
time breakdown 3: 2066, 32168, 0
before receive testcase: 0 1
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 13173, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1561
time breakdown 0: 2062, 32171, 0
2023/03/25 19:39:34 for select break: 1
2023/03/25 19:39:34 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:39:34 for select break: 1
2023/03/25 19:39:34 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:39:34 for select break: 1
2023/03/25 19:39:34 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:39:34 for select break: 1
2023/03/25 19:39:34 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/25 19:39:34 wg wait finish
2023/03/25 19:39:34 ------ all executors finish execution
2023/03/25 19:39:34 exec time: 34235
2023/03/25 19:39:34 ----- PS len: 4
2023/03/25 19:39:34 [CLIENT] executor 3 has 10 replies
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 2006 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:34 [SERVER] executor 1 has 0 replies
2023/03/25 19:39:34 [SERVER] executor 0 has 5 replies
2023/03/25 19:39:34 [SERVER] executor 2 has 0 replies
2023/03/25 19:39:34 ------- fuzzer executor 0 receive 939 signal and 0 cover from userspace component
2023/03/25 19:39:34 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:39:34 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 19:39:34 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 19:39:34 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 19:39:34 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:39:34 ----- no new client coverage: false, true
2023/03/25 19:39:34 mutate testcase with failures
2023/03/25 19:39:34 ----- insertCall()
2023/03/25 19:39:34 ----- mutateArg()
2023/03/25 19:39:34 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:39:34 disable threaded and collide
2023/03/25 19:39:34 prog length: 6
2023/03/25 19:39:34 prog length: 22
2023/03/25 19:39:34 HasCrashFail:true HasNetFail:false
19:39:34 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
syz_failure_sync(0x1, 0x3)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440))
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_access\x00', &(0x7f00000004c0)={{}, {0x1, 0x1}, [], {0x4, 0x4}, [{}, {0x8, 0x5}, {0x8, 0x6, 0xee01}, {}], {0x10, 0x1}}, 0x44, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4552
remove dir: /root/orangefs-client/dfs-0-53
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 10191
executor 3 create dir /root/orangefs-client/dfs-0-54 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-54
receive_execute: 4, 10209
receive_execute: 7, 10209
receive_execute: 7, 10209
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 10210
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- executor 3 signal number : 2061
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 7, 1
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 789 tid 789

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 789, pid 789, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:39:44] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 451, write pid:451
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 0, 30
2023/03/25 19:39:44 for select break: 1
2023/03/25 19:39:44 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10216, 30, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1473, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2093
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 31, 0
execute_one time: 0, 31
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:39:44 for select break: 1
2023/03/25 19:39:44 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:39:44 for select break: 1
2023/03/25 19:39:44 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 10213, 33, 0
time breakdown 2: 10216, 33, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 19:39:44 for select break: 1
2023/03/25 19:39:44 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:39:44 wg wait finish
2023/03/25 19:39:44 ------ all executors finish execution
2023/03/25 19:39:44 exec time: 10243
2023/03/25 19:39:44 ----- PS len: 4
2023/03/25 19:39:44 [CLIENT] executor 3 has 22 replies
2023/03/25 19:39:44 [SERVER] executor 1 has 1 replies
2023/03/25 19:39:44 [SERVER] executor 2 has 0 replies
2023/03/25 19:39:44 [SERVER] executor 0 has 4 replies
2023/03/25 19:39:44 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 19:39:44 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 19:39:44 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:44 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:39:44 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:39:44 ----- no new client coverage: false, true
2023/03/25 19:39:44 mutate testcase with failures
2023/03/25 19:39:44 ----- insertCall()
2023/03/25 19:39:44 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 19:39:44 ----- insertCall()
2023/03/25 19:39:44 ----- generateCall 2723 pread64 pread64
2023/03/25 19:39:44 ----- insertCall()
2023/03/25 19:39:44 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 19:39:44 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:39:44 disable threaded and collide
2023/03/25 19:39:44 prog length: 6
2023/03/25 19:39:44 prog length: 16
2023/03/25 19:39:44 HasCrashFail:true HasNetFail:false
19:39:44 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x0, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
syz_failure_sync(0x1, 0x3)
pread64(r1, &(0x7f00000004c0)=""/19, 0x13, 0x40)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000440), &(0x7f0000000480), 0x4, 0x1)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3360
remove dir: /root/orangefs-client/dfs-0-54
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 10216, 33, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 23
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:39:44] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:39:44] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:39:44] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:39:44] Error: Could not initialize server subsystems
[E 03/25/2023 18:39:44] Error: Could not initialize server; aborting.
mkdir time 14192
executor 3 create dir /root/orangefs-client/dfs-0-55 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-55
receive_execute: 1, 14216
receive_execute: 2, 14215
receive_execute: 2, 14215
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 14217
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 6443, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2061
----- completed 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 9381, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 9381, flag collect 0
----- executor 3 signal number : 1109
----- completed 12
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 805 tid 805

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 805, pid 805, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:39:58] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 42, 0
execute_one time: 0, 42
-----executor 0 collect shmids 6
----- directly resend shmid 6
----- executor 3 write_call_output, size 5784, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 5784, flag collect 0
----- executor 3 signal number : 102
----- completed 14
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 49, 0
execute_one time: 0, 49
2023/03/25 19:39:58 for select break: 1
2023/03/25 19:39:58 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 14221, 51, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 25419, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 3137
----- executor 0 executes write_coverage_signal cov->size 20759, flag collect 0
2023/03/25 19:39:58 for select break: 1
2023/03/25 19:39:58 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 14217, 54, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 19:39:58 for select break: 1
2023/03/25 19:39:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14217, 54, 0
2023/03/25 19:39:58 for select break: 1
2023/03/25 19:39:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:39:58 wg wait finish
2023/03/25 19:39:58 ------ all executors finish execution
2023/03/25 19:39:58 exec time: 14270
2023/03/25 19:39:58 ----- PS len: 4
2023/03/25 19:39:58 [CLIENT] executor 3 has 16 replies
2023/03/25 19:39:58 [SERVER] executor 1 has 1 replies
2023/03/25 19:39:58 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
----- executor 0 signal number : 1273
----- executor 0 executes write_coverage_signal cov->size 2746, flag collect 0
----- executor 0 signal number : 303
----- executor 0 executes write_coverage_signal cov->size 2636, flag collect 0
----- executor 0 signal number : 84
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 140
----- executor 0 executes write_coverage_signal cov->size 367, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 6 output_pos_value 4960
2023/03/25 19:39:58 [SERVER] executor 0 has 6 replies
2023/03/25 19:39:58 ------- fuzzer executor 0 receive 3137 signal and 0 cover from userspace component
2023/03/25 19:39:58 ------- fuzzer executor 0 receive 1273 signal and 0 cover from userspace component
2023/03/25 19:39:58 ------- fuzzer executor 0 receive 303 signal and 0 cover from userspace component
2023/03/25 19:39:58 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/25 19:39:58 ------- fuzzer executor 0 receive 140 signal and 0 cover from userspace component
2023/03/25 19:39:58 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 19:39:58 [SERVER] executor 2 has 0 replies
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 1109 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:39:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:39:58 ----- no new client coverage: false, true
time breakdown 0: 14217, 54, 0
before receive testcase: 0 0
2023/03/25 19:39:58 mutate testcase with failures
2023/03/25 19:39:58 ----- mutateArg()
2023/03/25 19:39:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:39:58 disable threaded and collide
2023/03/25 19:39:58 prog length: 6
2023/03/25 19:39:58 prog length: 22
2023/03/25 19:39:58 HasCrashFail:true HasNetFail:false
19:39:58 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xfffffffffffffca7, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
syz_failure_sync(0x0, 0x3)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
syz_failure_sync(0x1, 0x3)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4856
remove dir: /root/orangefs-client/dfs-0-55
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 48
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:39:58] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:39:58] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:39:58] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:39:58] Error: Could not initialize server subsystems
[E 03/25/2023 18:39:58] Error: Could not initialize server; aborting.
mkdir time 6030
executor 3 create dir /root/orangefs-client/dfs-0-56 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-56
receive_execute: 2, 6078
receive_execute: 1, 6078
receive_execute: 2, 6078
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 6079
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 6439, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 signal number : 2059
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 821 tid 821

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 821, pid 821, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:40:04] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 29, 0
execute_one time: 0, 29
2023/03/25 19:40:04 for select break: 1
2023/03/25 19:40:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6082, 30, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:40:04 for select break: 1
2023/03/25 19:40:04 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1464, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2096
time breakdown 0: 6079, 32, 0
before receive testcase: 0 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 25, 0
execute_one time: 3, 26
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 19:40:04 for select break: 1
2023/03/25 19:40:04 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:40:04 for select break: 1
2023/03/25 19:40:04 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:40:04 wg wait finish
2023/03/25 19:40:04 ------ all executors finish execution
2023/03/25 19:40:04 exec time: 6111
2023/03/25 19:40:04 ----- PS len: 4
2023/03/25 19:40:04 [CLIENT] executor 3 has 22 replies
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:04 [SERVER] executor 0 has 4 replies
2023/03/25 19:40:04 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 19:40:04 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:40:04 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:40:04 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 6080, 32, 0
before receive testcase: 0 0
2023/03/25 19:40:04 [SERVER] executor 2 has 0 replies
2023/03/25 19:40:04 [SERVER] executor 1 has 1 replies
2023/03/25 19:40:04 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:40:04 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:40:04 ----- no new client coverage: false, true
2023/03/25 19:40:04 mutate testcase with failures
2023/03/25 19:40:04 ----- insertCall()
2023/03/25 19:40:04 ----- generateCall 170 dup dup
2023/03/25 19:40:04 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:40:04 disable threaded and collide
2023/03/25 19:40:04 prog length: 6
2023/03/25 19:40:04 prog length: 4
2023/03/25 19:40:04 HasCrashFail:true HasNetFail:false
19:40:04 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = open(&(0x7f0000000380)='./file0\x00', 0x119040, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
dup(r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 360
remove dir: /root/orangefs-client/dfs-0-56
time breakdown 1: 6080, 32, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 10
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:40:04] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:40:04] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:40:04] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:40:04] Error: Could not initialize server subsystems
[E 03/25/2023 18:40:04] Error: Could not initialize server; aborting.
mkdir time 2032
executor 3 create dir /root/orangefs-client/dfs-0-57 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-57
receive_execute: 2, 2042
receive_execute: 2, 2041
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 2042
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 2042
----- executor 3 write_call_output, size 18446, pid 457, write pid:457
----- executor 3 executes write_coverage_signal cov->size 18446, flag collect 0
----- executor 3 signal number : 3065
----- completed 1
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
executor 3 waits for recv msg
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13577, flag collect 0
----- executor 0 signal number : 2212
----- executor 0 executes write_coverage_signal cov->size 19168, flag collect 0
----- executor 0 signal number : 1230
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 285
----- executor 0 executes write_coverage_signal cov->size 1733, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3816
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 457, write pid:457
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 994 tid 994

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 994, pid 994, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:40:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 457, write pid:457
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 457, write pid:457
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 27, 0
execute_one time: 0, 28
2023/03/25 19:40:06 for select break: 1
2023/03/25 19:40:06 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2045, 28, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 19:40:06 for select break: 1
2023/03/25 19:40:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2043, 30, 0
2023/03/25 19:40:06 for select break: 1
2023/03/25 19:40:06 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:40:06 for select break: 1
2023/03/25 19:40:06 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:40:06 wg wait finish
2023/03/25 19:40:06 ------ all executors finish execution
2023/03/25 19:40:06 exec time: 2074
2023/03/25 19:40:06 ----- PS len: 4
2023/03/25 19:40:06 [CLIENT] executor 3 has 4 replies
2023/03/25 19:40:06 [SERVER] executor 1 has 0 replies
2023/03/25 19:40:06 fuzzer receive 3065 signal and 0 cover from executor 3
2023/03/25 19:40:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:06 [SERVER] executor 0 has 8 replies
2023/03/25 19:40:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 2212 signal and 0 cover from userspace component
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 1230 signal and 0 cover from userspace component
2023/03/25 19:40:06 [SERVER] executor 2 has 0 replies
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 285 signal and 0 cover from userspace component
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 768 signal and 0 cover from userspace component
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 98 signal and 0 cover from userspace component
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 37 signal and 0 cover from userspace component
2023/03/25 19:40:06 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
time breakdown 2: 2044, 31, 0
before receive testcase: 0 0
before receive testcase: 0 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 28, 0
execute_one time: 0, 28
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 768
----- executor 0 executes write_coverage_signal cov->size 19192, flag collect 0
----- executor 0 signal number : 98
----- executor 0 executes write_coverage_signal cov->size 1424, flag collect 0
----- executor 0 signal number : 37
----- executor 0 executes write_coverage_signal cov->size 1805, flag collect 0
----- executor 0 signal number : 13
executor 0 server cover_cnt 8 output_pos_value 4744
-----executor 0 collect shmids 0
----- directly resend shmid 0
time breakdown 0: 2044, 30, 0
before receive testcase: 0 0
2023/03/25 19:40:06 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:40:06 ----- no new client coverage: false, true
2023/03/25 19:40:06 mutate testcase with failures
2023/03/25 19:40:06 ----- insertCall()
2023/03/25 19:40:06 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 19:40:06 ----- mutateArg()
2023/03/25 19:40:06 HasCrashFail: true, .HasNetFail: true
2023/03/25 19:40:06 disable threaded and collide
2023/03/25 19:40:06 prog length: 6
2023/03/25 19:40:06 prog length: 6
2023/03/25 19:40:06 prog length: 6
2023/03/25 19:40:06 prog length: 9
2023/03/25 19:40:06 HasCrashFail:true HasNetFail:true
19:40:06 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
symlink(&(0x7f00000015c0)='./file1\x00', &(0x7f0000001600)='./file1\x00')
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x4, 0x3)
syz_failure_sync(0x1, 0x3)
syz_failure_sync(0x5, 0x3)
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x3, 0x3)
lgetxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=@known='system.advise\x00', &(0x7f0000000080)=""/116, 0x74)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 2368, prog_size 984
remove dir: /root/orangefs-client/dfs-0-57
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 560
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 18:40:06] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:40:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2074
-----finish removing dir
mkdir time 14197
executor 3 create dir /root/orangefs-client/dfs-0-58 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-58
receive_execute: 5, 16273
receive_execute: 6, 16273
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 7, 16273
receive_execute: 4, 16273
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6447, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 34, 0, 0
execute_one loop: 0, 0, 34
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28991, flag collect 0
----- executor 0 signal number : 2535
----- executor 0 executes write_coverage_signal cov->size 17095, flag collect 0
----- executor 0 signal number : 1130
----- executor 0 executes write_coverage_signal cov->size 3318, flag collect 0
----- executor 0 signal number : 306
----- executor 0 executes write_coverage_signal cov->size 2695, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4065
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 48, 0, 0
execute_one loop: 0, 0, 48
executor 2 write_server_output
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
executor 2 server cover_cnt 0 output_pos_value 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1009 tid 1009

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1009, pid 1009, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:40:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 70, 0
execute_one time: 1, 70
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 515 tid 515

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 515, pid 515, value 1

-----executor 2 collect shmids 0
----- directly resend shmid 0
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 18:40:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 89, 0
execute_one time: 2, 89
[E 03/25/2023 18:40:23] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:40:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 333
----- completed 7
execute_call 0, 24, 0, 2
execute_one loop: 0, 0, 26
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 81, 0, 0
execute_one loop: 0, 0, 81
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:40:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:40:23] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 18:40:23] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:40:23] Error: Could not initialize server subsystems
[E 03/25/2023 18:40:23] Error: Could not initialize server; aborting.
execute_call 0, 2006, 0, 0
execute_one loop: 0, 0, 2006
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2122, 0
execute_one time: 0, 2122
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2006, 0, 0
execute_one loop: 0, 0, 2006
cover_reset in execute_call
----- executor 3 write_call_output, size 4672, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 4672, flag collect 0
----- executor 3 signal number : 53
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 2125, 0
execute_one time: 1, 2126
2023/03/25 19:40:25 for select break: 1
2023/03/25 19:40:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16280, 2128, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:40:25 for select break: 1
2023/03/25 19:40:25 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 965
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 16279, 2128, 0
before receive testcase: 0 0
----- executor 0 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 14648, flag collect 0
----- executor 0 signal number : 13
executor 0 server cover_cnt 9 output_pos_value 5394
----- executor 2 signal number : 899
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 231
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:40:25 for select break: 1
2023/03/25 19:40:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16278, 2130, 0
before receive testcase: 0 0
----- executor 2 signal number : 89
----- executor 2 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 2 signal number : 54
executor 2 server cover_cnt 5 output_pos_value 1294
2023/03/25 19:40:25 for select break: 1
2023/03/25 19:40:25 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:40:25 wg wait finish
2023/03/25 19:40:25 ------ all executors finish execution
2023/03/25 19:40:25 exec time: 18406
2023/03/25 19:40:25 ----- PS len: 4
2023/03/25 19:40:25 [CLIENT] executor 3 has 9 replies
2023/03/25 19:40:25 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:25 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/25 19:40:25 [SERVER] executor 0 has 9 replies
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 2535 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 1130 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 965 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:40:25 [SERVER] executor 1 has 0 replies
2023/03/25 19:40:25 [SERVER] executor 2 has 5 replies
2023/03/25 19:40:25 ------- fuzzer executor 2 receive 899 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 2 receive 231 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 2 receive 89 signal and 0 cover from userspace component
2023/03/25 19:40:25 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/25 19:40:25 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:40:25 ----- no new client coverage: false, true
2023/03/25 19:40:25 mutate testcase with failures
2023/03/25 19:40:25 ----- insertCall()
2023/03/25 19:40:25 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/25 19:40:25 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:40:25 disable threaded and collide
2023/03/25 19:40:25 prog length: 6
2023/03/25 19:40:25 prog length: 15
2023/03/25 19:40:25 HasCrashFail:true HasNetFail:false
19:40:25 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r3 = open$dir(&(0x7f0000000440)='./file0\x00', 0x8100, 0xa3)
fcntl$setstatus(r3, 0x4, 0x800)
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
time breakdown 2: 16277, 2133, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3104
remove dir: /root/orangefs-client/dfs-0-58
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 2037
-----finish removing dir
receive_execute: 7, 2062
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-59 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-59
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 2062
receive_execute: 9, 2062
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
receive_execute: 6, 2061
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6443, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13556, flag collect 0
----- executor 0 signal number : 2213
----- executor 0 executes write_coverage_signal cov->size 19127, flag collect 0
----- executor 0 signal number : 1223
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 284
----- executor 0 executes write_coverage_signal cov->size 1733, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3809
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1025 tid 1025

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1025, pid 1025, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:40:27] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 35, 0
execute_one time: 2, 35
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:40:27] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:40:27] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9621, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 9621, flag collect 0
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 signal number : 1119
----- completed 14
execute_call 0, 20, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2069, 0
execute_one time: 1, 2069
2023/03/25 19:40:29 for select break: 1
2023/03/25 19:40:29 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2071, 2071, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 19:40:29 for select break: 1
2023/03/25 19:40:29 --------- executor 2 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 781
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 2065, 2071, 0
before receive testcase: 0 0
time breakdown 1: 2069, 2072, 0
----- executor 0 signal number : 215
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:40:29 for select break: 1
2023/03/25 19:40:29 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 41
----- executor 0 executes write_coverage_signal cov->size 15612, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 128
executor 0 server cover_cnt 10 output_pos_value 5020
2023/03/25 19:40:29 for select break: 1
2023/03/25 19:40:29 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:40:29 wg wait finish
2023/03/25 19:40:29 ------ all executors finish execution
2023/03/25 19:40:29 exec time: 4137
2023/03/25 19:40:29 ----- PS len: 4
2023/03/25 19:40:29 [CLIENT] executor 3 has 15 replies
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 1119 signal and 0 cover from executor 3
2023/03/25 19:40:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:29 [SERVER] executor 0 has 10 replies
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 2213 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 1223 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 284 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 781 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 41 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/25 19:40:29 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/25 19:40:29 [SERVER] executor 1 has 0 replies
2023/03/25 19:40:29 [SERVER] executor 2 has 0 replies
time breakdown 0: 2067, 2075, 0
2023/03/25 19:40:29 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:40:29 ----- no new client coverage: false, true
2023/03/25 19:40:29 mutate testcase with failures
2023/03/25 19:40:29 ----- insertCall()
2023/03/25 19:40:29 ----- generateCall 2374 mkdirat mkdirat
2023/03/25 19:40:29 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:40:29 disable threaded and collide
2023/03/25 19:40:29 prog length: 6
2023/03/25 19:40:29 prog length: 5
2023/03/25 19:40:29 HasCrashFail:true HasNetFail:false
19:40:29 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f00000009c0)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x400800, 0x80)
mkdirat(r0, &(0x7f0000000040)='./file0\x00', 0x6c)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 560
remove dir: /root/orangefs-client/dfs-0-59
----- executor 1 receive testcase
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 44
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-60 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-60
receive_execute: 2, 56
receive_execute: 4, 56
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 56
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
receive_execute: 4, 56
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 2029, 0, 0
execute_one loop: 0, 0, 2029
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2770
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 6443, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2029, 0, 0
execute_one loop: 0, 0, 2029
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 1244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 14592, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4400
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1042 tid 1042

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1042, pid 1042, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:40:31] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2063, 0
execute_one time: 0, 2063
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 2063, 0
execute_one time: 0, 2063
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:40:31 for select break: 1
2023/03/25 19:40:31 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 61, 2064, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 233
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:40:31 for select break: 1
2023/03/25 19:40:31 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 171
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 14718, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 8 output_pos_value 4848
2023/03/25 19:40:31 for select break: 1
2023/03/25 19:40:31 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 58, 2067, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 60, 2066, 0
before receive testcase: 0 0
2023/03/25 19:40:31 for select break: 1
2023/03/25 19:40:31 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:40:31 wg wait finish
2023/03/25 19:40:31 ------ all executors finish execution
2023/03/25 19:40:31 exec time: 2128
2023/03/25 19:40:31 ----- PS len: 4
2023/03/25 19:40:31 [CLIENT] executor 3 has 5 replies
2023/03/25 19:40:31 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:40:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:31 [SERVER] executor 0 has 8 replies
2023/03/25 19:40:31 [SERVER] executor 1 has 0 replies
2023/03/25 19:40:31 [SERVER] executor 2 has 0 replies
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 2770 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 1244 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 233 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 171 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 19:40:31 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 19:40:31 fuzzer receive 0 signal and 0 cover from executor 3
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
2023/03/25 19:40:31 fsMds: [map[] map[] map[] map[]]
-----executor 0 collect shmids 1
----- directly resend shmid 1
2023/03/25 19:40:31 ----- no new client coverage: false, true
time breakdown 2: 60, 2072, 0
before receive testcase: 0 0
2023/03/25 19:40:31 mutate testcase with failures
2023/03/25 19:40:31 ----- insertCall()
2023/03/25 19:40:31 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 19:40:31 HasCrashFail: false, .HasNetFail: true
2023/03/25 19:40:31 disable threaded and collide
2023/03/25 19:40:31 prog length: 6
2023/03/25 19:40:31 prog length: 4
2023/03/25 19:40:31 HasCrashFail:false HasNetFail:true
19:40:31 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.6 -j DROP;iptables -A OUTPUT -d 192.168.0.6 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lgetxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=@known='trusted.syz\x00', &(0x7f0000000080)=""/130, 0x82)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f0000000280)='./file1\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 472
remove dir: /root/orangefs-client/dfs-0-60
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
[E 03/25/2023 18:40:31] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:40:31] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2072
-----finish removing dir
mkdir time 2035
executor 3 create dir /root/orangefs-client/dfs-0-61 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-61
receive_execute: 7, 4107
receive_execute: 8, 4108
receive_execute: 3, 4107
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 10, 4108
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 463, write pid:463
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 463, write pid:463
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2014, 0
execute_one time: 1, 2014
----- executor 3 write_call_output, size 0, pid 463, write pid:463
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 463, write pid:463
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 655
----- completed 4
execute_call 0, 8054, 0, 0
execute_one loop: 0, 0, 8054
executor 3, execute_one inner time: 0, 10067, 0
execute_one time: 1, 10067
2023/03/25 19:40:45 for select break: 1
2023/03/25 19:40:45 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 4118, 10070, 0
before receive testcase: 0 0
----- executor 0 signal number : 2164
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:40:45 for select break: 1
2023/03/25 19:40:45 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4110, 10071, 0
before receive testcase: 0 0
2023/03/25 19:40:45 for select break: 1
2023/03/25 19:40:45 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1123
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 4116, 10072, 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3668
2023/03/25 19:40:45 for select break: 1
2023/03/25 19:40:45 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:40:45 wg wait finish
2023/03/25 19:40:45 ------ all executors finish execution
2023/03/25 19:40:45 exec time: 14181
2023/03/25 19:40:45 ----- PS len: 4
2023/03/25 19:40:45 [CLIENT] executor 3 has 4 replies
2023/03/25 19:40:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:45 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:40:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:40:45 fuzzer receive 655 signal and 0 cover from executor 3
2023/03/25 19:40:45 [SERVER] executor 1 has 0 replies
2023/03/25 19:40:45 [SERVER] executor 0 has 4 replies
2023/03/25 19:40:45 ------- fuzzer executor 0 receive 2164 signal and 0 cover from userspace component
2023/03/25 19:40:45 [SERVER] executor 2 has 0 replies
2023/03/25 19:40:45 ------- fuzzer executor 0 receive 1123 signal and 0 cover from userspace component
2023/03/25 19:40:45 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 19:40:45 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 0: 4114, 10074, 0
before receive testcase: 0 0
2023/03/25 19:40:45 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:40:45 ----- no new client coverage: false, true
2023/03/25 19:40:45 mutate testcase with failures
2023/03/25 19:40:45 ----- insertCall()
2023/03/25 19:40:45 ----- generateCall 516 getxattr getxattr
2023/03/25 19:40:45 ----- mutateArg()
2023/03/25 19:40:45 ----- insertCall()
2023/03/25 19:40:45 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:40:45 ----- insertCall()
2023/03/25 19:40:45 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:40:45 ----- insertCall()
2023/03/25 19:40:45 ----- generateCall 2344 linkat linkat
2023/03/25 19:40:45 ----- insertCall()
2023/03/25 19:40:45 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:40:45 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:40:45 disable threaded and collide
2023/03/25 19:40:45 prog length: 6
2023/03/25 19:40:45 prog length: 15
2023/03/25 19:40:45 HasCrashFail:true HasNetFail:false
19:40:45 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
getxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='trusted.overlay.nlink\x00', &(0x7f0000000100)=""/59, 0x3b)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000180)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000002c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000001c0)='./binderfs\x00', 0x1ff)
r0 = open$dir(&(0x7f0000000140)='./file0\x00', 0x400000, 0x1)
r1 = open$dir(&(0x7f0000000200)='./file0\x00', 0x20080, 0xa0)
linkat(r1, &(0x7f0000000240)='./file0\x00', r0, &(0x7f0000000280)='./file0\x00', 0x1000)
r2 = dup2(r0, 0xffffffffffffffff)
fcntl$addseals(r2, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2208
remove dir: /root/orangefs-client/dfs-0-61
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 31
-----finish removing dir
mkdir time 4035
executor 3 create dir /root/orangefs-client/dfs-0-62 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-62
receive_execute: 3, 4066
receive_execute: 3, 4066
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 4066
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 4066
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6443, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4085, flag collect 0
----- executor 0 signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 1440, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2082
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:40:49] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10046, 0, 0
execute_one loop: 0, 0, 10046
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10047
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1065 tid 1065

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1065, pid 1065, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:40:59] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 315
----- completed 4
execute_call 0, 22, 0, 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10084, 0
execute_one time: 1, 10084
[D 03/25/2023 18:40:59] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 117
----- completed 5
execute_call 0, 4058, 0, 1
execute_one loop: 0, 0, 4059
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 11471, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 11471, flag collect 0
----- executor 3 signal number : 656
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 11471, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 11471, flag collect 0
----- executor 3 signal number : 65
----- completed 9
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 27
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 465, write pid:465
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 18
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 14158, 0
execute_one time: 1, 14158
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 4069, 14162, 0
before receive testcase: 0 1
2023/03/25 19:41:03 for select break: 1
2023/03/25 19:41:03 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 4070, 14161, 0
before receive testcase: 0 1
2023/03/25 19:41:03 for select break: 1
2023/03/25 19:41:03 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 567
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 28
----- executor 0 executes write_coverage_signal cov->size 30287, flag collect 0
----- executor 0 signal number : 21
executor 0 server cover_cnt 9 output_pos_value 2856
time breakdown 0: 4067, 14166, 0
before receive testcase: 0 0
2023/03/25 19:41:03 for select break: 1
2023/03/25 19:41:03 --------- executor 3 receive reply, reply.done 1
2023/03/25 19:41:03 for select break: 1
2023/03/25 19:41:03 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:41:03 wg wait finish
2023/03/25 19:41:03 ------ all executors finish execution
2023/03/25 19:41:03 exec time: 18234
2023/03/25 19:41:03 ----- PS len: 4
2023/03/25 19:41:03 [CLIENT] executor 3 has 15 replies
2023/03/25 19:41:03 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 315 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 656 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:03 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 19:41:03 [SERVER] executor 0 has 9 replies
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 1404 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 567 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 28 signal and 0 cover from userspace component
2023/03/25 19:41:03 ------- fuzzer executor 0 receive 21 signal and 0 cover from userspace component
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 19:41:03 [SERVER] executor 1 has 0 replies
2023/03/25 19:41:03 [SERVER] executor 2 has 0 replies
2023/03/25 19:41:03 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:41:03 ----- no new client coverage: false, true
2023/03/25 19:41:03 mutate testcase with failures
2023/03/25 19:41:03 ----- insertCall()
2023/03/25 19:41:03 ----- generateCall 2750 pwritev pwritev
2023/03/25 19:41:03 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:41:03 disable threaded and collide
2023/03/25 19:41:03 prog length: 6
2023/03/25 19:41:03 prog length: 5
2023/03/25 19:41:03 HasCrashFail:true HasNetFail:false
19:41:03 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
open$dir(&(0x7f0000000340)='./file0\x00', 0x101240, 0x0)
pwritev(r0, &(0x7f00000000c0)=[{&(0x7f0000000040)="f54f4e517ca70b82506a8a47f3c4a5f86bda37c387b8395179ad23da40b103037d1a157d1f9279785650ba80bbc1b67cafa6e654ed06a21eb656af6d05aad12fb7f9d2eddcb55cc622413faea71f0c7834fc820d567e2b3dc0f46a", 0x5b}], 0x1, 0x10001, 0x4)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 800
remove dir: /root/orangefs-client/dfs-0-62
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 4069, 14167, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 29
executor 3 create dir /root/orangefs-client/dfs-0-63 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-63
receive_execute: 6, 61
receive_execute: 1, 61
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 61
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 61
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 467, write pid:467
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1082 tid 1082

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1082, pid 1082, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:41:03] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 28, 0
execute_one time: 0, 28
----- executor 3 write_call_output, size 0, pid 467, write pid:467
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 18:41:03] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:41:03] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 467, write pid:467
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2011, 0, 0
execute_one loop: 0, 0, 2011
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 467, write pid:467
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2002
----- completed 4
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 467, write pid:467
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2054, 0
execute_one time: 1, 2054
2023/03/25 19:41:06 for select break: 1
2023/03/25 19:41:06 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 69, 2056, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:41:06 for select break: 1
2023/03/25 19:41:06 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 67, 2058, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1298
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14211, flag collect 0
----- executor 0 signal number : 90
executor 0 server cover_cnt 5 output_pos_value 1799
2023/03/25 19:41:06 for select break: 1
2023/03/25 19:41:06 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:41:06 for select break: 1
2023/03/25 19:41:06 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:41:06 wg wait finish
2023/03/25 19:41:06 ------ all executors finish execution
2023/03/25 19:41:06 exec time: 2120
2023/03/25 19:41:06 ----- PS len: 4
2023/03/25 19:41:06 [CLIENT] executor 3 has 5 replies
2023/03/25 19:41:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:06 fuzzer receive 2002 signal and 0 cover from executor 3
2023/03/25 19:41:06 [SERVER] executor 0 has 5 replies
2023/03/25 19:41:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:06 [SERVER] executor 1 has 0 replies
time breakdown 0: 64, 2059, 0
2023/03/25 19:41:06 [SERVER] executor 2 has 0 replies
2023/03/25 19:41:06 ------- fuzzer executor 0 receive 1298 signal and 0 cover from userspace component
2023/03/25 19:41:06 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:41:06 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 19:41:06 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 19:41:06 ------- fuzzer executor 0 receive 90 signal and 0 cover from userspace component
time breakdown 1: 62, 2059, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 19:41:06 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 19:41:06 ----- no new client coverage: false, true
2023/03/25 19:41:06 ----- enqueue testcases with server coveraged
2023/03/25 19:41:06 disable threaded and collide
2023/03/25 19:41:06 prog length: 6
2023/03/25 19:41:06 prog length: 5
2023/03/25 19:41:06 HasCrashFail:true HasNetFail:false
19:41:06 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
open$dir(&(0x7f0000000340)='./file0\x00', 0x101240, 0x0)
pwritev(r0, &(0x7f00000000c0)=[{&(0x7f0000000040)="f54f4e517ca70b82506a8a47f3c4a5f86bda37c387b8395179ad23da40b103037d1a157d1f9279785650ba80bbc1b67cafa6e654ed06a21eb656af6d05aad12fb7f9d2eddcb55cc622413faea71f0c7834fc820d567e2b3dc0f46a", 0x5b}], 0x1, 0x10001, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 800
remove dir: /root/orangefs-client/dfs-0-63
remove dir time 29
-----finish removing dir
mkdir time 4029
executor 3 create dir /root/orangefs-client/dfs-0-64 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-64
receive_execute: 3, 4058
receive_execute: 5, 4058
receive_execute: 4, 4058
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 4059
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 82, flag collect 1
----- executor 0 cover number : 65, signal number : 68
executor 0 server cover_cnt 1 output_pos_value 137
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1097 tid 1097

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1097, pid 1097, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:41:10] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 34, 0
execute_one time: 1, 34
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 18:41:10] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:41:10] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1679, signal number : 2005
----- completed 3
execute_call 0, 2013, 0, 6
execute_one loop: 0, 0, 2019
cover_reset in execute_call
----- executor 3 write_call_output, size 18482, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 18482, flag collect 1
----- executor 3 cover number : 2538, signal number : 1418
----- completed 4
execute_call 0, 23, 0, 4
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 2074, 1
execute_one time: 5, 2076
2023/03/25 19:41:12 for select break: 1
2023/03/25 19:41:12 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:41:12 for select break: 1
2023/03/25 19:41:12 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:41:12 for select break: 1
2023/03/25 19:41:12 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 4062, 2082, 0
before receive testcase: 0 0
time breakdown 2: 4063, 2083, 0
before receive testcase: 0 0
time breakdown 3: 4065, 2081, 0
before receive testcase: 0 0
----- executor 0 cover number : 959, signal number : 1121
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 229, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14081, flag collect 1
----- executor 0 cover number : 112, signal number : 109
executor 0 server cover_cnt 6 output_pos_value 3209
2023/03/25 19:41:12 for select break: 1
2023/03/25 19:41:12 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:41:12 wg wait finish
2023/03/25 19:41:12 ------ all executors finish execution
2023/03/25 19:41:12 exec time: 6159
2023/03/25 19:41:12 ----- PS len: 4
2023/03/25 19:41:12 [CLIENT] executor 3 has 5 replies
2023/03/25 19:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:12 fuzzer receive 2005 signal and 1679 cover from executor 3
2023/03/25 19:41:12 fuzzer receive 1418 signal and 2538 cover from executor 3
2023/03/25 19:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:12 [SERVER] executor 2 has 0 replies
2023/03/25 19:41:12 [SERVER] executor 1 has 0 replies
time breakdown 0: 4061, 2102, 0
2023/03/25 19:41:12 [SERVER] executor 0 has 6 replies
2023/03/25 19:41:12 ------- fuzzer executor 0 receive 68 signal and 65 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:41:12 ------- fuzzer executor 0 receive 1121 signal and 959 cover from userspace component
2023/03/25 19:41:12 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 19:41:12 ------- fuzzer executor 0 receive 239 signal and 229 cover from userspace component
2023/03/25 19:41:12 ------- fuzzer executor 0 receive 152 signal and 126 cover from userspace component
2023/03/25 19:41:12 ------- fuzzer executor 0 receive 109 signal and 112 cover from userspace component
2023/03/25 19:41:12 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:41:12 ----- triage return due to empty signal extra
2023/03/25 19:41:12 mutate testcase with failures
2023/03/25 19:41:12 ----- insertCall()
2023/03/25 19:41:12 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 19:41:12 ----- insertCall()
2023/03/25 19:41:12 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 19:41:12 ----- insertCall()
2023/03/25 19:41:12 ----- generateCall 2459 open$dir open$dir
2023/03/25 19:41:12 ----- mutateArg()
2023/03/25 19:41:12 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:41:12 disable threaded and collide
2023/03/25 19:41:12 prog length: 6
2023/03/25 19:41:12 prog length: 14
2023/03/25 19:41:12 HasCrashFail:true HasNetFail:false
19:41:12 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fchown(0xffffffffffffffff, 0x0, 0xee01)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
ftruncate(r0, 0x1)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x0)
fsetxattr$security_smack_transmute(0xffffffffffffffff, 0x0, 0x0, 0x0, 0x0)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1", 0x3}], 0x1, 0x0, 0x7)
r2 = dup(0xffffffffffffffff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs2\x00', 0x1ff)
fstat(r1, &(0x7f00000007c0))
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000040), 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r2, &(0x7f0000000080), &(0x7f0000001880)=ANY=[@ANYBLOB=""], 0x1009, 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x2400, 0x100)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6024
remove dir: /root/orangefs-client/dfs-0-64
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
receive_execute: 21, 4063
receive_execute: 2, 4063
mkdir time 4037
executor 3 create dir /root/orangefs-client/dfs-0-65 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-65
receive_execute: 21, 4062
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 22, 4064
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 write_server_output
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 18482, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 18482, flag collect 0
----- executor 3 signal number : 3067
----- completed 5
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 9304, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 9304, flag collect 0
----- executor 3 signal number : 954
----- completed 7
execute_call 0, 13, 0, 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12792, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 12792, flag collect 0
----- executor 3 signal number : 298
----- completed 9
execute_call 0, 6051, 0, 1
execute_one loop: 0, 0, 6052
cover_reset in execute_call
----- executor 3 write_call_output, size 8662, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 8662, flag collect 0
----- executor 3 signal number : 119
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6077, 0, 0
execute_one loop: 0, 0, 6077
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 860 tid 860

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 860, pid 860, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:41:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12193, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 12193, flag collect 0
----- executor 3 signal number : 106
----- completed 14
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 0, 6105, 0
execute_one time: 0, 6105
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 6101, 0
execute_one time: 1, 6101
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4086, 6106, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 3346
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4084, 6108, 0
----- executor 0 signal number : 1300
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4083, 6110, 0
----- executor 0 signal number : 308
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:41:22 wg wait finish
2023/03/25 19:41:22 ------ all executors finish execution
2023/03/25 19:41:22 exec time: 10174
before receive testcase: 0 0
2023/03/25 19:41:22 ----- PS len: 4
2023/03/25 19:41:22 [CLIENT] executor 3 has 14 replies
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 3067 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/25 19:41:22 [SERVER] executor 1 has 1 replies
2023/03/25 19:41:22 [SERVER] executor 0 has 5 replies
2023/03/25 19:41:22 [SERVER] executor 2 has 0 replies
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 3346 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 1300 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 308 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 86 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 147 signal and 0 cover from userspace component
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 106 signal and 0 cover from executor 3
2023/03/25 19:41:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:41:22 ----- no new client coverage: false, true
2023/03/25 19:41:22 mutate testcase with failures
2023/03/25 19:41:22 ----- mutateArg()
2023/03/25 19:41:22 ----- mutateArg()
2023/03/25 19:41:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:41:22 disable threaded and collide
2023/03/25 19:41:22 prog length: 6
2023/03/25 19:41:22 prog length: 22
2023/03/25 19:41:22 HasCrashFail:true HasNetFail:false
19:41:22 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f00000010c0)='./file0\x00', &(0x7f0000001b00)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r1, 0x4, 0x42400)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
syz_failure_sync(0x1, 0x3)
write$binfmt_script(r4, &(0x7f0000001980)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e5365637572697479002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff03472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 signal number : 86
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 147
executor 0 server cover_cnt 5 output_pos_value 5203
time breakdown 0: 4065, 6111, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8504
remove dir: /root/orangefs-client/dfs-0-65
remove dir time 40
-----finish removing dir
mkdir time 8
executor 3 create dir /root/orangefs-client/dfs-0-66 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-66
receive_execute: 2, 48
receive_execute: 4, 48
receive_execute: 5, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 53, flag collect 0
receive_execute: 6, 49
----- executor 1 signal number : 53
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 1 output_pos_value 57
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6459, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6459, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 876 tid 876

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 876, pid 876, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:41:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 60, 0
execute_one time: 0, 60
time breakdown 3: 55, 60, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28594, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1427
----- executor 0 executes write_coverage_signal cov->size 9703, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 3341, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2955, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2117
time breakdown 2: 53, 63, 0
before receive testcase: 0 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 60, 0
execute_one time: 0, 60
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2299
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 172
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 29
executor 1 server cover_cnt 6 output_pos_value 2665
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 50, 64, 0
2023/03/25 19:41:22 for select break: 1
2023/03/25 19:41:22 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:41:22 wg wait finish
2023/03/25 19:41:22 ------ all executors finish execution
2023/03/25 19:41:22 exec time: 112
2023/03/25 19:41:22 ----- PS len: 4
2023/03/25 19:41:22 [CLIENT] executor 3 has 22 replies
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 [SERVER] executor 1 has 6 replies
2023/03/25 19:41:22 [SERVER] executor 2 has 0 replies
2023/03/25 19:41:22 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 53 signal and 0 cover from userspace component
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 2299 signal and 0 cover from userspace component
2023/03/25 19:41:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:41:22 [SERVER] executor 0 has 4 replies
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 1427 signal and 0 cover from userspace component
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 172 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 19:41:22 ------- fuzzer executor 1 receive 29 signal and 0 cover from userspace component
2023/03/25 19:41:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:41:22 ----- no new client coverage: false, true
2023/03/25 19:41:22 mutate testcase with failures
2023/03/25 19:41:22 ----- insertCall()
2023/03/25 19:41:22 ----- generateCall 4127 write$binfmt_aout write$binfmt_aout
2023/03/25 19:41:22 ----- insertCall()
2023/03/25 19:41:22 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 19:41:22 ----- insertCall()
2023/03/25 19:41:22 ----- mutateArg()
2023/03/25 19:41:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:41:22 disable threaded and collide
2023/03/25 19:41:22 prog length: 6
2023/03/25 19:41:22 prog length: 20
2023/03/25 19:41:22 HasCrashFail:true HasNetFail:false
19:41:22 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x40800, 0x40)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1f79810e9", 0x7}, {&(0x7f0000000440)}, {&(0x7f0000000540)="119a66f8e9fca5365d5bc3740504dd07ec9f97693656f80fb49f32bdd6c1875d8fe83e80b29e372b8d9c54074df48093364c0f0b75d2431e3b35e922d57dc83641319d99b0539d0750857f434a5bb519ca0b30d7aee2e63ff66827457653821da53db40298cf8f103226ff268175c8772f83ed37bdc05501b83495a0d5251e0b341f6af6cd4d54b74074b90f8595894e25dc241b96a26ce887e883e84c99c367f47857e01e7f1f3857fc62188f59cc9dc711cc3f30baba1b3ebbf1360815971b87d2608c0dd732c19ad4c718ee7f8b32bd9b7c5424f368237b4a82186ba158113723faf45649f743817f108c1f", 0xed}], 0x3, 0xf7, 0x7)
r2 = dup(r0)
fstat(r2, &(0x7f0000000680))
r3 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fsetxattr$security_smack_transmute(r3, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r4 = fcntl$dupfd(r1, 0x0, r1)
r5 = openat(r0, &(0x7f0000000440)='./file0/file0\x00', 0x100, 0x2)
fcntl$dupfd(r5, 0x0, r1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f00000000c0))
pwritev(r4, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xfffffee6}], 0x3, 0x6, 0x9)
write$binfmt_aout(r0, &(0x7f0000000700)={{0xcc, 0x5, 0x80, 0x394, 0xcb, 0x1, 0x48, 0xfffffc01}, "d5a05577d8a16a2a233041aa0dde87a572a3d0b1223e3bd21b167eacd2bb2fab91e3168402631d8e1a7493e455a0d002d99b51dbe97688672059f4eb17edd13f66e1e455cf0d6dae25ec048cec6403756145021a70d74ce4a7d0faf4", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x77c)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r3, &(0x7f0000000380), &(0x7f0000000480)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a271256f13fea94df6557edf579d8e83a30133f37c637174454e2e54f6b477149a5c0cbf1c7a2"], 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6664
remove dir: /root/orangefs-client/dfs-0-66
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 52, 64, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 18
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:41:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:41:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:41:22] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:41:22] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:41:22] Error: Could not initialize server subsystems
[E 03/25/2023 18:41:22] Error: Could not initialize server; aborting.
receive_execute: 1, 2072
receive_execute: 1, 2073
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
receive_execute: 3, 2072
mkdir time 2054
executor 3 create dir /root/orangefs-client/dfs-0-67 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-67
receive_execute: 5, 2073
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 2061
----- completed 5
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 60319, 0, 0
execute_one loop: 0, 0, 60319
----- executor 3 write_call_output, size 6451, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 15
----- completed 7
execute_call 0, 60316, 0, 0
execute_one loop: 0, 0, 60316
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 891 tid 891

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 891, pid 891, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:42:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 767
----- completed 19
execute_call 0, 24, 0, 2
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 473, write pid:473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 60355, 0
execute_one time: 0, 60356
2023/03/25 19:42:24 for select break: 1
2023/03/25 19:42:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:42:24 for select break: 1
2023/03/25 19:42:24 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2075, 60360, 0
before receive testcase: 0 0
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 60353, 0
execute_one time: 1, 60353
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 19:42:24 for select break: 1
2023/03/25 19:42:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2074, 60362, 0
time breakdown 3: 2078, 60358, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 19:42:24 for select break: 1
2023/03/25 19:42:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:42:24 wg wait finish
2023/03/25 19:42:24 ------ all executors finish execution
2023/03/25 19:42:24 exec time: 62444
2023/03/25 19:42:24 ----- PS len: 4
2023/03/25 19:42:24 [CLIENT] executor 3 has 20 replies
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 767 signal and 0 cover from executor 3
2023/03/25 19:42:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:24 [SERVER] executor 0 has 4 replies
2023/03/25 19:42:24 ------- fuzzer executor 0 receive 1998 signal and 0 cover from userspace component
2023/03/25 19:42:24 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/25 19:42:24 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 19:42:24 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 19:42:24 [SERVER] executor 1 has 1 replies
2023/03/25 19:42:24 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1998
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2716
time breakdown 0: 2073, 60371, 0
before receive testcase: 0 0
2023/03/25 19:42:24 [SERVER] executor 2 has 0 replies
2023/03/25 19:42:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:42:24 ----- no new client coverage: false, true
2023/03/25 19:42:24 mutate testcase with failures
2023/03/25 19:42:24 ----- mutateArg()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- mutateArg()
2023/03/25 19:42:24 ----- splice()
2023/03/25 19:42:24 ----- mutateArg()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- mutateArg()
2023/03/25 19:42:24 ----- mutateArg()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- mutateArg()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 ----- splice()
2023/03/25 19:42:24 ----- insertCall()
2023/03/25 19:42:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:42:24 disable threaded and collide
2023/03/25 19:42:24 prog length: 6
2023/03/25 19:42:24 prog length: 20
2023/03/25 19:42:24 HasCrashFail:true HasNetFail:false
19:42:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)=ANY=[@ANYBLOB="2321202e2f66696c6530202d20ea7d2e3a5b240ac9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d0000000000000006ffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x28e81, 0x10)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/159, 0x9f}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)=ANY=[@ANYBLOB="00fb7e02022c2c74ebac18f03bce919df3e8c5d10a46010100000000000044a08195843aa644ccc0dfc0710e9e3daf32d677ffffff6bc5b616270ff106023da1b661da0f10fbe116e325c43d9ab7f46e42b4621caa879275859d0f0fc7c2d30c162317c28f15e437070000000000"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f00000009c0)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f0000003d80)=""/4118, 0x1016, 0x10002)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000000a40)=ANY=[@ANYBLOB="04131c01d88f9af74477074b33bef4373c2e5c3ff42111f01477636acb6fcad0fca98a7dd52f7605e939b9fd87d5fb53d720f074c447d8f757cb04a7dee25292e83bd386a8ad4e64bb682d091961c16d85dabdf742ea0a658135"], 0x11, 0x0)
fstat(r0, &(0x7f0000000ac0))
stat(&(0x7f0000000880)='./file0/file0\x00', &(0x7f0000000b40))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4248
remove dir: /root/orangefs-client/dfs-0-67
remove dir time 48
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
receive_execute: 4, 81
mkdir time 32
executor 3 create dir /root/orangefs-client/dfs-0-68 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-68
receive_execute: 12, 81
receive_execute: 14, 81
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
-----executor 1 collect shmids 4
----- directly resend shmid 4
receive_execute: 12, 84
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 6443, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 signal number : 2059
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6444, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6444, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 2902, flag collect 0
----- executor 0 signal number : 314
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 804, flag collect 0
----- executor 0 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 2085
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1119 tid 1119

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1119, pid 1119, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:42:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 36, 0
execute_one time: 0, 36
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:42:25] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:42:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:42:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:42:24] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:42:24] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:42:24] Error: Could not initialize server subsystems
[E 03/25/2023 18:42:24] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 32765, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 358
----- completed 7
execute_call 0, 2028, 0, 2
execute_one loop: 0, 0, 2030
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12998, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 12998, flag collect 0
----- executor 3 signal number : 492
----- completed 9
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 25
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 20
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 20
----- completed 12
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 20
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6451, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 6451, flag collect 0
----- executor 3 signal number : 20
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 475, write pid:475
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2086, 0
execute_one time: 0, 2086
2023/03/25 19:42:27 for select break: 1
2023/03/25 19:42:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 96, 2087, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:42:27 for select break: 1
2023/03/25 19:42:27 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 983
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 95, 2092, 0
before receive testcase: 0 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 28
----- executor 0 executes write_coverage_signal cov->size 16596, flag collect 0
before receive testcase: 0 0
2023/03/25 19:42:27 for select break: 1
2023/03/25 19:42:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:42:27 for select break: 1
2023/03/25 19:42:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:42:27 wg wait finish
2023/03/25 19:42:27 ------ all executors finish execution
2023/03/25 19:42:27 exec time: 2175
2023/03/25 19:42:27 ----- PS len: 4
2023/03/25 19:42:27 [SERVER] executor 1 has 3 replies
2023/03/25 19:42:27 ------- fuzzer executor 1 receive 555 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 1 receive 10 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 1 receive 14 signal and 0 cover from userspace component
2023/03/25 19:42:27 [SERVER] executor 2 has 0 replies
2023/03/25 19:42:27 [SERVER] executor 0 has 9 replies
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 314 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 983 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 28 signal and 0 cover from userspace component
2023/03/25 19:42:27 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
----- executor 0 signal number : 13
executor 0 server cover_cnt 9 output_pos_value 3268
2023/03/25 19:42:27 [CLIENT] executor 3 has 20 replies
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 492 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:27 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 85, 2094, 0
2023/03/25 19:42:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:42:27 ----- no new client coverage: false, true
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 6121, flag collect 0
----- executor 1 signal number : 555
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 10
----- executor 1 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 1 signal number : 14
executor 1 server cover_cnt 3 output_pos_value 589
time breakdown 1: 93, 2094, 0
before receive testcase: 0 0
2023/03/25 19:42:27 ----- enqueue testcases with server coveraged
before receive testcase: 0 0
2023/03/25 19:42:27 disable threaded and collide
2023/03/25 19:42:27 prog length: 6
2023/03/25 19:42:27 prog length: 20
2023/03/25 19:42:27 HasCrashFail:true HasNetFail:false
19:42:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)=ANY=[@ANYBLOB="2321202e2f66696c6530202d20ea7d2e3a5b240ac9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d0000000000000006ffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x28e81, 0x10)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/159, 0x9f}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)=ANY=[@ANYBLOB="00fb7e02022c2c74ebac18f03bce919df3e8c5d10a46010100000000000044a08195843aa644ccc0dfc0710e9e3daf32d677ffffff6bc5b616270ff106023da1b661da0f10fbe116e325c43d9ab7f46e42b4621caa879275859d0f0fc7c2d30c162317c28f15e437070000000000"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f00000009c0)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f0000003d80)=""/4118, 0x1016, 0x10002)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000000a40)=ANY=[@ANYBLOB="04131c01d88f9af74477074b33bef4373c2e5c3ff42111f01477636acb6fcad0fca98a7dd52f7605e939b9fd87d5fb53d720f074c447d8f757cb04a7dee25292e83bd386a8ad4e64bb682d091961c16d85dabdf742ea0a658135"], 0x11, 0x0)
fstat(r0, &(0x7f0000000ac0))
stat(&(0x7f0000000880)='./file0/file0\x00', &(0x7f0000000b40))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4248
remove dir: /root/orangefs-client/dfs-0-68
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 8058
executor 3 create dir /root/orangefs-client/dfs-0-69 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-69
receive_execute: 8, 8077
receive_execute: 6, 8077
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 8080
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 8079
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 1
----- executor 3 cover number : 1750, signal number : 2061
----- completed 3
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 1
----- executor 3 cover number : 1750, signal number : 15
----- completed 4
execute_call 0, 5, 0, 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 19
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8170, flag collect 1
----- executor 0 cover number : 1195, signal number : 1408
----- executor 0 executes write_coverage_signal cov->size 2898, flag collect 1
----- executor 0 cover number : 300, signal number : 313
----- executor 0 executes write_coverage_signal cov->size 984, flag collect 1
----- executor 0 cover number : 284, signal number : 289
----- executor 0 executes write_coverage_signal cov->size 852, flag collect 1
----- executor 0 cover number : 99, signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3976
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1134 tid 1134

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1134, pid 1134, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:42:35] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:42:35] PVFS2 server got signal 15 (server_status_flag: 2080767)
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
cover_reset in execute_call
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 66, 0
execute_one time: 0, 66
[D 03/25/2023 18:42:35] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 2014, 0, 0
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 12886, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 12886, flag collect 1
----- executor 3 cover number : 1748, signal number : 34
----- completed 10
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 11
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 12
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 13
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 16
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 1
----- executor 3 cover number : 1748, signal number : 16
----- completed 18
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2109, 0
execute_one time: 0, 2109
time breakdown 3: 8089, 2110, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 8085, 2114, 0
before receive testcase: 0 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 cover number : 1575, signal number : 1778
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8084, 2117, 0
before receive testcase: 0 0
----- executor 0 cover number : 423, signal number : 1945
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:42:37 wg wait finish
2023/03/25 19:42:37 ------ all executors finish execution
2023/03/25 19:42:37 exec time: 10216
2023/03/25 19:42:37 ----- PS len: 4
2023/03/25 19:42:37 [CLIENT] executor 3 has 20 replies
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 2061 signal and 1750 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 15 signal and 1750 cover from executor 3
2023/03/25 19:42:37 [SERVER] executor 1 has 0 replies
2023/03/25 19:42:37 [SERVER] executor 2 has 0 replies
2023/03/25 19:42:37 [SERVER] executor 0 has 9 replies
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 1408 signal and 1195 cover from userspace component
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 313 signal and 300 cover from userspace component
2023/03/25 19:42:37 fuzzer receive 34 signal and 1748 cover from executor 3
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 289 signal and 284 cover from userspace component
2023/03/25 19:42:37 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 75 signal and 99 cover from userspace component
2023/03/25 19:42:37 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 1748 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 1778 signal and 1575 cover from userspace component
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 1945 signal and 423 cover from userspace component
----- executor 0 cover number : 294, signal number : 351
----- executor 0 executes write_coverage_signal cov->size 15962, flag collect 1
----- executor 0 cover number : 109, signal number : 107
executor 0 server cover_cnt 9 output_pos_value 10583
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 351 signal and 294 cover from userspace component
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 107 signal and 109 cover from userspace component
time breakdown 0: 8083, 2138, 0
before receive testcase: 0 0
2023/03/25 19:42:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:42:37 ----- triage return due to empty signal extra
2023/03/25 19:42:37 mutate testcase with failures
2023/03/25 19:42:37 ----- insertCall()
2023/03/25 19:42:37 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/25 19:42:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:42:37 disable threaded and collide
2023/03/25 19:42:37 prog length: 6
2023/03/25 19:42:37 prog length: 20
2023/03/25 19:42:37 HasCrashFail:true HasNetFail:false
19:42:37 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
syz_failure_sync(0x0, 0x3)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
setxattr$security_evm(&(0x7f0000002e00)='./file0\x00', &(0x7f0000002e40), &(0x7f0000002e80)=@md5={0x1, "e1064f185c600b1a0af4c1c4ddac99a6"}, 0x11, 0x1)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002ec0)=ANY=[@ANYBLOB="277f5b5d40e01f040378ec497dc4debf30bb3ed992941338e71c33cfeec675870c39814ad382cb7691eb31979640d3ee454335e145758a4c08ecd3c5839274c401762d1fd2ce927f7bbfdff1ea914ba6e6d9b0e5382f61305af317041fca45cc20ba5c913ef8c8f38684b4b3fa6a45bbdec259033736073a7fc3834ae392a510a72425a3bce037339eccde2a65838f84dba010e12fd0ca673e44bfb5a8fb07c2b73fe21f63250d432243f6474c7f4907621f006e9e93c0eb80965669a2e9251100"/207], 0x6, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4760
remove dir: /root/orangefs-client/dfs-0-69
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
receive_execute: 2, 58
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-70 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-70
receive_execute: 20, 58
receive_execute: 27, 57
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 28, 58
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 910 tid 910

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 910, pid 910, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 18:42:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 37, 0, 0
execute_one loop: 0, 0, 37
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 77, 0
execute_one time: 1, 77
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 37, 0, 0
execute_one loop: 0, 0, 37
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 82, 0
execute_one time: 1, 82
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 86, 84, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 1523
----- executor 0 executes write_coverage_signal cov->size 13101, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4531, flag collect 0
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3861, flag collect 0
----- executor 0 signal number : 75
time breakdown 1: 78, 86, 0
time breakdown 2: 84, 86, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 2213
2023/03/25 19:42:37 for select break: 1
2023/03/25 19:42:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:42:37 wg wait finish
2023/03/25 19:42:37 ------ all executors finish execution
2023/03/25 19:42:37 exec time: 145
2023/03/25 19:42:37 ----- PS len: 4
2023/03/25 19:42:37 [CLIENT] executor 3 has 20 replies
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 [SERVER] executor 1 has 1 replies
2023/03/25 19:42:37 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 19:42:37 [SERVER] executor 2 has 0 replies
time breakdown 0: 60, 86, 0
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:42:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:42:37 [SERVER] executor 0 has 4 replies
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 1523 signal and 0 cover from userspace component
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 19:42:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 19:42:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:42:37 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 19:42:37 mutate testcase with failures
2023/03/25 19:42:37 ----- mutateArg()
2023/03/25 19:42:37 ----- mutateArg()
2023/03/25 19:42:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:42:37 disable threaded and collide
2023/03/25 19:42:37 prog length: 6
2023/03/25 19:42:37 prog length: 8
2023/03/25 19:42:37 HasCrashFail:true HasNetFail:false
19:42:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'L-', 0xfffffffffffffffd}, 0x16, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 992
remove dir: /root/orangefs-client/dfs-0-70
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 38
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 18:42:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:42:37] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 18:42:37] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:42:37] Error: Could not initialize server subsystems
[E 03/25/2023 18:42:37] Error: Could not initialize server; aborting.
receive_execute: 2, 4074
mkdir time 4036
executor 3 create dir /root/orangefs-client/dfs-0-71 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-71
receive_execute: 4, 4073
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 4074
receive_execute: 4, 4074
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_call 0, 6051, 0, 0
execute_one loop: 0, 0, 6051
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 6467, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6467, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 6050, 0, 0
execute_one loop: 0, 0, 6050
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 2723
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1233
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4341
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 32765, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 signal number : 626
----- completed 2
execute_call 0, 41, 0, 1
execute_one loop: 0, 0, 42
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1151 tid 1151

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1151, pid 1151, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:42:47] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 6104, 0
execute_one time: 0, 6104
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 18:42:47] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:42:47] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 479, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 8120, 0
execute_one time: 1, 8120
2023/03/25 19:42:49 for select break: 1
2023/03/25 19:42:49 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 4079, 8123, 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 197
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:42:49 for select break: 1
2023/03/25 19:42:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4078, 8123, 0
----- executor 0 signal number : 133
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:42:49 for select break: 1
2023/03/25 19:42:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4078, 8124, 0
before receive testcase: 0 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 9 output_pos_value 4718
2023/03/25 19:42:49 for select break: 1
2023/03/25 19:42:49 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:42:49 wg wait finish
2023/03/25 19:42:49 ------ all executors finish execution
2023/03/25 19:42:49 exec time: 12200
2023/03/25 19:42:49 ----- PS len: 4
2023/03/25 19:42:49 [SERVER] executor 0 has 9 replies
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 2723 signal and 0 cover from userspace component
2023/03/25 19:42:49 [SERVER] executor 1 has 0 replies
2023/03/25 19:42:49 [SERVER] executor 2 has 0 replies
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 1233 signal and 0 cover from userspace component
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/25 19:42:49 [CLIENT] executor 3 has 8 replies
2023/03/25 19:42:49 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 626 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:49 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 197 signal and 0 cover from userspace component
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 133 signal and 0 cover from userspace component
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 19:42:49 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
time breakdown 0: 4076, 8126, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 19:42:49 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:42:49 ----- no new client coverage: false, true
2023/03/25 19:42:49 mutate testcase with failures
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- generateCall 2458 open open
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- mutateArg()
2023/03/25 19:42:49 ----- mutateArg()
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- insertCall()
2023/03/25 19:42:49 ----- mutateArg()
2023/03/25 19:42:49 ----- mutateArg()
2023/03/25 19:42:49 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:42:49 disable threaded and collide
2023/03/25 19:42:49 prog length: 6
2023/03/25 19:42:49 prog length: 20
2023/03/25 19:42:49 HasCrashFail:true HasNetFail:false
19:42:49 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f0000000100)='./file2\x00', &(0x7f0000000140)=@known='user.syz\x00', &(0x7f0000000c80)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file1\x00', &(0x7f0000000700)='security.SMACK64EXEC\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
r2 = open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000c40), &(0x7f00000009c0)=@md5={0x1, "b00400"}, 0x11, 0x2)
open(&(0x7f0000000b00)='./file0/file0\x00', 0x10000, 0x48)
lsetxattr$user(&(0x7f00000001c0)='./file0/file0/file0\x00', &(0x7f0000000b80), &(0x7f00000000c0)='\t\x93\xbf;4.\xc2\x00\x00\x01\xaa\xc0\x1f\x019\'\xd6``\x1c\xb5\r\x10\xfc\xba\t=\xb6\xe7\xe4', 0x1e, 0x2)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f0000000c00))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6016
remove dir: /root/orangefs-client/dfs-0-71
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 34
-----finish removing dir
receive_execute: 4, 51
mkdir time 17
executor 3 create dir /root/orangefs-client/dfs-0-72 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-72
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 52
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 51
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 52
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1167 tid 1167

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1167, pid 1167, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:42:49] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 23, 0
execute_one time: 0, 23
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:42:49] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:42:49] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2002
----- completed 3
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 410
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 8
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 14
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 20
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 481, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2080, 0
execute_one time: 0, 2080
2023/03/25 19:42:51 for select break: 1
2023/03/25 19:42:51 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 58, 2081, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 19:42:51 for select break: 1
2023/03/25 19:42:51 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 55, 2084, 0
before receive testcase: 0 0
2023/03/25 19:42:51 for select break: 1
2023/03/25 19:42:51 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 57, 2083, 0
before receive testcase: 0 0
2023/03/25 19:42:51 for select break: 1
2023/03/25 19:42:51 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:42:51 wg wait finish
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 18098, flag collect 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1618
2023/03/25 19:42:51 ------ all executors finish execution
2023/03/25 19:42:51 exec time: 2136
2023/03/25 19:42:51 ----- PS len: 4
2023/03/25 19:42:51 [CLIENT] executor 3 has 20 replies
2023/03/25 19:42:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 2002 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 410 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 19:42:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:42:51 [SERVER] executor 0 has 5 replies
2023/03/25 19:42:51 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 19:42:51 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:42:51 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 19:42:51 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 19:42:51 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 19:42:51 [SERVER] executor 1 has 0 replies
2023/03/25 19:42:51 [SERVER] executor 2 has 0 replies
time breakdown 0: 54, 2085, 0
before receive testcase: 0 0
2023/03/25 19:42:51 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:42:51 ----- no new client coverage: false, true
2023/03/25 19:42:51 mutate testcase with failures
2023/03/25 19:42:51 ----- insertCall()
2023/03/25 19:42:51 ----- generateCall 248 fstat fstat
2023/03/25 19:42:51 HasCrashFail: true, .HasNetFail: true
2023/03/25 19:42:51 disable threaded and collide
2023/03/25 19:42:51 prog length: 6
2023/03/25 19:42:51 prog length: 6
2023/03/25 19:42:51 prog length: 6
2023/03/25 19:42:51 prog length: 10
2023/03/25 19:42:51 HasCrashFail:true HasNetFail:true
19:42:51 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
symlink(&(0x7f00000015c0)='./file0/file0\x00', &(0x7f0000001600)='./file1\x00')
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x4, 0x3)
syz_failure_sync(0x1, 0x3)
syz_failure_sync(0x5, 0x3)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fstat(r0, &(0x7f0000000000))
setxattr$incfs_id(&(0x7f0000001680)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x3, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 2368, prog_size 952
remove dir: /root/orangefs-client/dfs-0-72
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 560
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 16
-----finish removing dir
mkdir time 4034
executor 3 create dir /root/orangefs-client/dfs-0-73 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-73
receive_execute: 0, 4050
receive_execute: 2, 4050
receive_execute: 2, 4050
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 4051
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2605
----- completed 1
execute_call 0, 2033, 0, 3
execute_one loop: 0, 0, 2036
execute_call 0, 2035, 0, 0
execute_one loop: 0, 0, 2035
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2061, 0, 0
execute_one loop: 0, 0, 2061
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 30473, flag collect 0
----- executor 0 signal number : 2629
----- executor 0 executes write_coverage_signal cov->size 19595, flag collect 0
----- executor 0 signal number : 1135
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 13497, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4151
Terminated
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2074, 0, 0
execute_one loop: 0, 0, 2074
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1183 tid 1183

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1183, pid 1183, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:42:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2098, 0
execute_one time: 1, 2098
----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): call atexit in pid 554 tid 554

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 554, pid 554, value 1

----------executor 2 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 2 2>&1): [S 03/25/2023 18:42:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 2 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 2109, 0
execute_one time: 1, 2109
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 18:42:57] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:42:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 18:42:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 18:42:58] Error: handle 9223372036854775802 is invalid (out of bounds)
[E 03/25/2023 18:42:58] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 18:42:58] Error: Could not initialize server subsystems
[E 03/25/2023 18:42:58] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 32765, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 315
----- completed 9
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2059, 0, 0
execute_one loop: 0, 0, 2059
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 1, 6123, 0
execute_one time: 0, 6124
----- executor 3 write_call_output, size 0, pid 483, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2003, 0, 1
execute_one loop: 0, 0, 2004
executor 3, execute_one inner time: 0, 6124, 0
execute_one time: 0, 6124
2023/03/25 19:43:02 for select break: 1
2023/03/25 19:43:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 4054, 6132, 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 899
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 843
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:43:02 for select break: 1
2023/03/25 19:43:02 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 4052, 6134, 0
before receive testcase: 0 0
----- executor 0 signal number : 11
executor 0 server cover_cnt 9 output_pos_value 5346
----- executor 2 signal number : 233
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 89
----- executor 2 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 2 signal number : 47
executor 2 server cover_cnt 5 output_pos_value 1289
2023/03/25 19:43:02 for select break: 1
2023/03/25 19:43:02 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:43:02 for select break: 1
2023/03/25 19:43:02 --------- executor 2 receive reply, reply.done 1
2023/03/25 19:43:02 wg wait finish
2023/03/25 19:43:02 ------ all executors finish execution
2023/03/25 19:43:02 exec time: 10186
2023/03/25 19:43:02 ----- PS len: 4
2023/03/25 19:43:02 [CLIENT] executor 3 has 10 replies
2023/03/25 19:43:02 fuzzer receive 2605 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 fuzzer receive 315 signal and 0 cover from executor 3
2023/03/25 19:43:02 [SERVER] executor 0 has 9 replies
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 2629 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 1135 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
time breakdown 2: 4052, 6136, 0
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/25 19:43:02 [SERVER] executor 1 has 0 replies
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 843 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 19:43:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:02 [SERVER] executor 2 has 5 replies
2023/03/25 19:43:02 ------- fuzzer executor 2 receive 899 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 2 receive 233 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 2 receive 89 signal and 0 cover from userspace component
2023/03/25 19:43:02 ------- fuzzer executor 2 receive 47 signal and 0 cover from userspace component
2023/03/25 19:43:02 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:43:02 ----- no new client coverage: false, true
2023/03/25 19:43:02 mutate testcase with failures
2023/03/25 19:43:02 ----- insertCall()
2023/03/25 19:43:02 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 19:43:02 ----- insertCall()
2023/03/25 19:43:02 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
time breakdown 0: 4050, 6136, 0
before receive testcase: 0 0
2023/03/25 19:43:02 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:43:02 disable threaded and collide
2023/03/25 19:43:02 prog length: 6
2023/03/25 19:43:02 prog length: 20
2023/03/25 19:43:02 HasCrashFail:true HasNetFail:false
19:43:02 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
syz_failure_sync(0x1, 0x3)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000940), &(0x7f0000000980)='./file0\x00', 0x8, 0x2)
r1 = open$dir(&(0x7f0000000880)='./file0\x00', 0x402001, 0x81)
fsetxattr$trusted_overlay_redirect(r1, &(0x7f00000008c0), &(0x7f0000000900)='./file0/file0\x00', 0xe, 0x2)
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4672
remove dir: /root/orangefs-client/dfs-0-73
remove dir time 40
-----finish removing dir
receive_execute: 5, 10108
mkdir time 10068
executor 3 create dir /root/orangefs-client/dfs-0-74 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-74
receive_execute: 7, 10108
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 10109
receive_execute: 5, 10109
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:43:12] PVFS2 server got signal 15 (server_status_flag: 2080767)
execute_call 0, 10056, 0, 0
execute_one loop: 0, 0, 10056
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10056, 0, 0
execute_one loop: 0, 0, 10056
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1199 tid 1199

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1199, pid 1199, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:43:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2006
----- completed 3
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10080, 0
execute_one time: 0, 10080
[D 03/25/2023 18:43:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 358
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 17
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 18
----- completed 11
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 18
----- completed 15
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 18
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 18
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12128, 0
execute_one time: 0, 12128
2023/03/25 19:43:24 for select break: 1
2023/03/25 19:43:24 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 10110, 12129, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
----- executor 0 signal number : 939
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:43:24 for select break: 1
2023/03/25 19:43:24 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10113, 12132, 0
before receive testcase: 0 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 16251, flag collect 0
executor 1 write_server_output
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1561
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 19:43:24 for select break: 1
2023/03/25 19:43:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10114, 12133, 0
2023/03/25 19:43:24 for select break: 1
2023/03/25 19:43:24 --------- executor 1 receive reply, reply.done 1
2023/03/25 19:43:24 wg wait finish
2023/03/25 19:43:24 ------ all executors finish execution
2023/03/25 19:43:24 exec time: 22243
2023/03/25 19:43:24 ----- PS len: 4
2023/03/25 19:43:24 [CLIENT] executor 3 has 20 replies
2023/03/25 19:43:24 [SERVER] executor 0 has 5 replies
2023/03/25 19:43:24 ------- fuzzer executor 0 receive 939 signal and 0 cover from userspace component
2023/03/25 19:43:24 [SERVER] executor 2 has 0 replies
2023/03/25 19:43:24 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:43:24 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 19:43:24 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 19:43:24 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 19:43:24 [SERVER] executor 1 has 0 replies
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 2006 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:43:24 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 10115, 12134, 0
before receive testcase: 0 0
2023/03/25 19:43:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:43:24 ----- no new client coverage: false, true
2023/03/25 19:43:24 mutate testcase with failures
2023/03/25 19:43:24 ----- insertCall()
2023/03/25 19:43:24 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 19:43:24 ----- insertCall()
2023/03/25 19:43:24 ----- insertCall()
2023/03/25 19:43:24 ----- generateCall 2459 open$dir open$dir
2023/03/25 19:43:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:43:24 disable threaded and collide
2023/03/25 19:43:24 prog length: 6
2023/03/25 19:43:24 prog length: 5
2023/03/25 19:43:24 HasCrashFail:true HasNetFail:false
19:43:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x3)
syz_failure_sync(0x1, 0x3)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x40, 0x10)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 720
remove dir: /root/orangefs-client/dfs-0-74
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-75 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-75
receive_execute: 2, 40
receive_execute: 4, 39
receive_execute: 2, 39
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 40
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
[E 03/25/2023 18:43:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
[E 03/25/2023 18:43:24] PVFS2 server: signal 6
[E 03/25/2023 18:43:24] before print stack trace
[E 03/25/2023 18:43:24] before print stack trace
[E 03/25/2023 18:43:24] after backtrace
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb) [0x7ffff6f8318b]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0) [0x7ffff714f3c0]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb) [0x7ffff6f8318b]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libc.so.6(abort+0x12b) [0x7ffff6f62859]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libc.so.6(+0x25729) [0x7ffff6f62729]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libc.so.6(+0x36f36) [0x7ffff6f73f36]
[E 03/25/2023 18:43:24] [bt] /opt/orangefs/sbin/pvfs2-server(+0x34e937) [0x5555558a2937]
[E 03/25/2023 18:43:24] [bt] /opt/orangefs/sbin/pvfs2-server(+0x3577b8) [0x5555558ab7b8]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libpthread.so.0(+0x9609) [0x7ffff7143609]
[E 03/25/2023 18:43:24] [bt] /lib/x86_64-linux-gnu/libc.so.6(clone+0x43) [0x7ffff705f103]
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10045, 0, 0
execute_one loop: 0, 0, 10045
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10043, 0, 0
execute_one loop: 0, 0, 10043
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20089, 0, 0
execute_one loop: 0, 0, 20089
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1215 tid 1215

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1215, pid 1215, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:43:44] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20110, 0
execute_one time: 0, 20110
----- executor 3 write_call_output, size 32765, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1998
----- completed 4
execute_call 0, 12, 0, 9
execute_one loop: 0, 0, 21
cover_reset in execute_call
[D 03/25/2023 18:43:44] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 12
----- completed 5
execute_call 0, 42189, 0, 0
execute_one loop: 0, 0, 42189
executor 3, execute_one inner time: 0, 62308, 0
execute_one time: 0, 62308
2023/03/25 19:44:26 for select break: 1
2023/03/25 19:44:26 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 46, 62309, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1025
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:44:26 for select break: 1
2023/03/25 19:44:26 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 43, 62310, 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 232
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 19:44:26 for select break: 1
2023/03/25 19:44:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 41, 62311, 0
before receive testcase: 0 0
----- executor 0 signal number : 100
executor 0 server cover_cnt 5 output_pos_value 1694
2023/03/25 19:44:26 for select break: 1
2023/03/25 19:44:26 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:44:26 wg wait finish
2023/03/25 19:44:26 ------ all executors finish execution
2023/03/25 19:44:26 exec time: 62353
2023/03/25 19:44:26 ----- PS len: 4
2023/03/25 19:44:26 [CLIENT] executor 3 has 5 replies
2023/03/25 19:44:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:26 fuzzer receive 1998 signal and 0 cover from executor 3
2023/03/25 19:44:26 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 19:44:26 [SERVER] executor 1 has 0 replies
2023/03/25 19:44:26 [SERVER] executor 2 has 0 replies
2023/03/25 19:44:26 [SERVER] executor 0 has 5 replies
2023/03/25 19:44:26 ------- fuzzer executor 0 receive 1025 signal and 0 cover from userspace component
2023/03/25 19:44:26 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:44:26 ------- fuzzer executor 0 receive 232 signal and 0 cover from userspace component
2023/03/25 19:44:26 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 19:44:26 ------- fuzzer executor 0 receive 100 signal and 0 cover from userspace component
time breakdown 0: 42, 62311, 0
before receive testcase: 0 0
2023/03/25 19:44:26 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:44:26 ----- no new client coverage: false, true
2023/03/25 19:44:26 mutate testcase with failures
2023/03/25 19:44:26 ----- insertCall()
2023/03/25 19:44:26 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 19:44:26 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:44:26 disable threaded and collide
2023/03/25 19:44:26 prog length: 6
2023/03/25 19:44:26 prog length: 6
2023/03/25 19:44:26 HasCrashFail:true HasNetFail:false
19:44:26 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_selinux(&(0x7f0000000100)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f0000000080)={'%@'}, 0x3, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1016
remove dir: /root/orangefs-client/dfs-0-75
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 35
-----finish removing dir
receive_execute: 2, 14252
mkdir time 14216
executor 3 create dir /root/orangefs-client/dfs-0-76 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-76
receive_execute: 1, 14251
receive_execute: 4, 14251
receive_execute: 2, 14251
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 488, write pid:488
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 488, write pid:488
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8169, flag collect 0
----- executor 0 signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 2898, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2085
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 488, write pid:488
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1231 tid 1231

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1231, pid 1231, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:44:40] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 488, write pid:488
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 34, 0
execute_one time: 0, 34
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 18:44:40] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:44:40] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 488, write pid:488
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2014, 0, 0
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 6443, pid 488, write pid:488
----- executor 3 executes write_coverage_signal cov->size 6443, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 2050, 0
execute_one time: 0, 2051
2023/03/25 19:44:42 for select break: 1
2023/03/25 19:44:42 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 14255, 2052, 0
before receive testcase: 0 1
2023/03/25 19:44:42 for select break: 1
2023/03/25 19:44:42 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 512
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 14253, 2053, 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 13634, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2795
2023/03/25 19:44:42 for select break: 1
2023/03/25 19:44:42 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 14254, 2053, 0
2023/03/25 19:44:42 for select break: 1
2023/03/25 19:44:42 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:44:42 wg wait finish
2023/03/25 19:44:42 ------ all executors finish execution
2023/03/25 19:44:42 exec time: 16307
2023/03/25 19:44:42 ----- PS len: 4
2023/03/25 19:44:42 [CLIENT] executor 3 has 6 replies
2023/03/25 19:44:42 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 19:44:42 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 19:44:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 19:44:42 [SERVER] executor 0 has 9 replies
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 1409 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 512 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/25 19:44:42 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 19:44:42 [SERVER] executor 1 has 0 replies
2023/03/25 19:44:42 [SERVER] executor 2 has 0 replies
time breakdown 0: 14252, 2055, 0
before receive testcase: 0 0
2023/03/25 19:44:42 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 19:44:42 ----- no new client coverage: false, true
2023/03/25 19:44:42 mutate testcase with failures
2023/03/25 19:44:42 ----- insertCall()
2023/03/25 19:44:42 ----- generateCall 2343 link link
2023/03/25 19:44:42 ----- mutateArg()
2023/03/25 19:44:42 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:44:42 disable threaded and collide
2023/03/25 19:44:42 prog length: 6
2023/03/25 19:44:42 prog length: 6
2023/03/25 19:44:42 HasCrashFail:true HasNetFail:false
19:44:42 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
link(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 680
remove dir: /root/orangefs-client/dfs-0-76
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 23
-----finish removing dir
receive_execute: 1, 10078
receive_execute: 2, 10079
mkdir time 10055
executor 3 create dir /root/orangefs-client/dfs-0-77 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-77
receive_execute: 2, 10079
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
receive_execute: 4, 10079
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28991, flag collect 0
----- executor 3 signal number : 3035
----- completed 1
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 signal number : 2535
----- executor 0 executes write_coverage_signal cov->size 17205, flag collect 0
----- executor 0 signal number : 1133
----- executor 0 executes write_coverage_signal cov->size 3112, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 2641, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4054
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 337
----- completed 3
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 6325, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6325, flag collect 0
----- executor 3 signal number : 348
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4672, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 4672, flag collect 0
----- executor 3 signal number : 62
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 31, 0, 0
execute_one loop: 0, 0, 31
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1247 tid 1247

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1247, pid 1247, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 18:44:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 76, 0
execute_one time: 1, 76
2023/03/25 19:44:53 for select break: 1
2023/03/25 19:44:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 17242, flag collect 0
2023/03/25 19:44:53 for select break: 1
2023/03/25 19:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10081, 80, 0
before receive testcase: 0 0
----- executor 0 signal number : 89
----- executor 0 executes write_coverage_signal cov->size 3369, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 2714, flag collect 0
2023/03/25 19:44:53 for select break: 1
2023/03/25 19:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 13
executor 0 server cover_cnt 8 output_pos_value 4502
2023/03/25 19:44:53 for select break: 1
2023/03/25 19:44:53 --------- executor 0 receive reply, reply.done 1
2023/03/25 19:44:53 wg wait finish
2023/03/25 19:44:53 ------ all executors finish execution
2023/03/25 19:44:53 exec time: 10159
2023/03/25 19:44:53 ----- PS len: 4
2023/03/25 19:44:53 [CLIENT] executor 3 has 6 replies
2023/03/25 19:44:53 fuzzer receive 3035 signal and 0 cover from executor 3
2023/03/25 19:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:53 fuzzer receive 337 signal and 0 cover from executor 3
2023/03/25 19:44:53 fuzzer receive 348 signal and 0 cover from executor 3
2023/03/25 19:44:53 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/25 19:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 19:44:53 [SERVER] executor 0 has 8 replies
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 2535 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 1133 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 89 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/25 19:44:53 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 19:44:53 [SERVER] executor 1 has 0 replies
2023/03/25 19:44:53 [SERVER] executor 2 has 0 replies
2023/03/25 19:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/25 19:44:53 ----- no new client coverage: false, true
2023/03/25 19:44:53 mutate testcase with failures
2023/03/25 19:44:53 ----- insertCall()
2023/03/25 19:44:53 ----- generateCall 2458 open open
2023/03/25 19:44:53 ----- insertCall()
2023/03/25 19:44:53 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 19:44:53 ----- insertCall()
2023/03/25 19:44:53 ----- insertCall()
2023/03/25 19:44:53 ----- mutateArg()
2023/03/25 19:44:53 HasCrashFail: true, .HasNetFail: false
2023/03/25 19:44:53 disable threaded and collide
2023/03/25 19:44:53 prog length: 6
2023/03/25 19:44:53 prog length: 20
2023/03/25 19:44:53 HasCrashFail:true HasNetFail:false
19:44:53 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = open(&(0x7f0000000b00)='./file0/file1\x00', 0x10002, 0xd5)
r2 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r2, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
r3 = open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
r4 = dup2(r1, r3)
fcntl$dupfd(r4, 0x406, r2)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 75, 0
execute_one time: 1, 75
time breakdown 3: 10083, 78, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5944
remove dir: /root/orangefs-client/dfs-0-77
time breakdown 0: 10079, 81, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 10081, 80, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
[E 03/25/2023 18:44:53] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 18:44:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
Node-3:/root/daemon-log.362
=================================================================
==362==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffffffe250 at pc 0x7ffff75faa6d bp 0x7fffffff8920 sp 0x7fffffff80c8
READ of size 5 at 0x7fffffffe250 thread T0
    #0 0x7ffff75faa6c  (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c)
    #1 0x555555796371 in PINT_encrypt_dirdata (/opt/orangefs/bin/pvfs2fuse+0x242371)
    #2 0x5555556e8a55 in remove_rmdirent_setup_msgpair (/opt/orangefs/bin/pvfs2fuse+0x194a55)
    #3 0x55555578989b in PINT_state_machine_invoke (/opt/orangefs/bin/pvfs2fuse+0x23589b)
    #4 0x55555578a706 in PINT_state_machine_next (/opt/orangefs/bin/pvfs2fuse+0x236706)
    #5 0x55555578a785 in PINT_state_machine_continue (/opt/orangefs/bin/pvfs2fuse+0x236785)
    #6 0x555555679ad1 in PINT_client_state_machine_test (/opt/orangefs/bin/pvfs2fuse+0x125ad1)
    #7 0x55555567aef5 in PINT_client_wait_internal (/opt/orangefs/bin/pvfs2fuse+0x126ef5)
    #8 0x55555567b5c2 in PVFS_sys_wait (/opt/orangefs/bin/pvfs2fuse+0x1275c2)
    #9 0x55555567e70e in PVFS_sys_getattr (/opt/orangefs/bin/pvfs2fuse+0x12a70e)
    #10 0x555555665504 in pvfs_fuse_getattr_pfhp (/opt/orangefs/bin/pvfs2fuse+0x111504)
    #11 0x5555556664f7 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1124f7)
    #12 0x7ffff710b7a6 in fuse_fs_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0xd7a6)
    #13 0x7ffff710ec5f in fuse_lib_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x10c5f)
    #14 0x7ffff71189a9 in do_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x1a9a9)
    #15 0x7ffff711c72e in fuse_ll_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x1e72e)
    #16 0x7ffff711f155 in fuse_session_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x21155)
    #17 0x7ffff7115702 in fuse_session_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x17702)
    #18 0x7ffff7113e30 in fuse_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x15e30)
    #19 0x7ffff7121bdf in fuse_main_common (/lib/x86_64-linux-gnu/libfuse.so.2+0x23bdf)
    #20 0x7ffff7121c5f in fuse_main_real (/lib/x86_64-linux-gnu/libfuse.so.2+0x23c5f)
    #21 0x55555566bc4f in pvfs_fuse_main (/opt/orangefs/bin/pvfs2fuse+0x117c4f)
    #22 0x55555566cdb0 in main (/opt/orangefs/bin/pvfs2fuse+0x118db0)
    #23 0x7ffff6f280b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #24 0x555555664c8d in _start (/opt/orangefs/bin/pvfs2fuse+0x110c8d)

Address 0x7fffffffe250 is located in stack of thread T0 at offset 0 in frame
    #0 0x5555556663e0 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1123e0)

  This frame has 1 object(s):
    [48, 128) 'pfh' (line 301)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c) 
Shadow bytes around the buggy address:
  0x10007fff7bf0: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c00: 04 f2 00 f3 f3 f3 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f3 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00
=>0x10007fff7c40: 00 00 00 00 00 00 00 00 00 00[f1]f1 f1 f1 f1 f1
  0x10007fff7c50: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00
  0x10007fff7c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==362==ABORTING
opendir(/root/orangefs-client/dfs-0-77) failedremove dir time 2022
-----finish removing dir

VM DIAGNOSIS:
19:44:55  Registers:
info registers vcpu 0
RAX=ffffffff81b939b0 RBX=0000000000000000 RCX=0000000000000000 RDX=ff1100026562e7e0
RSI=ffffffff82407e30 RDI=0000000000ba1b84 RBP=ffffffff82418940 RSP=ffffffff82407ea0
R8 =0000000000ba1b83 R9 =ff110001155e9740 R10=ff1100026562da40 R11=0000000000001400
R12=ffffffff82418940 R13=ffffffff82418940 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81b939bb RFL=00000206 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff07d4000 CR3=0000000113936002 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000002000000000 Opmask01=0000000000000020 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240 0000000000000000
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff72ea64a 000000000de46e4b
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff72ea481
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 656e72656b205d35 35313438352e3320 2020205b0a656e6f 642074696e692067
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 6567206465205d20 2931303128202d20 2020205b0a2d646d 642073696e202067
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 2073657479622032 39393832203a6874 706564206b636174 7320747365746165
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 203732372e322020 2020380a202e2e72 65656120614d2065 6320000a65666165
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
info registers vcpu 1
RAX=00007ffff71c3000 RBX=0000000000000000 RCX=0000000000000001 RDX=0000000000000000
RSI=00007ffff73fd087 RDI=00007fffffffdd90 RBP=00007fffffffe420 RSP=00007fffffffdff0
R8 =0000000000000000 R9 =00007fffffffde80 R10=000000000000000a R11=000000000000004e
R12=0000000000000000 R13=0000000000000000 R14=0000000000000001 R15=0000000000000000
RIP=00007ffff730295a RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff480 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff084e000 CR3=0000000114724005 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000000012001 Opmask01=0000000000000000 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116 00007fffffffe050
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffdff0 0000003000000018
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050 00007fffffffe050
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748caa0 00007ffff7402ef2
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7387d88 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 2525252525252525 2525252525252525 2525252525252525 2525252525252525
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 656d697420726964 2065766f6d657200 0a7325203a726964 2065766f6d657200
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 40484c5105574c41 0540534a48405700 0a5600051f574c41 0540534a48405700
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
