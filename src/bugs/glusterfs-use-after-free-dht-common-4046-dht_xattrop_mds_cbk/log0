r_cnt 5
----- executor 0 executes write_coverage_signal cov->size 7362, flag collect 0
----- executor 0 signal number : 912
----- executor 0 executes write_coverage_signal cov->size 11812, flag collect 0
----- executor 0 signal number : 325
----- executor 0 executes write_coverage_signal cov->size 8812, flag collect 0
----- executor 0 signal number : 417
----- executor 0 executes write_coverage_signal cov->size 20866, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 964
executor 0 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 78, 52, 0
2023/01/25 16:52:00 for select break: 1
2023/01/25 16:52:00 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:00 wait for executor 1's reply
2023/01/25 16:52:00 for select break: 1
2023/01/25 16:52:00 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:00 wait for executor 0's reply
2023/01/25 16:52:00 for select break: 1
2023/01/25 16:52:00 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:00 ------ all executors finish execution
2023/01/25 16:52:00 exec time: 130
2023/01/25 16:52:00 ----- PS len: 4
2023/01/25 16:52:00 [Kernel] executor 3 has 4 replies
2023/01/25 16:52:00 fuzzer receive 1235 signal and 0 cover from kernel component
2023/01/25 16:52:00 fuzzer receive 344 signal and 0 cover from kernel component
2023/01/25 16:52:00 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:00 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:00 fuzzer receive 235 signal and 0 cover from kernel component
2023/01/25 16:52:00 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:00 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:00 ------- fuzzer executor 1 receive 1566 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 1 receive 867 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 2 receive 1738 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 2 receive 856 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 2 receive 278 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 77, 54, 0
2023/01/25 16:52:00 ------- fuzzer executor 1 receive 691 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 1 receive 510 signal and 0 cover from userspace component
2023/01/25 16:52:00 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 2344 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 912 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 325 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 417 signal and 0 cover from userspace component
2023/01/25 16:52:00 ------- fuzzer executor 0 receive 964 signal and 0 cover from userspace component
2023/01/25 16:52:00 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:00 result hanged=false: 
2023/01/25 16:52:00 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:00 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:00 prog length: 3
2023/01/25 16:52:00 HasCrashFail:false HasNetFail:false
16:52:00 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:00 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 792
[11624ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=792 filter=0
remove dir: /root/glusterfs-client/dfs-0-25
[11634ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 79, 53, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[11623ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[11623ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-26 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-26
receive_execute: 1, 79
receive_execute: 1, 80
receive_execute: 3, 79
spawned worker pid 559
spawned worker pid 485
spawned worker pid 485
executor 1 after receive_execute
executor 1 after setup_test
executor 2 after receive_execute
executor 1 before execute_one
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one time: 3, 0
receive_execute: 9, 82
spawned worker pid 478
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [11707ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-26
cover_reset in execute_call
#0 [11722ms] <- mkdir=0x0 errno=14 cover=6756  /root/glusterfs-client/dfs-0-26
----- executor 3 write_call_output, size 6756, pid 478, write pid:479
----- executor 3 executes write_coverage_signal cov->size 6756, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 16
#0 [11723ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-26
cover_reset in execute_call
#0 [11725ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-26
----- executor 3 write_call_output, size 4626, pid 478, write pid:479
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 3
#0 [11725ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-26
cover_reset in execute_call
#0 [11734ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-26
----- executor 3 write_call_output, size 5469, pid 478, write pid:479
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 0
----- executor 3 signal number : 235
----- completed 3
execute_one loop: 0, 0, 9
execute_one inner time: 0, 28, 0
execute_one time: 1, 28
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 91, 30, 0
----- executor 1 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 455
----- executor 0 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 6866, flag collect 0
----- executor 2 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 11215, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 10657, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 2 signal number : 1566
----- executor 1 signal number : 2403
----- executor 2 executes write_coverage_signal cov->size 6874, flag collect 0
----- executor 0 signal number : 1738
----- executor 1 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 2 signal number : 562
----- executor 1 signal number : 825
----- executor 2 executes write_coverage_signal cov->size 8234, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8827, flag collect 0
----- executor 0 signal number : 856
----- executor 0 executes write_coverage_signal cov->size 5215, flag collect 0
----- executor 2 signal number : 925
----- executor 1 signal number : 381
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 15856, flag collect 0
----- executor 0 signal number : 668
----- executor 0 executes write_coverage_signal cov->size 11215, flag collect 0
----- executor 2 signal number : 653
----- executor 1 signal number : 901
----- executor 0 signal number : 149
----- executor 1 executes write_coverage_signal cov->size 14012, flag collect 0
executor 2 userspace cover_cnt 5
executor 0 userspace cover_cnt 6
----- executor 1 signal number : 431
executor 1 userspace cover_cnt 7
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 120
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 235 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 6 replies
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 2403 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 825 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 381 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 901 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1738 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 856 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 668 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 149 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1566 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 562 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 925 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 653 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 431 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 80, 40, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 81, 40, 0
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 82, 39, 0
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(0x0, 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 2 receive testcase
----- executor 0 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
executor 0: prog_data_offset 1296, prog_size 8
----- executor 3 receive testcase
[11747ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[11757ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 752
[11748ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=752 filter=0
remove dir: /root/glusterfs-client/dfs-0-26
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[11747ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 46
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-27 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-27
receive_execute: 5, 73
receive_execute: 6, 73
receive_execute: 4, 74
spawned worker pid 486
spawned worker pid 486
spawned worker pid 560
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 11, 77
spawned worker pid 480
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [11825ms] -> mkdir(0x0, 0x80) 2373 /root/glusterfs-client/dfs-0-27
cover_reset in execute_call
#0 [11825ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-27
----- executor 3 write_call_output, size 0, pid 480, write pid:481
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
#0 [11825ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-27
cover_reset in execute_call
#0 [11827ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4110  /root/glusterfs-client/dfs-0-27
----- executor 3 write_call_output, size 4110, pid 480, write pid:481
----- executor 3 executes write_coverage_signal cov->size 4110, flag collect 0
----- executor 3 signal number : 1237
----- completed 2
execute_one loop: 0, 0, 3
#0 [11827ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-27
cover_reset in execute_call
#0 [11831ms] <- setxattr=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-27
----- executor 3 write_call_output, size 4052, pid 480, write pid:481
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
execute_one inner time: 0, 6, 0
execute_one time: 1, 6
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 443
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 88, 9, 0
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 2942, flag collect 0
----- executor 1 signal number : 554
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 541
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 193
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 256
----- executor 2 signal number : 505
----- executor 1 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
executor 0 userspace cover_cnt 4
----- executor 2 signal number : 1006
executor 1 userspace cover_cnt 5
executor 2 userspace cover_cnt 3
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 79, 14, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 78, 15, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 90
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 1237 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 4 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 541 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 256 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 193 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(0x0, 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 80, 15, 0
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 752
[11841ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=752 filter=0
remove dir: /root/glusterfs-client/dfs-0-27
executor 0: prog_data_offset 1296, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[11851ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[11841ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[11842ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 20
-----finish removing dir
receive_execute: 4, 48
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-28 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-28
receive_execute: 4, 48
receive_execute: 6, 47
spawned worker pid 487
executor 2 after receive_execute
spawned worker pid 561
spawned worker pid 487
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
receive_execute: 8, 51
spawned worker pid 482
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [11893ms] -> mkdir(0x0execute_one time: 3, 0
, 0x80) 2373 /root/glusterfs-client/dfs-0-28
cover_reset in execute_call
#0 [11894ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-28
----- executor 3 write_call_output, size 0, pid 482, write pid:483
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 1, 0
#0 [11894ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-28
cover_reset in execute_call
#0 [11898ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-28
----- executor 3 write_call_output, size 4126, pid 482, write pid:483
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 0
----- executor 3 signal number : 1238
----- completed 2
execute_one loop: 0, 0, 4
#0 [11898ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-28
cover_reset in execute_call
#0 [11901ms] <- setxattr=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-28
----- executor 3 write_call_output, size 4054, pid 482, write pid:483
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 4
execute_one inner time: 0, 9, 0
execute_one time: 1, 9
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
write_metadata
2023/01/25 16:52:01 wait for executor 2's reply
------ execute 3 reply_execute finished
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
time breakdown 3: 59, 11, 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 443
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 391
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 282
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 897
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 1119
----- executor 2 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 6970, flag collect 0
executor 1 userspace cover_cnt 4
----- executor 0 signal number : 391
----- executor 2 signal number : 601
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
executor 0 userspace cover_cnt 3
----- executor 2 signal number : 373
executor 2 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 53, 17, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 68
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 1238 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 897 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 282 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 601 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(0x0, 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[11909ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 752
[11910ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=752 filter=0
remove dir: /root/glusterfs-client/dfs-0-28
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 52, 18, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[11919ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 52, 20, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[11909ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 29
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-29 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-29
receive_execute: 1, 57
receive_execute: 3, 57
receive_execute: 3, 57
spawned worker pid 488
spawned worker pid 488
spawned worker pid 562
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 5, 61
spawned worker pid 484
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [11970ms] -> mkdir(0x0, 0x80) 2373 /root/glusterfs-client/dfs-0-29
cover_reset in execute_call
#0 [11970ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-29
----- executor 3 write_call_output, size 0, pid 484, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
#0 [11970ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-29
cover_reset in execute_call
#0 [11973ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-29
----- executor 3 write_call_output, size 4124, pid 484, write pid:485
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 0
----- executor 3 signal number : 1237
----- completed 2
execute_one loop: 0, 0, 3
#0 [11974ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-29
cover_reset in execute_call
#0 [11976ms] <- setxattr=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-29
----- executor 3 write_call_output, size 4052, pid 484, write pid:485
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
execute_one inner time: 0, 7, 0
execute_one time: 0, 7
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 2682, flag collect 0
----- executor 0 signal number : 490
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 268
----- executor 1 signal number : 554
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 193
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 1006
executor 0 userspace cover_cnt 4
executor 2 userspace cover_cnt 3
executor 1 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
time breakdown 0: 60, 16, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 74
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 1237 signal and 0 cover from kernel component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 60, 17, 0
2023/01/25 16:52:01 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 4 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 490 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 268 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 193 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1006 signal and 0 cover from userspace component
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 66, 9, 0
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 792
[11985ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=792 filter=0
remove dir: /root/glusterfs-client/dfs-0-29
executor 0: prog_data_offset 1296, prog_size 8
[11995ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 58, 16, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[11984ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[11984ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 23
-----finish removing dir
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-30 successfully
receive_execute: 2, 49
receive_execute: 2, 49
receive_execute: 1, 49
current dir: executor 3: /root/glusterfs-client/dfs-0-30
spawned worker pid 489
spawned worker pid 489
executor 2 after receive_execute
spawned worker pid 563
executor 2 after setup_test
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 51
spawned worker pid 486
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12038ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-30
cover_reset in execute_call
#0 [12052ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-30
----- executor 3 write_call_output, size 6770, pid 486, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 15
#0 [12053ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-30
cover_reset in execute_call
#0 [12054ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-30
----- executor 3 write_call_output, size 4626, pid 486, write pid:487
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 2
#0 [12055ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-30
cover_reset in execute_call
#0 [12061ms] <- setxattr=0x0 errno=14 cover=5444  /root/glusterfs-client/dfs-0-30
----- executor 3 write_call_output, size 5444, pid 486, write pid:487
----- executor 3 executes write_coverage_signal cov->size 5444, flag collect 0
----- executor 3 signal number : 235
----- completed 3
execute_one loop: 0, 0, 7
execute_one inner time: 1, 24, 0
execute_one time: 1, 25
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 10321, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 2 signal number : 457
----- executor 0 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 1565
----- executor 1 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 14259, flag collect 0
----- executor 1 signal number : 867
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 1735
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 57, 27, 0
----- executor 1 signal number : 691
----- executor 1 executes write_coverage_signal cov->size 5986, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 1 signal number : 297
----- executor 0 signal number : 856
----- executor 2 signal number : 2038
----- executor 2 executes write_coverage_signal cov->size 16089, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 11209, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 540
----- executor 0 executes write_coverage_signal cov->size 5215, flag collect 0
----- executor 2 signal number : 1218
----- executor 2 executes write_coverage_signal cov->size 12253, flag collect 0
----- executor 0 signal number : 280
----- executor 2 signal number : 1201
----- executor 2 executes write_coverage_signal cov->size 725, flag collect 0
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 22
----- executor 2 executes write_coverage_signal cov->size 14008, flag collect 0
----- executor 2 signal number : 433
executor 2 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 50, 34, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 86
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 7 replies
write_metadata
------ execute 2 reply_execute finished
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1565 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2038 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 867 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1218 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 691 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 297 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1201 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 22 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 433 signal and 0 cover from userspace component
time breakdown 2: 51, 37, 0
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 856 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 540 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 280 signal and 0 cover from userspace component
2023/01/25 16:52:01 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 235 signal and 0 cover from kernel component
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 51, 36, 0
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 752
[12074ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=752 filter=0
executor 1: prog_data_offset 1304, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-30
executor 0: prog_data_offset 1296, prog_size 8
[12074ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[12084ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12074ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 46
-----finish removing dir
mkdir time 22
executor 3 create dir /root/glusterfs-client/dfs-0-31 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-31
receive_execute: 4, 68
receive_execute: 7, 68
receive_execute: 5, 68
spawned worker pid 490
spawned worker pid 490
spawned worker pid 564
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 12, 71
spawned worker pid 488
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12147ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-31
cover_reset in execute_call
#0 [12162ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-31
----- executor 3 write_call_output, size 6770, pid 488, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 15
#0 [12162ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-31
cover_reset in execute_call
#0 [12162ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-31
----- executor 3 write_call_output, size 0, pid 488, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
#0 [12162ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-31
cover_reset in execute_call
#0 [12168ms] <- setxattr=0x0 errno=14 cover=3478  /root/glusterfs-client/dfs-0-31
----- executor 3 write_call_output, size 3478, pid 488, write pid:489
----- executor 3 executes write_coverage_signal cov->size 3478, flag collect 0
----- executor 3 signal number : 661
----- completed 3
execute_one loop: 0, 0, 5
execute_one inner time: 0, 21, 0
execute_one time: 1, 21
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 83, 23, 0
----- executor 2 executes write_coverage_signal cov->size 8960, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 456
----- executor 1 signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 700, flag collect 0
----- executor 0 signal number : 1557
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 10659, flag collect 0
----- executor 1 signal number : 812
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 538
----- executor 1 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 1 signal number : 643
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 2399
----- executor 2 executes write_coverage_signal cov->size 14586, flag collect 0
----- executor 2 signal number : 1132
----- executor 2 executes write_coverage_signal cov->size 10387, flag collect 0
----- executor 2 signal number : 319
----- executor 0 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 0 signal number : 795
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 122
----- executor 0 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 0 signal number : 642
executor 0 userspace cover_cnt 5
----- executor 2 executes write_coverage_signal cov->size 729, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 15948, flag collect 0
----- executor 2 signal number : 754
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 73, 31, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 100
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:01 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 795 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 122 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 812 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 642 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 643 signal and 0 cover from userspace component
2023/01/25 16:52:01 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 661 signal and 0 cover from kernel component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2399 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1132 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 754 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 72, 32, 0
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 752
[12176ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=752 filter=0
remove dir: /root/glusterfs-client/dfs-0-31
[12186ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 75, 32, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[12176ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12176ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

remove dir time 48
-----finish removing dir
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-32 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-32
receive_execute: 3, 76
receive_execute: 2, 76
receive_execute: 2, 76
spawned worker pid 491
spawned worker pid 565
spawned worker pid 491
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 7, 80
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
spawned worker pid 490
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12258ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-32
cover_reset in execute_call
#0 [12273ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-32
----- executor 3 write_call_output, size 6770, pid 490, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 18
#0 [12275ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-32
cover_reset in execute_call
#0 [12276ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-32
----- executor 3 write_call_output, size 0, pid 490, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
#0 [12276ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-32
cover_reset in execute_call
#0 [12282ms] <- setxattr=0x0 errno=14 cover=3478  /root/glusterfs-client/dfs-0-32
----- executor 3 write_call_output, size 3478, pid 490, write pid:491
----- executor 3 executes write_coverage_signal cov->size 3478, flag collect 0
----- executor 3 signal number : 661
----- completed 3
execute_one loop: 0, 0, 7
execute_one inner time: 0, 26, 0
execute_one time: 1, 26
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 5507, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 10659, flag collect 0
----- executor 0 signal number : 444
----- executor 1 signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 6591, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 2 signal number : 2400
----- executor 2 executes write_coverage_signal cov->size 7181, flag collect 0
----- executor 1 signal number : 885
----- executor 1 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 0 signal number : 1755
----- executor 2 signal number : 861
----- executor 2 executes write_coverage_signal cov->size 16672, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 1 signal number : 690
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 1 signal number : 306
----- executor 0 signal number : 781
----- executor 2 signal number : 640
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 8061, flag collect 0
----- executor 0 signal number : 508
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 424
----- executor 0 signal number : 79
executor 2 userspace cover_cnt 7
executor 0 userspace cover_cnt 5
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 87, 28, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 78, 36, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 113
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 661 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2400 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 861 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 640 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1755 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 781 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 508 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 79, 37, 0
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 885 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 690 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 306 signal and 0 cover from userspace component
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 752
[12291ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=752 filter=0
remove dir: /root/glusterfs-client/dfs-0-32
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 78, 36, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[12291ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12291ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[12301ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 49
-----finish removing dir
receive_execute: 3, 75
spawned worker pid 492
executor 2 after receive_execute
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-33 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-33
receive_execute: 3, 75
spawned worker pid 492
receive_execute: 2, 75
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 566
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 6, 81
spawned worker pid 492
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12373ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-33
cover_reset in execute_call
#0 [12389ms] <- mkdir=0x0 errno=14 cover=6742  /root/glusterfs-client/dfs-0-33
----- executor 3 write_call_output, size 6742, pid 492, write pid:493
----- executor 3 executes write_coverage_signal cov->size 6742, flag collect 0
----- executor 3 signal number : 1580
----- completed 1
execute_one loop: 0, 0, 16
#0 [12390ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-33
cover_reset in execute_call
#0 [12392ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-33
----- executor 3 write_call_output, size 0, pid 492, write pid:493
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 3
#0 [12393ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-33
cover_reset in execute_call
#0 [12401ms] <- setxattr=0x0 errno=14 cover=3478  /root/glusterfs-client/dfs-0-33
----- executor 3 write_call_output, size 3478, pid 492, write pid:493
----- executor 3 executes write_coverage_signal cov->size 3478, flag collect 0
----- executor 3 signal number : 665
----- completed 3
execute_one loop: 0, 0, 9
execute_one inner time: 0, 29, 0
execute_one time: 1, 29
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 87, 31, 0
----- executor 2 executes write_coverage_signal cov->size 8960, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 700, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 10659, flag collect 0
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 1 signal number : 1755
----- executor 1 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 0 signal number : 812
----- executor 0 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 2 signal number : 2399
----- executor 2 executes write_coverage_signal cov->size 14655, flag collect 0
----- executor 0 signal number : 1046
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 781
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 138
----- executor 1 signal number : 456
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 1132
----- executor 2 executes write_coverage_signal cov->size 15948, flag collect 0
----- executor 1 signal number : 131
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 940
----- executor 2 executes write_coverage_signal cov->size 729, flag collect 0
----- executor 2 signal number : 19
----- executor 2 executes write_coverage_signal cov->size 10387, flag collect 0
----- executor 2 signal number : 143
executor 1 userspace cover_cnt 5
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
time breakdown 0: 77, 41, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 119
2023/01/25 16:52:01 ----- PS len: 4
write_metadata
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 1580 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 665 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1755 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 812 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 781 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2399 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1046 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 131 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 1132 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 940 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 19 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 143 signal and 0 cover from userspace component
------ execute 1 reply_execute finished
time breakdown 1: 78, 44, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 78, 41, 0
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 736
[12415ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=736 filter=0
remove dir: /root/glusterfs-client/dfs-0-33
executor 0: prog_data_offset 1296, prog_size 8
[12415ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
[12426ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 2: prog_data_offset 1312, prog_size 8
[12415ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 41
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-34 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-34
receive_execute: 4, 68
receive_execute: 8, 68
receive_execute: 6, 68
spawned worker pid 567
spawned worker pid 493
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
spawned worker pid 493
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 12, 72
spawned worker pid 494
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12489ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-34
cover_reset in execute_call
#0 [12506ms] <- mkdir=0x0 errno=14 cover=6754  /root/glusterfs-client/dfs-0-34
----- executor 3 write_call_output, size 6754, pid 494, write pid:495
----- executor 3 executes write_coverage_signal cov->size 6754, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 18
#0 [12506ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-34
cover_reset in execute_call
#0 [12507ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1207  /root/glusterfs-client/dfs-0-34
----- executor 3 write_call_output, size 1207, pid 494, write pid:495
----- executor 3 executes write_coverage_signal cov->size 1207, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 0
#0 [12507ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-34
cover_reset in execute_call
#0 [12512ms] <- setxattr=0x0 errno=14 cover=2274  /root/glusterfs-client/dfs-0-34
----- executor 3 write_call_output, size 2274, pid 494, write pid:495
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 0
----- executor 3 signal number : 366
----- completed 3
execute_one loop: 0, 0, 6
execute_one inner time: 0, 24, 0
execute_one time: 1, 25
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 1 signal number : 812
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 5971, flag collect 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 84, 27, 0
----- executor 2 executes write_coverage_signal cov->size 5506, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 10659, flag collect 0
----- executor 2 signal number : 2400
----- executor 2 executes write_coverage_signal cov->size 7181, flag collect 0
----- executor 2 signal number : 860
----- executor 2 executes write_coverage_signal cov->size 8773, flag collect 0
----- executor 2 signal number : 487
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 2 signal number : 291
----- executor 2 executes write_coverage_signal cov->size 15967, flag collect 0
----- executor 0 signal number : 795
----- executor 0 executes write_coverage_signal cov->size 4573, flag collect 0
----- executor 0 signal number : 268
----- executor 2 signal number : 585
----- executor 0 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 0 signal number : 642
executor 0 userspace cover_cnt 5
executor 2 userspace cover_cnt 7
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 76, 36, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 105
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 366 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 795 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 268 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2400 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 642 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 812 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 860 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 643 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 487 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 291 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 585 signal and 0 cover from userspace component
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 3 receive testcase
----- executor 1 signal number : 538
----- executor 1 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 1 signal number : 643
executor 1 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 72, 35, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[12521ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12521ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 736
[12522ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=736 filter=0
remove dir: /root/glusterfs-client/dfs-0-34
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 74, 37, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[12531ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 51
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-35 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-35
receive_execute: 1, 82
receive_execute: 2, 82
receive_execute: 2, 82
spawned worker pid 494
spawned worker pid 494
spawned worker pid 568
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 8, 87
spawned worker pid 496
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12610ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-35
cover_reset in execute_call
#0 [12623ms] <- mkdir=0x0 errno=14 cover=6732  /root/glusterfs-client/dfs-0-35
----- executor 3 write_call_output, size 6732, pid 496, write pid:497
----- executor 3 executes write_coverage_signal cov->size 6732, flag collect 0
----- executor 3 signal number : 1580
----- completed 1
execute_one loop: 0, 0, 14
#0 [12623ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-35
cover_reset in execute_call
#0 [12624ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1204  /root/glusterfs-client/dfs-0-35
----- executor 3 write_call_output, size 1204, pid 496, write pid:497
----- executor 3 executes write_coverage_signal cov->size 1204, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 0
#0 [12624ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-35
cover_reset in execute_call
#0 [12631ms] <- setxattr=0x0 errno=14 cover=2274  /root/glusterfs-client/dfs-0-35
----- executor 3 write_call_output, size 2274, pid 496, write pid:497
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 0
----- executor 3 signal number : 370
----- completed 3
execute_one loop: 0, 0, 7
execute_one inner time: 0, 21, 0
execute_one time: 1, 21
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 5508, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 0 signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 2 signal number : 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 95, 24, 0
----- executor 2 executes write_coverage_signal cov->size 12257, flag collect 0
----- executor 1 signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 0 signal number : 795
----- executor 0 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 1 signal number : 795
----- executor 0 signal number : 356
----- executor 0 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 0 signal number : 640
----- executor 2 signal number : 2440
----- executor 2 executes write_coverage_signal cov->size 7190, flag collect 0
----- executor 1 signal number : 689
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 80
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 860
----- executor 2 executes write_coverage_signal cov->size 8770, flag collect 0
----- executor 2 signal number : 454
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 291
----- executor 2 executes write_coverage_signal cov->size 14378, flag collect 0
----- executor 2 signal number : 570
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 83, 34, 0
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 1's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:01 wait for executor 0's reply
2023/01/25 16:52:01 for select break: 1
2023/01/25 16:52:01 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:01 ------ all executors finish execution
2023/01/25 16:52:01 exec time: 119
2023/01/25 16:52:01 ----- PS len: 4
2023/01/25 16:52:01 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:01 fuzzer receive 1580 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:01 fuzzer receive 370 signal and 0 cover from kernel component
2023/01/25 16:52:01 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 795 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 356 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 0 receive 640 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 84, 37, 0
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 795 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 689 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/01/25 16:52:01 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 2440 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 860 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 454 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 291 signal and 0 cover from userspace component
2023/01/25 16:52:01 ------- fuzzer executor 2 receive 570 signal and 0 cover from userspace component
2023/01/25 16:52:01 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:01 result hanged=false: 
2023/01/25 16:52:01 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:01 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:01 prog length: 3
2023/01/25 16:52:01 HasCrashFail:false HasNetFail:false
16:52:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:01 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12642ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 736
[12642ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=736 filter=0
remove dir: /root/glusterfs-client/dfs-0-35
executor 0: prog_data_offset 1296, prog_size 8
[12652ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 84, 35, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[12642ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 46
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-36 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-36
receive_execute: 2, 72
spawned worker pid 495
receive_execute: 4, 72
spawned worker pid 495
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 5, 72
spawned worker pid 569
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 9, 83
spawned worker pid 498
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12726ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-36
cover_reset in execute_call
#0 [12740ms] <- mkdir=0x0 errno=14 cover=6764  /root/glusterfs-client/dfs-0-36
----- executor 3 write_call_output, size 6764, pid 498, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6764, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 16
#0 [12742ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-36
cover_reset in execute_call
#0 [12744ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1204  /root/glusterfs-client/dfs-0-36
----- executor 3 write_call_output, size 1204, pid 498, write pid:499
----- executor 3 executes write_coverage_signal cov->size 1204, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 3
#0 [12745ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-36
cover_reset in execute_call
#0 [12751ms] <- setxattr=0x0 errno=14 cover=2274  /root/glusterfs-client/dfs-0-36
----- executor 3 write_call_output, size 2274, pid 498, write pid:499
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 0
----- executor 3 signal number : 366
----- completed 3
execute_one loop: 0, 0, 7
execute_one inner time: 0, 26, 0
execute_one time: 1, 26
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5560, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 signal number : 74
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 4102, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 10659, flag collect 0
----- executor 1 signal number : 1755
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 2400
----- executor 2 executes write_coverage_signal cov->size 9434, flag collect 0
----- executor 1 signal number : 781
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 425
----- executor 1 signal number : 508
----- executor 1 executes write_coverage_signal cov->size 3943, flag collect 0
----- executor 2 signal number : 839
----- executor 2 executes write_coverage_signal cov->size 8778, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6227, flag collect 0
----- executor 1 signal number : 100
----- executor 0 signal number : 1753
----- executor 2 signal number : 330
----- executor 2 executes write_coverage_signal cov->size 5719, flag collect 0
----- executor 2 signal number : 300
----- executor 2 executes write_coverage_signal cov->size 15943, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5971, flag collect 0
----- executor 2 signal number : 741
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 784
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 457
executor 2 userspace cover_cnt 7
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 131
executor 0 userspace cover_cnt 7
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
write_metadata
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 76, 44, 0
------ execute 2 reply_execute finished
time breakdown 2: 74, 44, 0
time breakdown 3: 92, 29, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 117
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:02 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/01/25 16:52:02 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:02 fuzzer receive 366 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1755 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 2400 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 781 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 839 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 330 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 508 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 100 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 300 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 741 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 77, 45, 0
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 425 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1753 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 784 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 131 signal and 0 cover from userspace component
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[12773ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[12763ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12763ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 712
[12763ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=712 filter=0
remove dir: /root/glusterfs-client/dfs-0-36
remove dir time 42
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-37 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-37
receive_execute: 1, 68
receive_execute: 4, 68
receive_execute: 5, 68
spawned worker pid 570
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 496
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
spawned worker pid 496
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 10, 74
execute_one inner time: 0, 0, 0
execute_one time: 7, 0
spawned worker pid 500
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12840ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-37
cover_reset in execute_call
#0 [12856ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-37
----- executor 3 write_call_output, size 6770, pid 500, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 17
#0 [12857ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x1) 3673 /root/glusterfs-client/dfs-0-37
cover_reset in execute_call
#0 [12859ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-37
----- executor 3 write_call_output, size 4611, pid 500, write pid:501
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 3
#0 [12860ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-37
cover_reset in execute_call
#0 [12870ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-37
----- executor 3 write_call_output, size 5469, pid 500, write pid:501
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 0
----- executor 3 signal number : 239
----- completed 3
execute_one loop: 0, 0, 10
execute_one inner time: 0, 30, 0
execute_one time: 2, 30
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 74
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5069, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 10319, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 0 signal number : 425
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 84, 34, 0
----- executor 0 executes write_coverage_signal cov->size 5212, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 11957, flag collect 0
----- executor 1 signal number : 455
----- executor 1 executes write_coverage_signal cov->size 6871, flag collect 0
----- executor 0 signal number : 1321
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 1 signal number : 1576
----- executor 1 executes write_coverage_signal cov->size 8344, flag collect 0
----- executor 0 signal number : 883
----- executor 0 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 2 signal number : 1964
----- executor 2 executes write_coverage_signal cov->size 729, flag collect 0
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 16020, flag collect 0
----- executor 1 signal number : 969
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 549
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 1020
----- executor 1 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 0 signal number : 648
----- executor 2 signal number : 1363
----- executor 2 executes write_coverage_signal cov->size 16075, flag collect 0
----- executor 1 signal number : 173
executor 0 userspace cover_cnt 6
----- executor 2 signal number : 964
----- executor 2 executes write_coverage_signal cov->size 12526, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 362
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 72, 44, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 69, 46, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 114
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 239 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 6 replies
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1576 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1964 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 969 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1020 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 173 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1363 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 964 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 362 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 425 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1321 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 883 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 549 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 648 signal and 0 cover from userspace component
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[12881ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 712
[12881ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=712 filter=0
remove dir: /root/glusterfs-client/dfs-0-37
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 73, 46, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[12881ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[12891ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
receive_execute: 5, 77
receive_execute: 4, 76
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-38 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-38
receive_execute: 3, 77
spawned worker pid 571
spawned worker pid 497
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 497
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 0 after receive_execute
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 9, 80
spawned worker pid 502
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [12963ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-38
cover_reset in execute_call
#0 [12978ms] <- mkdir=0x0 errno=14 cover=8886  /root/glusterfs-client/dfs-0-38
----- executor 3 write_call_output, size 8886, pid 502, write pid:503
----- executor 3 executes write_coverage_signal cov->size 8886, flag collect 0
----- executor 3 signal number : 1641
----- completed 1
execute_one loop: 0, 0, 17
#0 [12979ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-38
cover_reset in execute_call
#0 [12983ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-38
----- executor 3 write_call_output, size 4611, pid 502, write pid:503
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 603
----- completed 2
execute_one loop: 0, 0, 4
#0 [12984ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-38
cover_reset in execute_call
#0 [12991ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-38
----- executor 3 write_call_output, size 5469, pid 502, write pid:503
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 0
----- executor 3 signal number : 243
----- completed 3
execute_one loop: 0, 0, 8
execute_one inner time: 0, 29, 0
execute_one time: 2, 29
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 89, 32, 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 5432, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 5432, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1405, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 448
----- executor 0 executes write_coverage_signal cov->size 10297, flag collect 0
----- executor 2 signal number : 1739
----- executor 2 executes write_coverage_signal cov->size 8305, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 9962, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 8812, flag collect 0
----- executor 2 signal number : 929
----- executor 2 executes write_coverage_signal cov->size 9962, flag collect 0
----- executor 1 signal number : 1460
----- executor 1 executes write_coverage_signal cov->size 8305, flag collect 0
----- executor 0 signal number : 1785
----- executor 2 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 8126, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 16412, flag collect 0
----- executor 1 signal number : 930
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 1039
----- executor 1 executes write_coverage_signal cov->size 8126, flag collect 0
----- executor 2 signal number : 222
----- executor 0 signal number : 1263
----- executor 0 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 0 signal number : 6
----- executor 1 signal number : 230
----- executor 0 executes write_coverage_signal cov->size 17654, flag collect 0
executor 2 userspace cover_cnt 6
----- executor 0 signal number : 1657
----- executor 0 executes write_coverage_signal cov->size 17315, flag collect 0
executor 1 userspace cover_cnt 6
----- executor 0 signal number : 506
executor 0 userspace cover_cnt 7
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 80, 40, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 118
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1641 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 603 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 243 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 6 replies
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 448 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1785 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1263 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 82, 41, 0
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1739 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 929 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 222 signal and 0 cover from userspace component
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 6 replies
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1460 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 930 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1039 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 230 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1657 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 506 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 80, 41, 0
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(0x0, &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13013ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 1: prog_data_offset 1304, prog_size 8
[13003ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 672
[13003ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=672 filter=0
remove dir: /root/glusterfs-client/dfs-0-38
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[13003ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 41
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-39 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-39
receive_execute: 4, 65
receive_execute: 3, 66
receive_execute: 5, 66
spawned worker pid 498
executor 1 after receive_execute
spawned worker pid 498
spawned worker pid 572
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 10, 69
spawned worker pid 504
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13073ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-39
cover_reset in execute_call
#0 [13087ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-39
----- executor 3 write_call_output, size 6770, pid 504, write pid:505
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 14
#0 [13087ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-39
cover_reset in execute_call
#0 [13090ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-39
----- executor 3 write_call_output, size 4611, pid 504, write pid:505
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 3
#0 [13090ms] -> setxattr(0x0, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-39
cover_reset in execute_call
#0 [13090ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-39
----- executor 3 write_call_output, size 0, pid 504, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
execute_one inner time: 0, 17, 0
execute_one time: 1, 17
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8306, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 79, 21, 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 9902, flag collect 0
----- executor 0 signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 1557
----- executor 0 signal number : 782
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 2195
----- executor 2 executes write_coverage_signal cov->size 13030, flag collect 0
----- executor 1 signal number : 796
----- executor 1 executes write_coverage_signal cov->size 4431, flag collect 0
----- executor 0 signal number : 530
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 81
----- executor 1 signal number : 222
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 1018
----- executor 2 executes write_coverage_signal cov->size 9470, flag collect 0
----- executor 1 signal number : 645
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 524
----- executor 2 executes write_coverage_signal cov->size 11146, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 336
executor 2 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 69, 28, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 96
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 2195 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1018 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 782 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 530 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 524 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 336 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 796 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 222 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 645 signal and 0 cover from userspace component
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(0x0, &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 672
[13101ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=672 filter=0
remove dir: /root/glusterfs-client/dfs-0-39
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13111ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 71, 30, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[13100ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 69, 29, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13100ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 47
-----finish removing dir
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-40 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-40
receive_execute: 3, 77
receive_execute: 4, 77
receive_execute: 2, 77
spawned worker pid 499
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
spawned worker pid 499
spawned worker pid 573
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 1 after receive_execute
executor 0 before execute_one
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 3, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 8, 80
spawned worker pid 506
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13183ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-40
cover_reset in execute_call
#0 [13209ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-40
----- executor 3 write_call_output, size 6751, pid 506, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 27
#0 [13210ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-40
cover_reset in execute_call
#0 [13213ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4616  /root/glusterfs-client/dfs-0-40
----- executor 3 write_call_output, size 4616, pid 506, write pid:507
----- executor 3 executes write_coverage_signal cov->size 4616, flag collect 0
----- executor 3 signal number : 604
----- completed 2
execute_one loop: 0, 0, 4
#0 [13213ms] -> setxattr(0x0, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-40
cover_reset in execute_call
#0 [13214ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-40
----- executor 3 write_call_output, size 0, pid 506, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
execute_one inner time: 0, 32, 0
execute_one time: 2, 32
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 88, 36, 0
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1404, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 448
----- executor 0 executes write_coverage_signal cov->size 6902, flag collect 0
----- executor 2 signal number : 1735
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 1 signal number : 1392
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6668, flag collect 0
----- executor 2 signal number : 782
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 530
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 1992
----- executor 2 signal number : 81
----- executor 1 signal number : 903
----- executor 0 executes write_coverage_signal cov->size 11572, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 1020
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1040
executor 2 userspace cover_cnt 5
----- executor 0 executes write_coverage_signal cov->size 1457, flag collect 0
----- executor 0 signal number : 4
----- executor 1 signal number : 156
----- executor 0 executes write_coverage_signal cov->size 9575, flag collect 0
----- executor 0 signal number : 834
----- executor 0 executes write_coverage_signal cov->size 12683, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 227
executor 0 userspace cover_cnt 7
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 79, 44, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 80, 43, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 122
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 604 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 448 signal and 0 cover from userspace component
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1392 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 903 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1020 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 156 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1992 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1040 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 834 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 227 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 782 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(0x0, &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
----- executor 2 receive testcase
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

executor 2: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
[13227ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 672
[13227ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=672 filter=0
remove dir: /root/glusterfs-client/dfs-0-40
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13226ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 81, 46, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13237ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-41 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-41
receive_execute: 5, 78
receive_execute: 3, 78
receive_execute: 6, 77
spawned worker pid 500
spawned worker pid 500
spawned worker pid 574
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
execute_one inner time: 0, 0, 0
executor 0 before execute_one
execute_one time: 2, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 after receive_execute
executor 2 after setup_test
receive_execute: 10, 81
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
spawned worker pid 508
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13310ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-41
cover_reset in execute_call
#0 [13329ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-41
----- executor 3 write_call_output, size 6770, pid 508, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 20
#0 [13330ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-41
cover_reset in execute_call
#0 [13334ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-41
----- executor 3 write_call_output, size 4611, pid 508, write pid:509
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 5
#0 [13335ms] -> setxattr(0x0, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-41
cover_reset in execute_call
#0 [13336ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-41
----- executor 3 write_call_output, size 0, pid 508, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
execute_one inner time: 0, 27, 0
execute_one time: 2, 27
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 91, 31, 0
----- executor 2 executes write_coverage_signal cov->size 7604, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 signal number : 444
----- executor 2 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 1 signal number : 444
----- executor 2 signal number : 0
----- executor 0 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 signal number : 1735
----- executor 2 signal number : 1992
----- executor 0 signal number : 813
----- executor 2 executes write_coverage_signal cov->size 12929, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 1038
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 12778, flag collect 0
----- executor 0 signal number : 151
----- executor 2 signal number : 928
executor 0 userspace cover_cnt 5
----- executor 2 executes write_coverage_signal cov->size 725, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 11066, flag collect 0
----- executor 2 signal number : 133
executor 2 userspace cover_cnt 7
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 signal number : 782
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 530
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 81
executor 1 userspace cover_cnt 5
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 118
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1992 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 782 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 530 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1038 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 928 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 151 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 83, 39, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 81, 40, 0
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', 0x0, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
----- executor 3 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13361ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 608
[13352ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=608 filter=0
[13351ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 83, 41, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[13351ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-41
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

remove dir time 55
-----finish removing dir
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-42 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-42
receive_execute: 7, 85
receive_execute: 6, 85
receive_execute: 8, 86
spawned worker pid 575
spawned worker pid 501
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after receive_execute
spawned worker pid 501
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
execute_one time: 2, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 1
execute_one time: 3, 1
receive_execute: 13, 92
spawned worker pid 510
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13446ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-42
cover_reset in execute_call
#0 [13461ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-42
----- executor 3 write_call_output, size 6751, pid 510, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 16
#0 [13462ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-42
cover_reset in execute_call
#0 [13468ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-42
----- executor 3 write_call_output, size 4611, pid 510, write pid:511
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 7
#0 [13469ms] -> setxattr(0x20001880, 0x0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-42
cover_reset in execute_call
#0 [13470ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-42
----- executor 3 write_call_output, size 0, pid 510, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
execute_one inner time: 0, 25, 0
execute_one time: 2, 25
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 105, 28, 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4586, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 8812, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 1871, flag collect 0
----- executor 1 signal number : 202
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 645
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 953
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 662
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 1 signal number : 1562
----- executor 1 executes write_coverage_signal cov->size 5705, flag collect 0
----- executor 1 signal number : 867
----- executor 1 executes write_coverage_signal cov->size 819, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 1 signal number : 692
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 1082
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 2 signal number : 777
----- executor 2 executes write_coverage_signal cov->size 8051, flag collect 0
----- executor 1 signal number : 151
----- executor 2 signal number : 163
----- executor 0 signal number : 1819
----- executor 0 executes write_coverage_signal cov->size 725, flag collect 0
----- executor 0 signal number : 300
executor 1 userspace cover_cnt 7
----- executor 0 executes write_coverage_signal cov->size 12309, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 745
----- executor 0 executes write_coverage_signal cov->size 9575, flag collect 0
----- executor 0 signal number : 833
----- executor 0 executes write_coverage_signal cov->size 12679, flag collect 0
----- executor 0 signal number : 229
executor 0 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 94, 39, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 91, 41, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 126
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 662 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1819 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 300 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 93, 40, 0
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 745 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 833 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 229 signal and 0 cover from userspace component
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 202 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1562 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 867 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 692 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 151 signal and 0 cover from userspace component
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 645 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 953 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1082 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 777 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 163 signal and 0 cover from userspace component
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', 0x0, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13491ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13480ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 608
[13481ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=608 filter=0
remove dir: /root/glusterfs-client/dfs-0-42
executor 2: prog_data_offset 1312, prog_size 8
[13481ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 44
-----finish removing dir
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-43 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-43
receive_execute: 4, 74
receive_execute: 3, 74
receive_execute: 0, 74
spawned worker pid 576
spawned worker pid 502
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
spawned worker pid 502
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 after receive_execute
executor 2 after setup_test
receive_execute: 9, 77
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
spawned worker pid 512
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13559ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-43
cover_reset in execute_call
#0 [13578ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-43
----- executor 3 write_call_output, size 6770, pid 512, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 19
#0 [13578ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-43
cover_reset in execute_call
#0 [13582ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-43
----- executor 3 write_call_output, size 4611, pid 512, write pid:513
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 3
#0 [13582ms] -> setxattr(0x20001880, 0x0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-43
cover_reset in execute_call
#0 [13582ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-43
----- executor 3 write_call_output, size 0, pid 512, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
execute_one inner time: 0, 23, 0
execute_one time: 1, 23
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 86, 26, 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 7604, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 6489, flag collect 0
----- executor 2 signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 12310, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 signal number : 796
----- executor 2 signal number : 1025
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 9871, flag collect 0
----- executor 1 signal number : 690
----- executor 2 signal number : 1159
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 725, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 15764, flag collect 0
----- executor 1 signal number : 83
----- executor 2 signal number : 597
executor 1 userspace cover_cnt 5
executor 2 userspace cover_cnt 7
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 signal number : 796
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 690
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 83
executor 0 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 77, 34, 0
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 1's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:02 wait for executor 0's reply
2023/01/25 16:52:02 for select break: 1
2023/01/25 16:52:02 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:02 ------ all executors finish execution
2023/01/25 16:52:02 exec time: 110
2023/01/25 16:52:02 ----- PS len: 4
2023/01/25 16:52:02 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:02 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:02 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:02 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:02 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:02 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 796 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1288 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 690 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1025 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 1159 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 2 receive 597 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 74, 35, 0
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 796 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 690 signal and 0 cover from userspace component
2023/01/25 16:52:02 ------- fuzzer executor 1 receive 83 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 78, 35, 0
2023/01/25 16:52:02 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:02 result hanged=false: 
2023/01/25 16:52:02 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:02 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:02 prog length: 3
2023/01/25 16:52:02 HasCrashFail:false HasNetFail:false
16:52:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', 0x0, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:02 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13595ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[13605ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 608
[13595ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=608 filter=0
remove dir: /root/glusterfs-client/dfs-0-43
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13595ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 55
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-44 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-44
receive_execute: 6, 80
receive_execute: 6, 81
receive_execute: 4, 81
spawned worker pid 503
spawned worker pid 503
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 577
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 11, 84
spawned worker pid 514
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13680ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-44
cover_reset in execute_call
#0 [13699ms] <- mkdir=0x0 errno=14 cover=6747  /root/glusterfs-client/dfs-0-44
----- executor 3 write_call_output, size 6747, pid 514, write pid:515
----- executor 3 executes write_coverage_signal cov->size 6747, flag collect 0
----- executor 3 signal number : 1581
----- completed 1
execute_one loop: 0, 0, 20
#0 [13700ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-44
cover_reset in execute_call
#0 [13702ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4614  /root/glusterfs-client/dfs-0-44
----- executor 3 write_call_output, size 4614, pid 514, write pid:515
----- executor 3 executes write_coverage_signal cov->size 4614, flag collect 0
----- executor 3 signal number : 606
----- completed 2
execute_one loop: 0, 0, 2
#0 [13702ms] -> setxattr(0x20001880, 0x0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-44
cover_reset in execute_call
#0 [13702ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-44
----- executor 3 write_call_output, size 0, pid 514, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
execute_one inner time: 0, 22, 0
execute_one time: 1, 22
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3451, flag collect 0
----- executor 2 signal number : 813
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 455
----- executor 1 executes write_coverage_signal cov->size 4856, flag collect 0
----- executor 2 signal number : 538
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 646
----- executor 0 signal number : 1557
----- executor 1 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 796
----- executor 1 executes write_coverage_signal cov->size 14152, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 690
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 2063
----- executor 1 executes write_coverage_signal cov->size 4330, flag collect 0
----- executor 0 signal number : 83
----- executor 1 signal number : 821
----- executor 1 executes write_coverage_signal cov->size 9434, flag collect 0
executor 0 userspace cover_cnt 5
----- executor 1 signal number : 187
----- executor 1 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 1 signal number : 840
----- executor 1 executes write_coverage_signal cov->size 9692, flag collect 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 85, 32, 0
----- executor 1 signal number : 137
executor 1 userspace cover_cnt 7
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 118
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 fuzzer receive 1581 signal and 0 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 606 signal and 0 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 2063 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 821 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 187 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 840 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 137 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 86, 37, 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 95, 25, 0
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 796 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 690 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 646 signal and 0 cover from userspace component
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 1);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, 0x0, 0x0, 0x1)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 1);

----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13716ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 2: prog_data_offset 1312, prog_size 8
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 87, 34, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13727ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[13717ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 648
[13717ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=648 filter=0
remove dir: /root/glusterfs-client/dfs-0-44
remove dir time 41
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-45 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-45
receive_execute: 7, 67
receive_execute: 7, 67
receive_execute: 4, 68
spawned worker pid 504
spawned worker pid 578
spawned worker pid 504
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 2, 0
receive_execute: 13, 70
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 516
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13789ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-45
cover_reset in execute_call
#0 [13803ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-45
----- executor 3 write_call_output, size 6770, pid 516, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 15
#0 [13804ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-45
cover_reset in execute_call
#0 [13807ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-45
----- executor 3 write_call_output, size 4611, pid 516, write pid:517
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 3
#0 [13807ms] -> setxattr(0x20001880, 0x200018c0, 0x0, 0x0, 0x1) 3662 /root/glusterfs-client/dfs-0-45
cover_reset in execute_call
#0 [13814ms] <- setxattr=0x0 errno=14 cover=5429  /root/glusterfs-client/dfs-0-45
----- executor 3 write_call_output, size 5429, pid 516, write pid:517
----- executor 3 executes write_coverage_signal cov->size 5429, flag collect 0
----- executor 3 signal number : 235
----- completed 3
execute_one loop: 0, 0, 7
execute_one inner time: 0, 26, 0
execute_one time: 1, 27
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 83, 29, 0
----- executor 2 executes write_coverage_signal cov->size 5560, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 5460, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 2 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 15849, flag collect 0
----- executor 0 signal number : 856
----- executor 0 executes write_coverage_signal cov->size 6269, flag collect 0
----- executor 0 signal number : 687
----- executor 0 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 2 signal number : 2039
----- executor 0 signal number : 152
----- executor 2 executes write_coverage_signal cov->size 9434, flag collect 0
----- executor 1 signal number : 1565
----- executor 1 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 2 signal number : 854
executor 0 userspace cover_cnt 5
----- executor 2 executes write_coverage_signal cov->size 14008, flag collect 0
----- executor 1 signal number : 867
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 691
----- executor 2 executes write_coverage_signal cov->size 7362, flag collect 0
----- executor 2 signal number : 361
----- executor 2 executes write_coverage_signal cov->size 10655, flag collect 0
----- executor 1 signal number : 691
----- executor 1 executes write_coverage_signal cov->size 5212, flag collect 0
----- executor 2 signal number : 916
----- executor 1 signal number : 276
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 74, 36, 0
executor 1 userspace cover_cnt 5
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 75, 37, 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 110
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 235 signal and 0 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1565 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 867 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 691 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 276 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 72, 43, 0
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 2039 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 854 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 691 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 361 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 916 signal and 0 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 856 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 687 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13830ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1320, prog_size 648
[13830ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[13831ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=648 filter=0
remove dir: /root/glusterfs-client/dfs-0-45
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13840ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 45
-----finish removing dir
receive_execute: 3, 71
receive_execute: 9, 71
receive_execute: 11, 71
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-46 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-46
spawned worker pid 505
spawned worker pid 579
spawned worker pid 505
executor 1 after receive_execute
executor 1 after setup_test
executor 2 after receive_execute
executor 2 after setup_test
executor 1 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 3, 0
receive_execute: 15, 74
spawned worker pid 518
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [13907ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-46
cover_reset in execute_call
#0 [13920ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-46
----- executor 3 write_call_output, size 6762, pid 518, write pid:519
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 14
#0 [13921ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-46
cover_reset in execute_call
#0 [13924ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-46
----- executor 3 write_call_output, size 4611, pid 518, write pid:519
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 3
#0 [13924ms] -> setxattr(0x20001880, 0x200018c0, 0x0, 0x0, 0x0) 3662 /root/glusterfs-client/dfs-0-46
cover_reset in execute_call
#0 [13930ms] <- setxattr=0x0 errno=14 cover=5448  /root/glusterfs-client/dfs-0-46
----- executor 3 write_call_output, size 5448, pid 518, write pid:519
----- executor 3 executes write_coverage_signal cov->size 5448, flag collect 0
----- executor 3 signal number : 235
----- completed 3
execute_one loop: 0, 0, 6
execute_one inner time: 1, 23, 0
execute_one time: 1, 24
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5074, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 5212, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5212, flag collect 0
----- executor 1 signal number : 458
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 89, 27, 0
----- executor 0 signal number : 1323
----- executor 2 signal number : 1323
----- executor 1 executes write_coverage_signal cov->size 6163, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 7614, flag collect 0
----- executor 1 signal number : 1
----- executor 0 signal number : 883
----- executor 0 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 17443, flag collect 0
----- executor 2 signal number : 883
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 548
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 649
----- executor 2 signal number : 1039
----- executor 2 executes write_coverage_signal cov->size 11209, flag collect 0
----- executor 1 signal number : 2039
----- executor 1 executes write_coverage_signal cov->size 9432, flag collect 0
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 165
----- executor 1 signal number : 848
----- executor 1 executes write_coverage_signal cov->size 8101, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 1 signal number : 372
----- executor 1 executes write_coverage_signal cov->size 10655, flag collect 0
----- executor 1 signal number : 1194
----- executor 1 executes write_coverage_signal cov->size 14008, flag collect 0
----- executor 1 signal number : 424
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 82, 35, 0
executor 1 userspace cover_cnt 7
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 109
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:03 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 235 signal and 0 cover from kernel component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 7 replies
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 75, 37, 0
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1323 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 883 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 548 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 649 signal and 0 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1323 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 2039 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 848 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 372 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1194 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 424 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 883 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1039 signal and 0 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 80, 35, 0
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[13942ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 648
[13942ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=648 filter=0
remove dir: /root/glusterfs-client/dfs-0-46
executor 2: prog_data_offset 1312, prog_size 8
[13942ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[13952ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 40
-----finish removing dir
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-47 successfully
receive_execute: 3, 62
receive_execute: 6, 62
receive_execute: 6, 62
current dir: executor 3: /root/glusterfs-client/dfs-0-47
spawned worker pid 506
spawned worker pid 580
spawned worker pid 506
executor 2 after receive_execute
executor 2 after setup_test
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 10, 66
spawned worker pid 520
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14009ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-47
cover_reset in execute_call
#0 [14025ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-47
----- executor 3 write_call_output, size 6751, pid 520, write pid:521
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 17
#0 [14026ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-47
cover_reset in execute_call
#0 [14028ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-47
----- executor 3 write_call_output, size 4611, pid 520, write pid:521
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 3
#0 [14029ms] -> setxattr(0x20001880, 0x200018c0, 0x0, 0x0, 0x0) 3662 /root/glusterfs-client/dfs-0-47
cover_reset in execute_call
#0 [14034ms] <- setxattr=0x0 errno=14 cover=5454  /root/glusterfs-client/dfs-0-47
----- executor 3 write_call_output, size 5454, pid 520, write pid:521
----- executor 3 executes write_coverage_signal cov->size 5454, flag collect 1
----- executor 3 cover number : 1022, signal number : 235
----- completed 3
execute_one loop: 0, 0, 6
execute_one inner time: 0, 26, 0
execute_one time: 1, 26
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4158, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 0 cover number : 410, signal number : 457
----- executor 0 executes write_coverage_signal cov->size 6864, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 0 cover number : 410, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 14013, flag collect 1
----- executor 2 cover number : 1293, signal number : 1565
----- executor 2 executes write_coverage_signal cov->size 7614, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 76, 29, 0
----- executor 1 cover number : 1293, signal number : 1565
----- executor 1 executes write_coverage_signal cov->size 7882, flag collect 1
----- executor 2 cover number : 816, signal number : 867
----- executor 2 executes write_coverage_signal cov->size 5212, flag collect 1
----- executor 0 cover number : 1811, signal number : 2310
----- executor 0 executes write_coverage_signal cov->size 8819, flag collect 1
----- executor 1 cover number : 844, signal number : 908
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 1137, signal number : 314
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 1451, signal number : 692
----- executor 1 executes write_coverage_signal cov->size 6871, flag collect 1
----- executor 2 cover number : 1451, signal number : 649
----- executor 0 cover number : 939, signal number : 939
----- executor 0 executes write_coverage_signal cov->size 7984, flag collect 1
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1340, signal number : 508
----- executor 0 cover number : 835, signal number : 303
----- executor 0 executes write_coverage_signal cov->size 10655, flag collect 1
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 1949, signal number : 1115
----- executor 0 executes write_coverage_signal cov->size 15850, flag collect 1
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 68, 41, 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 65, 42, 0
----- executor 0 cover number : 1658, signal number : 278
executor 0 userspace cover_cnt 7
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 108
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 235 signal and 1022 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1565 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1565 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1 signal and 410 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 908 signal and 844 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 2310 signal and 1811 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 867 signal and 816 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 692 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 508 signal and 1340 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 314 signal and 1137 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 939 signal and 939 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 303 signal and 835 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 649 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1115 signal and 1949 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 278 signal and 1658 cover from userspace component
time breakdown 0: 68, 46, 0
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14055ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[14055ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14066ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 648
[14056ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=648 filter=0
remove dir: /root/glusterfs-client/dfs-0-47
remove dir time 40
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-48 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-48
receive_execute: 10, 66
receive_execute: 4, 66
receive_execute: 5, 66
spawned worker pid 507
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 581
spawned worker pid 507
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 19, 69
spawned worker pid 522
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14126ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-48
cover_reset in execute_call
#0 [14140ms] <- mkdir=0x0 errno=14 cover=6755  /root/glusterfs-client/dfs-0-48
----- executor 3 write_call_output, size 6755, pid 522, write pid:523
----- executor 3 executes write_coverage_signal cov->size 6755, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 16
#0 [14142ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-48
cover_reset in execute_call
#0 [14146ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-48
----- executor 3 write_call_output, size 4611, pid 522, write pid:523
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 4
#0 [14147ms] -> setxattr(0x20001880, 0x200018c0, 0x0, 0x0, 0x0) 3662 /root/glusterfs-client/dfs-0-48
cover_reset in execute_call
#0 [14155ms] <- setxattr=0x0 errno=14 cover=5454  /root/glusterfs-client/dfs-0-48
----- executor 3 write_call_output, size 5454, pid 522, write pid:523
----- executor 3 executes write_coverage_signal cov->size 5454, flag collect 1
----- executor 3 cover number : 1022, signal number : 235
----- completed 3
execute_one loop: 0, 0, 10
execute_one inner time: 0, 31, 0
execute_one time: 1, 31
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 88, 34, 0
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4158, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 5212, flag collect 1
----- executor 1 cover number : 410, signal number : 457
----- executor 1 executes write_coverage_signal cov->size 6866, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 1137, signal number : 1323
----- executor 2 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 1 cover number : 410, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 15964, flag collect 1
----- executor 0 cover number : 1451, signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 2 cover number : 816, signal number : 883
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 1451, signal number : 1039
----- executor 2 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 0 cover number : 816, signal number : 856
----- executor 0 executes write_coverage_signal cov->size 6794, flag collect 1
----- executor 2 cover number : 1293, signal number : 165
----- executor 0 cover number : 1331, signal number : 886
----- executor 0 executes write_coverage_signal cov->size 11209, flag collect 1
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 2330, signal number : 3007
----- executor 1 executes write_coverage_signal cov->size 7981, flag collect 1
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
----- executor 1 cover number : 835, signal number : 843
----- executor 1 executes write_coverage_signal cov->size 8830, flag collect 1
----- executor 0 cover number : 1293, signal number : 161
executor 0 userspace cover_cnt 5
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 76, 43, 0
----- executor 1 cover number : 939, signal number : 386
----- executor 1 executes write_coverage_signal cov->size 5648, flag collect 1
----- executor 1 cover number : 1080, signal number : 282
----- executor 1 executes write_coverage_signal cov->size 18899, flag collect 1
----- executor 1 cover number : 1696, signal number : 491
executor 1 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 71, 47, 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 118
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 235 signal and 1022 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 856 signal and 816 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 70, 53, 0
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 0 signal and 410 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1323 signal and 1137 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 886 signal and 1331 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1039 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 161 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 165 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 3007 signal and 2330 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 843 signal and 835 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 386 signal and 939 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 282 signal and 1080 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 491 signal and 1696 cover from userspace component
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 0, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14178ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[14178ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 648
[14179ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=648 filter=0
remove dir: /root/glusterfs-client/dfs-0-48
executor 0: prog_data_offset 1296, prog_size 8
[14189ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 38
-----finish removing dir
receive_execute: 10, 60
receive_execute: 14, 60
receive_execute: 4, 60
spawned worker pid 508
spawned worker pid 508
spawned worker pid 582
mkdir time 21
executor 3 create dir /root/glusterfs-client/dfs-0-49 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-49
executor 0 after receive_execute
executor 2 after receive_execute
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after setup_test
executor 2 after setup_test
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 2, 0
receive_execute: 20, 63
spawned worker pid 524
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14243ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-49
cover_reset in execute_call
#0 [14263ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-49
----- executor 3 write_call_output, size 6762, pid 524, write pid:525
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 22
#0 [14265ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-49
cover_reset in execute_call
#0 [14269ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-49
----- executor 3 write_call_output, size 4611, pid 524, write pid:525
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 5
#0 [14271ms] -> setxattr(0x20001880, 0x200018c0, 0x0, 0x0, 0x0) 3662 /root/glusterfs-client/dfs-0-49
cover_reset in execute_call
#0 [14282ms] <- setxattr=0x0 errno=14 cover=5454  /root/glusterfs-client/dfs-0-49
----- executor 3 write_call_output, size 5454, pid 524, write pid:525
----- executor 3 executes write_coverage_signal cov->size 5454, flag collect 1
----- executor 3 cover number : 1022, signal number : 235
----- completed 3
execute_one loop: 0, 0, 13
execute_one inner time: 0, 41, 0
execute_one time: 1, 41
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 11021, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 83, 44, 0
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 5212, flag collect 1
----- executor 1 cover number : 410, signal number : 459
----- executor 1 executes write_coverage_signal cov->size 703, flag collect 1
----- executor 1 cover number : 403, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 15783, flag collect 1
----- executor 0 cover number : 1137, signal number : 1323
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 0 cover number : 816, signal number : 883
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 1451, signal number : 1039
----- executor 0 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 1 cover number : 1671, signal number : 2055
----- executor 1 executes write_coverage_signal cov->size 16799, flag collect 1
----- executor 0 cover number : 1293, signal number : 165
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 1133, signal number : 1221
----- executor 1 executes write_coverage_signal cov->size 729, flag collect 1
----- executor 1 cover number : 376, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 15647, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 1451, signal number : 1735
----- executor 2 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 2 cover number : 816, signal number : 856
----- executor 2 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 2 cover number : 1293, signal number : 540
----- executor 2 executes write_coverage_signal cov->size 5212, flag collect 1
----- executor 2 cover number : 1137, signal number : 278
executor 2 userspace cover_cnt 5
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 74, 57, 0
----- executor 1 cover number : 1870, signal number : 674
----- executor 1 executes write_coverage_signal cov->size 10655, flag collect 1
----- executor 1 cover number : 1949, signal number : 901
executor 1 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 70, 57, 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 124
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:03 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 fuzzer receive 235 signal and 1022 cover from kernel component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 459 signal and 410 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1323 signal and 1137 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 0 signal and 403 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1039 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 2055 signal and 1671 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 165 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1221 signal and 1133 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 0 signal and 376 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 856 signal and 816 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 540 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 278 signal and 1137 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 674 signal and 1870 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 901 signal and 1949 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 64, 64, 0
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 added new input for call #15 setxattr to corpus:
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, 0x0, 0x0, 0x0)
2023/01/25 16:52:03 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/01/25 16:52:03 #0: triaging type=0
2023/01/25 16:52:03 1 triaging input for call #1 setxattr$trusted_overlay_nlink (new signal=602)
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', 0x0, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14324ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14313ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 2: prog_data_offset 1312, prog_size 8
[14314ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 608
[14314ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=608 filter=0
remove dir: /root/glusterfs-client/dfs-0-49
remove dir time 50
-----finish removing dir
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-50 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-50
receive_execute: 11, 80
receive_execute: 18, 79
receive_execute: 18, 80
spawned worker pid 583
spawned worker pid 509
spawned worker pid 509
executor 0 after receive_execute
executor 0 after setup_test
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 after receive_execute
executor 0 before execute_one
executor 2 after setup_test
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
execute_one inner time: 0, 0, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 28, 82
execute_one time: 3, 1
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
spawned worker pid 526
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14398ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-50
cover_reset in execute_call
#0 [14413ms] <- mkdir=0x0 errno=14 cover=6744  /root/glusterfs-client/dfs-0-50
----- executor 3 write_call_output, size 6744, pid 526, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6744, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 16
#0 [14414ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-50
cover_reset in execute_call
#0 [14417ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4614  /root/glusterfs-client/dfs-0-50
----- executor 3 write_call_output, size 4614, pid 526, write pid:527
----- executor 3 executes write_coverage_signal cov->size 4614, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 4
#0 [14417ms] -> setxattr(0x20001880, 0x0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-50
cover_reset in execute_call
#0 [14417ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-50
----- executor 3 write_call_output, size 0, pid 526, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
execute_one inner time: 0, 20, 0
execute_one time: 2, 20
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4149, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 110, 23, 0
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 409, signal number : 456
----- executor 0 executes write_coverage_signal cov->size 4158, flag collect 1
----- executor 1 cover number : 1451, signal number : 1735
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 0 cover number : 409, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 14275, flag collect 1
----- executor 1 cover number : 770, signal number : 782
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 2 cover number : 1292, signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 1 cover number : 1005, signal number : 468
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 cover number : 770, signal number : 796
----- executor 1 cover number : 1292, signal number : 143
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 1647, signal number : 2019
----- executor 0 executes write_coverage_signal cov->size 8604, flag collect 1
executor 1 userspace cover_cnt 5
----- executor 2 cover number : 1005, signal number : 122
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 838, signal number : 846
----- executor 0 executes write_coverage_signal cov->size 5052, flag collect 1
----- executor 2 cover number : 1451, signal number : 644
----- executor 0 cover number : 749, signal number : 160
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 1
executor 2 userspace cover_cnt 5
----- executor 0 cover number : 1675, signal number : 853
----- executor 0 executes write_coverage_signal cov->size 9575, flag collect 1
----- executor 0 cover number : 1442, signal number : 176
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 98, 35, 0
executor 0 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 91, 32, 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 119
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 456 signal and 409 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 0 signal and 409 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 2019 signal and 1647 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 846 signal and 838 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 782 signal and 770 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 97, 41, 0
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 468 signal and 1005 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 143 signal and 1292 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 796 signal and 770 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 122 signal and 1005 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 644 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 160 signal and 749 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 853 signal and 1675 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 176 signal and 1442 cover from userspace component
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', 0x0, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14445ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14435ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 608
[14436ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=608 filter=0
remove dir: /root/glusterfs-client/dfs-0-50
executor 2: prog_data_offset 1312, prog_size 8
[14436ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 56
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-51 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-51
receive_execute: 2, 92
receive_execute: 7, 92
receive_execute: 10, 92
spawned worker pid 510
spawned worker pid 584
spawned worker pid 510
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 3, 1
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 17, 104
spawned worker pid 528
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14542ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-51
cover_reset in execute_call
#0 [14572ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-51
----- executor 3 write_call_output, size 6762, pid 528, write pid:529
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 33
#0 [14575ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-51
cover_reset in execute_call
#0 [14579ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-51
----- executor 3 write_call_output, size 4611, pid 528, write pid:529
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 6
#0 [14581ms] -> setxattr(0x20001880, 0x0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-51
cover_reset in execute_call
#0 [14582ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-51
----- executor 3 write_call_output, size 0, pid 528, write pid:529
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
execute_one inner time: 0, 41, 0
execute_one time: 2, 41
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 121, 44, 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 7602, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 410, signal number : 458
----- executor 1 executes write_coverage_signal cov->size 699, flag collect 1
----- executor 1 cover number : 399, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 9902, flag collect 1
----- executor 0 cover number : 1451, signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 0 cover number : 770, signal number : 782
----- executor 2 cover number : 1451, signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 6816, flag collect 1
----- executor 1 cover number : 1774, signal number : 2194
----- executor 1 executes write_coverage_signal cov->size 12304, flag collect 1
----- executor 0 cover number : 1292, signal number : 530
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 1005, signal number : 81
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 801, signal number : 784
----- executor 2 executes write_coverage_signal cov->size 7360, flag collect 1
----- executor 2 cover number : 1293, signal number : 532
----- executor 2 executes write_coverage_signal cov->size 4386, flag collect 1
----- executor 1 cover number : 951, signal number : 1018
----- executor 1 executes write_coverage_signal cov->size 725, flag collect 1
----- executor 1 cover number : 374, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 12679, flag collect 1
----- executor 2 cover number : 1117, signal number : 224
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1650, signal number : 710
----- executor 1 executes write_coverage_signal cov->size 7955, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 94, 65, 0
----- executor 1 cover number : 1324, signal number : 157
executor 1 userspace cover_cnt 7
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 100, 67, 0
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:03 wait for executor 0's reply
2023/01/25 16:52:03 for select break: 1
2023/01/25 16:52:03 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:03 ------ all executors finish execution
2023/01/25 16:52:03 exec time: 162
2023/01/25 16:52:03 ----- PS len: 4
2023/01/25 16:52:03 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:03 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:03 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:03 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 782 signal and 770 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 530 signal and 1292 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 0 receive 81 signal and 1005 cover from userspace component
2023/01/25 16:52:03 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:03 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 458 signal and 410 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 3 signal and 399 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 2194 signal and 1774 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 784 signal and 801 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 102, 70, 0
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1018 signal and 951 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 1 signal and 374 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 710 signal and 1650 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 532 signal and 1293 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 2 receive 224 signal and 1117 cover from userspace component
2023/01/25 16:52:03 ------- fuzzer executor 1 receive 157 signal and 1324 cover from userspace component
2023/01/25 16:52:03 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:03 result hanged=false: 
2023/01/25 16:52:03 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:03 prog length: 3
2023/01/25 16:52:03 HasCrashFail:false HasNetFail:false
16:52:03 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001880)='./file0\x00', 0x0, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:03 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[] = "./file0";
v5[100];
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14610ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 608
[14601ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=608 filter=0
remove dir: /root/glusterfs-client/dfs-0-51
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14600ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[14602ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 49
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-52 successfully
receive_execute: 3, 76
receive_execute: 8, 76
current dir: executor 3: /root/glusterfs-client/dfs-0-52
receive_execute: 7, 74
spawned worker pid 511
executor 1 after receive_execute
spawned worker pid 511
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 585
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 16, 80
spawned worker pid 530
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14682ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-52
cover_reset in execute_call
#0 [14697ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-52
----- executor 3 write_call_output, size 6751, pid 530, write pid:531
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 16
#0 [14698ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-52
cover_reset in execute_call
#0 [14702ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-52
----- executor 3 write_call_output, size 4611, pid 530, write pid:531
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 5
#0 [14703ms] -> setxattr(0x20001880, 0x0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-52
cover_reset in execute_call
#0 [14703ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-52
----- executor 3 write_call_output, size 0, pid 530, write pid:531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
execute_one inner time: 0, 22, 0
execute_one time: 1, 22
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 96, 24, 0
----- executor 0 executes write_coverage_signal cov->size 7603, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 409, signal number : 456
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 1
----- executor 0 cover number : 402, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 9297, flag collect 1
----- executor 2 cover number : 1005, signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 1 cover number : 1292, signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 1 cover number : 770, signal number : 796
----- executor 1 executes write_coverage_signal cov->size 3943, flag collect 1
----- executor 2 cover number : 770, signal number : 813
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 1529, signal number : 1849
----- executor 0 executes write_coverage_signal cov->size 729, flag collect 1
----- executor 1 cover number : 1012, signal number : 142
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 376, signal number : 285
----- executor 0 executes write_coverage_signal cov->size 12491, flag collect 1
----- executor 2 cover number : 1451, signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 cover number : 1451, signal number : 644
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 972, signal number : 725
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 1
----- executor 2 cover number : 1292, signal number : 151
executor 2 userspace cover_cnt 5
----- executor 0 cover number : 1675, signal number : 848
----- executor 0 executes write_coverage_signal cov->size 12782, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 79, 36, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 81, 37, 0
----- executor 0 cover number : 1622, signal number : 359
executor 0 userspace cover_cnt 7
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 117
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:04 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1127 signal and 1005 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 813 signal and 770 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1038 signal and 1451 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 456 signal and 409 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 151 signal and 1292 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 0 signal and 402 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1849 signal and 1529 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 796 signal and 770 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 142 signal and 1012 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 644 signal and 1451 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 285 signal and 376 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 725 signal and 972 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 848 signal and 1675 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 359 signal and 1622 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 84, 40, 0
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 -----2 triaging input for call #1 setxattr$trusted_overlay_nlink (new signal=598)
2023/01/25 16:52:04 minimize prog 3
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 360
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14721ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[14722ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-52
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[14721ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14731ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 54
-----finish removing dir
receive_execute: 9, 89
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-53 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-53
spawned worker pid 512
receive_execute: 4, 90
receive_execute: 6, 90
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
spawned worker pid 512
spawned worker pid 586
execute_one time: 1, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 16, 94
spawned worker pid 532
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14817ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-53
cover_reset in execute_call
#0 [14835ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-53
----- executor 3 write_call_output, size 6770, pid 532, write pid:533
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 20
#0 [14837ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-53
cover_reset in execute_call
#0 [14856ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-53
----- executor 3 write_call_output, size 4611, pid 532, write pid:533
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 20
execute_one inner time: 1, 40, 0
execute_one time: 1, 41
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 110, 44, 0
----- executor 2 executes write_coverage_signal cov->size 5797, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 1
----- executor 1 signal number : 813
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 11173, flag collect 0
----- executor 0 signal number : 813
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 538
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 646
----- executor 2 signal number : 1937
----- executor 0 signal number : 1038
----- executor 0 executes write_coverage_signal cov->size 8047, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 10167, flag collect 0
----- executor 0 signal number : 153
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 841
----- executor 2 executes write_coverage_signal cov->size 12684, flag collect 0
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 276
----- executor 2 executes write_coverage_signal cov->size 3588, flag collect 0
----- executor 2 signal number : 161
----- executor 2 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 2 signal number : 831
executor 2 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 99, 52, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 145
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:04 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1038 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 153 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1937 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 841 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 276 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 161 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 831 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 96, 55, 0
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 646 signal and 0 cover from userspace component
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];

syscall(SYS_setxattr, v0, v1, v2, 0, 0);

2023/01/25 16:52:04 prog length: 1
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14868ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 248
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];

syscall(SYS_setxattr, v0, v1, v2, 0, 0);

[14869ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=248 filter=0
remove dir: /root/glusterfs-client/dfs-0-53
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[14868ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 94, 53, 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14879ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 65
-----finish removing dir
receive_execute: 4, 100
spawned worker pid 587
executor 0 after receive_execute
executor 0 after setup_test
receive_execute: 2, 100
spawned worker pid 513
executor 0 before execute_one
receive_execute: 5, 100
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-54 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-54
spawned worker pid 513
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 9, 105
spawned worker pid 534
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [14975ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-54
cover_reset in execute_call
#0 [14978ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4121  /root/glusterfs-client/dfs-0-54
----- executor 3 write_call_output, size 4121, pid 534, write pid:535
----- executor 3 executes write_coverage_signal cov->size 4121, flag collect 0
----- executor 3 signal number : 1235
----- completed 1
execute_one loop: 0, 0, 4
execute_one inner time: 0, 4, 0
execute_one time: 2, 4
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3423, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 1006
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 391
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 5322, flag collect 0
----- executor 0 signal number : 666
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 192
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 231
executor 2 userspace cover_cnt 3
executor 1 userspace cover_cnt 3
executor 0 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 104, 15, 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 114, 8, 0
2023/01/25 16:52:04 for select break: 1
write_metadata
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
------ execute 2 reply_execute finished
time breakdown 2: 102, 16, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 116
2023/01/25 16:52:04 ----- PS len: 4
write_metadata
2023/01/25 16:52:04 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:04 fuzzer receive 1235 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
------ execute 1 reply_execute finished
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 666 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 192 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 231 signal and 0 cover from userspace component
time breakdown 1: 105, 16, 0
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];

syscall(SYS_setxattr, v0, v1, v2, 0, 0);

2023/01/25 16:52:04 prog length: 1
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];

syscall(SYS_setxattr, v0, v1, v2, 0, 0);

2023/01/25 16:52:04 wait for executor 3's reply
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 248
[14988ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=248 filter=0
remove dir: /root/glusterfs-client/dfs-0-54
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[14997ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[14988ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[14992ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 25
-----finish removing dir
mkdir time 44
executor 3 create dir /root/glusterfs-client/dfs-0-55 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-55
receive_execute: 4, 70
receive_execute: 0, 70
receive_execute: 0, 65
spawned worker pid 588
spawned worker pid 514
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
spawned worker pid 514
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
execute_one time: 3, 1
receive_execute: 7, 75
spawned worker pid 536
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15065ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-55
cover_reset in execute_call
#0 [15067ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-55
----- executor 3 write_call_output, size 4126, pid 536, write pid:537
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 0
----- executor 3 signal number : 1238
----- completed 1
execute_one loop: 0, 0, 3
execute_one inner time: 1, 4, 0
execute_one time: 1, 5
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 82, 7, 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2926, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 444
----- executor 1 signal number : 655
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4592, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 505
----- executor 1 signal number : 612
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 685
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 649
----- executor 2 signal number : 989
----- executor 0 signal number : 1006
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 192
executor 1 userspace cover_cnt 4
executor 2 userspace cover_cnt 4
executor 0 userspace cover_cnt 3
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 70, 16, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 74, 19, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 90
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:04 fuzzer receive 1238 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 685 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 989 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 192 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 655 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 612 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 649 signal and 0 cover from userspace component
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];

syscall(SYS_setxattr, v0, v1, v2, 0, 0);

2023/01/25 16:52:04 prog length: 1
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];

syscall(SYS_setxattr, v0, v1, v2, 0, 0);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 248
[15079ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=248 filter=0
remove dir: /root/glusterfs-client/dfs-0-55
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 66, 18, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[15078ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15078ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15088ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 36
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-56 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-56
receive_execute: 2, 73
receive_execute: 2, 73
receive_execute: 4, 73
spawned worker pid 515
executor 2 after receive_execute
spawned worker pid 515
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
spawned worker pid 589
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 16, 0
receive_execute: 8, 90
spawned worker pid 538
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15171ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-56
cover_reset in execute_call
#0 [15178ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-56
----- executor 3 write_call_output, size 4126, pid 538, write pid:539
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 0
----- executor 3 signal number : 1238
----- completed 1
execute_one loop: 0, 0, 7
execute_one inner time: 0, 7, 0
execute_one time: 2, 7
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 98, 11, 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 695
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2942, flag collect 0
----- executor 1 signal number : 571
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 443
----- executor 1 signal number : 650
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1119
----- executor 0 signal number : 1006
executor 1 userspace cover_cnt 4
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 203
----- executor 2 executes write_coverage_signal cov->size 4592, flag collect 0
executor 0 userspace cover_cnt 3
----- executor 2 signal number : 543
executor 2 userspace cover_cnt 4
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 77, 32, 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 75, 33, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 109
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:04 fuzzer receive 1238 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 695 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 571 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 650 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 75, 36, 0
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 203 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(0x0, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
executor 1: prog_data_offset 1304, prog_size 8
[15193ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[15204ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[15193ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 320
[15194ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=320 filter=0
remove dir: /root/glusterfs-client/dfs-0-56
remove dir time 49
-----finish removing dir
mkdir time 44
executor 3 create dir /root/glusterfs-client/dfs-0-57 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-57
receive_execute: 9, 93
receive_execute: 9, 93
receive_execute: 6, 93
spawned worker pid 590
spawned worker pid 516
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
spawned worker pid 516
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 14, 96
spawned worker pid 540
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15291ms] -> mkdir(0x0, 0x0) 2373 /root/glusterfs-client/dfs-0-57
cover_reset in execute_call
#0 [15291ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-57
----- executor 3 write_call_output, size 0, pid 540, write pid:541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
#0 [15291ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-57
cover_reset in execute_call
#0 [15293ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4112  /root/glusterfs-client/dfs-0-57
----- executor 3 write_call_output, size 4112, pid 540, write pid:541
----- executor 3 executes write_coverage_signal cov->size 4112, flag collect 0
----- executor 3 signal number : 1235
----- completed 2
execute_one loop: 0, 0, 3
execute_one inner time: 0, 3, 0
execute_one time: 1, 3
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 110, 5, 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 2812, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 521
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 4592, flag collect 0
----- executor 1 signal number : 257
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1006
----- executor 0 signal number : 554
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 193
executor 1 userspace cover_cnt 4
executor 0 userspace cover_cnt 4
executor 2 userspace cover_cnt 3
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 107
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:04 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 1235 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 4 replies
write_metadata
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 193 signal and 0 cover from userspace component
------ execute 2 reply_execute finished
time breakdown 2: 100, 12, 1
time breakdown 0: 102, 13, 1
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 521 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 257 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(0x0, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 320
[15302ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=320 filter=0
remove dir: /root/glusterfs-client/dfs-0-57
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15315ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 102, 13, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15301ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[15308ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 38
-----finish removing dir
receive_execute: 0, 54
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-58 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-58
receive_execute: 0, 58
receive_execute: 2, 61
spawned worker pid 517
spawned worker pid 591
spawned worker pid 517
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 after receive_execute
executor 1 after setup_test
receive_execute: 7, 64
spawned worker pid 542
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 after receive_execute
executor 3 after setup_test
execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 5, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15368ms] -> mkdir(0x0, 0x0) 2373 /root/glusterfs-client/dfs-0-58
cover_reset in execute_call
#0 [15368ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-58
----- executor 3 write_call_output, size 0, pid 542, write pid:543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
#0 [15369ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-58
cover_reset in execute_call
#0 [15371ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-58
----- executor 3 write_call_output, size 4124, pid 542, write pid:543
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 0
----- executor 3 signal number : 1237
----- completed 2
execute_one loop: 0, 0, 3
execute_one inner time: 0, 4, 0
execute_one time: 2, 4
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 71, 7, 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1119
----- executor 1 signal number : 444
----- executor 0 signal number : 1006
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 391
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
executor 0 userspace cover_cnt 3
----- executor 1 signal number : 1119
----- executor 2 signal number : 280
----- executor 1 executes write_coverage_signal cov->size 4592, flag collect 0
----- executor 1 signal number : 554
executor 2 userspace cover_cnt 4
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 193
executor 1 userspace cover_cnt 4
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 58, 15, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 77
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:04 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 1237 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 63, 16, 0
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 4 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 193 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(0x0, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 54, 15, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15381ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 320
[15382ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=320 filter=0
remove dir: /root/glusterfs-client/dfs-0-58
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15393ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[15384ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 26
-----finish removing dir
mkdir time 41
executor 3 create dir /root/glusterfs-client/dfs-0-59 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-59
receive_execute: 3, 68
receive_execute: 6, 66
receive_execute: 1, 67
executor 2 after receive_execute
spawned worker pid 518
spawned worker pid 518
spawned worker pid 592
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
receive_execute: 9, 71
execute_one time: 3, 0
spawned worker pid 544
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15455ms] -> mkdir(0x0, 0x0) 2373 /root/glusterfs-client/dfs-0-59
cover_reset in execute_call
#0 [15455ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-59
----- executor 3 write_call_output, size 0, pid 544, write pid:545
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
#0 [15456ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-59
cover_reset in execute_call
#0 [15459ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4121  /root/glusterfs-client/dfs-0-59
----- executor 3 write_call_output, size 4121, pid 544, write pid:545
----- executor 3 executes write_coverage_signal cov->size 4121, flag collect 0
----- executor 3 signal number : 1235
----- completed 2
execute_one loop: 0, 0, 4
execute_one inner time: 1, 5, 0
execute_one time: 1, 6
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 80, 10, 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 443
----- executor 1 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1119
----- executor 1 signal number : 1006
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 391
executor 1 userspace cover_cnt 3
executor 2 userspace cover_cnt 3
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 5320, flag collect 0
----- executor 0 signal number : 666
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 258
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 178
executor 0 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 68, 17, 0
write_metadata
------ execute 1 reply_execute finished
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 85
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:04 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 1235 signal and 0 cover from kernel component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 666 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 258 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 178 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
time breakdown 1: 71, 18, 0
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1006 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 72, 18, 0
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 320
[15468ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=320 filter=0
remove dir: /root/glusterfs-client/dfs-0-59
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15478ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[15471ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15470ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 22
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-60 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-60
receive_execute: 0, 46
receive_execute: 2, 47
receive_execute: 0, 46
spawned worker pid 519
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
spawned worker pid 593
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
spawned worker pid 519
executor 2 after receive_execute
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 5, 51
spawned worker pid 546
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15520ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-60
cover_reset in execute_call
#0 [15536ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-60
----- executor 3 write_call_output, size 6762, pid 546, write pid:547
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 18
#0 [15538ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-60
cover_reset in execute_call
#0 [15540ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-60
----- executor 3 write_call_output, size 0, pid 546, write pid:547
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 20, 0
execute_one time: 1, 20
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 6920, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 459
----- executor 1 executes write_coverage_signal cov->size 702, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 6411, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 1259
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 1 signal number : 1421
----- executor 1 executes write_coverage_signal cov->size 11485, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 832
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 487
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 1022
----- executor 1 executes write_coverage_signal cov->size 729, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 7946, flag collect 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 1 signal number : 271
----- executor 1 executes write_coverage_signal cov->size 13109, flag collect 0
----- executor 0 signal number : 529
----- executor 2 signal number : 807
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 1293
executor 0 userspace cover_cnt 5
----- executor 2 signal number : 538
executor 1 userspace cover_cnt 7
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 622
executor 2 userspace cover_cnt 5
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 56, 23, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 46, 29, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 50, 30, 0
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 79
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:04 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 459 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1421 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1022 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 271 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 807 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1293 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 622 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 46, 31, 0
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 832 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 487 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 529 signal and 0 cover from userspace component
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15564ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15553ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 320
executor 2: prog_data_offset 1312, prog_size 8
[15554ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=320 filter=0
[15554ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-60
remove dir time 50
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-61 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-61
receive_execute: 8, 77
receive_execute: 6, 76
receive_execute: 6, 76
spawned worker pid 520
executor 2 after receive_execute
executor 2 after setup_test
spawned worker pid 594
executor 2 before execute_one
spawned worker pid 520
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
executor 1 after receive_execute
executor 1 after setup_test
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 1
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 12, 79
spawned worker pid 548
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15635ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-61
cover_reset in execute_call
#0 [15649ms] <- mkdir=0x0 errno=14 cover=6742  /root/glusterfs-client/dfs-0-61
----- executor 3 write_call_output, size 6742, pid 548, write pid:549
----- executor 3 executes write_coverage_signal cov->size 6742, flag collect 0
----- executor 3 signal number : 1580
----- completed 1
execute_one loop: 0, 0, 15
#0 [15650ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-61
cover_reset in execute_call
#0 [15651ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-61
----- executor 3 write_call_output, size 0, pid 548, write pid:549
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 17, 0
execute_one time: 1, 18
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 91, 21, 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3474, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12691, flag collect 0
----- executor 2 signal number : 1710
----- executor 1 signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 4234, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5783, flag collect 0
----- executor 2 signal number : 812
----- executor 2 executes write_coverage_signal cov->size 9871, flag collect 0
----- executor 1 signal number : 878
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 2 signal number : 893
----- executor 2 executes write_coverage_signal cov->size 7982, flag collect 0
----- executor 1 signal number : 354
----- executor 2 signal number : 218
----- executor 2 executes write_coverage_signal cov->size 4895, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 404
----- executor 1 signal number : 615
executor 1 userspace cover_cnt 5
executor 2 userspace cover_cnt 7
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 788
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 0 signal number : 669
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 83
executor 0 userspace cover_cnt 5
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 1's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:04 wait for executor 0's reply
2023/01/25 16:52:04 for select break: 1
2023/01/25 16:52:04 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:04 ------ all executors finish execution
2023/01/25 16:52:04 exec time: 105
2023/01/25 16:52:04 ----- PS len: 4
2023/01/25 16:52:04 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:04 fuzzer receive 1580 signal and 0 cover from kernel component
2023/01/25 16:52:04 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:04 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 788 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 669 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:04 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 878 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 354 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 1 receive 615 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 1710 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 812 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 893 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 218 signal and 0 cover from userspace component
2023/01/25 16:52:04 ------- fuzzer executor 2 receive 404 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 83, 26, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 85, 28, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 82, 29, 1
2023/01/25 16:52:04 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:04 result hanged=false: 
2023/01/25 16:52:04 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:04 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:04 prog length: 2
2023/01/25 16:52:04 HasCrashFail:false HasNetFail:false
16:52:04 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:04 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 320
[15667ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=320 filter=0
remove dir: /root/glusterfs-client/dfs-0-61
executor 2: prog_data_offset 1312, prog_size 8
[15666ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15667ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15678ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 41
-----finish removing dir
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-62 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-62
receive_execute: 7, 65
receive_execute: 11, 64
receive_execute: 8, 66
spawned worker pid 521
spawned worker pid 595
spawned worker pid 521
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 13, 69
spawned worker pid 550
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15737ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-62
cover_reset in execute_call
#0 [15751ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-62
----- executor 3 write_call_output, size 6751, pid 550, write pid:551
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 15
#0 [15752ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-62
cover_reset in execute_call
#0 [15753ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-62
----- executor 3 write_call_output, size 0, pid 550, write pid:551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
execute_one inner time: 0, 16, 0
execute_one time: 1, 16
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 82, 19, 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6924, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 13109, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 7355, flag collect 0
----- executor 1 signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 2592
----- executor 0 executes write_coverage_signal cov->size 11485, flag collect 0
----- executor 1 signal number : 807
----- executor 2 signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 1 signal number : 538
----- executor 0 signal number : 989
----- executor 0 executes write_coverage_signal cov->size 729, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 6411, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 880
----- executor 1 signal number : 622
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 7949, flag collect 0
----- executor 2 signal number : 670
----- executor 0 signal number : 163
----- executor 2 executes write_coverage_signal cov->size 4828, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 310
executor 0 userspace cover_cnt 7
executor 2 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 75, 28, 0
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 93
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 2592 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 989 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 163 signal and 0 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 807 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 622 signal and 0 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 880 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 670 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
2023/01/25 16:52:05 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:05 prog length: 2
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15772ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 74, 27, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[15762ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 304
[15763ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=304 filter=0
remove dir: /root/glusterfs-client/dfs-0-62
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 73, 27, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[15761ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 47
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-63 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-63
receive_execute: 2, 73
receive_execute: 2, 73
receive_execute: 3, 72
spawned worker pid 522
spawned worker pid 522
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 596
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 7, 77
spawned worker pid 552
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15840ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-63
cover_reset in execute_call
#0 [15866ms] <- mkdir=0x0 errno=14 cover=6723  /root/glusterfs-client/dfs-0-63
----- executor 3 write_call_output, size 6723, pid 552, write pid:553
----- executor 3 executes write_coverage_signal cov->size 6723, flag collect 0
----- executor 3 signal number : 1575
----- completed 1
execute_one loop: 0, 0, 27
#0 [15867ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-63
cover_reset in execute_call
#0 [15869ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1204  /root/glusterfs-client/dfs-0-63
----- executor 3 write_call_output, size 1204, pid 552, write pid:553
----- executor 3 executes write_coverage_signal cov->size 1204, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 29, 0
execute_one time: 1, 29
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 84, 32, 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6303, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 554
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 455
----- executor 1 signal number : 1259
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 1 signal number : 832
----- executor 0 executes write_coverage_signal cov->size 1404, flag collect 0
----- executor 2 signal number : 780
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 625
----- executor 0 signal number : 2
----- executor 1 signal number : 487
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 9575, flag collect 0
----- executor 1 signal number : 529
----- executor 0 signal number : 1759
executor 2 userspace cover_cnt 5
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 1457, flag collect 0
----- executor 0 signal number : 307
----- executor 0 executes write_coverage_signal cov->size 11483, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 693
----- executor 0 executes write_coverage_signal cov->size 11204, flag collect 0
----- executor 0 signal number : 422
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 0 signal number : 822
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
executor 0 userspace cover_cnt 8
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 115
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1575 signal and 0 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 8 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1759 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 832 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 780 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 487 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 529 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 625 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 307 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 75, 43, 0
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 693 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 422 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 75, 42, 0
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 822 signal and 0 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
2023/01/25 16:52:05 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:05 prog length: 2
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 75, 40, 0
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 1 receive testcase
----- executor 3 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
----- executor 2 receive testcase
executor 3: prog_data_offset 1320, prog_size 304
[15882ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[15883ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=304 filter=0
executor 2: prog_data_offset 1312, prog_size 8
[15882ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-63
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[15895ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 57
-----finish removing dir
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-64 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-64
receive_execute: 7, 88
receive_execute: 6, 91
receive_execute: 8, 91
spawned worker pid 523
spawned worker pid 524
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 2 after receive_execute
spawned worker pid 597
executor 2 after setup_test
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 1
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 11, 95
spawned worker pid 554
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [15978ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-64
cover_reset in execute_call
#0 [15996ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-64
----- executor 3 write_call_output, size 6770, pid 554, write pid:555
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 19
#0 [15996ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-64
cover_reset in execute_call
#0 [15997ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=458  /root/glusterfs-client/dfs-0-64
----- executor 3 write_call_output, size 458, pid 554, write pid:555
----- executor 3 executes write_coverage_signal cov->size 458, flag collect 0
----- executor 3 signal number : 89
----- completed 2
execute_one loop: 0, 0, 0
execute_one inner time: 0, 19, 0
execute_one time: 1, 19
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 106, 22, 0
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 2 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4859, flag collect 0
----- executor 1 signal number : 444
----- executor 2 signal number : 458
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2768, flag collect 0
----- executor 1 signal number : 1127
----- executor 2 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 1 signal number : 807
----- executor 2 executes write_coverage_signal cov->size 9542, flag collect 0
----- executor 2 signal number : 1597
----- executor 2 executes write_coverage_signal cov->size 8702, flag collect 0
----- executor 2 signal number : 832
----- executor 2 executes write_coverage_signal cov->size 7971, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 538
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 622
executor 1 userspace cover_cnt 6
----- executor 2 signal number : 188
----- executor 2 executes write_coverage_signal cov->size 3508, flag collect 0
----- executor 2 signal number : 156
----- executor 2 executes write_coverage_signal cov->size 11519, flag collect 0
----- executor 2 signal number : 1230
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 807
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 538
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 0 signal number : 622
executor 0 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 95, 31, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 97, 30, 0
executor 2 userspace cover_cnt 8
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 125
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 89 signal and 0 cover from kernel component
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 807 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 622 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 99, 34, 0
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 6 replies
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 807 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 622 signal and 0 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 8 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1597 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 832 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 188 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 156 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1230 signal and 0 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
2023/01/25 16:52:05 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:05 prog length: 2
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
----- executor 1 receive testcase
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
executor 0: prog_data_offset 1296, prog_size 8
executor 3: prog_data_offset 1320, prog_size 304
[16020ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[16010ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=304 filter=0
[16009ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-64
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[16012ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

remove dir time 45
-----finish removing dir
receive_execute: 0, 80
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-65 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-65
receive_execute: 5, 81
receive_execute: 6, 82
spawned worker pid 598
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 525
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
spawned worker pid 524
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 11, 84
spawned worker pid 556
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [16095ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-65
cover_reset in execute_call
#0 [16114ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-65
----- executor 3 write_call_output, size 6751, pid 556, write pid:557
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 20
#0 [16115ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-65
cover_reset in execute_call
#0 [16117ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1204  /root/glusterfs-client/dfs-0-65
----- executor 3 write_call_output, size 1204, pid 556, write pid:557
----- executor 3 executes write_coverage_signal cov->size 1204, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 24, 0
execute_one time: 1, 24
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3469, flag collect 0
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 2 signal number : 1127
----- executor 1 signal number : 788
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 0 signal number : 1992
----- executor 0 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 359
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 615
----- executor 2 signal number : 659
----- executor 0 signal number : 865
----- executor 0 executes write_coverage_signal cov->size 4226, flag collect 0
----- executor 0 signal number : 169
----- executor 0 executes write_coverage_signal cov->size 4895, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 14290, flag collect 0
----- executor 2 signal number : 789
executor 1 userspace cover_cnt 5
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 571
----- executor 2 signal number : 536
executor 0 userspace cover_cnt 8
executor 2 userspace cover_cnt 5
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 116
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 659 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 86, 35, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 88, 34, 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 95, 26, 0
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 8 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1992 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 865 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 169 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 571 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 80, 35, 0
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 788 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 359 signal and 0 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 615 signal and 0 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:05 prog length: 2
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[16146ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 360
[16136ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[16137ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-65
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[16136ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 65
-----finish removing dir
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-66 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-66
receive_execute: 11, 100
receive_execute: 11, 100
spawned worker pid 525
spawned worker pid 526
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 100
spawned worker pid 599
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 17, 104
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
spawned worker pid 558
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [16243ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-66
cover_reset in execute_call
#0 [16261ms] <- mkdir=0x0 errno=14 cover=6742  /root/glusterfs-client/dfs-0-66
----- executor 3 write_call_output, size 6742, pid 558, write pid:559
----- executor 3 executes write_coverage_signal cov->size 6742, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 22
#0 [16264ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-66
cover_reset in execute_call
#0 [16268ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-66
----- executor 3 write_call_output, size 4611, pid 558, write pid:559
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 6
execute_one inner time: 0, 28, 0
execute_one time: 1, 28
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 121, 31, 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 6902, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 409, signal number : 455
----- executor 0 executes write_coverage_signal cov->size 1404, flag collect 1
----- executor 0 cover number : 402, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 9575, flag collect 1
----- executor 1 cover number : 1451, signal number : 1735
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4828, flag collect 1
----- executor 2 cover number : 1208, signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 6295, flag collect 1
----- executor 2 cover number : 815, signal number : 857
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 770, signal number : 782
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 1442, signal number : 1759
----- executor 0 executes write_coverage_signal cov->size 1458, flag collect 1
----- executor 0 cover number : 386, signal number : 309
----- executor 0 executes write_coverage_signal cov->size 11572, flag collect 1
----- executor 2 cover number : 1451, signal number : 1020
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 cover number : 1292, signal number : 530
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 1 cover number : 1005, signal number : 81
----- executor 0 cover number : 950, signal number : 697
----- executor 0 executes write_coverage_signal cov->size 4874, flag collect 1
----- executor 2 cover number : 1292, signal number : 156
----- executor 0 cover number : 821, signal number : 285
----- executor 0 executes write_coverage_signal cov->size 16081, flag collect 1
executor 2 userspace cover_cnt 5
executor 1 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 111, 44, 0
----- executor 0 cover number : 2118, signal number : 1003
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
executor 0 userspace cover_cnt 7
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 148
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 602 signal and 1006 cover from kernel component
write_metadata
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1 signal and 402 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1759 signal and 1442 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 309 signal and 386 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 697 signal and 950 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 285 signal and 821 cover from userspace component
------ execute 0 reply_execute finished
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1003 signal and 2118 cover from userspace component
time breakdown 0: 111, 48, 0
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1392 signal and 1208 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 857 signal and 815 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 782 signal and 770 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1020 signal and 1451 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 530 signal and 1292 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 156 signal and 1292 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 81 signal and 1005 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 111, 44, 0
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:05 prog length: 2
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[16288ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[16288ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
executor 3: prog_data_offset 1320, prog_size 360
[16299ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[16289ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-66
remove dir time 50
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-67 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-67
receive_execute: 6, 83
receive_execute: 7, 83
receive_execute: 3, 83
spawned worker pid 527
spawned worker pid 600
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 526
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
execute_one inner time: 1, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 2, 1
receive_execute: 17, 86
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
spawned worker pid 560
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [16377ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-67
cover_reset in execute_call
#0 [16394ms] <- mkdir=0x0 errno=14 cover=6763  /root/glusterfs-client/dfs-0-67
----- executor 3 write_call_output, size 6763, pid 560, write pid:561
----- executor 3 executes write_coverage_signal cov->size 6763, flag collect 1
----- executor 3 cover number : 1280, signal number : 1584
----- completed 1
execute_one loop: 0, 0, 19
#0 [16396ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-67
cover_reset in execute_call
#0 [16399ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-67
----- executor 3 write_call_output, size 4611, pid 560, write pid:561
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 6
execute_one inner time: 0, 25, 0
execute_one time: 1, 26
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 103, 32, 0
----- executor 2 executes write_coverage_signal cov->size 2744, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 2 cover number : 410, signal number : 457
----- executor 2 executes write_coverage_signal cov->size 5560, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 410, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 12682, flag collect 1
----- executor 1 cover number : 1451, signal number : 1735
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 2 cover number : 1650, signal number : 2022
----- executor 2 executes write_coverage_signal cov->size 3588, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 3938, flag collect 1
----- executor 0 cover number : 410, signal number : 457
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 1451, signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 6665, flag collect 1
----- executor 1 cover number : 770, signal number : 782
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 cover number : 747, signal number : 723
----- executor 0 cover number : 852, signal number : 893
----- executor 2 executes write_coverage_signal cov->size 9575, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4955, flag collect 1
----- executor 1 cover number : 1292, signal number : 530
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 1098, signal number : 250
----- executor 0 executes write_coverage_signal cov->size 7890, flag collect 1
----- executor 2 cover number : 1442, signal number : 171
----- executor 2 executes write_coverage_signal cov->size 9435, flag collect 1
----- executor 1 cover number : 1005, signal number : 81
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 1087, signal number : 579
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 841, signal number : 290
----- executor 2 executes write_coverage_signal cov->size 8273, flag collect 1
----- executor 2 cover number : 1676, signal number : 841
executor 2 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 89, 46, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 86, 46, 0
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 133
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1584 signal and 1280 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 893 signal and 852 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 250 signal and 1098 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 579 signal and 1087 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 782 signal and 770 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 530 signal and 1292 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 81 signal and 1005 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1 signal and 410 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 2022 signal and 1650 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 723 signal and 747 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 171 signal and 1442 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 290 signal and 841 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 841 signal and 1676 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 90, 50, 0
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

2023/01/25 16:52:05 prog length: 2
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 360
[16429ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-67
executor 0: prog_data_offset 1296, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[16429ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[16440ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[16428ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 84
-----finish removing dir
receive_execute: 7, 131
receive_execute: 10, 130
spawned worker pid 527
receive_execute: 11, 131
spawned worker pid 601
spawned worker pid 528
executor 0 after receive_execute
executor 0 after setup_test
executor 2 after receive_execute
executor 2 after setup_test
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
mkdir time 47
executor 3 create dir /root/glusterfs-client/dfs-0-68 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-68
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 3
execute_one inner time: 1, 0, 0
execute_one time: 3, 1
receive_execute: 22, 136
spawned worker pid 562
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [16567ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-68
cover_reset in execute_call
#0 [16598ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-68
----- executor 3 write_call_output, size 6762, pid 562, write pid:563
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 33
#0 [16600ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-68
cover_reset in execute_call
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 2's reply
#0 [16612ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-68
----- executor 3 write_call_output, size 4611, pid 562, write pid:563
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 13
execute_one inner time: 0, 46, 0
execute_one time: 2, 46
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 158, 50, 0
----- executor 2 executes write_coverage_signal cov->size 3755, flag collect 1
----- executor 2 cover number : 410, signal number : 457
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 cover number : 1292, signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 6668, flag collect 1
----- executor 2 cover number : 852, signal number : 905
----- executor 1 executes write_coverage_signal cov->size 8306, flag collect 1
----- executor 1 cover number : 410, signal number : 458
----- executor 1 executes write_coverage_signal cov->size 9472, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 1451, signal number : 691
----- executor 2 executes write_coverage_signal cov->size 4828, flag collect 1
----- executor 2 cover number : 1208, signal number : 298
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1532, signal number : 1856
----- executor 1 executes write_coverage_signal cov->size 13032, flag collect 1
----- executor 1 cover number : 951, signal number : 1007
----- executor 1 executes write_coverage_signal cov->size 9902, flag collect 1
----- executor 1 cover number : 1774, signal number : 864
----- executor 1 executes write_coverage_signal cov->size 11149, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3174, flag collect 1
----- executor 0 cover number : 1006, signal number : 1129
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 0 cover number : 770, signal number : 813
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 1451, signal number : 1038
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 1292, signal number : 151
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 1392, signal number : 333
executor 1 userspace cover_cnt 5
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 1's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:05 wait for executor 0's reply
2023/01/25 16:52:05 for select break: 1
2023/01/25 16:52:05 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:05 ------ all executors finish execution
2023/01/25 16:52:05 exec time: 198
2023/01/25 16:52:05 ----- PS len: 4
2023/01/25 16:52:05 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:05 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:05 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:05 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1129 signal and 1006 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 813 signal and 770 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 1038 signal and 1451 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 0 receive 151 signal and 1292 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 458 signal and 410 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1856 signal and 1532 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 1007 signal and 951 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 864 signal and 1774 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 1 receive 333 signal and 1392 cover from userspace component
2023/01/25 16:52:05 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 905 signal and 852 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 691 signal and 1451 cover from userspace component
2023/01/25 16:52:05 ------- fuzzer executor 2 receive 298 signal and 1208 cover from userspace component
2023/01/25 16:52:05 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:05 result hanged=false: 
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 141, 66, 1
2023/01/25 16:52:05 added new input for call #1 setxattr$trusted_overlay_nlink to corpus:
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 142, 65, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 138, 65, 0
2023/01/25 16:52:05 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/01/25 16:52:05 #0: triaging type=0
2023/01/25 16:52:05 1 triaging input for call #1 setxattr$trusted_overlay_nlink (new signal=3)
2023/01/25 16:52:05 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:05 prog length: 3
2023/01/25 16:52:05 HasCrashFail:false HasNetFail:false
16:52:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x0)
setxattr(0x0, &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:05 wait for executor 3's reply
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 672
[16641ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=672 filter=0
remove dir: /root/glusterfs-client/dfs-0-68
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[16652ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[16641ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];
v4[100];
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 0);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[16641ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 64
-----finish removing dir
mkdir time 90
executor 3 create dir /root/glusterfs-client/dfs-0-69 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-69
receive_execute: 16, 155
receive_execute: 14, 154
spawned worker pid 602
spawned worker pid 528
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 16, 155
spawned worker pid 529
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 26, 175
spawned worker pid 564
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [16818ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-69
cover_reset in execute_call
#0 [16865ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-69
----- executor 3 write_call_output, size 6770, pid 564, write pid:565
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 1
----- executor 3 cover number : 1280, signal number : 1584
----- completed 1
execute_one loop: 0, 0, 49
#0 [16867ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x0) 3673 /root/glusterfs-client/dfs-0-69
cover_reset in execute_call
#0 [16879ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-69
----- executor 3 write_call_output, size 4611, pid 564, write pid:565
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 1
----- executor 3 cover number : 1006, signal number : 602
----- completed 2
execute_one loop: 0, 0, 14
#0 [16881ms] -> setxattr(0x0, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-69
cover_reset in execute_call
#0 [16882ms] <- setxattr=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-69
----- executor 3 write_call_output, size 0, pid 564, write pid:565
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
execute_one inner time: 0, 65, 0
execute_one time: 2, 65
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 201, 68, 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 cover number : 1292, signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 5512, flag collect 1
----- executor 2 cover number : 409, signal number : 455
----- executor 2 executes write_coverage_signal cov->size 3492, flag collect 1
----- executor 0 cover number : 1292, signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 2 cover number : 409, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 7873, flag collect 1
----- executor 0 cover number : 770, signal number : 796
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 1 cover number : 770, signal number : 796
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 1451, signal number : 690
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 1005, signal number : 122
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 1451, signal number : 644
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 1005, signal number : 83
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 171, 98, 0
executor 1 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 168, 105, 0
2023/01/25 16:52:06 for select break: 1
----- executor 2 cover number : 1055, signal number : 1240
----- executor 2 executes write_coverage_signal cov->size 8613, flag collect 1
----- executor 2 cover number : 943, signal number : 1006
----- executor 2 executes write_coverage_signal cov->size 8273, flag collect 1
----- executor 2 cover number : 1675, signal number : 1308
----- executor 2 executes write_coverage_signal cov->size 5138, flag collect 1
----- executor 2 cover number : 661, signal number : 43
----- executor 2 executes write_coverage_signal cov->size 15929, flag collect 1
----- executor 2 cover number : 1445, signal number : 483
executor 2 userspace cover_cnt 7
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 171, 106, 0
2023/01/25 16:52:06 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 1's reply
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 0's reply
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:06 ------ all executors finish execution
2023/01/25 16:52:06 exec time: 261
2023/01/25 16:52:06 ----- PS len: 4
2023/01/25 16:52:06 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:06 fuzzer receive 1584 signal and 1280 cover from kernel component
2023/01/25 16:52:06 fuzzer receive 602 signal and 1006 cover from kernel component
2023/01/25 16:52:06 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:06 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 796 signal and 770 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 122 signal and 1005 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 644 signal and 1451 cover from userspace component
2023/01/25 16:52:06 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 796 signal and 770 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 690 signal and 1451 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 83 signal and 1005 cover from userspace component
2023/01/25 16:52:06 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 2 signal and 409 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 1240 signal and 1055 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 1006 signal and 943 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 1308 signal and 1675 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 43 signal and 661 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 483 signal and 1445 cover from userspace component
2023/01/25 16:52:06 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:06 result hanged=false: 
2023/01/25 16:52:06 ----- triage return due to empty signal call #1 setxattr$trusted_overlay_nlink
2023/01/25 16:52:06 #0: triaging type=0
2023/01/25 16:52:06 #0: triaging type=0
2023/01/25 16:52:06 1 triaging input for call #0 mkdir (new signal=1580)
2023/01/25 16:52:06 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:06 prog length: 3
2023/01/25 16:52:06 HasCrashFail:false HasNetFail:false
16:52:06 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:06 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[16923ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 792
[16924ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=792 filter=0
remove dir: /root/glusterfs-client/dfs-0-69
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[16933ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[16923ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 175
-----finish removing dir
receive_execute: 22, 302
mkdir time 125
executor 3 create dir /root/glusterfs-client/dfs-0-70 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-70
spawned worker pid 529
receive_execute: 29, 302
executor 1 after receive_execute
executor 1 after setup_test
spawned worker pid 603
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 19, 302
spawned worker pid 530
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 8, 0
receive_execute: 40, 317
spawned worker pid 566
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [17242ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-70
cover_reset in execute_call
#0 [17268ms] <- mkdir=0x0 errno=14 cover=6743  /root/glusterfs-client/dfs-0-70
----- executor 3 write_call_output, size 6743, pid 566, write pid:567
----- executor 3 executes write_coverage_signal cov->size 6743, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 28
#0 [17269ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-70
cover_reset in execute_call
#0 [17289ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4629  /root/glusterfs-client/dfs-0-70
----- executor 3 write_call_output, size 4629, pid 566, write pid:567
----- executor 3 executes write_coverage_signal cov->size 4629, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 2
execute_one loop: 0, 0, 21
#0 [17291ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-70
cover_reset in execute_call
#0 [17313ms] <- setxattr=0x0 errno=14 cover=5463  /root/glusterfs-client/dfs-0-70
----- executor 3 write_call_output, size 5463, pid 566, write pid:567
----- executor 3 executes write_coverage_signal cov->size 5463, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 3
execute_one loop: 0, 0, 24
execute_one inner time: 0, 73, 0
execute_one time: 1, 73
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 5460, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4158, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 5212, flag collect 1
----- executor 1 cover number : 409, signal number : 455
----- executor 1 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 0 cover number : 409, signal number : 455
----- executor 0 executes write_coverage_signal cov->size 6862, flag collect 1
----- executor 1 cover number : 1452, signal number : 1737
----- executor 1 executes write_coverage_signal cov->size 8344, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 357, 76, 0
----- executor 0 cover number : 409, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 10477, flag collect 1
----- executor 2 cover number : 1137, signal number : 1323
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 1451, signal number : 1077
----- executor 2 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 1 cover number : 898, signal number : 967
----- executor 1 executes write_coverage_signal cov->size 6871, flag collect 1
----- executor 1 cover number : 1339, signal number : 883
----- executor 1 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 1 cover number : 1293, signal number : 162
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 1200, signal number : 1410
----- executor 0 executes write_coverage_signal cov->size 8820, flag collect 1
----- executor 0 cover number : 939, signal number : 938
----- executor 0 executes write_coverage_signal cov->size 7984, flag collect 1
----- executor 0 cover number : 835, signal number : 272
----- executor 0 executes write_coverage_signal cov->size 14339, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 324, 104, 0
----- executor 0 cover number : 2171, signal number : 1831
----- executor 0 executes write_coverage_signal cov->size 15693, flag collect 1
----- executor 2 cover number : 816, signal number : 861
----- executor 2 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 2 cover number : 1293, signal number : 170
executor 2 userspace cover_cnt 5
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 321, 103, 0
----- executor 0 cover number : 1519, signal number : 439
executor 0 userspace cover_cnt 7
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 1's reply
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 0's reply
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:06 ------ all executors finish execution
2023/01/25 16:52:06 exec time: 417
2023/01/25 16:52:06 ----- PS len: 4
2023/01/25 16:52:06 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:06 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:06 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:06 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:06 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 1 signal and 409 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 1410 signal and 1200 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 938 signal and 939 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 272 signal and 835 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 1831 signal and 2171 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 0 receive 439 signal and 1519 cover from userspace component
2023/01/25 16:52:06 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 1737 signal and 1452 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 967 signal and 898 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 883 signal and 1339 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 1 receive 162 signal and 1293 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 331, 113, 1
2023/01/25 16:52:06 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 1323 signal and 1137 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 1077 signal and 1451 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 861 signal and 816 cover from userspace component
2023/01/25 16:52:06 ------- fuzzer executor 2 receive 170 signal and 1293 cover from userspace component
2023/01/25 16:52:06 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:06 result hanged=false: 
2023/01/25 16:52:06 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:06 prog length: 3
2023/01/25 16:52:06 HasCrashFail:false HasNetFail:false
16:52:06 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:06 wait for executor 3's reply
----- executor 0 receive testcase
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 3: prog_data_offset 1320, prog_size 792
executor 0: prog_data_offset 1296, prog_size 8
[17353ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[17344ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=792 filter=0
executor 2: prog_data_offset 1312, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-70
[17344ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[17343ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

remove dir time 159
-----finish removing dir
receive_execute: 14, 240
receive_execute: 4, 240
mkdir time 80
executor 3 create dir /root/glusterfs-client/dfs-0-71 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-71
receive_execute: 15, 240
spawned worker pid 604
spawned worker pid 530
spawned worker pid 531
executor 1 after receive_execute
executor 1 after setup_test
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 27, 245
spawned worker pid 568
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 5, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
#0 [17599ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-71
cover_reset in execute_call
#0 [17651ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-71
----- executor 3 write_call_output, size 6770, pid 568, write pid:569
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 1
----- executor 3 cover number : 1280, signal number : 1584
----- completed 1
execute_one loop: 0, 0, 62
#0 [17653ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-71
cover_reset in execute_call
#0 [17660ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-71
----- executor 3 write_call_output, size 4626, pid 568, write pid:569
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 2
execute_one loop: 0, 0, 9
#0 [17661ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-71
cover_reset in execute_call
#0 [17683ms] <- setxattr=0x0 errno=14 cover=5452  /root/glusterfs-client/dfs-0-71
----- executor 3 write_call_output, size 5452, pid 568, write pid:569
----- executor 3 executes write_coverage_signal cov->size 5452, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 3
execute_one loop: 0, 0, 23
execute_one inner time: 1, 94, 0
execute_one time: 1, 95
2023/01/25 16:52:06 for select break: 1
2023/01/25 16:52:06 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:06 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 272, 98, 0
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 5212, flag collect 1
----- executor 1 cover number : 1137, signal number : 1323
----- executor 1 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 1 cover number : 816, signal number : 883
----- executor 1 executes write_coverage_signal cov->size 11209, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 5460, flag collect 1
----- executor 2 cover number : 409, signal number : 455
----- executor 2 executes write_coverage_signal cov->size 6107, flag collect 1
----- executor 2 cover number : 409, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 10922, flag collect 1
----- executor 1 cover number : 1293, signal number : 548
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 1451, signal number : 649
executor 1 userspace cover_cnt 5
----- executor 2 cover number : 1511, signal number : 1875
----- executor 2 executes write_coverage_signal cov->size 7362, flag collect 1
----- executor 2 cover number : 937, signal number : 932
----- executor 2 executes write_coverage_signal cov->size 10655, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 1451, signal number : 1735
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 255, 112, 1
----- executor 0 cover number : 816, signal number : 856
----- executor 0 executes write_coverage_signal cov->size 10005, flag collect 1
----- executor 0 cover number : 1293, signal number : 534
----- executor 0 executes write_coverage_signal cov->size 5219, flag collect 1
----- executor 2 cover number : 1948, signal number : 1190
----- executor 2 executes write_coverage_signal cov->size 10164, flag collect 1
----- executor 2 cover number : 841, signal number : 323
----- executor 2 executes write_coverage_signal cov->size 20529, flag collect 1
----- executor 0 cover number : 1138, signal number : 281
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 1732, signal number : 630
executor 2 userspace cover_cnt 7
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 1's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 0's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:07 ------ all executors finish execution
2023/01/25 16:52:07 exec time: 364
2023/01/25 16:52:07 ----- PS len: 4
2023/01/25 16:52:07 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:07 fuzzer receive 1584 signal and 1280 cover from kernel component
2023/01/25 16:52:07 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:07 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:07 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 1323 signal and 1137 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 548 signal and 1293 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 649 signal and 1451 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 244, 124, 0
2023/01/25 16:52:07 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 2 signal and 409 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1875 signal and 1511 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 932 signal and 937 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1190 signal and 1948 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 323 signal and 841 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 630 signal and 1732 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 856 signal and 816 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 534 signal and 1293 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 281 signal and 1138 cover from userspace component
2023/01/25 16:52:07 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:07 result hanged=false: 
2023/01/25 16:52:07 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 255, 123, 0
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

2023/01/25 16:52:07 prog length: 3
2023/01/25 16:52:07 HasCrashFail:false HasNetFail:false
16:52:07 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:07 wait for executor 3's reply
----- executor 3 receive testcase
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";
v4[] = "./file0";
v5[] = "@random={user., security.SMACK64TRANSMUTE}";
v6[] = "security.SMACK64TRANSMUTE";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);
syscall(SYS_setxattr, v4, v5, v6, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[17725ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[17716ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[17715ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 792
[17728ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=792 filter=0
remove dir: /root/glusterfs-client/dfs-0-71
remove dir time 170
-----finish removing dir
receive_execute: 3, 242
mkdir time 58
executor 3 create dir /root/glusterfs-client/dfs-0-72 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-72
receive_execute: 19, 240
spawned worker pid 605
spawned worker pid 531
receive_execute: 7, 242
spawned worker pid 532
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 28, 247
spawned worker pid 570
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [17964ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-72
cover_reset in execute_call
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 5, 0
#0 [17991ms] <- mkdir=0x0 errno=14 cover=8889  /root/glusterfs-client/dfs-0-72
----- executor 3 write_call_output, size 8889, pid 570, write pid:571
----- executor 3 executes write_coverage_signal cov->size 8889, flag collect 1
----- executor 3 cover number : 1324, signal number : 1646
----- completed 1
execute_one loop: 0, 0, 28
#0 [17992ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-72
cover_reset in execute_call
#0 [17995ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4620  /root/glusterfs-client/dfs-0-72
----- executor 3 write_call_output, size 4620, pid 570, write pid:571
----- executor 3 executes write_coverage_signal cov->size 4620, flag collect 1
----- executor 3 cover number : 1002, signal number : 606
----- completed 2
execute_one loop: 0, 0, 4
#0 [17996ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-72
cover_reset in execute_call
#0 [18015ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-72
----- executor 3 write_call_output, size 5469, pid 570, write pid:571
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 1
----- executor 3 cover number : 1024, signal number : 239
----- completed 3
execute_one loop: 0, 0, 22
execute_one inner time: 0, 54, 0
execute_one time: 1, 55
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 5428, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 5432, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 3495, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6463, flag collect 1
----- executor 2 cover number : 410, signal number : 458
----- executor 2 executes write_coverage_signal cov->size 8198, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 1 cover number : 891, signal number : 1015
----- executor 1 executes write_coverage_signal cov->size 8302, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 9962, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 275, 58, 0
----- executor 2 cover number : 410, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12492, flag collect 1
----- executor 0 cover number : 1219, signal number : 1460
----- executor 0 executes write_coverage_signal cov->size 8305, flag collect 1
----- executor 2 cover number : 1740, signal number : 2227
----- executor 0 cover number : 863, signal number : 930
----- executor 2 executes write_coverage_signal cov->size 4107, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 613, signal number : 603
----- executor 2 executes write_coverage_signal cov->size 15909, flag collect 1
----- executor 0 cover number : 1453, signal number : 1039
----- executor 0 executes write_coverage_signal cov->size 8126, flag collect 1
----- executor 1 cover number : 863, signal number : 959
----- executor 1 executes write_coverage_signal cov->size 7782, flag collect 1
----- executor 1 cover number : 1587, signal number : 910
----- executor 1 executes write_coverage_signal cov->size 9962, flag collect 1
----- executor 1 cover number : 1219, signal number : 791
executor 1 userspace cover_cnt 6
----- executor 0 cover number : 1019, signal number : 230
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 1656, signal number : 589
----- executor 2 executes write_coverage_signal cov->size 13370, flag collect 1
----- executor 2 cover number : 1047, signal number : 707
----- executor 2 executes write_coverage_signal cov->size 15351, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 245, 81, 0
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 1's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 0's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:07 ------ all executors finish execution
2023/01/25 16:52:07 exec time: 327
2023/01/25 16:52:07 ----- PS len: 4
2023/01/25 16:52:07 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:07 fuzzer receive 1646 signal and 1324 cover from kernel component
2023/01/25 16:52:07 fuzzer receive 606 signal and 1002 cover from kernel component
2023/01/25 16:52:07 fuzzer receive 239 signal and 1024 cover from kernel component
2023/01/25 16:52:07 ----- [Userspace] executor 1 has 6 replies
----- executor 2 cover number : 2166, signal number : 1082
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
executor 2 userspace cover_cnt 8
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 249, 86, 0
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 1015 signal and 891 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 959 signal and 863 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 910 signal and 1587 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 791 signal and 1219 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1460 signal and 1219 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 930 signal and 863 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1039 signal and 1453 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 230 signal and 1019 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 2 has 8 replies
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 458 signal and 410 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 0 signal and 410 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 2227 signal and 1740 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 603 signal and 613 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 589 signal and 1656 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 707 signal and 1047 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1082 signal and 2166 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 259, 73, 0
2023/01/25 16:52:07 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:07 result hanged=false: 
2023/01/25 16:52:07 -----2 triaging input for call #0 mkdir (new signal=1574)
2023/01/25 16:52:07 minimize prog 3
2023/01/25 16:52:07 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:07 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:07 prog length: 2
2023/01/25 16:52:07 HasCrashFail:false HasNetFail:false
16:52:07 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:07 wait for executor 3's reply
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
executor 2: prog_data_offset 1312, prog_size 8
[18050ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
remove dir: /root/glusterfs-client/dfs-0-72
[18050ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18049ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18064ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 83
-----finish removing dir
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-73 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-73
receive_execute: 16, 118
receive_execute: 7, 122
receive_execute: 19, 122
spawned worker pid 533
spawned worker pid 532
executor 1 after receive_execute
executor 1 after setup_test
spawned worker pid 607
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 30, 125
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
spawned worker pid 572
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18176ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-73
cover_reset in execute_call
#0 [18196ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-73
----- executor 3 write_call_output, size 6751, pid 572, write pid:573
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 21
#0 [18197ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-73
cover_reset in execute_call
#0 [18204ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-73
----- executor 3 write_call_output, size 4626, pid 572, write pid:573
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 8
execute_one inner time: 0, 29, 0
execute_one time: 1, 29
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 155, 31, 0
----- executor 1 executes write_coverage_signal cov->size 3785, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4150, flag collect 0
----- executor 1 signal number : 455
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 813
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 1 signal number : 1379
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 11211, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6668, flag collect 0
----- executor 2 signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 151
----- executor 1 signal number : 903
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1941
executor 2 userspace cover_cnt 5
----- executor 0 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 1 signal number : 527
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 645
----- executor 0 signal number : 840
----- executor 0 executes write_coverage_signal cov->size 5057, flag collect 0
----- executor 0 signal number : 161
executor 1 userspace cover_cnt 5
----- executor 0 executes write_coverage_signal cov->size 9452, flag collect 0
----- executor 0 signal number : 249
----- executor 0 executes write_coverage_signal cov->size 9871, flag collect 0
----- executor 0 signal number : 835
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 129, 40, 0
executor 0 userspace cover_cnt 7
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 1's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 141, 42, 0
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:07 ------ all executors finish execution
2023/01/25 16:52:07 exec time: 173
2023/01/25 16:52:07 ----- PS len: 4
2023/01/25 16:52:07 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:07 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:07 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:07 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1941 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 840 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 161 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 249 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 835 signal and 0 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1038 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 151 signal and 0 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 1379 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 903 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 527 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 645 signal and 0 cover from userspace component
2023/01/25 16:52:07 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:07 result hanged=false: 
2023/01/25 16:52:07 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:07 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:07 prog length: 1
2023/01/25 16:52:07 HasCrashFail:false HasNetFail:false
16:52:07 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
---

end of program
2023/01/25 16:52:07 wait for executor 3's reply
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 134, 51, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18226ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 120
[18227ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=120 filter=0
remove dir: /root/glusterfs-client/dfs-0-73
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18237ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18226ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 66
-----finish removing dir
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-74 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-74
receive_execute: 13, 96
receive_execute: 0, 96
spawned worker pid 533
receive_execute: 13, 96
spawned worker pid 534
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
spawned worker pid 608
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 3, 1
executor 2 after receive_execute
receive_execute: 21, 99
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
spawned worker pid 574
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18327ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-74
cover_reset in execute_call
#0 [18352ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-74
----- executor 3 write_call_output, size 6751, pid 574, write pid:575
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 26
execute_one inner time: 0, 26, 0
execute_one time: 1, 26
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 120, 29, 0
----- executor 2 executes write_coverage_signal cov->size 1380, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 444
----- executor 2 signal number : 1259
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2934, flag collect 0
----- executor 1 signal number : 1259
----- executor 2 signal number : 577
----- executor 2 executes write_coverage_signal cov->size 9553, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 1 signal number : 832
----- executor 2 signal number : 833
----- executor 2 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 366
----- executor 1 signal number : 487
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 2 signal number : 402
----- executor 1 signal number : 529
executor 1 userspace cover_cnt 6
----- executor 0 executes write_coverage_signal cov->size 6223, flag collect 0
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 1404, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 6388, flag collect 0
----- executor 0 signal number : 1542
----- executor 0 executes write_coverage_signal cov->size 1460, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 10753, flag collect 0
----- executor 0 signal number : 714
----- executor 0 executes write_coverage_signal cov->size 11200, flag collect 0
----- executor 0 signal number : 598
----- executor 0 executes write_coverage_signal cov->size 9863, flag collect 0
----- executor 0 signal number : 847
executor 0 userspace cover_cnt 7
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 96, 38, 0
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 109, 38, 1
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 0's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:07 ------ all executors finish execution
2023/01/25 16:52:07 exec time: 134
2023/01/25 16:52:07 ----- PS len: 4
2023/01/25 16:52:07 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:07 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:07 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:07 ----- [Userspace] executor 1 has 6 replies
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 577 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 832 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 833 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 366 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 487 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 529 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 402 signal and 0 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 109, 39, 0
2023/01/25 16:52:07 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1542 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 714 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 598 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 847 signal and 0 cover from userspace component
2023/01/25 16:52:07 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:07 result hanged=false: 
2023/01/25 16:52:07 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:07 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:07 prog length: 1
2023/01/25 16:52:07 HasCrashFail:false HasNetFail:false
16:52:07 ---executing program 0:
---
---
---
mkdir(0x0, 0x0)
---

end of program
2023/01/25 16:52:07 wait for executor 3's reply
symc3 prog: v0[100];

syscall(SYS_mkdir, v0, 0);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18382ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 80
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18372ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[18372ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=80 filter=0
remove dir: /root/glusterfs-client/dfs-0-74
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18371ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 81
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-75 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-75
receive_execute: 9, 113
receive_execute: 10, 113
receive_execute: 10, 113
spawned worker pid 535
spawned worker pid 534
spawned worker pid 609
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 1 after receive_execute
executor 0 after setup_test
executor 1 after setup_test
executor 0 before execute_one
receive_execute: 17, 116
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
execute_one time: 3, 0
spawned worker pid 576
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18490ms] -> mkdir(0x0, 0x0) 2373 /root/glusterfs-client/dfs-0-75
cover_reset in execute_call
#0 [18491ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-75
----- executor 3 write_call_output, size 0, pid 576, write pid:577
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
execute_one inner time: 0, 1, 0
execute_one time: 2, 1
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 133, 5, 0
----- executor 1 executes write_coverage_signal cov->size 970, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 455
----- executor 0 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 684
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 0 signal number : 505
----- executor 1 signal number : 571
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 1006
executor 0 userspace cover_cnt 3
----- executor 1 signal number : 650
executor 1 userspace cover_cnt 4
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 122, 14, 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 391
executor 2 userspace cover_cnt 3
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 124, 12, 0
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 1's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 0's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:07 ------ all executors finish execution
2023/01/25 16:52:07 exec time: 130
2023/01/25 16:52:07 ----- PS len: 4
2023/01/25 16:52:07 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:07 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:07 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 684 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 571 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 650 signal and 0 cover from userspace component
2023/01/25 16:52:07 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:07 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:07 result hanged=false: 
2023/01/25 16:52:07 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:07 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:07 prog length: 1
2023/01/25 16:52:07 HasCrashFail:false HasNetFail:false
16:52:07 ---executing program 0:
---
---
---
mkdir(0x0, 0x0)
---

end of program
2023/01/25 16:52:07 wait for executor 3's reply
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18503ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
symc3 prog: v0[100];

syscall(SYS_mkdir, v0, 0);

executor 3: prog_data_offset 1320, prog_size 80
[18505ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=80 filter=0
remove dir: /root/glusterfs-client/dfs-0-75
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18514ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 123, 18, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18503ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 53
-----finish removing dir
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-76 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-76
receive_execute: 6, 95
receive_execute: 2, 95
receive_execute: 1, 95
spawned worker pid 536
spawned worker pid 535
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
spawned worker pid 610
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 2 after receive_execute
executor 0 before execute_one
executor 2 after setup_test
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
executor 2 before execute_one
receive_execute: 11, 98
execute_one time: 3, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
spawned worker pid 578
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18603ms] -> mkdir(0x0, 0x0) 2373 /root/glusterfs-client/dfs-0-76
cover_reset in execute_call
#0 [18603ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-76
----- executor 3 write_call_output, size 0, pid 578, write pid:579
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 109, 3, 0
2023/01/25 16:52:07 for select break: 1
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 3559, flag collect 0
----- executor 1 signal number : 671
----- executor 1 executes write_coverage_signal cov->size 4059, flag collect 0
----- executor 1 signal number : 970
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 260
----- executor 2 signal number : 391
executor 1 userspace cover_cnt 4
----- executor 0 signal number : 1006
2023/01/25 16:52:07 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 2's reply
executor 2 userspace cover_cnt 3
executor 0 userspace cover_cnt 3
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 102, 9, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 97, 11, 0
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 1's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 0's reply
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:07 ------ all executors finish execution
2023/01/25 16:52:07 exec time: 107
2023/01/25 16:52:07 ----- PS len: 4
2023/01/25 16:52:07 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:07 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:07 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:07 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 671 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 970 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 1 receive 260 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 96, 11, 1
2023/01/25 16:52:07 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:07 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:07 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:07 result hanged=false: 
2023/01/25 16:52:07 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:07 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:07 prog length: 1
2023/01/25 16:52:07 HasCrashFail:false HasNetFail:false
16:52:07 ---executing program 0:
---
---
---
mkdir(0x0, 0x0)
---

end of program
2023/01/25 16:52:07 wait for executor 3's reply
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 80
executor 1: prog_data_offset 1304, prog_size 8
[18612ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=80 filter=0
[18611ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[100];

syscall(SYS_mkdir, v0, 0);

remove dir: /root/glusterfs-client/dfs-0-76
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18611ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18624ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 31
-----finish removing dir
mkdir time 42
executor 3 create dir /root/glusterfs-client/dfs-0-77 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-77
receive_execute: 3, 73
receive_execute: 0, 70
receive_execute: 0, 74
executor 2 after receive_execute
spawned worker pid 611
spawned worker pid 537
spawned worker pid 536
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 79
spawned worker pid 580
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18691ms] -> mkdir(0x0, 0x0) 2373 /root/glusterfs-client/dfs-0-77
cover_reset in execute_call
#0 [18692ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-77
----- executor 3 write_call_output, size 0, pid 580, write pid:581
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
execute_one inner time: 0, 2, 0
execute_one time: 1, 2
2023/01/25 16:52:07 for select break: 1
2023/01/25 16:52:07 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:07 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 85, 5, 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 4059, flag collect 0
----- executor 1 signal number : 1117
----- executor 1 executes write_coverage_signal cov->size 3525, flag collect 0
----- executor 1 signal number : 523
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 260
executor 1 userspace cover_cnt 4
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 76, 14, 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 1006
executor 0 userspace cover_cnt 3
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 1006
executor 2 userspace cover_cnt 3
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 1's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 0's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:08 ------ all executors finish execution
2023/01/25 16:52:08 exec time: 88
2023/01/25 16:52:08 ----- PS len: 4
write_metadata
2023/01/25 16:52:08 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:08 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:08 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1117 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 523 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 260 signal and 0 cover from userspace component
------ execute 0 reply_execute finished
time breakdown 0: 70, 15, 0
2023/01/25 16:52:08 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:08 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:08 result hanged=false: 
2023/01/25 16:52:08 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:08 prog length: 1
2023/01/25 16:52:08 HasCrashFail:false HasNetFail:false
16:52:08 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
---

end of program
2023/01/25 16:52:08 wait for executor 3's reply
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18712ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 120
[18702ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=120 filter=0
remove dir: /root/glusterfs-client/dfs-0-77
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 74, 15, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18701ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18706ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 23
-----finish removing dir
receive_execute: 2, 55
receive_execute: 7, 50
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-78 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-78
receive_execute: 2, 55
spawned worker pid 538
spawned worker pid 612
spawned worker pid 537
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 58
spawned worker pid 582
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18762ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-78
cover_reset in execute_call
#0 [18779ms] <- mkdir=0x0 errno=14 cover=6763  /root/glusterfs-client/dfs-0-78
----- executor 3 write_call_output, size 6763, pid 582, write pid:583
----- executor 3 executes write_coverage_signal cov->size 6763, flag collect 1
----- executor 3 cover number : 1280, signal number : 1584
----- completed 1
execute_one loop: 0, 0, 19
execute_one inner time: 0, 20, 0
execute_one time: 2, 20
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 65, 23, 0
----- executor 2 executes write_coverage_signal cov->size 6223, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 2 cover number : 409, signal number : 455
----- executor 0 cover number : 1005, signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 1405, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 1
----- executor 1 cover number : 1292, signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 1
----- executor 2 cover number : 402, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 12778, flag collect 1
----- executor 1 cover number : 768, signal number : 788
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 768, signal number : 807
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 cover number : 1005, signal number : 123
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 1
----- executor 1 cover number : 1126, signal number : 621
----- executor 0 cover number : 1292, signal number : 538
executor 1 userspace cover_cnt 5
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 1
----- executor 2 cover number : 1622, signal number : 1992
----- executor 2 executes write_coverage_signal cov->size 11434, flag collect 1
----- executor 0 cover number : 1126, signal number : 622
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 948, signal number : 983
----- executor 2 executes write_coverage_signal cov->size 11406, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 58, 34, 0
----- executor 2 cover number : 1834, signal number : 1020
----- executor 2 executes write_coverage_signal cov->size 1462, flag collect 1
----- executor 2 cover number : 385, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 4860, flag collect 1
----- executor 2 cover number : 685, signal number : 26
executor 2 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 57, 36, 0
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 1's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 0's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:08 ------ all executors finish execution
2023/01/25 16:52:08 exec time: 97
2023/01/25 16:52:08 ----- PS len: 4
2023/01/25 16:52:08 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:08 fuzzer receive 1584 signal and 1280 cover from kernel component
2023/01/25 16:52:08 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1127 signal and 1005 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 807 signal and 768 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 538 signal and 1292 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1 signal and 402 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 622 signal and 1126 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1992 signal and 1622 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 788 signal and 768 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 983 signal and 948 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 57, 42, 0
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 123 signal and 1005 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 621 signal and 1126 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1020 signal and 1834 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 16 signal and 385 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 26 signal and 685 cover from userspace component
2023/01/25 16:52:08 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:08 result hanged=false: 
2023/01/25 16:52:08 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:08 prog length: 1
2023/01/25 16:52:08 HasCrashFail:false HasNetFail:false
16:52:08 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
---

end of program
2023/01/25 16:52:08 wait for executor 3's reply
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18814ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 120
[18804ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=120 filter=0
remove dir: /root/glusterfs-client/dfs-0-78
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18803ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18804ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-79 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-79
receive_execute: 5, 76
receive_execute: 11, 76
receive_execute: 13, 75
spawned worker pid 539
spawned worker pid 538
executor 1 after receive_execute
executor 1 after setup_test
spawned worker pid 613
executor 1 before execute_one
executor 2 after receive_execute
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 after setup_test
execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 2, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 2, 1
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 20, 92
spawned worker pid 584
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [18897ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-79
cover_reset in execute_call
#0 [18913ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-79
----- executor 3 write_call_output, size 6762, pid 584, write pid:585
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 18
execute_one inner time: 0, 18, 0
execute_one time: 1, 18
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2065, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 1 cover number : 409, signal number : 455
----- executor 1 executes write_coverage_signal cov->size 5560, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 112, 22, 0
----- executor 0 cover number : 1126, signal number : 1259
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 1
----- executor 1 cover number : 409, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9575, flag collect 1
----- executor 0 cover number : 768, signal number : 832
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 2 cover number : 1292, signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 1
----- executor 0 cover number : 1005, signal number : 487
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 cover number : 1442, signal number : 1759
----- executor 1 executes write_coverage_signal cov->size 2769, flag collect 1
----- executor 2 cover number : 768, signal number : 788
----- executor 1 cover number : 739, signal number : 723
----- executor 2 executes write_coverage_signal cov->size 3943, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9434, flag collect 1
----- executor 2 cover number : 1012, signal number : 143
----- executor 0 cover number : 1292, signal number : 529
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 1
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 841, signal number : 279
----- executor 1 executes write_coverage_signal cov->size 9610, flag collect 1
----- executor 2 cover number : 1126, signal number : 621
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1355, signal number : 407
----- executor 1 executes write_coverage_signal cov->size 8273, flag collect 1
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 1's reply
----- executor 1 cover number : 1675, signal number : 830
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 81, 47, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 87, 47, 0
executor 1 userspace cover_cnt 7
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 0's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:08 ------ all executors finish execution
2023/01/25 16:52:08 exec time: 125
2023/01/25 16:52:08 ----- PS len: 4
2023/01/25 16:52:08 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:08 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:08 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:08 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 788 signal and 768 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1259 signal and 1126 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 143 signal and 1012 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 621 signal and 1126 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 88, 50, 0
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 832 signal and 768 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 487 signal and 1005 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 529 signal and 1292 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1 signal and 409 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1759 signal and 1442 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 723 signal and 739 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 279 signal and 841 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 407 signal and 1355 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 830 signal and 1675 cover from userspace component
2023/01/25 16:52:08 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:08 result hanged=false: 
2023/01/25 16:52:08 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

2023/01/25 16:52:08 prog length: 1
2023/01/25 16:52:08 HasCrashFail:false HasNetFail:false
16:52:08 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
---

end of program
2023/01/25 16:52:08 wait for executor 3's reply
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 120
[18936ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=120 filter=0
remove dir: /root/glusterfs-client/dfs-0-79
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[18936ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[18936ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";

syscall(SYS_mkdir, v0, 0);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[18946ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-80 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-80
receive_execute: 10, 78
receive_execute: 9, 79
receive_execute: 7, 79
spawned worker pid 614
spawned worker pid 539
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 540
executor 0 after receive_execute
executor 1 after receive_execute
executor 1 after setup_test
executor 0 after setup_test
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 17, 82
spawned worker pid 586
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [19019ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-80
cover_reset in execute_call
#0 [19039ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-80
----- executor 3 write_call_output, size 6762, pid 586, write pid:587
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 21
execute_one inner time: 0, 22, 0
execute_one time: 1, 22
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 99, 25, 0
----- executor 1 executes write_coverage_signal cov->size 5516, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4828, flag collect 1
----- executor 1 cover number : 409, signal number : 455
----- executor 1 executes write_coverage_signal cov->size 2109, flag collect 1
----- executor 1 cover number : 402, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9610, flag collect 1
----- executor 0 cover number : 1207, signal number : 1390
----- executor 0 executes write_coverage_signal cov->size 5441, flag collect 1
----- executor 2 cover number : 1292, signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 2 cover number : 1005, signal number : 125
----- executor 0 cover number : 807, signal number : 844
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 1
----- executor 1 cover number : 1355, signal number : 1594
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 10011, flag collect 1
----- executor 2 cover number : 768, signal number : 780
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 1
----- executor 1 cover number : 948, signal number : 1015
----- executor 1 executes write_coverage_signal cov->size 2192, flag collect 1
----- executor 0 cover number : 1292, signal number : 526
----- executor 2 cover number : 1126, signal number : 624
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 1
----- executor 1 cover number : 453, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 9902, flag collect 1
executor 2 userspace cover_cnt 5
----- executor 0 cover number : 1126, signal number : 618
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 1774, signal number : 1247
----- executor 1 executes write_coverage_signal cov->size 7946, flag collect 1
----- executor 1 cover number : 1322, signal number : 167
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 89, 37, 0
executor 1 userspace cover_cnt 7
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 88, 39, 0
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 0's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:08 ------ all executors finish execution
2023/01/25 16:52:08 exec time: 120
2023/01/25 16:52:08 ----- PS len: 4
2023/01/25 16:52:08 [Kernel] executor 3 has 1 replies
2023/01/25 16:52:08 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:08 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1390 signal and 1207 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 844 signal and 807 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 526 signal and 1292 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 618 signal and 1126 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 86, 40, 0
2023/01/25 16:52:08 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1 signal and 402 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1594 signal and 1355 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1015 signal and 948 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 4 signal and 453 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1247 signal and 1774 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 167 signal and 1322 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 125 signal and 1005 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 780 signal and 768 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 624 signal and 1126 cover from userspace component
2023/01/25 16:52:08 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:08 result hanged=false: 
2023/01/25 16:52:08 added new input for call #0 mkdir to corpus:
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
2023/01/25 16:52:08 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/01/25 16:52:08 #0: triaging type=0
2023/01/25 16:52:08 #0: triaging type=0
2023/01/25 16:52:08 #0: triaging type=0
2023/01/25 16:52:08 1 triaging input for call #3 setxattr$trusted_overlay_nlink (new signal=4)
2023/01/25 16:52:08 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

2023/01/25 16:52:08 prog length: 5
2023/01/25 16:52:08 HasCrashFail:false HasNetFail:false
16:52:08 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:08 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1624
[19071ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1624 filter=0
remove dir: /root/glusterfs-client/dfs-0-80
executor 0: prog_data_offset 1296, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[19070ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[19081ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[19070ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-81 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-81
receive_execute: 17, 83
receive_execute: 18, 83
receive_execute: 15, 83
spawned worker pid 541
spawned worker pid 540
spawned worker pid 615
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 28, 87
spawned worker pid 588
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [19159ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-81
cover_reset in execute_call
#0 [19162ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-81
----- executor 3 write_call_output, size 4124, pid 588, write pid:589
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 1
----- executor 3 cover number : 1028, signal number : 1237
----- completed 1
execute_one loop: 0, 0, 5
#0 [19164ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-81
cover_reset in execute_call
#0 [19168ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-81
----- executor 3 write_call_output, size 4052, pid 588, write pid:589
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 5
#0 [19169ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-81
cover_reset in execute_call
#0 [19186ms] <- mkdir=0x0 errno=14 cover=6683  /root/glusterfs-client/dfs-0-81
----- executor 3 write_call_output, size 6683, pid 588, write pid:589
----- executor 3 executes write_coverage_signal cov->size 6683, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 3
execute_one loop: 0, 0, 19
#0 [19189ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-81
cover_reset in execute_call
#0 [19192ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-81
----- executor 3 write_call_output, size 4626, pid 588, write pid:589
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 4
execute_one loop: 0, 0, 4
#0 [19193ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-81
cover_reset in execute_call
#0 [19215ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-81
----- executor 3 write_call_output, size 5469, pid 588, write pid:589
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 5
execute_one loop: 0, 0, 23
execute_one inner time: 0, 57, 0
execute_one time: 1, 57
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 115, 59, 0
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32313, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 0 cover number : 1454, signal number : 1738
----- executor 2 cover number : 1140, signal number : 1326
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 0 cover number : 816, signal number : 856
----- executor 0 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 2 cover number : 816, signal number : 883
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 0 cover number : 1140, signal number : 668
----- executor 0 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 2 cover number : 1454, signal number : 1041
----- executor 2 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 0 cover number : 1294, signal number : 149
----- executor 1 cover number : 410, signal number : 1040
----- executor 1 executes write_coverage_signal cov->size 5460, flag collect 1
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 1294, signal number : 164
----- executor 1 cover number : 409, signal number : 1
executor 2 userspace cover_cnt 5
----- executor 1 executes write_coverage_signal cov->size 12501, flag collect 1
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 1's reply
----- executor 1 cover number : 1768, signal number : 2243
----- executor 1 executes write_coverage_signal cov->size 15611, flag collect 1
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 101, 74, 0
----- executor 1 cover number : 862, signal number : 915
----- executor 1 executes write_coverage_signal cov->size 7362, flag collect 1
----- executor 1 cover number : 937, signal number : 362
----- executor 1 executes write_coverage_signal cov->size 14716, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 100, 74, 0
----- executor 1 cover number : 2125, signal number : 1122
----- executor 1 executes write_coverage_signal cov->size 20680, flag collect 1
----- executor 1 cover number : 1769, signal number : 432
executor 1 userspace cover_cnt 7
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 0's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:08 ------ all executors finish execution
2023/01/25 16:52:08 exec time: 173
2023/01/25 16:52:08 ----- PS len: 4
2023/01/25 16:52:08 [Kernel] executor 3 has 5 replies
2023/01/25 16:52:08 fuzzer receive 1237 signal and 1028 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:08 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1738 signal and 1454 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 856 signal and 816 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 668 signal and 1140 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 149 signal and 1294 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 98, 90, 0
2023/01/25 16:52:08 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1040 signal and 410 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1 signal and 409 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 2243 signal and 1768 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 915 signal and 862 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 362 signal and 937 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1122 signal and 2125 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 432 signal and 1769 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1326 signal and 1140 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1041 signal and 1454 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 164 signal and 1294 cover from userspace component
2023/01/25 16:52:08 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:08 result hanged=false: 
2023/01/25 16:52:08 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

2023/01/25 16:52:08 prog length: 5
2023/01/25 16:52:08 HasCrashFail:false HasNetFail:false
16:52:08 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:08 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1624
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[19260ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[19250ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1624 filter=0
remove dir: /root/glusterfs-client/dfs-0-81
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[19249ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[19249ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 76
-----finish removing dir
mkdir time 49
executor 3 create dir /root/glusterfs-client/dfs-0-82 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-82
receive_execute: 22, 128
spawned worker pid 616
receive_execute: 22, 128
receive_execute: 5, 128
spawned worker pid 541
spawned worker pid 542
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 33, 134
spawned worker pid 590
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [19385ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-82
cover_reset in execute_call
#0 [19391ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-82
----- executor 3 write_call_output, size 4126, pid 590, write pid:591
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 1
----- executor 3 cover number : 1028, signal number : 1238
----- completed 1
execute_one loop: 0, 0, 7
#0 [19392ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-82
cover_reset in execute_call
#0 [19400ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-82
----- executor 3 write_call_output, size 4054, pid 590, write pid:591
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 10
#0 [19402ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-82
cover_reset in execute_call
#0 [19425ms] <- mkdir=0x0 errno=14 cover=6691  /root/glusterfs-client/dfs-0-82
----- executor 3 write_call_output, size 6691, pid 590, write pid:591
----- executor 3 executes write_coverage_signal cov->size 6691, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 3
execute_one loop: 0, 0, 24
#0 [19426ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-82
cover_reset in execute_call
#0 [19430ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4620  /root/glusterfs-client/dfs-0-82
----- executor 3 write_call_output, size 4620, pid 590, write pid:591
----- executor 3 executes write_coverage_signal cov->size 4620, flag collect 1
----- executor 3 cover number : 1002, signal number : 605
----- completed 4
execute_one loop: 0, 0, 6
#0 [19432ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-82
cover_reset in execute_call
#0 [19443ms] <- setxattr=0x0 errno=14 cover=5458  /root/glusterfs-client/dfs-0-82
----- executor 3 write_call_output, size 5458, pid 590, write pid:591
----- executor 3 executes write_coverage_signal cov->size 5458, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 5
execute_one loop: 0, 0, 12
execute_one inner time: 0, 59, 0
execute_one time: 1, 59
2023/01/25 16:52:08 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 6167, flag collect 1
2023/01/25 16:52:08 --------- executor 3 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 1
2023/01/25 16:52:08 wait for executor 2's reply
----- executor 0 executes write_coverage_signal cov->size 4867, flag collect 1
----- executor 2 cover number : 410, signal number : 457
----- executor 2 executes write_coverage_signal cov->size 6218, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 0 cover number : 403, signal number : 446
----- executor 0 executes write_coverage_signal cov->size 6874, flag collect 1
----- executor 2 cover number : 410, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 17512, flag collect 1
----- executor 1 cover number : 1140, signal number : 1326
----- executor 1 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 0 cover number : 1342, signal number : 1588
----- executor 0 executes write_coverage_signal cov->size 8344, flag collect 1
----- executor 1 cover number : 816, signal number : 883
----- executor 1 executes write_coverage_signal cov->size 6142, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 167, 62, 0
----- executor 0 cover number : 898, signal number : 969
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 1 cover number : 1454, signal number : 1041
----- executor 2 cover number : 1754, signal number : 2207
----- executor 2 executes write_coverage_signal cov->size 8105, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 0 cover number : 1454, signal number : 1022
----- executor 0 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 2 cover number : 939, signal number : 941
----- executor 2 executes write_coverage_signal cov->size 17005, flag collect 1
----- executor 1 cover number : 1294, signal number : 164
----- executor 0 cover number : 1294, signal number : 172
executor 1 userspace cover_cnt 5
executor 0 userspace cover_cnt 5
----- executor 2 cover number : 2148, signal number : 1142
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 133, 80, 0
----- executor 2 executes write_coverage_signal cov->size 13464, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 150, 82, 0
----- executor 2 cover number : 837, signal number : 326
----- executor 2 executes write_coverage_signal cov->size 12496, flag collect 1
----- executor 2 cover number : 1742, signal number : 359
executor 2 userspace cover_cnt 7
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 150, 88, 0
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 1's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:08 wait for executor 0's reply
2023/01/25 16:52:08 for select break: 1
2023/01/25 16:52:08 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:08 ------ all executors finish execution
2023/01/25 16:52:08 exec time: 219
2023/01/25 16:52:08 ----- PS len: 4
2023/01/25 16:52:08 [Kernel] executor 3 has 5 replies
2023/01/25 16:52:08 fuzzer receive 1238 signal and 1028 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 605 signal and 1002 cover from kernel component
2023/01/25 16:52:08 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:08 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 446 signal and 403 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1588 signal and 1342 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 969 signal and 898 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 1022 signal and 1454 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 0 receive 172 signal and 1294 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1326 signal and 1140 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:08 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1 signal and 410 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 2207 signal and 1754 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 941 signal and 939 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 1041 signal and 1454 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 1 receive 164 signal and 1294 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 1142 signal and 2148 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 326 signal and 837 cover from userspace component
2023/01/25 16:52:08 ------- fuzzer executor 2 receive 359 signal and 1742 cover from userspace component
2023/01/25 16:52:08 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:08 result hanged=false: 
2023/01/25 16:52:08 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

2023/01/25 16:52:08 prog length: 5
2023/01/25 16:52:08 HasCrashFail:false HasNetFail:false
16:52:08 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:08 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[19471ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
executor 3: prog_data_offset 1320, prog_size 1624
[19482ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[19472ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[19473ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1624 filter=0
remove dir: /root/glusterfs-client/dfs-0-82
remove dir time 91
-----finish removing dir
mkdir time 68
executor 3 create dir /root/glusterfs-client/dfs-0-83 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-83
receive_execute: 15, 159
receive_execute: 12, 160
receive_execute: 6, 160
spawned worker pid 542
spawned worker pid 617
spawned worker pid 543
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 26, 164
spawned worker pid 592
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [19637ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-83
cover_reset in execute_call
#0 [19643ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-83
----- executor 3 write_call_output, size 4126, pid 592, write pid:593
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 1
----- executor 3 cover number : 1028, signal number : 1238
----- completed 1
execute_one loop: 0, 0, 7
#0 [19644ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-83
cover_reset in execute_call
#0 [19646ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-83
----- executor 3 write_call_output, size 4054, pid 592, write pid:593
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
#0 [19647ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-83
cover_reset in execute_call
#0 [19676ms] <- mkdir=0x0 errno=14 cover=6698  /root/glusterfs-client/dfs-0-83
----- executor 3 write_call_output, size 6698, pid 592, write pid:593
----- executor 3 executes write_coverage_signal cov->size 6698, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 3
execute_one loop: 0, 0, 31
#0 [19678ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-83
cover_reset in execute_call
#0 [19685ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4623  /root/glusterfs-client/dfs-0-83
----- executor 3 write_call_output, size 4623, pid 592, write pid:593
----- executor 3 executes write_coverage_signal cov->size 4623, flag collect 1
----- executor 3 cover number : 1002, signal number : 605
----- completed 4
execute_one loop: 0, 0, 8
#0 [19685ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-83
cover_reset in execute_call
#0 [19695ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-83
----- executor 3 write_call_output, size 5469, pid 592, write pid:593
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 5
execute_one loop: 0, 0, 11
execute_one inner time: 0, 60, 0
execute_one time: 1, 60
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 190, 63, 0
----- executor 2 executes write_coverage_signal cov->size 5460, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 2 cover number : 409, signal number : 455
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 6921, flag collect 1
----- executor 1 cover number : 1140, signal number : 1326
----- executor 1 executes write_coverage_signal cov->size 7614, flag collect 1
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
----- executor 2 cover number : 409, signal number : 1
----- executor 0 cover number : 1140, signal number : 1326
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 17418, flag collect 1
----- executor 2 cover number : 1736, signal number : 2181
----- executor 2 executes write_coverage_signal cov->size 7362, flag collect 1
----- executor 0 cover number : 816, signal number : 883
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 0 cover number : 1454, signal number : 1041
----- executor 0 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 0 cover number : 1294, signal number : 164
----- executor 1 cover number : 816, signal number : 883
----- executor 1 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 1 cover number : 1454, signal number : 1041
----- executor 1 executes write_coverage_signal cov->size 11220, flag collect 1
----- executor 1 cover number : 1295, signal number : 166
executor 1 userspace cover_cnt 5
----- executor 2 cover number : 937, signal number : 948
----- executor 2 executes write_coverage_signal cov->size 17002, flag collect 1
executor 0 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 172, 76, 0
----- executor 2 cover number : 2147, signal number : 1156
----- executor 2 executes write_coverage_signal cov->size 14203, flag collect 1
----- executor 2 cover number : 841, signal number : 327
----- executor 2 executes write_coverage_signal cov->size 14155, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 175, 75, 0
----- executor 2 cover number : 1884, signal number : 369
executor 2 userspace cover_cnt 7
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 248
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 [Kernel] executor 3 has 5 replies
2023/01/25 16:52:09 fuzzer receive 1238 signal and 1028 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 605 signal and 1002 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1326 signal and 1140 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 167, 87, 0
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1326 signal and 1140 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1041 signal and 1454 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 166 signal and 1295 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1 signal and 409 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 2181 signal and 1736 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1041 signal and 1454 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 948 signal and 937 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 164 signal and 1294 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1156 signal and 2147 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 327 signal and 841 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 369 signal and 1884 cover from userspace component
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:09 -----2 triaging input for call #3 setxattr$trusted_overlay_nlink (new signal=4)
2023/01/25 16:52:09 minimize prog 3
2023/01/25 16:52:09 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:09 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);

2023/01/25 16:52:09 prog length: 4
2023/01/25 16:52:09 HasCrashFail:false HasNetFail:false
16:52:09 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:09 wait for executor 3's reply
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[19726ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[19726ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1272
[19727ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1272 filter=0
remove dir: /root/glusterfs-client/dfs-0-83
[19736ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 76
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-84 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-84
receive_execute: 19, 112
receive_execute: 19, 112
spawned worker pid 543
receive_execute: 7, 112
executor 1 after receive_execute
spawned worker pid 544
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 618
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 27, 118
spawned worker pid 594
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [19845ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-84
cover_reset in execute_call
#0 [19848ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-84
----- executor 3 write_call_output, size 4124, pid 594, write pid:595
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 0
----- executor 3 signal number : 1237
----- completed 1
execute_one loop: 0, 0, 4
#0 [19848ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-84
cover_reset in execute_call
#0 [19850ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4046  /root/glusterfs-client/dfs-0-84
----- executor 3 write_call_output, size 4046, pid 594, write pid:595
----- executor 3 executes write_coverage_signal cov->size 4046, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 2
#0 [19851ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-84
cover_reset in execute_call
#0 [19880ms] <- mkdir=0x0 errno=14 cover=6671  /root/glusterfs-client/dfs-0-84
----- executor 3 write_call_output, size 6671, pid 594, write pid:595
----- executor 3 executes write_coverage_signal cov->size 6671, flag collect 0
----- executor 3 signal number : 333
----- completed 3
execute_one loop: 0, 0, 30
#0 [19881ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-84
cover_reset in execute_call
#0 [19891ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4620  /root/glusterfs-client/dfs-0-84
----- executor 3 write_call_output, size 4620, pid 594, write pid:595
----- executor 3 executes write_coverage_signal cov->size 4620, flag collect 0
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
----- executor 3 signal number : 605
----- completed 4
execute_one loop: 0, 0, 10
execute_one inner time: 0, 46, 0
execute_one time: 1, 46
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 145, 49, 0
----- executor 1 executes write_coverage_signal cov->size 8254, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1405, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 11087, flag collect 0
----- executor 2 signal number : 1129
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 2 signal number : 1080
----- executor 1 signal number : 1865
----- executor 1 executes write_coverage_signal cov->size 16311, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 777
----- executor 1 signal number : 1014
----- executor 2 executes write_coverage_signal cov->size 8049, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1463, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 0 signal number : 1738
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 signal number : 782
----- executor 0 executes write_coverage_signal cov->size 8049, flag collect 0
----- executor 0 signal number : 528
----- executor 0 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 0 signal number : 80
executor 0 userspace cover_cnt 5
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 17766, flag collect 0
----- executor 2 signal number : 156
----- executor 1 signal number : 1133
----- executor 1 executes write_coverage_signal cov->size 9580, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 1 signal number : 83
executor 1 userspace cover_cnt 7
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 119, 60, 0
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 174
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 [Kernel] executor 3 has 4 replies
2023/01/25 16:52:09 fuzzer receive 1237 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 333 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1865 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1014 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1133 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 83 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1738 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 782 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 528 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1129 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1080 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 131, 61, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 131, 61, 0
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 777 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 156 signal and 0 cover from userspace component
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:09 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:09 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

2023/01/25 16:52:09 prog length: 3
2023/01/25 16:52:09 HasCrashFail:false HasNetFail:false
16:52:09 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:09 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

----- executor 1 receive testcase
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
executor 3: prog_data_offset 1320, prog_size 1160
executor 0: prog_data_offset 1296, prog_size 8
[19907ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[19918ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[19908ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1160 filter=0
remove dir: /root/glusterfs-client/dfs-0-84
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[19907ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 101
-----finish removing dir
mkdir time 48
executor 3 create dir /root/glusterfs-client/dfs-0-85 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-85
receive_execute: 7, 149
receive_execute: 8, 149
receive_execute: 9, 149
spawned worker pid 545
spawned worker pid 544
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
spawned worker pid 619
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 14, 155
spawned worker pid 596
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20063ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-85
cover_reset in execute_call
#0 [20067ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-85
----- executor 3 write_call_output, size 4126, pid 596, write pid:597
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 0
----- executor 3 signal number : 1238
----- completed 1
execute_one loop: 0, 0, 5
#0 [20068ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-85
cover_reset in execute_call
#0 [20071ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-85
----- executor 3 write_call_output, size 4054, pid 596, write pid:597
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 4
#0 [20071ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-85
cover_reset in execute_call
#0 [20075ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-85
----- executor 3 write_call_output, size 4054, pid 596, write pid:597
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 4
execute_one inner time: 0, 13, 0
execute_one time: 1, 13
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1315, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 457
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 0 signal number : 1006
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 2944, flag collect 0
executor 0 userspace cover_cnt 3
----- executor 1 signal number : 541
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 245
----- executor 2 signal number : 1323
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 9348, flag collect 0
----- executor 2 signal number : 547
executor 1 userspace cover_cnt 4
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 5
write_metadata
executor 2 userspace cover_cnt 5
------ execute 0 reply_execute finished
time breakdown 0: 157, 24, 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 169, 15, 0
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 176
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:09 fuzzer receive 1238 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 541 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 245 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1323 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 547 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 158, 26, 0
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:09 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:09 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

2023/01/25 16:52:09 prog length: 3
2023/01/25 16:52:09 HasCrashFail:false HasNetFail:false
16:52:09 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:09 wait for executor 3's reply
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[20084ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 0: prog_data_offset 1296, prog_size 8
[20094ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1160
[20086ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1160 filter=0
remove dir: /root/glusterfs-client/dfs-0-85
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 157, 25, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[20084ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 27
-----finish removing dir
mkdir time 91
executor 3 create dir /root/glusterfs-client/dfs-0-86 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-86
receive_execute: 2, 121
receive_execute: 2, 121
receive_execute: 4, 121
spawned worker pid 620
spawned worker pid 545
spawned worker pid 546
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
executor 0 after receive_execute
execute_one time: 2, 0
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 9, 129
spawned worker pid 598
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20218ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-86
cover_reset in execute_call
#0 [20222ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-86
----- executor 3 write_call_output, size 4126, pid 598, write pid:599
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 0
----- executor 3 signal number : 1238
----- completed 1
execute_one loop: 0, 0, 5
#0 [20222ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-86
cover_reset in execute_call
#0 [20226ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=770  /root/glusterfs-client/dfs-0-86
----- executor 3 write_call_output, size 770, pid 598, write pid:599
----- executor 3 executes write_coverage_signal cov->size 770, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 4
#0 [20227ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-86
cover_reset in execute_call
#0 [20239ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=8057  /root/glusterfs-client/dfs-0-86
----- executor 3 write_call_output, size 8057, pid 598, write pid:599
----- executor 3 executes write_coverage_signal cov->size 8057, flag collect 0
----- executor 3 signal number : 58
----- completed 3
execute_one loop: 0, 0, 13
execute_one inner time: 0, 22, 0
execute_one time: 2, 22
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 138, 25, 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2712, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 505
----- executor 2 signal number : 897
----- executor 2 executes write_coverage_signal cov->size 730, flag collect 0
----- executor 2 signal number : 333
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 412
----- executor 2 executes write_coverage_signal cov->size 9345, flag collect 0
----- executor 1 signal number : 1006
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 4868, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 237
executor 1 userspace cover_cnt 3
executor 2 userspace cover_cnt 7
----- executor 0 signal number : 1006
executor 0 userspace cover_cnt 3
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 163
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 7 replies
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 125, 41, 0
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 897 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 333 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 412 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 237 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:09 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:09 fuzzer receive 1238 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 58 signal and 0 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 3 replies
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1006 signal and 0 cover from userspace component
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 123, 39, 0
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:09 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:09 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

2023/01/25 16:52:09 prog length: 3
2023/01/25 16:52:09 HasCrashFail:false HasNetFail:false
16:52:09 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:09 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1160
[20255ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1160 filter=0
remove dir: /root/glusterfs-client/dfs-0-86
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[20255ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 123, 40, 0
executor 0: prog_data_offset 1296, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[20256ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[20268ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 48
-----finish removing dir
mkdir time 74
executor 3 create dir /root/glusterfs-client/dfs-0-87 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-87
receive_execute: 11, 121
receive_execute: 6, 122
receive_execute: 11, 122
spawned worker pid 546
spawned worker pid 547
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 14, 128
spawned worker pid 600
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20385ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-87
cover_reset in execute_call
spawned worker pid 621
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
#0 [20388ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4121  /root/glusterfs-client/dfs-0-87
----- executor 3 write_call_output, size 4121, pid 600, write pid:601
----- executor 3 executes write_coverage_signal cov->size 4121, flag collect 0
----- executor 3 signal number : 1235
----- completed 1
execute_one loop: 0, 0, 4
#0 [20389ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-87
cover_reset in execute_call
#0 [20404ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4049  /root/glusterfs-client/dfs-0-87
----- executor 3 write_call_output, size 4049, pid 600, write pid:601
----- executor 3 executes write_coverage_signal cov->size 4049, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 15
#0 [20404ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-87
cover_reset in execute_call
#0 [20407ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4049  /root/glusterfs-client/dfs-0-87
----- executor 3 write_call_output, size 4049, pid 600, write pid:601
----- executor 3 executes write_coverage_signal cov->size 4049, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 3
execute_one inner time: 0, 22, 0
execute_one time: 2, 22
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 142, 25, 0
----- executor 2 executes write_coverage_signal cov->size 1024, flag collect 0
----- executor 2 signal number : 455
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 0 signal number : 444
----- executor 2 signal number : 541
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7984, flag collect 0
----- executor 2 signal number : 245
----- executor 0 signal number : 1323
----- executor 0 executes write_coverage_signal cov->size 9348, flag collect 0
executor 2 userspace cover_cnt 4
----- executor 0 signal number : 547
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 391
executor 1 userspace cover_cnt 3
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 4
executor 0 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 132, 35, 0
2023/01/25 16:52:09 for select break: 1
write_metadata
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
------ execute 2 reply_execute finished
time breakdown 2: 133, 36, 0
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 160
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:09 fuzzer receive 1235 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 13 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1323 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 547 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 128, 38, 0
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 3 replies
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 4 replies
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 541 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 245 signal and 0 cover from userspace component
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:09 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:09 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[] = "./file0";
v5[100];
v6[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_mkdir, v3, 128);
syscall(SYS_setxattr, v4, v5, v6, 22, 1);

2023/01/25 16:52:09 prog length: 3
2023/01/25 16:52:09 HasCrashFail:false HasNetFail:false
16:52:09 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:09 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[] = "./file0";
v5[100];
v6[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_mkdir, v3, 128);
syscall(SYS_setxattr, v4, v5, v6, 22, 1);

----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 984
executor 2: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[20417ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[20417ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=984 filter=0
[20417ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-87
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[20428ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 36
-----finish removing dir
receive_execute: 5, 65
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-88 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-88
receive_execute: 0, 64
receive_execute: 2, 65
spawned worker pid 548
spawned worker pid 547
spawned worker pid 622
executor 0 after receive_execute
executor 0 after setup_test
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 8, 72
spawned worker pid 602
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20490ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-88
cover_reset in execute_call
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 6, 0
#0 [20493ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-88
----- executor 3 write_call_output, size 4124, pid 602, write pid:603
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 0
----- executor 3 signal number : 1237
----- completed 1
execute_one loop: 0, 1, 3
#0 [20493ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-88
cover_reset in execute_call
#0 [20518ms] <- mkdir=0x0 errno=14 cover=6683  /root/glusterfs-client/dfs-0-88
----- executor 3 write_call_output, size 6683, pid 602, write pid:603
----- executor 3 executes write_coverage_signal cov->size 6683, flag collect 0
----- executor 3 signal number : 346
----- completed 2
execute_one loop: 0, 0, 25
#0 [20519ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-88
cover_reset in execute_call
#0 [20524ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-88
----- executor 3 write_call_output, size 4626, pid 602, write pid:603
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 3
execute_one loop: 0, 0, 7
execute_one inner time: 0, 36, 0
execute_one time: 0, 36
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 80, 38, 0
----- executor 1 executes write_coverage_signal cov->size 6239, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 458
----- executor 1 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 0 signal number : 444
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8062, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2549, flag collect 0
----- executor 1 signal number : 1642
----- executor 0 signal number : 201
----- executor 1 executes write_coverage_signal cov->size 12348, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 1 signal number : 865
----- executor 1 executes write_coverage_signal cov->size 3588, flag collect 0
----- executor 0 signal number : 955
----- executor 1 signal number : 152
----- executor 1 executes write_coverage_signal cov->size 17376, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3075, flag collect 0
----- executor 1 signal number : 712
----- executor 0 signal number : 595
----- executor 1 executes write_coverage_signal cov->size 9934, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2863, flag collect 0
----- executor 1 signal number : 695
----- executor 0 signal number : 218
----- executor 0 executes write_coverage_signal cov->size 6147, flag collect 0
executor 1 userspace cover_cnt 7
----- executor 0 signal number : 1042
----- executor 0 executes write_coverage_signal cov->size 8054, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4603, flag collect 0
----- executor 2 signal number : 650
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 2 signal number : 1561
----- executor 2 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 2 signal number : 472
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 775
----- executor 2 executes write_coverage_signal cov->size 8049, flag collect 0
----- executor 2 signal number : 152
executor 2 userspace cover_cnt 5
2023/01/25 16:52:09 for select break: 1
write_metadata
----- executor 0 signal number : 152
------ execute 2 reply_execute finished
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
time breakdown 2: 67, 49, 0
executor 0 userspace cover_cnt 7
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 70, 49, 0
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 118
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:09 fuzzer receive 1237 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 346 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 201 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 955 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 595 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 218 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1042 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 7 replies
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 65, 53, 0
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 458 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1642 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 865 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 152 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 712 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 695 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 650 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1561 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 472 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 775 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 152 signal and 0 cover from userspace component
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:09 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:09 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:09 prog length: 2
2023/01/25 16:52:09 HasCrashFail:false HasNetFail:false
16:52:09 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:09 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 2 receive testcase
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
executor 1: prog_data_offset 1304, prog_size 8
[20538ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[20538ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
executor 2: prog_data_offset 1312, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-88
[20538ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[20548ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 82
-----finish removing dir
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-89 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-89
receive_execute: 2, 121
receive_execute: 7, 120
receive_execute: 6, 121
spawned worker pid 549
spawned worker pid 548
spawned worker pid 623
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
executor 1 after receive_execute
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 after setup_test
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 11, 124
spawned worker pid 604
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20663ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-89
cover_reset in execute_call
#0 [20682ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-89
----- executor 3 write_call_output, size 6751, pid 604, write pid:605
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 20
#0 [20683ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-89
cover_reset in execute_call
#0 [20687ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-89
----- executor 3 write_call_output, size 4626, pid 604, write pid:605
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 5
execute_one inner time: 0, 25, 0
execute_one time: 1, 25
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 135, 28, 0
----- executor 1 executes write_coverage_signal cov->size 4001, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6195, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 2109, flag collect 0
----- executor 0 signal number : 1
----- executor 1 signal number : 455
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 12687, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8049, flag collect 0
----- executor 1 signal number : 1558
----- executor 0 signal number : 2025
----- executor 0 executes write_coverage_signal cov->size 2193, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6668, flag collect 0
----- executor 0 signal number : 393
----- executor 0 executes write_coverage_signal cov->size 10830, flag collect 0
----- executor 0 signal number : 613
----- executor 0 executes write_coverage_signal cov->size 8275, flag collect 0
----- executor 1 signal number : 905
----- executor 1 executes write_coverage_signal cov->size 4830, flag collect 0
----- executor 0 signal number : 854
----- executor 0 executes write_coverage_signal cov->size 9578, flag collect 0
----- executor 1 signal number : 341
----- executor 0 signal number : 171
----- executor 1 executes write_coverage_signal cov->size 6142, flag collect 0
----- executor 1 signal number : 642
executor 0 userspace cover_cnt 7
----- executor 2 signal number : 1738
----- executor 2 executes write_coverage_signal cov->size 3171, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 2 signal number : 470
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 775
----- executor 2 executes write_coverage_signal cov->size 8049, flag collect 0
----- executor 2 signal number : 150
executor 2 userspace cover_cnt 5
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 1's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:09 wait for executor 0's reply
2023/01/25 16:52:09 for select break: 1
2023/01/25 16:52:09 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:09 ------ all executors finish execution
2023/01/25 16:52:09 exec time: 157
2023/01/25 16:52:09 ----- PS len: 4
2023/01/25 16:52:09 [Kernel] executor 3 has 2 replies
write_metadata
------ execute 0 reply_execute finished
2023/01/25 16:52:09 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:09 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:09 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:09 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:09 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 1558 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 2025 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 905 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 341 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 1738 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 393 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 1 receive 642 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 470 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 613 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 854 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 0 receive 171 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 775 signal and 0 cover from userspace component
2023/01/25 16:52:09 ------- fuzzer executor 2 receive 150 signal and 0 cover from userspace component
time breakdown 0: 123, 37, 0
2023/01/25 16:52:09 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:09 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(0x0, 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 400
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 127, 37, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[20696ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[20697ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=400 filter=0
remove dir: /root/glusterfs-client/dfs-0-89
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 127, 37, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[20696ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[20709ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 57
-----finish removing dir
mkdir time 70
executor 3 create dir /root/glusterfs-client/dfs-0-90 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-90
receive_execute: 1, 128
receive_execute: 1, 128
receive_execute: 0, 126
spawned worker pid 550
executor 2 after receive_execute
executor 2 after setup_test
spawned worker pid 624
spawned worker pid 549
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
executor 1 after receive_execute
executor 1 after setup_test
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
execute_one time: 3, 1
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 7, 131
spawned worker pid 606
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20830ms] -> mkdir(0x0, 0x80) 2373 /root/glusterfs-client/dfs-0-90
cover_reset in execute_call
#0 [20830ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-90
----- executor 3 write_call_output, size 0, pid 606, write pid:607
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
#0 [20831ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-90
cover_reset in execute_call
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
#0 [20841ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-90
----- executor 3 write_call_output, size 4126, pid 606, write pid:607
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 0
----- executor 3 signal number : 1238
----- completed 2
execute_one loop: 0, 0, 11
execute_one inner time: 0, 12, 0
execute_one time: 2, 12
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 138, 15, 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1386, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 457
----- executor 2 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 684
----- executor 0 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 2 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 571
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4592, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 650
----- executor 2 signal number : 554
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 193
----- executor 0 signal number : 1006
executor 1 userspace cover_cnt 4
executor 0 userspace cover_cnt 3
executor 2 userspace cover_cnt 4
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 130, 22, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 151
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 4 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 193 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 126, 24, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 129, 24, 0
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 684 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 571 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 650 signal and 0 cover from userspace component
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 1238 signal and 0 cover from kernel component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(0x0, 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[20850ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 400
[20851ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=400 filter=0
remove dir: /root/glusterfs-client/dfs-0-90
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[20861ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[20850ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 49
-----finish removing dir
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-91 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-91
receive_execute: 2, 82
receive_execute: 2, 82
receive_execute: 3, 82
spawned worker pid 551
spawned worker pid 550
executor 2 after receive_execute
executor 2 after setup_test
spawned worker pid 625
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 8, 86
spawned worker pid 608
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [20938ms] -> mkdir(0x0, 0x80) 2373 /root/glusterfs-client/dfs-0-91
cover_reset in execute_call
#0 [20938ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-91
----- executor 3 write_call_output, size 0, pid 608, write pid:609
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
#0 [20939ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-91
cover_reset in execute_call
#0 [20942ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4121  /root/glusterfs-client/dfs-0-91
----- executor 3 write_call_output, size 4121, pid 608, write pid:609
----- executor 3 executes write_coverage_signal cov->size 4121, flag collect 0
----- executor 3 signal number : 1235
----- completed 2
execute_one loop: 0, 0, 4
execute_one inner time: 0, 5, 0
execute_one time: 1, 5
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 94, 7, 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 1006
----- executor 0 signal number : 444
----- executor 2 signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 391
----- executor 1 signal number : 280
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 4592, flag collect 0
executor 1 userspace cover_cnt 4
executor 2 userspace cover_cnt 3
----- executor 0 signal number : 554
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 193
executor 0 userspace cover_cnt 4
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 84, 16, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 100
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 1235 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 4 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1006 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 193 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 280 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 84, 17, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 86, 13, 0
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(0x0, 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[100];
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 128);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[20960ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 1: prog_data_offset 1304, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 400
[20951ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=400 filter=0
remove dir: /root/glusterfs-client/dfs-0-91
[20950ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[20951ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 26
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-92 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-92
receive_execute: 4, 59
receive_execute: 1, 59
receive_execute: 0, 58
spawned worker pid 551
spawned worker pid 552
spawned worker pid 626
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 7, 62
spawned worker pid 610
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21015ms] -> mkdir(0x0, 0x80) 2373 /root/glusterfs-client/dfs-0-92
cover_reset in execute_call
#0 [21015ms] <- mkdir=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-92
----- executor 3 write_call_output, size 0, pid 610, write pid:611
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
#0 [21016ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-92
cover_reset in execute_call
#0 [21019ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-92
----- executor 3 write_call_output, size 4124, pid 610, write pid:611
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 0
----- executor 3 signal number : 1237
----- completed 2
execute_one loop: 0, 0, 4
execute_one inner time: 0, 5, 0
execute_one time: 1, 7
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 69, 11, 0
----- executor 2 executes write_coverage_signal cov->size 675, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 1647, flag collect 0
----- executor 2 signal number : 693
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 445
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 2 signal number : 654
----- executor 0 signal number : 1119
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 391
executor 2 userspace cover_cnt 4
executor 0 userspace cover_cnt 3
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 4592, flag collect 0
----- executor 1 signal number : 554
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 193
executor 1 userspace cover_cnt 4
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 63, 18, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
write_metadata
2023/01/25 16:52:10 wait for executor 0's reply
------ execute 2 reply_execute finished
time breakdown 2: 58, 18, 1
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 78
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 1237 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 391 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 60, 19, 0
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 4 replies
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 4 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1119 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 693 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 445 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 654 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 554 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 193 signal and 0 cover from userspace component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21041ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 1: prog_data_offset 1304, prog_size 8
[21031ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[21031ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
[21033ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
remove dir: /root/glusterfs-client/dfs-0-92
remove dir time 24
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-93 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-93
receive_execute: 3, 53
receive_execute: 2, 53
receive_execute: 0, 53
spawned worker pid 552
executor 0 after receive_execute
spawned worker pid 553
executor 0 after setup_test
executor 0 before execute_one
spawned worker pid 627
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 1
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 4, 1
receive_execute: 8, 56
spawned worker pid 612
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21091ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-93
cover_reset in execute_call
#0 [21107ms] <- mkdir=0x0 errno=14 cover=6744  /root/glusterfs-client/dfs-0-93
----- executor 3 write_call_output, size 6744, pid 612, write pid:613
----- executor 3 executes write_coverage_signal cov->size 6744, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 17
#0 [21108ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-93
cover_reset in execute_call
#0 [21111ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-93
----- executor 3 write_call_output, size 4626, pid 612, write pid:613
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 4
execute_one inner time: 0, 22, 0
execute_one time: 2, 22
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 64, 25, 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5560, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 signal number : 456
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 1 signal number : 1735
----- executor 2 signal number : 813
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 6101, flag collect 0
----- executor 1 signal number : 782
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 151
----- executor 0 signal number : 1271
----- executor 0 executes write_coverage_signal cov->size 3588, flag collect 0
----- executor 0 signal number : 746
----- executor 1 signal number : 530
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 9434, flag collect 0
----- executor 1 signal number : 81
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 280
----- executor 0 executes write_coverage_signal cov->size 14479, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 1423
----- executor 0 executes write_coverage_signal cov->size 11149, flag collect 0
----- executor 0 signal number : 344
executor 0 userspace cover_cnt 7
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 89
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1271 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 746 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 280 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1423 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 344 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1038 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 151 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 56, 36, 0
time breakdown 0: 55, 36, 0
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 782 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 530 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21121ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 400
[21121ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=400 filter=0
remove dir: /root/glusterfs-client/dfs-0-93
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 53, 35, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[21120ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21136ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 50
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-94 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-94
receive_execute: 2, 75
receive_execute: 0, 70
receive_execute: 2, 75
spawned worker pid 554
executor 2 after receive_execute
executor 2 after setup_test
spawned worker pid 628
spawned worker pid 553
executor 1 after receive_execute
executor 2 before execute_one
executor 1 after setup_test
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 1, 1
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 7, 78
spawned worker pid 614
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21200ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-94
cover_reset in execute_call
#0 [21215ms] <- mkdir=0x0 errno=14 cover=6735  /root/glusterfs-client/dfs-0-94
----- executor 3 write_call_output, size 6735, pid 614, write pid:615
----- executor 3 executes write_coverage_signal cov->size 6735, flag collect 0
----- executor 3 signal number : 1575
----- completed 1
execute_one loop: 0, 0, 16
#0 [21216ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-94
cover_reset in execute_call
#0 [21218ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-94
----- executor 3 write_call_output, size 0, pid 614, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 18, 0
execute_one time: 1, 18
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 85, 20, 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5560, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2817, flag collect 0
----- executor 0 signal number : 456
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2065, flag collect 0
----- executor 1 signal number : 1259
----- executor 0 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5849, flag collect 0
----- executor 2 signal number : 788
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 123
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7946, flag collect 0
----- executor 2 signal number : 621
----- executor 1 signal number : 941
----- executor 0 signal number : 1550
----- executor 1 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2769, flag collect 0
----- executor 0 signal number : 722
executor 2 userspace cover_cnt 5
----- executor 1 signal number : 722
----- executor 0 executes write_coverage_signal cov->size 9434, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 525
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 8099, flag collect 0
----- executor 0 signal number : 504
----- executor 0 executes write_coverage_signal cov->size 11409, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 966
executor 0 userspace cover_cnt 7
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 77, 27, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 103
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1575 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 941 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 722 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 788 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 525 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 123 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 621 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 70, 29, 0
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1550 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 722 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 504 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 966 signal and 0 cover from userspace component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 3 receive testcase
----- executor 2 receive testcase
executor 3: prog_data_offset 1320, prog_size 400
executor 2: prog_data_offset 1312, prog_size 8
[21227ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=400 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 77, 27, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21227ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[21227ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-94
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21238ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 37
-----finish removing dir
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-95 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-95
receive_execute: 5, 60
receive_execute: 4, 60
receive_execute: 0, 60
spawned worker pid 554
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 555
spawned worker pid 629
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 1
execute_one time: 2, 1
receive_execute: 8, 64
spawned worker pid 616
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21292ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-95
cover_reset in execute_call
#0 [21314ms] <- mkdir=0x0 errno=14 cover=6755  /root/glusterfs-client/dfs-0-95
----- executor 3 write_call_output, size 6755, pid 616, write pid:617
----- executor 3 executes write_coverage_signal cov->size 6755, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 23
#0 [21315ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-95
cover_reset in execute_call
#0 [21317ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-95
----- executor 3 write_call_output, size 0, pid 616, write pid:617
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 25, 0
execute_one time: 1, 25
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 72, 28, 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2065, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 1259
----- executor 2 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 775
----- executor 2 executes write_coverage_signal cov->size 5847, flag collect 0
----- executor 1 signal number : 455
----- executor 1 executes write_coverage_signal cov->size 5561, flag collect 0
----- executor 0 signal number : 444
----- executor 2 signal number : 877
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 9608, flag collect 0
----- executor 2 signal number : 529
----- executor 0 signal number : 1557
----- executor 1 signal number : 1591
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2769, flag collect 0
----- executor 1 signal number : 719
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 788
----- executor 1 executes write_coverage_signal cov->size 9441, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 297
----- executor 1 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 0 signal number : 621
----- executor 1 signal number : 868
----- executor 1 executes write_coverage_signal cov->size 9575, flag collect 0
executor 0 userspace cover_cnt 5
----- executor 1 signal number : 535
executor 1 userspace cover_cnt 7
write_metadata
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
------ execute 2 reply_execute finished
time breakdown 2: 65, 35, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 60, 37, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 99
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 788 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1591 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 621 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 719 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 297 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 868 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 535 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 775 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 877 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 529 signal and 0 cover from userspace component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(0x0, &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 400
[21327ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[21327ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=400 filter=0
remove dir: /root/glusterfs-client/dfs-0-95
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21337ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 65, 37, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21326ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 38
-----finish removing dir
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-96 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-96
receive_execute: 1, 63
receive_execute: 3, 63
receive_execute: 2, 63
spawned worker pid 555
spawned worker pid 556
spawned worker pid 630
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 8, 65
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
spawned worker pid 618
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21394ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-96
cover_reset in execute_call
#0 [21406ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-96
----- executor 3 write_call_output, size 6770, pid 618, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 12
#0 [21406ms] -> setxattr$trusted_overlay_nlink(0x0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-96
cover_reset in execute_call
#0 [21406ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=0  /root/glusterfs-client/dfs-0-96
----- executor 3 write_call_output, size 0, pid 618, write pid:619
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
execute_one inner time: 0, 12, 0
execute_one time: 1, 12
write_metadata
------ execute 3 reply_execute finished
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
time breakdown 3: 74, 15, 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2065, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 5562, flag collect 0
----- executor 1 signal number : 444
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 1992
----- executor 2 executes write_coverage_signal cov->size 2769, flag collect 0
----- executor 1 signal number : 1127
----- executor 2 signal number : 741
----- executor 2 executes write_coverage_signal cov->size 7048, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 signal number : 448
----- executor 2 executes write_coverage_signal cov->size 9445, flag collect 0
----- executor 1 signal number : 807
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 303
----- executor 2 executes write_coverage_signal cov->size 12803, flag collect 0
----- executor 1 signal number : 635
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 585
----- executor 0 signal number : 444
----- executor 1 signal number : 532
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1557
executor 2 userspace cover_cnt 7
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 788
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 0 signal number : 621
executor 0 userspace cover_cnt 5
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
write_metadata
2023/01/25 16:52:10 wait for executor 1's reply
------ execute 2 reply_execute finished
time breakdown 2: 66, 21, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 86
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1992 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 807 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 741 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 635 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 448 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 788 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 303 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 585 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 532 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 621 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 65, 23, 0
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 384
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[21414ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=384 filter=0
[21414ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-96
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 64, 22, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21414ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21426ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 40
-----finish removing dir
mkdir time 22
executor 3 create dir /root/glusterfs-client/dfs-0-97 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-97
receive_execute: 4, 63
receive_execute: 0, 62
receive_execute: 3, 63
spawned worker pid 557
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
spawned worker pid 556
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 6, 66
spawned worker pid 631
executor 0 after receive_execute
executor 0 after setup_test
spawned worker pid 620
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
#0 [21481ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-97
cover_reset in execute_call
#0 [21494ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-97
----- executor 3 write_call_output, size 6751, pid 620, write pid:621
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 14
#0 [21495ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-97
cover_reset in execute_call
#0 [21495ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1204  /root/glusterfs-client/dfs-0-97
----- executor 3 write_call_output, size 1204, pid 620, write pid:621
----- executor 3 executes write_coverage_signal cov->size 1204, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 1
execute_one inner time: 0, 15, 0
execute_one time: 1, 15
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 72, 17, 0
----- executor 1 executes write_coverage_signal cov->size 3908, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3907, flag collect 0
----- executor 2 signal number : 645
----- executor 2 executes write_coverage_signal cov->size 3069, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2065, flag collect 0
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 5563, flag collect 0
----- executor 1 signal number : 646
----- executor 2 signal number : 1087
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 1003
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 9463, flag collect 0
----- executor 1 signal number : 1086
----- executor 2 signal number : 761
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 signal number : 88
----- executor 0 signal number : 1488
----- executor 0 executes write_coverage_signal cov->size 9446, flag collect 0
----- executor 1 signal number : 832
----- executor 0 signal number : 860
----- executor 0 executes write_coverage_signal cov->size 2769, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 1 signal number : 939
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 1142
----- executor 0 executes write_coverage_signal cov->size 11079, flag collect 0
----- executor 1 signal number : 82
----- executor 0 signal number : 396
executor 0 userspace cover_cnt 7
executor 1 userspace cover_cnt 5
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 67, 23, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 66, 24, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 88
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 646 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1086 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 832 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 645 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 939 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1087 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1488 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1003 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 860 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 761 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1142 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 82 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 88 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 62, 24, 0
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 396 signal and 0 cover from userspace component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1320, prog_size 384
[21503ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[21504ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=384 filter=0
remove dir: /root/glusterfs-client/dfs-0-97
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21503ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21513ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 37
-----finish removing dir
mkdir time 19
executor 3 create dir /root/glusterfs-client/dfs-0-98 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-98
receive_execute: 3, 56
receive_execute: 2, 56
receive_execute: 2, 56
spawned worker pid 632
spawned worker pid 558
spawned worker pid 557
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 7, 59
spawned worker pid 622
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21563ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-98
cover_reset in execute_call
#0 [21574ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-98
----- executor 3 write_call_output, size 6762, pid 622, write pid:623
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 11
#0 [21574ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-98
cover_reset in execute_call
#0 [21576ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=458  /root/glusterfs-client/dfs-0-98
----- executor 3 write_call_output, size 458, pid 622, write pid:623
----- executor 3 executes write_coverage_signal cov->size 458, flag collect 0
----- executor 3 signal number : 89
----- completed 2
execute_one loop: 0, 0, 3
execute_one inner time: 0, 14, 0
execute_one time: 0, 14
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5561, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 457
----- executor 1 executes write_coverage_signal cov->size 2065, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 11406, flag collect 0
----- executor 2 signal number : 125
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 signal number : 780
----- executor 0 signal number : 1127
----- executor 0 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 2 signal number : 624
----- executor 1 signal number : 2253
----- executor 1 executes write_coverage_signal cov->size 10002, flag collect 0
----- executor 0 signal number : 807
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 signal number : 862
----- executor 1 executes write_coverage_signal cov->size 2769, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 538
----- executor 0 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 154
----- executor 1 executes write_coverage_signal cov->size 8063, flag collect 0
----- executor 0 signal number : 622
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 66, 15, 0
----- executor 1 signal number : 241
----- executor 1 executes write_coverage_signal cov->size 9575, flag collect 0
executor 0 userspace cover_cnt 5
----- executor 1 signal number : 533
executor 1 userspace cover_cnt 7
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 59, 21, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 58, 23, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 79
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 58, 23, 0
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 807 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 622 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 125 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 780 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 624 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 2253 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 862 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 154 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 241 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 533 signal and 0 cover from userspace component
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 89 signal and 0 cover from kernel component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', 0x0, &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-, 0x7fffffff}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21585ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 384
[21585ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=384 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21595ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[21585ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-98
remove dir time 36
-----finish removing dir
receive_execute: 5, 59
receive_execute: 3, 59
receive_execute: 3, 59
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-99 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-99
spawned worker pid 558
spawned worker pid 559
spawned worker pid 633
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 7, 62
spawned worker pid 624
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21648ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-99
cover_reset in execute_call
#0 [21662ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-99
----- executor 3 write_call_output, size 6751, pid 624, write pid:625
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 15
#0 [21663ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x0, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-99
cover_reset in execute_call
#0 [21664ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=14 cover=1204  /root/glusterfs-client/dfs-0-99
----- executor 3 write_call_output, size 1204, pid 624, write pid:625
----- executor 3 executes write_coverage_signal cov->size 1204, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 1
execute_one inner time: 0, 16, 0
execute_one time: 1, 16
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 69, 18, 1
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2065, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 1 signal number : 1259
----- executor 1 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 5561, flag collect 0
----- executor 0 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 9601, flag collect 0
----- executor 1 signal number : 832
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 487
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1571
----- executor 0 executes write_coverage_signal cov->size 10122, flag collect 0
----- executor 1 signal number : 529
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 884
----- executor 0 executes write_coverage_signal cov->size 2769, flag collect 0
----- executor 0 signal number : 149
----- executor 0 executes write_coverage_signal cov->size 9902, flag collect 0
----- executor 2 signal number : 1127
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 1242
----- executor 0 executes write_coverage_signal cov->size 9543, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3064, flag collect 0
----- executor 0 signal number : 191
----- executor 2 signal number : 659
executor 0 userspace cover_cnt 7
----- executor 2 executes write_coverage_signal cov->size 5119, flag collect 0
----- executor 2 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 536
executor 2 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 62, 24, 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 62, 24, 0
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 1's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:10 wait for executor 0's reply
2023/01/25 16:52:10 for select break: 1
2023/01/25 16:52:10 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:10 ------ all executors finish execution
2023/01/25 16:52:10 exec time: 85
2023/01/25 16:52:10 ----- PS len: 4
2023/01/25 16:52:10 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:10 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:10 fuzzer receive 295 signal and 0 cover from kernel component
2023/01/25 16:52:10 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1571 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 1259 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 884 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 149 signal and 0 cover from userspace component
2023/01/25 16:52:10 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 832 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 1242 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 0 receive 191 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 487 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 1 receive 529 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 659 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/01/25 16:52:10 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
2023/01/25 16:52:10 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:10 result hanged=false: 
2023/01/25 16:52:10 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:10 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);

2023/01/25 16:52:10 prog length: 2
2023/01/25 16:52:10 HasCrashFail:false HasNetFail:false
16:52:10 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x1)
---

end of program
2023/01/25 16:52:10 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 360
[21673ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-99
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21673ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 64, 26, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[21672ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21684ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 45
-----finish removing dir
receive_execute: 2, 72
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-100 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-100
receive_execute: 5, 71
receive_execute: 0, 71
spawned worker pid 559
spawned worker pid 560
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 634
executor 0 after receive_execute
executor 0 after setup_test
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 7, 75
spawned worker pid 626
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21749ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-100
cover_reset in execute_call
#0 [21765ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-100
----- executor 3 write_call_output, size 6751, pid 626, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 17
#0 [21766ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x1) 3673 /root/glusterfs-client/dfs-0-100
cover_reset in execute_call
#0 [21769ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4614  /root/glusterfs-client/dfs-0-100
----- executor 3 write_call_output, size 4614, pid 626, write pid:627
----- executor 3 executes write_coverage_signal cov->size 4614, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 4
execute_one inner time: 0, 21, 0
execute_one time: 1, 21
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6902, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 1410, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 9871, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 715
----- executor 2 executes write_coverage_signal cov->size 6179, flag collect 0
----- executor 1 signal number : 1557
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 signal number : 2032
----- executor 2 signal number : 808
----- executor 2 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 1 signal number : 796
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1468, flag collect 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 82, 23, 0
----- executor 0 signal number : 396
----- executor 0 executes write_coverage_signal cov->size 11573, flag collect 0
----- executor 2 signal number : 321
----- executor 1 signal number : 690
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 83
----- executor 0 signal number : 647
----- executor 0 executes write_coverage_signal cov->size 9455, flag collect 0
executor 1 userspace cover_cnt 5
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 812
----- executor 0 executes write_coverage_signal cov->size 11224, flag collect 0
----- executor 0 signal number : 200
executor 0 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 1: 76, 30, 1
time breakdown 2: 74, 30, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 103
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:11 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:11 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 2032 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 396 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 647 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 812 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 200 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 796 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 715 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 690 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 83 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 808 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 321 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 71, 32, 0
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);

----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[21778ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 360
[21779ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-100
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21788ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21777ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 46
-----finish removing dir
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-101 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-101
receive_execute: 2, 71
receive_execute: 1, 71
receive_execute: 1, 71
spawned worker pid 561
spawned worker pid 560
spawned worker pid 635
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 72
spawned worker pid 628
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21852ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-101
cover_reset in execute_call
#0 [21863ms] <- mkdir=0x0 errno=14 cover=6744  /root/glusterfs-client/dfs-0-101
----- executor 3 write_call_output, size 6744, pid 628, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6744, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_one loop: 0, 0, 11
#0 [21863ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x1) 3673 /root/glusterfs-client/dfs-0-101
cover_reset in execute_call
#0 [21865ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4611  /root/glusterfs-client/dfs-0-101
----- executor 3 write_call_output, size 4611, pid 628, write pid:629
----- executor 3 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 13, 0
execute_one time: 1, 13
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 80, 15, 0
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 455
----- executor 1 signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5561, flag collect 0
----- executor 2 signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 6145, flag collect 0
----- executor 2 signal number : 717
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 signal number : 813
----- executor 1 executes write_coverage_signal cov->size 8047, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 12854, flag collect 0
----- executor 2 signal number : 773
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 92
----- executor 1 signal number : 540
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 646
----- executor 0 signal number : 2413
----- executor 0 executes write_coverage_signal cov->size 10104, flag collect 0
executor 2 userspace cover_cnt 5
----- executor 0 signal number : 862
----- executor 0 executes write_coverage_signal cov->size 3588, flag collect 0
executor 1 userspace cover_cnt 5
----- executor 0 signal number : 162
----- executor 0 executes write_coverage_signal cov->size 11148, flag collect 0
----- executor 0 signal number : 587
----- executor 0 executes write_coverage_signal cov->size 8111, flag collect 0
----- executor 0 signal number : 61
executor 0 userspace cover_cnt 7
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 73, 21, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 72, 22, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 93
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 fuzzer receive 1579 signal and 0 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 2413 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 717 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 773 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 862 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 540 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 162 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 92 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 646 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 587 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 72, 23, 0
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), 0x0, 0x0, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[100];

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 0, 1);

----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21883ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 2: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
[21873ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 360
[21874ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=360 filter=0
remove dir: /root/glusterfs-client/dfs-0-101
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21873ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 36
-----finish removing dir
mkdir time 20
executor 3 create dir /root/glusterfs-client/dfs-0-102 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-102
receive_execute: 4, 58
receive_execute: 2, 58
receive_execute: 3, 58
spawned worker pid 561
spawned worker pid 636
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
spawned worker pid 562
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 1
execute_one time: 1, 1
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 60
spawned worker pid 630
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [21935ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-102
cover_reset in execute_call
#0 [21947ms] <- mkdir=0x0 errno=14 cover=6770  /root/glusterfs-client/dfs-0-102
----- executor 3 write_call_output, size 6770, pid 630, write pid:631
----- executor 3 executes write_coverage_signal cov->size 6770, flag collect 0
----- executor 3 signal number : 1584
----- completed 1
execute_one loop: 0, 0, 13
#0 [21948ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x0, 0x0, 0x1) 3673 /root/glusterfs-client/dfs-0-102
cover_reset in execute_call
#0 [21950ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4614  /root/glusterfs-client/dfs-0-102
----- executor 3 write_call_output, size 4614, pid 630, write pid:631
----- executor 3 executes write_coverage_signal cov->size 4614, flag collect 0
----- executor 3 signal number : 602
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 0, 16, 0
execute_one time: 1, 16
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 2 signal number : 455
----- executor 2 executes write_coverage_signal cov->size 5561, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 30808, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 17690, flag collect 0
----- executor 1 signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 2862
----- executor 2 executes write_coverage_signal cov->size 3588, flag collect 0
----- executor 1 signal number : 813
----- executor 0 signal number : 462
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 725
----- executor 2 executes write_coverage_signal cov->size 4895, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 9439, flag collect 0
----- executor 0 signal number : 1556
----- executor 1 signal number : 538
----- executor 0 executes write_coverage_signal cov->size 6668, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 7946, flag collect 0
----- executor 2 signal number : 180
----- executor 1 signal number : 646
----- executor 0 signal number : 905
----- executor 0 executes write_coverage_signal cov->size 6145, flag collect 0
----- executor 0 signal number : 693
----- executor 0 executes write_coverage_signal cov->size 4828, flag collect 0
----- executor 0 signal number : 298
executor 2 userspace cover_cnt 7
executor 1 userspace cover_cnt 5
executor 0 userspace cover_cnt 5
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
write_metadata
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
------ execute 2 reply_execute finished
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 61, 24, 0
time breakdown 2: 62, 24, 0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 68, 18, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 83
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 fuzzer receive 1584 signal and 0 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 602 signal and 0 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 646 signal and 0 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 462 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1556 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 905 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 693 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 298 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 60, 25, 0
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 455 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 2862 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 725 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 180 signal and 0 cover from userspace component
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 1);

----- executor 3 receive testcase
----- executor 2 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
executor 2: prog_data_offset 1312, prog_size 8
[21958ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
[21958ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir: /root/glusterfs-client/dfs-0-102
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[21968ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[21957ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 39
-----finish removing dir
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-103 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-103
receive_execute: 2, 63
receive_execute: 1, 63
receive_execute: 1, 64
spawned worker pid 562
spawned worker pid 637
spawned worker pid 563
executor 0 after receive_execute
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 after setup_test
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 1
execute_one time: 2, 1
receive_execute: 6, 66
spawned worker pid 632
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22025ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-103
cover_reset in execute_call
#0 [22037ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-103
----- executor 3 write_call_output, size 6762, pid 632, write pid:633
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 12
#0 [22037ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-103
cover_reset in execute_call
#0 [22040ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4620  /root/glusterfs-client/dfs-0-103
----- executor 3 write_call_output, size 4620, pid 632, write pid:633
----- executor 3 executes write_coverage_signal cov->size 4620, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 3
execute_one inner time: 0, 15, 0
execute_one time: 1, 15
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 1 signal number : 446
----- executor 1 executes write_coverage_signal cov->size 7604, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 17686, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 signal number : 796
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 1 signal number : 2859
----- executor 1 executes write_coverage_signal cov->size 725, flag collect 0
----- executor 1 signal number : 284
----- executor 1 executes write_coverage_signal cov->size 12309, flag collect 0
----- executor 1 signal number : 717
----- executor 1 executes write_coverage_signal cov->size 3266, flag collect 0
----- executor 1 signal number : 37
----- executor 1 executes write_coverage_signal cov->size 9575, flag collect 0
----- executor 1 signal number : 194
----- executor 2 signal number : 813
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 signal number : 538
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 646
----- executor 0 signal number : 690
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 0 signal number : 83
executor 1 userspace cover_cnt 7
executor 2 userspace cover_cnt 5
executor 0 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 66, 24, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 90
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 605 signal and 0 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 446 signal and 0 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 796 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 690 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 2859 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 284 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 717 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 37 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 194 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 646 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 65, 25, 0
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[22048ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 72, 17, 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
[22048ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
remove dir: /root/glusterfs-client/dfs-0-103
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 64, 26, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22047ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22058ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 40
-----finish removing dir
mkdir time 21
executor 3 create dir /root/glusterfs-client/dfs-0-104 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-104
receive_execute: 1, 61
receive_execute: 1, 61
receive_execute: 1, 62
spawned worker pid 563
spawned worker pid 564
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 638
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 7, 63
spawned worker pid 634
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22113ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-104
cover_reset in execute_call
#0 [22125ms] <- mkdir=0x0 errno=14 cover=6746  /root/glusterfs-client/dfs-0-104
----- executor 3 write_call_output, size 6746, pid 634, write pid:635
----- executor 3 executes write_coverage_signal cov->size 6746, flag collect 0
----- executor 3 signal number : 1583
----- completed 1
execute_one loop: 0, 0, 13
#0 [22125ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x0) 3673 /root/glusterfs-client/dfs-0-104
cover_reset in execute_call
#0 [22131ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-104
----- executor 3 write_call_output, size 4626, pid 634, write pid:635
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 0
----- executor 3 signal number : 605
----- completed 2
execute_one loop: 0, 0, 6
execute_one inner time: 0, 19, 0
execute_one time: 2, 19
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1404, flag collect 0
----- executor 1 signal number : 446
----- executor 1 executes write_coverage_signal cov->size 6902, flag collect 0
----- executor 0 signal number : 3
----- executor 1 signal number : 10
----- executor 1 executes write_coverage_signal cov->size 8096, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 1 signal number : 1433
----- executor 1 executes write_coverage_signal cov->size 1458, flag collect 0
----- executor 0 signal number : 444
----- executor 1 signal number : 305
----- executor 1 executes write_coverage_signal cov->size 11572, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 1735
----- executor 0 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 1 signal number : 703
----- executor 1 executes write_coverage_signal cov->size 14149, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5938, flag collect 0
----- executor 2 signal number : 782
----- executor 0 signal number : 813
----- executor 1 signal number : 752
----- executor 1 executes write_coverage_signal cov->size 8273, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 1 signal number : 833
----- executor 0 signal number : 538
----- executor 2 signal number : 468
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 0
----- executor 0 signal number : 646
----- executor 2 signal number : 143
executor 1 userspace cover_cnt 7
executor 0 userspace cover_cnt 6
executor 2 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 63, 28, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 63, 29, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 91
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 6 replies
2023/01/25 16:52:11 fuzzer receive 1583 signal and 0 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 446 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 10 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1127 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1433 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1735 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 305 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 782 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 468 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 143 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 703 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 813 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 752 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 833 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 538 signal and 0 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 646 signal and 0 cover from userspace component
2023/01/25 16:52:11 fuzzer receive 605 signal and 0 cover from kernel component
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 70, 23, 0
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
[22142ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
[22141ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
remove dir: /root/glusterfs-client/dfs-0-104
executor 0: prog_data_offset 1296, prog_size 8
[22152ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 62, 31, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22141ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 33
-----finish removing dir
mkdir time 18
executor 3 create dir /root/glusterfs-client/dfs-0-105 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-105
receive_execute: 3, 53
receive_execute: 2, 53
receive_execute: 4, 53
spawned worker pid 564
spawned worker pid 639
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 565
executor 1 after receive_execute
executor 1 after setup_test
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 8, 56
spawned worker pid 636
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22199ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-105
cover_reset in execute_call
#0 [22211ms] <- mkdir=0x0 errno=14 cover=6744  /root/glusterfs-client/dfs-0-105
----- executor 3 write_call_output, size 6744, pid 636, write pid:637
----- executor 3 executes write_coverage_signal cov->size 6744, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 14
#0 [22213ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x0) 3673 /root/glusterfs-client/dfs-0-105
cover_reset in execute_call
#0 [22215ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4629  /root/glusterfs-client/dfs-0-105
----- executor 3 write_call_output, size 4629, pid 636, write pid:637
----- executor 3 executes write_coverage_signal cov->size 4629, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 2
execute_one loop: 0, 0, 3
execute_one inner time: 0, 17, 0
execute_one time: 1, 17
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 64, 20, 0
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 6902, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 409, signal number : 455
----- executor 0 executes write_coverage_signal cov->size 1395, flag collect 1
----- executor 1 cover number : 1005, signal number : 1127
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 0 cover number : 397, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7847, flag collect 1
----- executor 1 cover number : 770, signal number : 813
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 1492, signal number : 1798
----- executor 0 executes write_coverage_signal cov->size 1466, flag collect 1
----- executor 0 cover number : 387, signal number : 304
----- executor 0 executes write_coverage_signal cov->size 11569, flag collect 1
----- executor 2 cover number : 1292, signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 1292, signal number : 538
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 950, signal number : 703
----- executor 0 executes write_coverage_signal cov->size 12778, flag collect 1
----- executor 2 cover number : 1451, signal number : 715
----- executor 1 cover number : 1451, signal number : 646
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 1
executor 1 userspace cover_cnt 5
----- executor 2 cover number : 770, signal number : 773
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 1618, signal number : 349
----- executor 0 executes write_coverage_signal cov->size 9901, flag collect 1
----- executor 2 cover number : 1005, signal number : 92
executor 2 userspace cover_cnt 5
----- executor 0 cover number : 1793, signal number : 890
executor 0 userspace cover_cnt 7
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 86
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:11 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 455 signal and 409 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 4 signal and 397 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 56, 32, 0
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1798 signal and 1492 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 304 signal and 387 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1127 signal and 1005 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 813 signal and 770 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 57, 30, 0
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 538 signal and 1292 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 715 signal and 1451 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 646 signal and 1451 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 773 signal and 770 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 92 signal and 1005 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 703 signal and 950 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 349 signal and 1618 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 890 signal and 1793 cover from userspace component
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
[22232ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
remove dir: /root/glusterfs-client/dfs-0-105
[22232ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 55, 32, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22232ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22245ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 37
-----finish removing dir
mkdir time 19
executor 3 create dir /root/glusterfs-client/dfs-0-106 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-106
receive_execute: 5, 56
receive_execute: 8, 55
receive_execute: 7, 53
spawned worker pid 565
spawned worker pid 566
executor 1 after receive_execute
executor 1 after setup_test
executor 2 after receive_execute
executor 1 before execute_one
executor 2 after setup_test
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 640
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 14, 58
spawned worker pid 638
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
#0 [22291ms] -> mkdir(----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
0x20000240, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
0x0) 2373 /root/glusterfs-client/dfs-0-106
cover_reset in execute_call
#0 [22302ms] <- mkdir=0x0 errno=14 cover=6762  /root/glusterfs-client/dfs-0-106
----- executor 3 write_call_output, size 6762, pid 638, write pid:639
----- executor 3 executes write_coverage_signal cov->size 6762, flag collect 1
----- executor 3 cover number : 1280, signal number : 1583
----- completed 1
execute_one loop: 0, 0, 13
#0 [22304ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x0) 3673 /root/glusterfs-client/dfs-0-106
cover_reset in execute_call
#0 [22306ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4629  /root/glusterfs-client/dfs-0-106
----- executor 3 write_call_output, size 4629, pid 638, write pid:639
----- executor 3 executes write_coverage_signal cov->size 4629, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 2
execute_one loop: 0, 0, 4
execute_one inner time: 0, 17, 0
execute_one time: 1, 17
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 72, 19, 0
----- executor 1 executes write_coverage_signal cov->size 3451, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 1 cover number : 410, signal number : 457
----- executor 1 executes write_coverage_signal cov->size 4859, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 2 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 cover number : 410, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9871, flag collect 1
----- executor 2 cover number : 1451, signal number : 1735
----- executor 0 cover number : 1292, signal number : 1557
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 6619, flag collect 1
----- executor 2 cover number : 1005, signal number : 469
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 1 cover number : 1698, signal number : 2032
----- executor 0 cover number : 838, signal number : 889
----- executor 0 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 7242, flag collect 1
----- executor 2 cover number : 770, signal number : 775
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 0 cover number : 1451, signal number : 691
----- executor 0 executes write_coverage_signal cov->size 4828, flag collect 1
----- executor 1 cover number : 835, signal number : 865
----- executor 1 executes write_coverage_signal cov->size 5791, flag collect 1
----- executor 0 cover number : 1207, signal number : 309
----- executor 2 cover number : 1292, signal number : 154
----- executor 1 cover number : 815, signal number : 180
----- executor 1 executes write_coverage_signal cov->size 9575, flag collect 1
executor 0 userspace cover_cnt 5
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1442, signal number : 827
----- executor 1 executes write_coverage_signal cov->size 11105, flag collect 1
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
----- executor 1 cover number : 1650, signal number : 189
executor 1 userspace cover_cnt 7
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 87
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 fuzzer receive 1583 signal and 1280 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1557 signal and 1292 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 889 signal and 838 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1 signal and 410 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 691 signal and 1451 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 2032 signal and 1698 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 469 signal and 1005 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 309 signal and 1207 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 865 signal and 835 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 180 signal and 815 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 775 signal and 770 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 827 signal and 1442 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 154 signal and 1292 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 189 signal and 1650 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 63, 31, 0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 60, 27, 0
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 61, 28, 0
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:11 prog length: 2
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22322ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 0: prog_data_offset 1296, prog_size 8
[22333ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
[22323ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=440 filter=0
remove dir: /root/glusterfs-client/dfs-0-106
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[22323ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 36
-----finish removing dir
mkdir time 20
executor 3 create dir /root/glusterfs-client/dfs-0-107 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-107
receive_execute: 5, 57
receive_execute: 8, 58
receive_execute: 7, 58
spawned worker pid 567
executor 2 after receive_execute
spawned worker pid 566
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
spawned worker pid 641
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 1
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 14, 60
spawned worker pid 640
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22384ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-107
cover_reset in execute_call
#0 [22396ms] <- mkdir=0x0 errno=14 cover=6751  /root/glusterfs-client/dfs-0-107
----- executor 3 write_call_output, size 6751, pid 640, write pid:641
----- executor 3 executes write_coverage_signal cov->size 6751, flag collect 1
----- executor 3 cover number : 1278, signal number : 1579
----- completed 1
execute_one loop: 0, 0, 12
#0 [22397ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x0) 3673 /root/glusterfs-client/dfs-0-107
cover_reset in execute_call
#0 [22399ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4610  /root/glusterfs-client/dfs-0-107
----- executor 3 write_call_output, size 4610, pid 640, write pid:641
----- executor 3 executes write_coverage_signal cov->size 4610, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 2
execute_one loop: 0, 0, 3
execute_one inner time: 1, 15, 0
execute_one time: 1, 16
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3395, flag collect 1
time breakdown 3: 74, 18, 0
----- executor 0 executes write_coverage_signal cov->size 4859, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 1
----- executor 0 cover number : 409, signal number : 456
----- executor 0 executes write_coverage_signal cov->size 3447, flag collect 1
----- executor 0 cover number : 409, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 12800, flag collect 1
----- executor 1 cover number : 1451, signal number : 1735
----- executor 1 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 2 cover number : 1451, signal number : 1735
----- executor 2 executes write_coverage_signal cov->size 5938, flag collect 1
----- executor 1 cover number : 770, signal number : 782
----- executor 1 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 2 cover number : 770, signal number : 782
----- executor 2 executes write_coverage_signal cov->size 3943, flag collect 1
----- executor 1 cover number : 1292, signal number : 530
----- executor 2 cover number : 1012, signal number : 489
----- executor 2 executes write_coverage_signal cov->size 8046, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3169, flag collect 1
----- executor 0 cover number : 1616, signal number : 1988
----- executor 0 executes write_coverage_signal cov->size 4328, flag collect 1
----- executor 1 cover number : 1005, signal number : 81
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 749, signal number : 727
----- executor 0 executes write_coverage_signal cov->size 8703, flag collect 1
----- executor 2 cover number : 1292, signal number : 143
executor 2 userspace cover_cnt 5
----- executor 0 cover number : 837, signal number : 266
----- executor 0 executes write_coverage_signal cov->size 8273, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 62, 27, 0
----- executor 0 cover number : 1675, signal number : 905
----- executor 0 executes write_coverage_signal cov->size 9452, flag collect 1
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 65, 28, 0
----- executor 0 cover number : 1613, signal number : 169
executor 0 userspace cover_cnt 7
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
write_metadata
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 89
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:11 fuzzer receive 1579 signal and 1278 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 456 signal and 409 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 0 signal and 409 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1988 signal and 1616 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 782 signal and 770 cover from userspace component
------ execute 0 reply_execute finished
time breakdown 0: 66, 31, 1
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1735 signal and 1451 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 782 signal and 770 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 530 signal and 1292 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 81 signal and 1005 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 489 signal and 1012 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 143 signal and 1292 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 727 signal and 749 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 266 signal and 837 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 905 signal and 1675 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 169 signal and 1613 cover from userspace component
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 added new input for call #3 setxattr$trusted_overlay_nlink to corpus:
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
2023/01/25 16:52:11 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/01/25 16:52:11 #0: triaging type=0
2023/01/25 16:52:11 1 triaging input for call #2 setxattr$trusted_overlay_nlink (new signal=36)
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

2023/01/25 16:52:11 prog length: 3
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1160
[22421ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1160 filter=0
remove dir: /root/glusterfs-client/dfs-0-107
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22420ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22431ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 1: prog_data_offset 1304, prog_size 8
[22421ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 42
-----finish removing dir
receive_execute: 13, 63
mkdir time 21
executor 3 create dir /root/glusterfs-client/dfs-0-108 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-108
receive_execute: 8, 63
receive_execute: 12, 63
spawned worker pid 567
spawned worker pid 642
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
spawned worker pid 568
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 18, 66
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
spawned worker pid 642
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22488ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-108
cover_reset in execute_call
#0 [22490ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4614  /root/glusterfs-client/dfs-0-108
----- executor 3 write_call_output, size 4614, pid 642, write pid:643
----- executor 3 executes write_coverage_signal cov->size 4614, flag collect 1
----- executor 3 cover number : 1076, signal number : 1304
----- completed 1
execute_one loop: 0, 0, 3
#0 [22491ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-108
cover_reset in execute_call
#0 [22495ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-108
----- executor 3 write_call_output, size 4052, pid 642, write pid:643
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 5
#0 [22496ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-108
cover_reset in execute_call
#0 [22497ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-108
----- executor 3 write_call_output, size 4052, pid 642, write pid:643
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2550, flag collect 1
----- executor 2 cover number : 401, signal number : 443
----- executor 0 cover number : 401, signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 1
----- executor 1 cover number : 568, signal number : 646
----- executor 1 executes write_coverage_signal cov->size 1674, flag collect 1
----- executor 0 cover number : 473, signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 1
----- executor 1 cover number : 409, signal number : 12
----- executor 1 executes write_coverage_signal cov->size 7984, flag collect 1
----- executor 2 cover number : 992, signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 1
----- executor 0 cover number : 992, signal number : 1006
----- executor 2 cover number : 473, signal number : 391
executor 0 userspace cover_cnt 3
executor 2 userspace cover_cnt 3
----- executor 1 cover number : 1129, signal number : 1150
----- executor 1 executes write_coverage_signal cov->size 4756, flag collect 1
----- executor 1 cover number : 568, signal number : 494
----- executor 1 executes write_coverage_signal cov->size 5322, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 71, 19, 0
----- executor 1 cover number : 683, signal number : 164
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 1
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 75, 20, 0
----- executor 1 cover number : 804, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 4893, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 84, 12, 0
----- executor 1 cover number : 1027, signal number : 235
executor 1 userspace cover_cnt 7
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 76, 24, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 88
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:11 fuzzer receive 1304 signal and 1076 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 3 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 443 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1119 signal and 992 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 391 signal and 473 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 443 signal and 401 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 646 signal and 568 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 12 signal and 409 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 505 signal and 473 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1006 signal and 992 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1150 signal and 1129 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 494 signal and 568 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 164 signal and 683 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 7 signal and 804 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 235 signal and 1027 cover from userspace component
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

2023/01/25 16:52:11 prog length: 3
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22520ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22509ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1160
[22510ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1160 filter=0
remove dir: /root/glusterfs-client/dfs-0-108
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[22509ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 17
-----finish removing dir
mkdir time 20
executor 3 create dir /root/glusterfs-client/dfs-0-109 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-109
receive_execute: 7, 37
receive_execute: 6, 37
receive_execute: 2, 37
spawned worker pid 569
spawned worker pid 568
executor 2 after receive_execute
executor 1 after receive_execute
executor 2 after setup_test
executor 1 after setup_test
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
spawned worker pid 643
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 1
execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 11, 40
spawned worker pid 644
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22551ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-109
cover_reset in execute_call
#0 [22553ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-109
----- executor 3 write_call_output, size 4126, pid 644, write pid:645
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 1
----- executor 3 cover number : 1028, signal number : 1238
----- completed 1
execute_one loop: 0, 0, 4
#0 [22554ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-109
cover_reset in execute_call
#0 [22557ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-109
----- executor 3 write_call_output, size 4054, pid 644, write pid:645
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
#0 [22558ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-109
cover_reset in execute_call
#0 [22560ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-109
----- executor 3 write_call_output, size 4054, pid 644, write pid:645
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 3
execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 1 cover number : 401, signal number : 443
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 1
----- executor 0 cover number : 401, signal number : 443
----- executor 2 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 1
----- executor 1 cover number : 473, signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 1
----- executor 0 cover number : 473, signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 1
----- executor 2 cover number : 804, signal number : 897
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 1
----- executor 1 cover number : 992, signal number : 1006
----- executor 2 cover number : 804, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9348, flag collect 1
executor 1 userspace cover_cnt 3
----- executor 0 cover number : 992, signal number : 1006
executor 0 userspace cover_cnt 3
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 51, 12, 0
----- executor 2 cover number : 600, signal number : 603
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 39, 18, 1
----- executor 2 cover number : 1129, signal number : 378
executor 2 userspace cover_cnt 5
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 58
2023/01/25 16:52:11 ----- PS len: 4
write_metadata
2023/01/25 16:52:11 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:11 fuzzer receive 1238 signal and 1028 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 3 replies
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
------ execute 2 reply_execute finished
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 443 signal and 401 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 505 signal and 473 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 443 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1006 signal and 992 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 505 signal and 473 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1006 signal and 992 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 897 signal and 804 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 0 signal and 804 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 603 signal and 600 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 378 signal and 1129 cover from userspace component
time breakdown 2: 43, 21, 0
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

2023/01/25 16:52:11 prog length: 3
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[100];
v8[] = "{L-, 0x7fffffff}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_setxattr, v6, v7, v8, 22, 1);

----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1160
[22569ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1160 filter=0
----- executor 1 receive testcase
remove dir: /root/glusterfs-client/dfs-0-109
executor 1: prog_data_offset 1304, prog_size 8
[22569ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 45, 19, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22579ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22568ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 20
-----finish removing dir
mkdir time 20
executor 3 create dir /root/glusterfs-client/dfs-0-110 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-110
receive_execute: 4, 41
receive_execute: 0, 42
receive_execute: 2, 42
spawned worker pid 570
spawned worker pid 569
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 644
receive_execute: 7, 44
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
spawned worker pid 646
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22614ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-110
cover_reset in execute_call
#0 [22617ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-110
----- executor 3 write_call_output, size 4126, pid 646, write pid:647
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 1
----- executor 3 cover number : 1028, signal number : 1238
----- completed 1
execute_one loop: 0, 0, 4
#0 [22617ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-110
cover_reset in execute_call
#0 [22621ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-110
----- executor 3 write_call_output, size 4054, pid 646, write pid:647
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 4
#0 [22622ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-110
cover_reset in execute_call
#0 [22624ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-110
----- executor 3 write_call_output, size 4054, pid 646, write pid:647
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 3
execute_one inner time: 0, 11, 0
execute_one time: 1, 11
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 1 cover number : 401, signal number : 443
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 1
----- executor 0 cover number : 401, signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 7984, flag collect 1
----- executor 0 cover number : 473, signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 1
----- executor 1 cover number : 992, signal number : 1119
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 1
----- executor 1 cover number : 473, signal number : 391
----- executor 0 cover number : 992, signal number : 1006
----- executor 2 cover number : 1129, signal number : 1323
----- executor 2 executes write_coverage_signal cov->size 9348, flag collect 1
executor 1 userspace cover_cnt 3
executor 0 userspace cover_cnt 3
----- executor 2 cover number : 600, signal number : 547
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 51, 15, 0
----- executor 2 cover number : 804, signal number : 5
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 1
----- executor 2 cover number : 804, signal number : 4
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 44, 21, 0
executor 2 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 45, 22, 0
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 1's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:11 wait for executor 0's reply
2023/01/25 16:52:11 for select break: 1
2023/01/25 16:52:11 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:11 ------ all executors finish execution
2023/01/25 16:52:11 exec time: 65
2023/01/25 16:52:11 ----- PS len: 4
2023/01/25 16:52:11 [Kernel] executor 3 has 3 replies
2023/01/25 16:52:11 fuzzer receive 1238 signal and 1028 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:11 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:11 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 1 has 3 replies
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 1323 signal and 1129 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 443 signal and 401 cover from userspace component
2023/01/25 16:52:11 ----- [Userspace] executor 0 has 3 replies
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 1119 signal and 992 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 547 signal and 600 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 443 signal and 401 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 1 receive 391 signal and 473 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 505 signal and 473 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 0 receive 1006 signal and 992 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 5 signal and 804 cover from userspace component
2023/01/25 16:52:11 ------- fuzzer executor 2 receive 4 signal and 804 cover from userspace component
2023/01/25 16:52:11 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:11 result hanged=false: 
2023/01/25 16:52:11 ----- triage return due to unsuccessful execution call #2 setxattr$trusted_overlay_nlink
2023/01/25 16:52:11 #0: triaging type=0
2023/01/25 16:52:11 1 triaging input for call #2 mkdir (new signal=67)
2023/01/25 16:52:11 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

2023/01/25 16:52:11 prog length: 5
2023/01/25 16:52:11 HasCrashFail:false HasNetFail:false
16:52:11 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:11 wait for executor 3's reply
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1624
executor 1: prog_data_offset 1304, prog_size 8
[22634ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[22635ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1624 filter=0
remove dir: /root/glusterfs-client/dfs-0-110
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "./file0";
v8[100];
v9[] = "{L-, 0x7fffffff}";
v10[] = "./file0";
v11[] = "@random={user., security.SMACK64TRANSMUTE}";
v12[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_mkdir, v6, 128);
syscall(SYS_setxattr, v7, v8, v9, 22, 1);
syscall(SYS_setxattr, v10, v11, v12, 26, 1);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22646ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 42, 23, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22634ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 23
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-111 successfully
receive_execute: 0, 48
receive_execute: 1, 50
current dir: executor 3: /root/glusterfs-client/dfs-0-111
receive_execute: 2, 51
spawned worker pid 571
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
spawned worker pid 645
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 570
receive_execute: 7, 53
spawned worker pid 648
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22689ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-111
cover_reset in execute_call
#0 [22690ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-111
----- executor 3 write_call_output, size 4124, pid 648, write pid:649
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 1
----- executor 3 cover number : 1028, signal number : 1238
----- completed 1
execute_one loop: 0, 0, 2
#0 [22691ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-111
cover_reset in execute_call
#0 [22692ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-111
----- executor 3 write_call_output, size 4054, pid 648, write pid:649
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 2
#0 [22693ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-111
cover_reset in execute_call
#0 [22703ms] <- mkdir=0x0 errno=14 cover=6691  /root/glusterfs-client/dfs-0-111
----- executor 3 write_call_output, size 6691, pid 648, write pid:649
----- executor 3 executes write_coverage_signal cov->size 6691, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 3
execute_one loop: 0, 0, 11
#0 [22704ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-111
cover_reset in execute_call
#0 [22706ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-111
----- executor 3 write_call_output, size 4626, pid 648, write pid:649
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 4
execute_one loop: 0, 0, 3
#0 [22707ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-111
cover_reset in execute_call
#0 [22718ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-111
----- executor 3 write_call_output, size 5469, pid 648, write pid:649
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 5
execute_one loop: 0, 0, 12
execute_one inner time: 0, 30, 0
execute_one time: 1, 30
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 6864, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 2 cover number : 410, signal number : 458
----- executor 2 executes write_coverage_signal cov->size 5516, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 2 cover number : 410, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 17470, flag collect 1
----- executor 1 cover number : 1140, signal number : 1326
----- executor 1 executes write_coverage_signal cov->size 7614, flag collect 1
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 60, 32, 0
----- executor 0 cover number : 1294, signal number : 1566
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 1 cover number : 816, signal number : 883
----- executor 1 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 0 cover number : 816, signal number : 867
----- executor 0 executes write_coverage_signal cov->size 5215, flag collect 1
----- executor 2 cover number : 1638, signal number : 2047
----- executor 2 executes write_coverage_signal cov->size 8823, flag collect 1
----- executor 0 cover number : 1140, signal number : 313
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 2 cover number : 939, signal number : 938
----- executor 2 executes write_coverage_signal cov->size 12497, flag collect 1
----- executor 1 cover number : 1294, signal number : 544
----- executor 1 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 0 cover number : 1454, signal number : 649
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 1454, signal number : 650
executor 1 userspace cover_cnt 5
----- executor 2 cover number : 1743, signal number : 700
----- executor 2 executes write_coverage_signal cov->size 12740, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 48, 45, 0
----- executor 2 cover number : 835, signal number : 298
----- executor 2 executes write_coverage_signal cov->size 17038, flag collect 1
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 53, 45, 0
----- executor 2 cover number : 2245, signal number : 937
executor 2 userspace cover_cnt 7
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 100
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 5 replies
2023/01/25 16:52:12 fuzzer receive 1238 signal and 1028 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 5 replies
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 52, 50, 0
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1326 signal and 1140 cover from userspace component
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 1566 signal and 1294 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 544 signal and 1294 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 458 signal and 410 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 867 signal and 816 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 313 signal and 1140 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 649 signal and 1454 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 650 signal and 1454 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 0 signal and 410 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 2047 signal and 1638 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 938 signal and 939 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 700 signal and 1743 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 298 signal and 835 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 937 signal and 2245 cover from userspace component
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ----- triage return due to empty signal call #2 mkdir
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 1 triaging input for call #4 setxattr$trusted_overlay_nlink (new signal=2)
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file0";
v10[100];
v11[] = "{L-, 0x7fffffff}";
v12[] = "./file0";
v13[] = "@random={user., security.SMACK64TRANSMUTE}";
v14[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_setxattr, v9, v10, v11, 22, 1);
syscall(SYS_setxattr, v12, v13, v14, 26, 1);

2023/01/25 16:52:12 prog length: 6
2023/01/25 16:52:12 HasCrashFail:false HasNetFail:false
16:52:12 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
removexattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='user.incfs.size\x00')
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:12 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file0";
v10[100];
v11[] = "{L-, 0x7fffffff}";
v12[] = "./file0";
v13[] = "@random={user., security.SMACK64TRANSMUTE}";
v14[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_setxattr, v9, v10, v11, 22, 1);
syscall(SYS_setxattr, v12, v13, v14, 26, 1);

----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22738ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[22748ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 1: prog_data_offset 1304, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 1784
[22738ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[22739ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=1784 filter=0
remove dir: /root/glusterfs-client/dfs-0-111
remove dir time 35
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-112 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-112
receive_execute: 3, 67
receive_execute: 7, 67
receive_execute: 9, 67
spawned worker pid 646
spawned worker pid 572
executor 2 after receive_execute
executor 0 after receive_execute
executor 0 after setup_test
spawned worker pid 571
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 18, 71
spawned worker pid 650
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22811ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-112
cover_reset in execute_call
#0 [22813ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-112
----- executor 3 write_call_output, size 4124, pid 650, write pid:651
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 1
----- executor 3 cover number : 1028, signal number : 1237
----- completed 1
execute_one loop: 0, 0, 3
#0 [22814ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-112
cover_reset in execute_call
#0 [22816ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-112
----- executor 3 write_call_output, size 4052, pid 650, write pid:651
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
#0 [22817ms] -> removexattr(0x200001c0, 0x20000200) 2808 /root/glusterfs-client/dfs-0-112
cover_reset in execute_call
#0 [22819ms] <- removexattr=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-112
----- executor 3 write_call_output, size 4052, pid 650, write pid:651
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 3
#0 [22819ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-112
cover_reset in execute_call
#0 [22831ms] <- mkdir=0x0 errno=14 cover=6690  /root/glusterfs-client/dfs-0-112
----- executor 3 write_call_output, size 6690, pid 650, write pid:651
----- executor 3 executes write_coverage_signal cov->size 6690, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 4
execute_one loop: 0, 0, 12
#0 [22832ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-112
cover_reset in execute_call
#0 [22834ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=4626  /root/glusterfs-client/dfs-0-112
----- executor 3 write_call_output, size 4626, pid 650, write pid:651
----- executor 3 executes write_coverage_signal cov->size 4626, flag collect 1
----- executor 3 cover number : 1008, signal number : 605
----- completed 5
execute_one loop: 0, 0, 2
#0 [22834ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-112
cover_reset in execute_call
#0 [22840ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-112
----- executor 3 write_call_output, size 5469, pid 650, write pid:651
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 1
----- executor 3 cover number : 1024, signal number : 235
----- completed 6
execute_one loop: 0, 0, 8
execute_one inner time: 1, 31, 0
execute_one time: 1, 32
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4753, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 11758, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6874, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 5221, flag collect 1
----- executor 0 cover number : 1141, signal number : 1328
----- executor 1 cover number : 429, signal number : 484
----- executor 1 executes write_coverage_signal cov->size 1396, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 7614, flag collect 1
----- executor 1 cover number : 398, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 17246, flag collect 1
----- executor 2 cover number : 1342, signal number : 1590
----- executor 2 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 0 cover number : 816, signal number : 883
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 89, 34, 0
----- executor 0 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 2 cover number : 1294, signal number : 546
----- executor 2 executes write_coverage_signal cov->size 8344, flag collect 1
----- executor 0 cover number : 1454, signal number : 1041
----- executor 0 executes write_coverage_signal cov->size 11215, flag collect 1
----- executor 1 cover number : 1927, signal number : 2458
----- executor 1 executes write_coverage_signal cov->size 22476, flag collect 1
----- executor 2 cover number : 898, signal number : 944
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 1
----- executor 0 cover number : 1294, signal number : 164
----- executor 2 cover number : 1454, signal number : 652
executor 0 userspace cover_cnt 5
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1132, signal number : 1274
----- executor 1 executes write_coverage_signal cov->size 1468, flag collect 1
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
----- executor 1 cover number : 387, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 23997, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 76, 46, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 70, 45, 0
----- executor 1 cover number : 2248, signal number : 1177
----- executor 1 executes write_coverage_signal cov->size 8882, flag collect 1
----- executor 1 cover number : 1392, signal number : 91
executor 1 userspace cover_cnt 7
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 122
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 6 replies
2023/01/25 16:52:12 fuzzer receive 1237 signal and 1028 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 605 signal and 1008 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 235 signal and 1024 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 1328 signal and 1141 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 883 signal and 816 cover from userspace component
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 1041 signal and 1454 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 164 signal and 1294 cover from userspace component
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 1590 signal and 1342 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 484 signal and 429 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 3 signal and 398 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 2458 signal and 1927 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 546 signal and 1294 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 944 signal and 898 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 652 signal and 1454 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1274 signal and 1132 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 3 signal and 387 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1177 signal and 2248 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 91 signal and 1392 cover from userspace component
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ----- triage return due to empty signal call #4 setxattr$trusted_overlay_nlink
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 1 triaging input for call #7 setxattr (new signal=67)
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file0";
v30[100];
v31[] = "{L-, 0x7fffffff}";
v32[] = "./file0";
v33[] = "@random={user., security.SMACK64TRANSMUTE}";
v34[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_setxattr, v29, v30, v31, 22, 1);
syscall(SYS_setxattr, v32, v33, v34, 26, 1);

2023/01/25 16:52:12 prog length: 14
2023/01/25 16:52:12 HasCrashFail:false HasNetFail:false
16:52:12 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
removexattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='user.incfs.size\x00')
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
link(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='./file1\x00')
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}, 0xd, 0x0)
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="", 0x1000, 0x3)
setxattr(&(0x7f0000001440)='./file0\x00', &(0x7f0000001480)=@known='trusted.overlay.upper\x00', &(0x7f00000014c0)='\xca-\\\x00', 0x4, 0x2)
setxattr$trusted_overlay_redirect(&(0x7f0000001500)='./file1\x00', &(0x7f0000001540), &(0x7f0000001580)='./file1\x00', 0x8, 0x2)
setxattr$incfs_size(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001600), &(0x7f0000001640)=0x1, 0x8, 0x4)
removexattr(&(0x7f0000001680)='./file1\x00', &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
rmdir(&(0x7f0000001700)='./file1\x00')
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:12 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file0";
v30[100];
v31[] = "{L-, 0x7fffffff}";
v32[] = "./file0";
v33[] = "@random={user., security.SMACK64TRANSMUTE}";
v34[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_setxattr, v29, v30, v31, 22, 1);
syscall(SYS_setxattr, v32, v33, v34, 26, 1);

----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22862ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 74, 55, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[22863ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 0: prog_data_offset 1296, prog_size 8
executor 3: prog_data_offset 1320, prog_size 7768
[22873ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[22863ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=7768 filter=0
remove dir: /root/glusterfs-client/dfs-0-112
remove dir time 33
-----finish removing dir
mkdir time 20
executor 3 create dir /root/glusterfs-client/dfs-0-113 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-113
receive_execute: 3, 53
receive_execute: 12, 54
receive_execute: 11, 54
spawned worker pid 572
spawned worker pid 573
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
spawned worker pid 647
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 20, 57
spawned worker pid 652
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [22921ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22923ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4124, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 1
----- executor 3 cover number : 1028, signal number : 1237
----- completed 1
execute_one loop: 0, 0, 3
#0 [22924ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22926ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4052, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
#0 [22927ms] -> removexattr(0x200001c0, 0x20000200) 2808 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22929ms] <- removexattr=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4052, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 3
#0 [22930ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22939ms] <- mkdir=0x0 errno=14 cover=6690  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 6690, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 6690, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 4
execute_one loop: 0, 0, 10
#0 [22940ms] -> link(0x20000280, 0x200002c0) 2343 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22943ms] <- link=0xffffffffffffffff errno=2 cover=5250  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 5250, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 5250, flag collect 1
----- executor 3 cover number : 1210, signal number : 297
----- completed 5
execute_one loop: 0, 0, 4
#0 [22944ms] -> setxattr$security_ima(0x20000300, 0x20000340, 0x20000380, 0xd, 0x0) 3668 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22946ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4046  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4046, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4046, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 6
execute_one loop: 0, 0, 3
#0 [22947ms] -> setxattr$incfs_metadata(0x200003c0, 0x20000400, 0x20000440, 0x1000, 0x3) 3664 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22951ms] <- setxattr$incfs_metadata=0xffffffffffffffff errno=61 cover=2274  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 2274, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 1
----- executor 3 cover number : 859, signal number : 366
----- completed 7
execute_one loop: 0, 0, 5
#0 [22952ms] -> setxattr(0x20001440, 0x20001480, 0x200014c0, 0x4, 0x2) 3662 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22955ms] <- setxattr=0xffffffffffffffff errno=61 cover=3402  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 3402, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 3402, flag collect 1
----- executor 3 cover number : 789, signal number : 78
----- completed 8
execute_one loop: 0, 0, 4
#0 [22956ms] -> setxattr$trusted_overlay_redirect(0x20001500, 0x20001540, 0x20001580, 0x8, 0x2) 3676 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22958ms] <- setxattr$trusted_overlay_redirect=0xffffffffffffffff errno=2 cover=4046  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4046, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4046, flag collect 1
----- executor 3 cover number : 997, signal number : 4
----- completed 9
execute_one loop: 0, 0, 3
#0 [22958ms] -> setxattr$incfs_size(0x200015c0, 0x20001600, 0x20001640, 0x8, 0x4) 3665 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22958ms] <- setxattr$incfs_size=0xffffffffffffffff errno=22 cover=0  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 0, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
#0 [22959ms] -> removexattr(0x20001680, 0x200016c0) 2808 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22960ms] <- removexattr=0xffffffffffffffff errno=2 cover=4046  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4046, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4046, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 11
execute_one loop: 0, 0, 2
#0 [22961ms] -> rmdir(0x20001700) 2814 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22962ms] <- rmdir=0xffffffffffffffff errno=2 cover=4046  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 4046, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 4046, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 12
execute_one loop: 0, 0, 2
#0 [22963ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22965ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=3402  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 3402, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 3402, flag collect 1
----- executor 3 cover number : 789, signal number : 4
----- completed 13
execute_one loop: 0, 0, 2
#0 [22965ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-113
cover_reset in execute_call
#0 [22970ms] <- setxattr=0x0 errno=14 cover=5469  /root/glusterfs-client/dfs-0-113
----- executor 3 write_call_output, size 5469, pid 652, write pid:653
----- executor 3 executes write_coverage_signal cov->size 5469, flag collect 1
----- executor 3 cover number : 1024, signal number : 109
----- completed 14
execute_one loop: 0, 0, 6
execute_one inner time: 0, 50, 0
execute_one time: 0, 51
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 5432, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 17120, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 5706, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 10093, flag collect 1
----- executor 0 cover number : 410, signal number : 457
----- executor 0 executes write_coverage_signal cov->size 9641, flag collect 1
----- executor 2 cover number : 1426, signal number : 1757
----- executor 2 executes write_coverage_signal cov->size 8433, flag collect 1
----- executor 2 cover number : 816, signal number : 868
----- executor 2 executes write_coverage_signal cov->size 9644, flag collect 1
----- executor 0 cover number : 1642, signal number : 2022
----- executor 0 executes write_coverage_signal cov->size 9163, flag collect 1
----- executor 1 cover number : 411, signal number : 460
----- executor 1 executes write_coverage_signal cov->size 1405, flag collect 1
----- executor 1 cover number : 402, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 23554, flag collect 1
----- executor 2 cover number : 1642, signal number : 970
----- executor 2 executes write_coverage_signal cov->size 6247, flag collect 1
----- executor 2 cover number : 1304, signal number : 100
----- executor 0 cover number : 898, signal number : 970
----- executor 0 executes write_coverage_signal cov->size 7906, flag collect 1
executor 2 userspace cover_cnt 5
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 77, 52, 0
----- executor 0 cover number : 1497, signal number : 694
----- executor 0 executes write_coverage_signal cov->size 10093, flag collect 1
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 66, 62, 0
----- executor 1 cover number : 1898, signal number : 2453
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1426, signal number : 336
executor 0 userspace cover_cnt 5
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 65, 67, 0
----- executor 1 cover number : 1086, signal number : 1264
----- executor 1 executes write_coverage_signal cov->size 1463, flag collect 1
----- executor 1 cover number : 386, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 28677, flag collect 1
----- executor 1 cover number : 2211, signal number : 825
----- executor 1 executes write_coverage_signal cov->size 23365, flag collect 1
----- executor 1 cover number : 2196, signal number : 817
executor 1 userspace cover_cnt 7
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 131
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 14 replies
2023/01/25 16:52:12 fuzzer receive 1237 signal and 1028 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 297 signal and 1210 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 366 signal and 859 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 78 signal and 789 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 4 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 56, 77, 1
2023/01/25 16:52:12 fuzzer receive 4 signal and 789 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 109 signal and 1024 cover from kernel component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 1757 signal and 1426 cover from userspace component
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 868 signal and 816 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 460 signal and 411 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1 signal and 402 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 2453 signal and 1898 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 970 signal and 1642 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1264 signal and 1086 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 4 signal and 386 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 2022 signal and 1642 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 970 signal and 898 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 694 signal and 1497 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 825 signal and 2211 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 336 signal and 1426 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 100 signal and 1304 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 817 signal and 2196 cover from userspace component
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ----- triage return due to empty signal call #7 setxattr
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 1 triaging input for call #4 link (new signal=4)
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file1";
v30[] = "./file1";
v31[] = "./file0";
v32[] = "@random={user., security.SMACK64TRANSMUTE}";
v33[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_truncate, v29, 3);
syscall(SYS_open, v30, 1024, 187);
syscall(SYS_setxattr, v31, v32, v33, 26, 1);

2023/01/25 16:52:12 prog length: 15
2023/01/25 16:52:12 HasCrashFail:false HasNetFail:false
16:52:12 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
removexattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='user.incfs.size\x00')
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
link(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='./file1\x00')
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}, 0xd, 0x0)
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="", 0x1000, 0x3)
setxattr(&(0x7f0000001440)='./file0\x00', &(0x7f0000001480)=@known='trusted.overlay.upper\x00', &(0x7f00000014c0)='\xca-\\\x00', 0x4, 0x2)
setxattr$trusted_overlay_redirect(&(0x7f0000001500)='./file1\x00', &(0x7f0000001540), &(0x7f0000001580)='./file1\x00', 0x8, 0x2)
setxattr$incfs_size(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001600), &(0x7f0000001640)=0x1, 0x8, 0x4)
removexattr(&(0x7f0000001680)='./file1\x00', &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
rmdir(&(0x7f0000001700)='./file1\x00')
truncate(&(0x7f0000001740)='./file1\x00', 0x3)
open(&(0x7f0000001780)='./file1\x00', 0x400, 0xbb)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:12 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file1";
v30[] = "./file1";
v31[] = "./file0";
v32[] = "@random={user., security.SMACK64TRANSMUTE}";
v33[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_truncate, v29, 3);
syscall(SYS_open, v30, 1024, 187);
syscall(SYS_setxattr, v31, v32, v33, 26, 1);

----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 7696
[22997ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=7696 filter=0
remove dir: /root/glusterfs-client/dfs-0-113
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[22996ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 0: prog_data_offset 1296, prog_size 8
[23007ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[22996ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 35
-----finish removing dir
receive_execute: 18, 56
mkdir time 20
executor 3 create dir /root/glusterfs-client/dfs-0-114 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-114
receive_execute: 13, 56
receive_execute: 2, 56
spawned worker pid 574
spawned worker pid 648
executor 2 after receive_execute
spawned worker pid 573
executor 1 after receive_execute
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 after setup_test
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 25, 58
spawned worker pid 654
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [23055ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23058ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4121  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4121, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4121, flag collect 1
----- executor 3 cover number : 1027, signal number : 1235
----- completed 1
execute_one loop: 0, 0, 4
#0 [23059ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23061ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4049  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4049, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4049, flag collect 1
----- executor 3 cover number : 996, signal number : 13
----- completed 2
execute_one loop: 0, 0, 4
#0 [23062ms] -> removexattr(0x200001c0, 0x20000200) 2808 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23064ms] <- removexattr=0xffffffffffffffff errno=2 cover=4049  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4049, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4049, flag collect 1
----- executor 3 cover number : 996, signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
#0 [23065ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23076ms] <- mkdir=0x0 errno=14 cover=6679  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 6679, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 6679, flag collect 1
----- executor 3 cover number : 1236, signal number : 331
----- completed 4
execute_one loop: 0, 0, 13
#0 [23078ms] -> link(0x20000280, 0x200002c0) 2343 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23080ms] <- link=0xffffffffffffffff errno=2 cover=5247  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 5247, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 5247, flag collect 1
----- executor 3 cover number : 1209, signal number : 297
----- completed 5
execute_one loop: 0, 0, 3
#0 [23081ms] -> setxattr$security_ima(0x20000300, 0x20000340, 0x20000380, 0xd, 0x0) 3668 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23083ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4043  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4043, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 1
----- executor 3 cover number : 996, signal number : 0
----- completed 6
execute_one loop: 0, 0, 3
#0 [23084ms] -> setxattr$incfs_metadata(0x200003c0, 0x20000400, 0x20000440, 0x1000, 0x3) 3664 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23086ms] <- setxattr$incfs_metadata=0xffffffffffffffff errno=61 cover=2274  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 2274, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 1
----- executor 3 cover number : 859, signal number : 366
----- completed 7
execute_one loop: 0, 0, 3
#0 [23087ms] -> setxattr(0x20001440, 0x20001480, 0x200014c0, 0x4, 0x2) 3662 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23089ms] <- setxattr=0xffffffffffffffff errno=61 cover=3402  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 3402, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 3402, flag collect 1
----- executor 3 cover number : 789, signal number : 78
----- completed 8
execute_one loop: 0, 0, 3
#0 [23090ms] -> setxattr$trusted_overlay_redirect(0x20001500, 0x20001540, 0x20001580, 0x8, 0x2) 3676 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23091ms] <- setxattr$trusted_overlay_redirect=0xffffffffffffffff errno=2 cover=4043  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4043, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 1
----- executor 3 cover number : 996, signal number : 4
----- completed 9
execute_one loop: 0, 0, 2
#0 [23092ms] -> setxattr$incfs_size(0x200015c0, 0x20001600, 0x20001640, 0x8, 0x4) 3665 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23092ms] <- setxattr$incfs_size=0xffffffffffffffff errno=22 cover=0  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 0, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
#0 [23092ms] -> removexattr(0x20001680, 0x200016c0) 2808 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23094ms] <- removexattr=0xffffffffffffffff errno=2 cover=4043  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4043, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 1
----- executor 3 cover number : 996, signal number : 0
----- completed 11
execute_one loop: 0, 0, 2
#0 [23094ms] -> rmdir(0x20001700) 2814 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23096ms] <- rmdir=0xffffffffffffffff errno=2 cover=4043  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4043, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 1
----- executor 3 cover number : 996, signal number : 0
----- completed 12
execute_one loop: 0, 0, 2
#0 [23096ms] -> truncate(0x20001740, 0x3) 3965 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23098ms] <- truncate=0xffffffffffffffff errno=2 cover=4043  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4043, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 1
----- executor 3 cover number : 996, signal number : 0
----- completed 13
execute_one loop: 0, 0, 2
#0 [23098ms] -> open(0x20001780, 0x400, 0xbb) 2458 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23100ms] <- open=0xffffffffffffffff errno=2 cover=4043  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 4043, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 1
----- executor 3 cover number : 996, signal number : 0
----- completed 14
execute_one loop: 0, 0, 3
#0 [23100ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-114
cover_reset in execute_call
#0 [23104ms] <- setxattr=0x0 errno=14 cover=2254  /root/glusterfs-client/dfs-0-114
----- executor 3 write_call_output, size 2254, pid 654, write pid:655
----- executor 3 executes write_coverage_signal cov->size 2254, flag collect 1
----- executor 3 cover number : 847, signal number : 7
----- completed 15
execute_one loop: 0, 0, 4
execute_one inner time: 0, 50, 0
execute_one time: 0, 50
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
----- executor 1 executes write_coverage_signal cov->size 4074, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 4074, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 17821, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6337, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6473, flag collect 1
----- executor 2 cover number : 1311, signal number : 1571
----- executor 2 executes write_coverage_signal cov->size 8049, flag collect 1
----- executor 1 cover number : 1505, signal number : 1803
----- executor 1 executes write_coverage_signal cov->size 6790, flag collect 1
----- executor 2 cover number : 1293, signal number : 115
----- executor 2 executes write_coverage_signal cov->size 6790, flag collect 1
----- executor 2 cover number : 770, signal number : 789
----- executor 2 executes write_coverage_signal cov->size 6473, flag collect 1
----- executor 1 cover number : 770, signal number : 837
----- executor 0 cover number : 412, signal number : 463
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 8050, flag collect 1
----- executor 0 cover number : 403, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 25361, flag collect 1
----- executor 2 cover number : 1505, signal number : 901
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 83, 52, 0
executor 2 userspace cover_cnt 5
----- executor 1 cover number : 1294, signal number : 671
----- executor 1 executes write_coverage_signal cov->size 7996, flag collect 1
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
----- executor 1 cover number : 1503, signal number : 329
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 2171, signal number : 2811
----- executor 0 executes write_coverage_signal cov->size 739, flag collect 1
----- executor 0 cover number : 383, signal number : 309
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 58, 63, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 74, 59, 0
----- executor 0 cover number : 1086, signal number : 999
----- executor 0 executes write_coverage_signal cov->size 24416, flag collect 1
----- executor 0 cover number : 1922, signal number : 595
----- executor 0 executes write_coverage_signal cov->size 26434, flag collect 1
----- executor 0 cover number : 1988, signal number : 507
executor 0 userspace cover_cnt 7
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 131
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 15 replies
2023/01/25 16:52:12 fuzzer receive 1235 signal and 1027 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 13 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 331 signal and 1236 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 297 signal and 1209 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 366 signal and 859 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 78 signal and 789 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 4 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 996 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 7 signal and 847 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 7 replies
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 463 signal and 412 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 5 replies
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 69, 75, 0
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 0 signal and 403 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1803 signal and 1505 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 2811 signal and 2171 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 837 signal and 770 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 1571 signal and 1311 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 309 signal and 383 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 671 signal and 1294 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 999 signal and 1086 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 329 signal and 1503 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 115 signal and 1293 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 789 signal and 770 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 595 signal and 1922 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 901 signal and 1505 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 507 signal and 1988 cover from userspace component
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ----- triage return due to empty signal call #4 link
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 1 triaging input for call #3 mkdir (new signal=63)
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file1";
v30[] = "./file1";
v31[] = "./file0";
v32[] = "@random={user., security.SMACK64TRANSMUTE}";
v33[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_truncate, v29, 3);
syscall(SYS_open, v30, 1024, 187);
syscall(SYS_setxattr, v31, v32, v33, 26, 1);

2023/01/25 16:52:12 prog length: 15
2023/01/25 16:52:12 HasCrashFail:false HasNetFail:false
16:52:12 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
removexattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='user.incfs.size\x00')
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
link(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='./file1\x00')
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}, 0xd, 0x0)
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="", 0x1000, 0x3)
setxattr(&(0x7f0000001440)='./file0\x00', &(0x7f0000001480)=@known='trusted.overlay.upper\x00', &(0x7f00000014c0)='\xca-\\\x00', 0x4, 0x2)
setxattr$trusted_overlay_redirect(&(0x7f0000001500)='./file1\x00', &(0x7f0000001540), &(0x7f0000001580)='./file1\x00', 0x8, 0x2)
setxattr$incfs_size(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001600), &(0x7f0000001640)=0x1, 0x8, 0x4)
removexattr(&(0x7f0000001680)='./file1\x00', &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
rmdir(&(0x7f0000001700)='./file1\x00')
truncate(&(0x7f0000001740)='./file1\x00', 0x3)
open(&(0x7f0000001780)='./file1\x00', 0x400, 0xbb)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
---

end of program
2023/01/25 16:52:12 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file1";
v30[] = "./file1";
v31[] = "./file0";
v32[] = "@random={user., security.SMACK64TRANSMUTE}";
v33[] = "security.SMACK64TRANSMUTE";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_truncate, v29, 3);
syscall(SYS_open, v30, 1024, 187);
syscall(SYS_setxattr, v31, v32, v33, 26, 1);

----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
executor 2: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 7696
[23130ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=7696 filter=0
remove dir: /root/glusterfs-client/dfs-0-114
[23130ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[23130ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[23140ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 43
-----finish removing dir
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-115 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-115
receive_execute: 3, 76
receive_execute: 19, 76
receive_execute: 15, 76
spawned worker pid 649
spawned worker pid 574
spawned worker pid 575
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 24, 79
spawned worker pid 656
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [23211ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23217ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4126  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4126, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4126, flag collect 1
----- executor 3 cover number : 1028, signal number : 1238
----- completed 1
execute_one loop: 0, 0, 7
#0 [23217ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23220ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4054, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
#0 [23221ms] -> removexattr(0x200001c0, 0x20000200) 2808 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23223ms] <- removexattr=0xffffffffffffffff errno=2 cover=4054  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4054, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4054, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 3
#0 [23224ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23242ms] <- mkdir=0x0 errno=14 cover=6698  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 6698, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 6698, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 4
execute_one loop: 0, 0, 20
#0 [23244ms] -> link(0x20000280, 0x200002c0) 2343 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23248ms] <- link=0xffffffffffffffff errno=2 cover=5252  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 5252, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 5252, flag collect 1
----- executor 3 cover number : 1210, signal number : 298
----- completed 5
execute_one loop: 0, 0, 6
#0 [23250ms] -> setxattr$security_ima(0x20000300, 0x20000340, 0x20000380, 0xd, 0x0) 3668 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23252ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4048  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4048, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 1
----- executor 3 cover number : 997, signal number : 1
----- completed 6
execute_one loop: 0, 0, 4
#0 [23254ms] -> setxattr$incfs_metadata(0x200003c0, 0x20000400, 0x20000440, 0x1000, 0x3) 3664 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23257ms] <- setxattr$incfs_metadata=0xffffffffffffffff errno=61 cover=2274  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 2274, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 1
----- executor 3 cover number : 859, signal number : 366
----- completed 7
execute_one loop: 0, 0, 4
#0 [23258ms] -> setxattr(0x20001440, 0x20001480, 0x200014c0, 0x4, 0x2) 3662 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23261ms] <- setxattr=0xffffffffffffffff errno=61 cover=3402  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 3402, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 3402, flag collect 1
----- executor 3 cover number : 789, signal number : 78
----- completed 8
execute_one loop: 0, 0, 4
#0 [23262ms] -> setxattr$trusted_overlay_redirect(0x20001500, 0x20001540, 0x20001580, 0x8, 0x2) 3676 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23265ms] <- setxattr$trusted_overlay_redirect=0xffffffffffffffff errno=2 cover=4048  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4048, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 1
----- executor 3 cover number : 997, signal number : 4
----- completed 9
execute_one loop: 0, 0, 5
#0 [23267ms] -> setxattr$incfs_size(0x200015c0, 0x20001600, 0x20001640, 0x8, 0x4) 3665 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23267ms] <- setxattr$incfs_size=0xffffffffffffffff errno=22 cover=0  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 0, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
#0 [23267ms] -> removexattr(0x20001680, 0x200016c0) 2808 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23270ms] <- removexattr=0xffffffffffffffff errno=2 cover=4048  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4048, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 11
execute_one loop: 0, 0, 3
#0 [23271ms] -> rmdir(0x20001700) 2814 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23274ms] <- rmdir=0xffffffffffffffff errno=2 cover=4048  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4048, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 12
execute_one loop: 0, 0, 4
#0 [23274ms] -> truncate(0x20001740, 0x3) 3965 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23276ms] <- truncate=0xffffffffffffffff errno=2 cover=4048  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4048, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 13
execute_one loop: 0, 0, 2
#0 [23277ms] -> open(0x20001780, 0x400, 0xbb) 2458 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23279ms] <- open=0xffffffffffffffff errno=2 cover=4048  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 4048, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 14
execute_one loop: 0, 0, 3
#0 [23280ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-115
cover_reset in execute_call
#0 [23284ms] <- setxattr=0x0 errno=14 cover=2254  /root/glusterfs-client/dfs-0-115
----- executor 3 write_call_output, size 2254, pid 656, write pid:657
----- executor 3 executes write_coverage_signal cov->size 2254, flag collect 1
----- executor 3 cover number : 847, signal number : 7
----- completed 15
execute_one loop: 0, 0, 5
execute_one inner time: 0, 74, 0
execute_one time: 1, 74
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 103, 76, 0
----- executor 2 executes write_coverage_signal cov->size 10925, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4074, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4074, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 8049, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6473, flag collect 1
----- executor 2 cover number : 412, signal number : 462
----- executor 2 executes write_coverage_signal cov->size 7600, flag collect 1
----- executor 1 cover number : 1293, signal number : 1558
----- executor 1 executes write_coverage_signal cov->size 6790, flag collect 1
----- executor 0 cover number : 1505, signal number : 1803
----- executor 0 executes write_coverage_signal cov->size 7366, flag collect 1
----- executor 0 cover number : 836, signal number : 929
----- executor 0 executes write_coverage_signal cov->size 8049, flag collect 1
----- executor 2 cover number : 410, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 28384, flag collect 1
----- executor 1 cover number : 770, signal number : 797
----- executor 1 executes write_coverage_signal cov->size 6337, flag collect 1
----- executor 1 cover number : 1311, signal number : 132
----- executor 1 executes write_coverage_signal cov->size 6473, flag collect 1
----- executor 0 cover number : 1293, signal number : 673
----- executor 0 executes write_coverage_signal cov->size 7996, flag collect 1
----- executor 1 cover number : 1505, signal number : 895
executor 1 userspace cover_cnt 5
----- executor 0 cover number : 1503, signal number : 328
executor 0 userspace cover_cnt 5
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 92, 85, 0
----- executor 2 cover number : 2076, signal number : 2678
----- executor 2 executes write_coverage_signal cov->size 25043, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 79, 87, 0
----- executor 2 cover number : 932, signal number : 1023
----- executor 2 executes write_coverage_signal cov->size 25032, flag collect 1
----- executor 2 cover number : 1953, signal number : 360
----- executor 2 executes write_coverage_signal cov->size 16581, flag collect 1
----- executor 2 cover number : 841, signal number : 322
----- executor 2 executes write_coverage_signal cov->size 23512, flag collect 1
----- executor 2 cover number : 2197, signal number : 831
executor 2 userspace cover_cnt 7
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 177
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 15 replies
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 5 replies
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 7 replies
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 1803 signal and 1505 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 462 signal and 412 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 1 signal and 410 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 929 signal and 836 cover from userspace component
2023/01/25 16:52:12 fuzzer receive 1238 signal and 1028 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1558 signal and 1293 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 2678 signal and 2076 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 797 signal and 770 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 1023 signal and 932 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 132 signal and 1311 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 360 signal and 1953 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 895 signal and 1505 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 322 signal and 841 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 831 signal and 2197 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 673 signal and 1293 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 328 signal and 1503 cover from userspace component
2023/01/25 16:52:12 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 298 signal and 1210 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 1 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 366 signal and 859 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 78 signal and 789 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 4 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 7 signal and 847 cover from kernel component
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ----- triage return due to empty signal call #3 mkdir
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 1 triaging input for call #4 link (new signal=4)
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file1";
v31[] = "./file1";
v32[] = "./file0";
v33[100];
v34[] = "{L-, 0x7fffffff}";
v35[] = "./file0";
v36[] = "@random={user., security.SMACK64TRANSMUTE}";
v37[] = "security.SMACK64TRANSMUTE";
v38[] = "./file0";
v39[100];
v40[] = "{L-, 0x2}";
v41[] = "{#! , ./file1, [{0x20, %$n([#!-}, {0x20, security.ima}], 0xa, "a8af6e8bdff148395dcd01ca43d67e2f84e40b454a71fd4fcaae6ce31caa42f74a4396ee46f0ccf7704303f37ebdece37d5e6a14481bc134013f69a70596cc62f7b2"}";
v43[] = "./file0";
v44[] = "{syz0, "e9746861c34e9d46c9e52d66358f836596819643b88408ab0ac3297e6f203bffa5c7568783f8a4eb05f595b68bc216636bcad30ab12ab19c4edb5ad768d8fcdeda8b1820977356ad24da8d6515271fe0dc2bfaf4a22e81f78de09f7ec56fa11e8d28ad16d1616a1d3e554a8f2a3967559f48dced6325734fe1c0dba053f3c5935b7b72e34c3c7ad10822652266e6616d6b8be6e167b0d09e79bc9331b2d0ce3abf5b306df45f4a9e00c873e0f3e069872fa7cce9b8c05bff6b8aba50f23a6903ede9e31baa133cdba643a3b92b6d509fdd67b7878b7f9c1c96e7e4905ed700a21ce23efc6d4482f467a7e2"}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_truncate, v29, 3);
v30 = syscall(SYS_open, v31, 1024, 187);
syscall(SYS_setxattr, v32, v33, v34, 22, 1);
syscall(SYS_setxattr, v35, v36, v37, 26, 1);
syscall(SYS_setxattr, v38, v39, v40, 22, 7);
syscall(SYS_write, v30, v41, 100);
v42 = syscall(SYS_open, v43, 1059137, 128);
syscall(SYS_write, v42, v44, 239);

2023/01/25 16:52:12 prog length: 20
2023/01/25 16:52:12 HasCrashFail:false HasNetFail:false
16:52:12 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}, 0x52, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x3)
removexattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='user.incfs.size\x00')
mkdir(&(0x7f0000000240)='./file0\x00', 0x80)
link(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='./file1\x00')
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}, 0xd, 0x0)
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="", 0x1000, 0x3)
setxattr(&(0x7f0000001440)='./file0\x00', &(0x7f0000001480)=@known='trusted.overlay.upper\x00', &(0x7f00000014c0)='\xca-\\\x00', 0x4, 0x2)
setxattr$trusted_overlay_redirect(&(0x7f0000001500)='./file1\x00', &(0x7f0000001540), &(0x7f0000001580)='./file1\x00', 0x8, 0x2)
setxattr$incfs_size(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001600), &(0x7f0000001640)=0x1, 0x8, 0x4)
removexattr(&(0x7f0000001680)='./file1\x00', &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
rmdir(&(0x7f0000001700)='./file1\x00')
truncate(&(0x7f0000001740)='./file1\x00', 0x3)
r0 = open(&(0x7f0000001780)='./file1\x00', 0x400, 0xbb)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-', 0x7fffffff}, 0x16, 0x1)
setxattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@random={'user.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001900)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
setxattr$trusted_overlay_nlink(&(0x7f0000001940)='./file0\x00', &(0x7f0000001980), &(0x7f00000019c0)={'L-', 0x2}, 0x16, 0x7)
write$binfmt_script(r0, &(0x7f0000001a00)={'#! ', './file1', [{0x20, '%$n([#!-'}, {0x20, 'security.ima\x00'}], 0xa, "a8af6e8bdff148395dcd01ca43d67e2f84e40b454a71fd4fcaae6ce31caa42f74a4396ee46f0ccf7704303f37ebdece37d5e6a14481bc134013f69a70596cc62f7b2"}, 0x64)
r1 = open$dir(&(0x7f0000001a80)='./file0\x00', 0x102941, 0x80)
write$binfmt_misc(r1, &(0x7f0000001ac0)={'syz0', "e9746861c34e9d46c9e52d66358f836596819643b88408ab0ac3297e6f203bffa5c7568783f8a4eb05f595b68bc216636bcad30ab12ab19c4edb5ad768d8fcdeda8b1820977356ad24da8d6515271fe0dc2bfaf4a22e81f78de09f7ec56fa11e8d28ad16d1616a1d3e554a8f2a3967559f48dced6325734fe1c0dba053f3c5935b7b72e34c3c7ad10822652266e6616d6b8be6e167b0d09e79bc9331b2d0ce3abf5b306df45f4a9e00c873e0f3e069872fa7cce9b8c05bff6b8aba50f23a6903ede9e31baa133cdba643a3b92b6d509fdd67b7878b7f9c1c96e7e4905ed700a21ce23efc6d4482f467a7e2"}, 0xef)
---

end of program
2023/01/25 16:52:12 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[100];
v2[] = "@v2={0x5, 0x2, 0x14, 0x7ff, 0x49, "60e54990e99c3886006d7206dbe57115e8809d74f79564e989348a4a94852ab94ed8f0ee36a197f9cb6ab48f10644b97edb1cef7aaa54f71ced73766c4871b6afbe27f5a3901588780"}";
v3[] = "./file0";
v4[100];
v5[100];
v6[] = "./file0";
v7[] = "user.incfs.size";
v8[] = "./file0";
v9[] = "./file1";
v10[] = "./file1";
v11[] = "./file1";
v12[100];
v13[] = "@ng={0x4, 0xe, "ca6110ed589a4d2aa814d5"}";
v14[] = "./file0";
v15[100];
v16[] = """";
v17[] = "./file0";
v18[] = "trusted.overlay.upper";
v19[] = "\xca-\\";
v20[] = "./file1";
v21[100];
v22[] = "./file1";
v23[] = "./file0";
v24[100];
v25[] = "0x1";
v26[] = "./file1";
v27[] = "com.apple.system.Security";
v28[] = "./file1";
v29[] = "./file1";
v31[] = "./file1";
v32[] = "./file0";
v33[100];
v34[] = "{L-, 0x7fffffff}";
v35[] = "./file0";
v36[] = "@random={user., security.SMACK64TRANSMUTE}";
v37[] = "security.SMACK64TRANSMUTE";
v38[] = "./file0";
v39[100];
v40[] = "{L-, 0x2}";
v41[] = "{#! , ./file1, [{0x20, %$n([#!-}, {0x20, security.ima}], 0xa, "a8af6e8bdff148395dcd01ca43d67e2f84e40b454a71fd4fcaae6ce31caa42f74a4396ee46f0ccf7704303f37ebdece37d5e6a14481bc134013f69a70596cc62f7b2"}";
v43[] = "./file0";
v44[] = "{syz0, "e9746861c34e9d46c9e52d66358f836596819643b88408ab0ac3297e6f203bffa5c7568783f8a4eb05f595b68bc216636bcad30ab12ab19c4edb5ad768d8fcdeda8b1820977356ad24da8d6515271fe0dc2bfaf4a22e81f78de09f7ec56fa11e8d28ad16d1616a1d3e554a8f2a3967559f48dced6325734fe1c0dba053f3c5935b7b72e34c3c7ad10822652266e6616d6b8be6e167b0d09e79bc9331b2d0ce3abf5b306df45f4a9e00c873e0f3e069872fa7cce9b8c05bff6b8aba50f23a6903ede9e31baa133cdba643a3b92b6d509fdd67b7878b7f9c1c96e7e4905ed700a21ce23efc6d4482f467a7e2"}";

syscall(SYS_setxattr, v0, v1, v2, 82, 2);
syscall(SYS_setxattr, v3, v4, v5, 4, 3);
syscall(SYS_removexattr, v6, v7);
syscall(SYS_mkdir, v8, 128);
syscall(SYS_link, v9, v10);
syscall(SYS_setxattr, v11, v12, v13, 13, 0);
syscall(SYS_setxattr, v14, v15, v16, 4096, 3);
syscall(SYS_setxattr, v17, v18, v19, 4, 2);
syscall(SYS_setxattr, v20, v21, v22, 8, 2);
syscall(SYS_setxattr, v23, v24, v25, 8, 4);
syscall(SYS_removexattr, v26, v27);
syscall(SYS_rmdir, v28);
syscall(SYS_truncate, v29, 3);
v30 = syscall(SYS_open, v31, 1024, 187);
syscall(SYS_setxattr, v32, v33, v34, 22, 1);
syscall(SYS_setxattr, v35, v36, v37, 26, 1);
syscall(SYS_setxattr, v38, v39, v40, 22, 7);
syscall(SYS_write, v30, v41, 100);
v42 = syscall(SYS_open, v43, 1059137, 128);
syscall(SYS_write, v42, v44, 239);

----- executor 3 receive testcase
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[23320ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 3: prog_data_offset 1320, prog_size 9416
executor 1: prog_data_offset 1304, prog_size 8
[23310ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[23310ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=9416 filter=0
remove dir: /root/glusterfs-client/dfs-0-115
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 95, 100, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
[23309ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 51
-----finish removing dir
receive_execute: 18, 84
receive_execute: 14, 85
receive_execute: 3, 85
spawned worker pid 576
spawned worker pid 575
executor 1 after receive_execute
executor 1 after setup_test
spawned worker pid 650
executor 1 before execute_one
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 2, 0
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-116 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-116
receive_execute: 24, 88
spawned worker pid 658
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [23399ms] -> setxattr$security_ima(0x20000000, 0x20000040, 0x20000080, 0x52, 0x2) 3668 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23402ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4124  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4124, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4124, flag collect 1
----- executor 3 cover number : 1028, signal number : 1237
----- completed 1
execute_one loop: 0, 0, 3
#0 [23403ms] -> setxattr$security_smack_transmute(0x20000100, 0x20000140, 0x20000180, 0x4, 0x3) 3670 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23405ms] <- setxattr$security_smack_transmute=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4052, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 13
----- completed 2
execute_one loop: 0, 0, 2
#0 [23405ms] -> removexattr(0x200001c0, 0x20000200) 2808 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23412ms] <- removexattr=0xffffffffffffffff errno=2 cover=4052  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4052, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 3
execute_one loop: 0, 0, 8
#0 [23413ms] -> mkdir(0x20000240, 0x80) 2373 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23429ms] <- mkdir=0x0 errno=14 cover=6684  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 6684, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 6684, flag collect 1
----- executor 3 cover number : 1238, signal number : 333
----- completed 4
execute_one loop: 0, 0, 17
#0 [23430ms] -> link(0x20000280, 0x200002c0) 2343 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23433ms] <- link=0xffffffffffffffff errno=2 cover=5250  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 5250, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 5250, flag collect 1
----- executor 3 cover number : 1210, signal number : 297
----- completed 5
execute_one loop: 0, 0, 4
#0 [23433ms] -> setxattr$security_ima(0x20000300, 0x20000340, 0x20000380, 0xd, 0x0) 3668 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23435ms] <- setxattr$security_ima=0xffffffffffffffff errno=2 cover=4046  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4046, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4046, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 6
execute_one loop: 0, 0, 3
#0 [23437ms] -> setxattr$incfs_metadata(0x200003c0, 0x20000400, 0x20000440, 0x1000, 0x3) 3664 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23440ms] <- setxattr$incfs_metadata=0xffffffffffffffff errno=61 cover=2274  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 2274, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 2274, flag collect 1
----- executor 3 cover number : 859, signal number : 366
----- completed 7
execute_one loop: 0, 0, 4
#0 [23441ms] -> setxattr(0x20001440, 0x20001480, 0x200014c0, 0x4, 0x2) 3662 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23444ms] <- setxattr=0xffffffffffffffff errno=61 cover=3380  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 3380, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 3380, flag collect 1
----- executor 3 cover number : 783, signal number : 78
----- completed 8
execute_one loop: 0, 0, 4
#0 [23446ms] -> setxattr$trusted_overlay_redirect(0x20001500, 0x20001540, 0x20001580, 0x8, 0x2) 3676 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23448ms] <- setxattr$trusted_overlay_redirect=0xffffffffffffffff errno=2 cover=4042  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4042, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 1
----- executor 3 cover number : 997, signal number : 4
----- completed 9
execute_one loop: 0, 0, 5
#0 [23449ms] -> setxattr$incfs_size(0x200015c0, 0x20001600, 0x20001640, 0x8, 0x4) 3665 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23450ms] <- setxattr$incfs_size=0xffffffffffffffff errno=22 cover=0  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 0, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
#0 [23450ms] -> removexattr(0x20001680, 0x200016c0) 2808 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23452ms] <- removexattr=0xffffffffffffffff errno=2 cover=4042  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4042, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 11
execute_one loop: 0, 0, 3
#0 [23454ms] -> rmdir(0x20001700) 2814 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23456ms] <- rmdir=0xffffffffffffffff errno=2 cover=4042  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4042, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 12
execute_one loop: 0, 0, 3
#0 [23457ms] -> truncate(0x20001740, 0x3) 3965 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
Node-3:
#0 [23459ms] <- truncate=0xffffffffffffffff errno=2 cover=4042  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4042, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 13
execute_one loop: 0, 0, 3
#0 [23460ms] -> open(0x20001780, 0x400, 0xbb) 2458 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
2023/01/25 16:52:12 poll: candidates=0 inputs=0 signal=0
#0 [23464ms] <- open=0xffffffffffffffff errno=2 cover=4042  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 4042, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 1
----- executor 3 cover number : 997, signal number : 0
----- completed 14
execute_one loop: 0, 0, 6
#0 [23466ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x1) 3673 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23468ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=3380  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 3380, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 3380, flag collect 1
----- executor 3 cover number : 783, signal number : 4
----- completed 15
execute_one loop: 0, 0, 3
#0 [23469ms] -> setxattr(0x20001880, 0x200018c0, 0x20001900, 0x1a, 0x1) 3662 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23476ms] <- setxattr=0x0 errno=14 cover=5425  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 5425, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 5425, flag collect 1
----- executor 3 cover number : 1018, signal number : 109
----- completed 16
execute_one loop: 0, 0, 9
#0 [23478ms] -> setxattr$trusted_overlay_nlink(0x20001940, 0x20001980, 0x200019c0, 0x16, 0x7) 3673 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23478ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=22 cover=0  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 0, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
#0 [23478ms] -> write$binfmt_script(0xffffffffffffffff, 0x20001a00, 0x64) 4129 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23478ms] <- write$binfmt_script=0xffffffffffffffff errno=9 cover=0  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 0, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
#0 [23478ms] -> open$dir(0x20001a80, 0x102941, 0x80) 2459 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23478ms] <- open$dir=0xffffffffffffffff errno=21 cover=0  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 0, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_one loop: 0, 0, 1
#0 [23479ms] -> write$binfmt_misc(0xffffffffffffffff, 0x20001ac0, 0xef) 4128 /root/glusterfs-client/dfs-0-116
cover_reset in execute_call
#0 [23479ms] <- write$binfmt_misc=0xffffffffffffffff errno=9 cover=0  /root/glusterfs-client/dfs-0-116
----- executor 3 write_call_output, size 0, pid 658, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
execute_one inner time: 1, 79, 0
execute_one time: 1, 80
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 112, 82, 0
----- executor 2 executes write_coverage_signal cov->size 5432, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 6195, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 5432, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 10093, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 10093, flag collect 1
----- executor 1 cover number : 410, signal number : 457
----- executor 1 executes write_coverage_signal cov->size 13693, flag collect 1
----- executor 2 cover number : 1426, signal number : 1757
----- executor 2 executes write_coverage_signal cov->size 9639, flag collect 1
----- executor 0 cover number : 1426, signal number : 1757
----- executor 0 executes write_coverage_signal cov->size 8433, flag collect 1
----- executor 1 cover number : 412, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 26376, flag collect 1
----- executor 2 cover number : 1641, signal number : 978
----- executor 2 executes write_coverage_signal cov->size 8433, flag collect 1
----- executor 0 cover number : 816, signal number : 868
----- executor 0 executes write_coverage_signal cov->size 6247, flag collect 1
----- executor 2 cover number : 816, signal number : 871
----- executor 2 executes write_coverage_signal cov->size 7906, flag collect 1
----- executor 0 cover number : 1304, signal number : 137
----- executor 0 executes write_coverage_signal cov->size 9639, flag collect 1
----- executor 2 cover number : 1496, signal number : 355
executor 2 userspace cover_cnt 5
----- executor 0 cover number : 1641, signal number : 916
executor 0 userspace cover_cnt 5
----- executor 1 cover number : 2139, signal number : 2717
----- executor 1 executes write_coverage_signal cov->size 15118, flag collect 1
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 88, 95, 0
----- executor 1 cover number : 835, signal number : 845
----- executor 1 executes write_coverage_signal cov->size 28158, flag collect 1
----- executor 1 cover number : 980, signal number : 462
----- executor 1 executes write_coverage_signal cov->size 30550, flag collect 1
----- executor 1 cover number : 1765, signal number : 1273
----- executor 1 executes write_coverage_signal cov->size 25159, flag collect 1
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 99, 104, 0
----- executor 1 cover number : 1953, signal number : 307
executor 1 userspace cover_cnt 7
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 196
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 20 replies
2023/01/25 16:52:12 fuzzer receive 1237 signal and 1028 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 13 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 333 signal and 1238 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 5 replies
2023/01/25 16:52:12 fuzzer receive 297 signal and 1210 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 366 signal and 859 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 78 signal and 783 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 4 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 5 replies
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 1757 signal and 1426 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 978 signal and 1641 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 871 signal and 816 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 2 receive 355 signal and 1496 cover from userspace component
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 102, 112, 0
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 1757 signal and 1426 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 868 signal and 816 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 137 signal and 1304 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 0 receive 916 signal and 1641 cover from userspace component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 997 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 4 signal and 783 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 109 signal and 1018 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 7 replies
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 457 signal and 410 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 5 signal and 412 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 2717 signal and 2139 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 845 signal and 835 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 462 signal and 980 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 1273 signal and 1765 cover from userspace component
2023/01/25 16:52:12 ------- fuzzer executor 1 receive 307 signal and 1953 cover from userspace component
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ----- triage return due to empty signal call #4 link
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: triaging type=0
2023/01/25 16:52:12 #0: collecting comparisons on call 1
2023/01/25 16:52:12 HasCrashFail: false, .HasNetFail: false
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: false
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:12 prog length: 2
2023/01/25 16:52:12 HasCrashFail:false HasNetFail:false
16:52:12 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
2023/01/25 16:52:12 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 8
[23521ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=1 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1320, prog_size 440
[23511ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=1 dedup=1 timeouts=50/500000/1 prog=440 filter=0
remove dir: /root/glusterfs-client/dfs-0-116
----- executor 2 receive testcase
executor 2: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1304, prog_size 8
[23511ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=1 dedup=1 timeouts=50/500000/1 prog=8 filter=0
[23511ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=1 dedup=1 timeouts=50/500000/1 prog=8 filter=0
remove dir time 62
-----finish removing dir
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-117 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-117
receive_execute: 5, 96
receive_execute: 12, 97
receive_execute: 21, 97
spawned worker pid 577
spawned worker pid 651
spawned worker pid 576
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 after receive_execute
execute_one inner time: 0, 0, 0
executor 2 after setup_test
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
receive_execute: 31, 102
execute_one time: 4, 0
spawned worker pid 660
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [23621ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-117
cover_reset in execute_call
#0 [23636ms] <- mkdir=0x0 errno=14 cover=0  /root/glusterfs-client/dfs-0-117
----- executor 3 write_call_output, size 0, pid 660, write pid:661
----- completed 1
execute_one loop: 0, 0, 20
#0 [23636ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x0) 3673 /root/glusterfs-client/dfs-0-117
cover_reset in execute_call
#0 [23638ms] <- setxattr$trusted_overlay_nlink=0x0 errno=14 cover=0  /root/glusterfs-client/dfs-0-117
----- executor 3 write_call_output, size 0, pid 660, write pid:661
----- completed 2
execute_one loop: 0, 0, 2
execute_one inner time: 1, 22, 0
execute_one time: 2, 24
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 2's reply
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 133, 27, 0
executor 2 userspace cover_cnt 0
executor 0 userspace cover_cnt 0
executor 1 userspace cover_cnt 0
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 1's reply
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 110, 34, 0
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 118, 35, 0
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:12 wait for executor 0's reply
2023/01/25 16:52:12 for select break: 1
2023/01/25 16:52:12 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:12 ------ all executors finish execution
2023/01/25 16:52:12 exec time: 132
2023/01/25 16:52:12 ----- PS len: 4
2023/01/25 16:52:12 [Kernel] executor 3 has 2 replies
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:12 ----- [Userspace] executor 0 has 0 replies
2023/01/25 16:52:12 ----- [Userspace] executor 1 has 0 replies
2023/01/25 16:52:12 ----- [Userspace] executor 2 has 0 replies
2023/01/25 16:52:12 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:12 result hanged=false: 
2023/01/25 16:52:12 ------ executing comparison hint: 0
2023/01/25 16:52:12 Crash failure smash:false false
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 102, 35, 0
2023/01/25 16:52:12 genNodeCombs: [[{0 []}] [{1 []}] [{2 []}] [{0 []} {1 []}] [{0 []} {2 []}] [{1 []} {2 []}] [{0 []} {1 []} {2 []}]]
2023/01/25 16:52:12 enumInner comb: [{0 []}]
2023/01/25 16:52:12 InsertFailure: true, false
2023/01/25 16:52:12 filter Disconn Calls: 3 0, [0 1 2] [0 1 2]
2023/01/25 16:52:12 insertSync 0 0 2
2023/01/25 16:52:12 findAndInsert at 0
2023/01/25 16:52:12 findAndInsert at 1
2023/01/25 16:52:12 insertSync 0 1 2
2023/01/25 16:52:12 findAndInsert at 0
2023/01/25 16:52:12 findAndInsert at 2
2023/01/25 16:52:12 insertSync 0 2 2
2023/01/25 16:52:12 findAndInsert at 0
2023/01/25 16:52:12 insertSync 1 1 2
2023/01/25 16:52:12 findAndInsert at 1
2023/01/25 16:52:12 findAndInsert at 2
2023/01/25 16:52:12 insertSync 1 2 2
2023/01/25 16:52:12 findAndInsert at 1
2023/01/25 16:52:12 insertSync 2 2 2
2023/01/25 16:52:12 clt 3 srv 0 queue 6
2023/01/25 16:52:12 failure queue 6
2023/01/25 16:52:12 send to channel: true, false
2023/01/25 16:52:12 send to channel: true, false
2023/01/25 16:52:12 failure smash: true false
2023/01/25 16:52:12 HasCrashFail: true, .HasNetFail: false
2023/01/25 16:52:12 before return in CmpProgs, HasNetFail: false, HasCrashFail: true
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:12 prog length: 6
2023/01/25 16:52:12 prog length: 4
2023/01/25 16:52:12 HasCrashFail:true HasNetFail:false
16:52:12 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:12 wait for executor 3's reply
----- executor 2 receive testcase
executor 2: prog_data_offset 1552, prog_size 8
[23645ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 248
[23656ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=248 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1544, prog_size 8
[23645ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
----- executor 3 receive testcase
executor 3: prog_data_offset 1560, prog_size 584
[23647ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=0 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=584 filter=0
remove dir: /root/glusterfs-client/dfs-0-117
remove dir time 63
-----finish removing dir
receive_execute: 2, 95
receive_execute: 3, 95
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-118 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-118
spawned worker pid 577
spawned worker pid 652
executor 1 after receive_execute
executor 1 after setup_test
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 after receive_execute
executor 0 after setup_test
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
#0 [23753ms] -> syz_failure_recv(0x0) 3787 /root
receive_execute: 3, 95
spawned worker pid 578
executor 2 after receive_execute
executor 2 after setup_test
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 7, 101
spawned worker pid 662
=================================================================
==411==ERROR: AddressSanitizer: heap-use-after-free on address 0x621000532834 at pc 0x7fffeefe7785 bp 0x7fffefa6f480 sp 0x7fffefa6f470
READ of size 4 at 0x621000532834 thread T7
    #0 0x7fffeefe7784 in dht_xattrop_mds_cbk /root/glusterfs/xlators/cluster/dht/src/dht-common.c:4046
    #1 0x7fffef1b7f6d in client4_0_xattrop_cbk /root/glusterfs/xlators/protocol/client/src/client-rpc-fops_v2.c:1530
    #2 0x7ffff721ffca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #3 0x7ffff721ffca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #4 0x7ffff7219983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #5 0x7ffff03405a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #6 0x7ffff0350b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #7 0x7ffff0350b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #8 0x7ffff0350b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #9 0x7ffff0350b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #10 0x7ffff73fa6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #11 0x7ffff73fa6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #12 0x7ffff71bf608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477
    #13 0x7ffff70e4102 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)

0x621000532834 is located 1844 bytes inside of 4164-byte region [0x621000532100,0x621000533144)
freed by thread T6 here:
    #0 0x7ffff769a7cf in __interceptor_free (/lib/x86_64-linux-gnu/libasan.so.5+0x10d7cf)
    #1 0x7ffff7355e19 in __gf_free /root/glusterfs/libglusterfs/src/mem-pool.c:383
    #2 0x7fffeef71acd in dht_local_wipe /root/glusterfs/xlators/cluster/dht/src/dht-helper.c:805
    #3 0x7fffeef71acd in dht_local_wipe /root/glusterfs/xlators/cluster/dht/src/dht-helper.c:713
    #4 0x7fffeefefd71 in dht_setxattr_mds_cbk /root/glusterfs/xlators/cluster/dht/src/dht-common.c:4013
    #5 0x7fffef1e96b1 in client4_0_setxattr_cbk /root/glusterfs/xlators/protocol/client/src/client-rpc-fops_v2.c:865
    #6 0x7ffff721ffca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #7 0x7ffff721ffca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #8 0x7ffff7219983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #9 0x7ffff03405a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #10 0x7ffff0350b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #11 0x7ffff0350b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #12 0x7ffff0350b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #13 0x7ffff0350b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #14 0x7ffff73fa6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #15 0x7ffff73fa6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #16 0x7ffff71bf608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

previously allocated by thread T8 here:
    #0 0x7ffff769adc6 in calloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10ddc6)
    #1 0x7ffff7355226 in __gf_calloc /root/glusterfs/libglusterfs/src/mem-pool.c:177
    #2 0x7fffeef7db19 in dht_local_init /root/glusterfs/xlators/cluster/dht/src/dht-helper.c:815
    #3 0x7fffef06cc91 in dht_setxattr /root/glusterfs/xlators/cluster/dht/src/dht-common.c:5796
    #4 0x7ffff747be59 in default_setxattr /root/glusterfs/libglusterfs/src/defaults.c:2443
    #5 0x7ffff747be59 in default_setxattr /root/glusterfs/libglusterfs/src/defaults.c:2443
    #6 0x7ffff747be59 in default_setxattr /root/glusterfs/libglusterfs/src/defaults.c:2443
    #7 0x7fffeeeb4f21 in ob_setxattr /root/glusterfs/xlators/performance/open-behind/src/open-behind.c:777
    #8 0x7fffeeeb4f21 in ob_setxattr /root/glusterfs/xlators/performance/open-behind/src/open-behind.c:768
    #9 0x7ffff747be59 in default_setxattr /root/glusterfs/libglusterfs/src/defaults.c:2443
    #10 0x7fffeee41023 in mdc_setxattr /root/glusterfs/xlators/performance/md-cache/src/md-cache.c:2403
    #11 0x7ffff74d1bf0 in default_setxattr_resume /root/glusterfs/libglusterfs/src/defaults.c:1745
    #12 0x7ffff731dfb6 in call_resume_wind /root/glusterfs/libglusterfs/src/call-stub.c:2073
    #13 0x7ffff734d8f4 in call_resume /root/glusterfs/libglusterfs/src/call-stub.c:2390
    #14 0x7fffeee168bc in iot_worker /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:227
    #15 0x7ffff71bf608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T7 created by T0 here:
    #0 0x7ffff75c7805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72f8b97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730a28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73f8af2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7353f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7461b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7461b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fe90b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T6 created by T0 here:
    #0 0x7ffff75c7805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72f8b97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730a28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73f8af2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7353f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7461b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7461b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fe90b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T8 created by T7 here:
    #0 0x7ffff75c7805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72f8b97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730a28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7fffeee15ace in __iot_workers_scale /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:830
    #4 0x7fffeee1dd62 in iot_workers_scale /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:853
    #5 0x7fffeee1dd62 in init /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:1251
    #6 0x7ffff72e5208 in __xlator_init /root/glusterfs/libglusterfs/src/xlator.c:610
    #7 0x7ffff72e5208 in xlator_init /root/glusterfs/libglusterfs/src/xlator.c:635
    #8 0x7ffff7378672 in glusterfs_graph_init /root/glusterfs/libglusterfs/src/graph.c:474
    #9 0x7ffff737971b in glusterfs_graph_activate /root/glusterfs/libglusterfs/src/graph.c:823
    #10 0x555555573a4e in glusterfs_process_volfp /root/glusterfs/glusterfsd/src/glusterfsd.c:2493
    #11 0x555555584675 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2444
    #12 0x7ffff721ffca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #13 0x7ffff721ffca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #14 0x7ffff7219983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #15 0x7ffff03405a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #16 0x7ffff0350b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #17 0x7ffff0350b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #18 0x7ffff0350b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #19 0x7ffff0350b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #20 0x7ffff73fa6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #21 0x7ffff73fa6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #22 0x7ffff71bf608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

SUMMARY: AddressSanitizer: heap-use-after-free /root/glusterfs/xlators/cluster/dht/src/dht-common.c:4046 in dht_xattrop_mds_cbk
Shadow bytes around the buggy address:
  0x0c428009e4b0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e4c0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e4d0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e4e0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e4f0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c428009e500: fd fd fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd
  0x0c428009e510: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e520: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e530: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e540: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c428009e550: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==411==ABORTING
executor 3 after receive_execute
executor 3 after setup_test
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
#0 [23774ms] <- syz_failure_recv=0x0 errno=14  /root
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
#0 [23774ms] -> syz_failure_down() 3784 /root
#0 [23764ms] -> syz_failure_sync(0x0, 0x3) 3789 /root/glusterfs-client/dfs-0-118
cover_reset in execute_call
/root/glusterfs-node-down.sh: 1: kill: No such process

#0 [23833ms] <- syz_failure_down=0x0 errno=14  /root
execute_call 0, 59, 0, 0
execute_one loop: 0, 0, 59
#0 [23833ms] -> syz_failure_send(0x0) 3788 /root
#0 [23833ms] <- syz_failure_send=0x0 errno=14  /root
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
#0 [23833ms] -> syz_failure_recv(0x1) 3787 /root
#0 [23823ms] <- syz_failure_sync=0x0 errno=14 cover=0  /root/glusterfs-client/dfs-0-118
----- executor 3 write_call_output, size 0, pid 662, write pid:663
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 64
#0 [23834ms] <- syz_failure_recv=0x0 errno=14  /root
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
#0 [23834ms] -> syz_failure_up(#0 [23824ms] -> syz_failure_sync(0x1, 0x3) 3789 /root/glusterfs-client/dfs-0-118
cover_reset in execute_call
) 3790 /root
/root/glusterfs-node-up.sh: 7: [: -lt: unexpected operator
umount: /root/glusterfs-client: not mounted.
destr_fn: executor detach shm 0x7ffff2e76000 shmid 90
Mounting glusterfs on /root/glusterfs-client failed.
#0 [24311ms] <- syz_failure_up=0x0 errno=14  /root
execute_call 0, 478, 0, 0
execute_one loop: 0, 0, 478
#0 [24311ms] -> syz_failure_send(0x1) 3788 /root
#0 [24311ms] <- syz_failure_send=0x0 errno=14  /root
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_one inner time: 0, 558, 0
execute_one time: 3, 558
#0 [24301ms] <- syz_failure_sync=0x0 errno=14 cover=0  /root/glusterfs-client/dfs-0-118
----- executor 3 write_call_output, size 0, pid 662, write pid:663
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 478
#0 [24302ms] -> mkdir(0x20000240, 0x0) 2373 /root/glusterfs-client/dfs-0-118
cover_reset in execute_call
#0 [24302ms] <- mkdir=0xffffffffffffffff errno=107 cover=0  /root/glusterfs-client/dfs-0-118
----- executor 3 write_call_output, size 0, pid 662, write pid:663
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
#0 [24302ms] -> setxattr$trusted_overlay_nlink(0x200017c0, 0x20001800, 0x20001840, 0x16, 0x0) 3673 /root/glusterfs-client/dfs-0-118
cover_reset in execute_call
#0 [24302ms] <- setxattr$trusted_overlay_nlink=0xffffffffffffffff errno=107 cover=0  /root/glusterfs-client/dfs-0-118
----- executor 3 write_call_output, size 0, pid 662, write pid:663
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
execute_one inner time: 0, 542, 1
execute_one time: 12, 543
write_metadata
------ execute 3 reply_execute finished
time breakdown 3: 108, 557, 0
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
2023/01/25 16:52:13 for select break: 1
----- executor 2 signal number : 7
2023/01/25 16:52:13 --------- executor 3 receive reply, reply.done 1
2023/01/25 16:52:13 wait for executor 2's reply
----- executor 2 executes write_coverage_signal cov->size 1920, flag collect 0
----- executor 2 signal number : 774
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 4871, flag collect 0
----- executor 2 signal number : 816
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 1920, flag collect 0
----- executor 1 signal number : 774
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 4192, flag collect 0
----- executor 1 signal number : 475
----- executor 1 executes write_coverage_signal cov->size 1285, flag collect 0
----- executor 1 signal number : 353
----- executor 1 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 1 signal number : 611
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 1 signal number : 642
executor 1 userspace cover_cnt 8
----- executor 2 signal number : 461
----- executor 2 executes write_coverage_signal cov->size 4750, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 0 signal number : 183
----- executor 2 signal number : 968
----- executor 0 executes write_coverage_signal cov->size 2112, flag collect 0
----- executor 0 signal number : 889
----- executor 0 executes write_coverage_signal cov->size 1196, flag collect 0
----- executor 0 signal number : 165
----- executor 0 executes write_coverage_signal cov->size 4875, flag collect 0
----- executor 0 signal number : 721
----- executor 0 executes write_coverage_signal cov->size 689, flag collect 0
----- executor 0 signal number : 105
----- executor 0 executes write_coverage_signal cov->size 4750, flag collect 0
executor 2 userspace cover_cnt 6
----- executor 0 signal number : 875
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 359
----- executor 0 executes write_coverage_signal cov->size 14013, flag collect 0
----- executor 0 signal number : 1221
----- executor 0 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 0 signal number : 55
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
write_metadata
------ execute 1 reply_execute finished
time breakdown 1: 98, 567, 0
----- executor 0 signal number : 70
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 178, flag collect 0
----- executor 0 signal number : 14
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1454, flag collect 0
----- executor 0 signal number : 135
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 9
executor 0 userspace cover_cnt 17
2023/01/25 16:52:13 for select break: 1
2023/01/25 16:52:13 --------- executor 2 receive reply, reply.done 1
2023/01/25 16:52:13 wait for executor 1's reply
2023/01/25 16:52:13 for select break: 1
2023/01/25 16:52:13 --------- executor 1 receive reply, reply.done 1
2023/01/25 16:52:13 wait for executor 0's reply
2023/01/25 16:52:13 for select break: 1
2023/01/25 16:52:13 --------- executor 0 receive reply, reply.done 1
2023/01/25 16:52:13 ------ all executors finish execution
2023/01/25 16:52:13 exec time: 667
2023/01/25 16:52:13 ----- PS len: 4
2023/01/25 16:52:13 [Kernel] executor 3 has 4 replies
2023/01/25 16:52:13 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:13 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:13 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:13 fuzzer receive 0 signal and 0 cover from kernel component
2023/01/25 16:52:13 ----- [Userspace] executor 0 has 17 replies
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 183 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 889 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 165 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 721 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 105 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 875 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 359 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 1221 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 55 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 70 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 135 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/01/25 16:52:13 ----- [Userspace] executor 1 has 8 replies
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 774 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 475 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 353 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 611 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 1 receive 642 signal and 0 cover from userspace component
2023/01/25 16:52:13 ----- [Userspace] executor 2 has 6 replies
2023/01/25 16:52:13 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 2 receive 774 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 2 receive 816 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 2 receive 461 signal and 0 cover from userspace component
2023/01/25 16:52:13 ------- fuzzer executor 2 receive 968 signal and 0 cover from userspace component
write_metadata
------ execute 0 reply_execute finished
time breakdown 0: 98, 572, 0
2023/01/25 16:52:13 fsMds: [map[] map[] map[] map[]]
2023/01/25 16:52:13 result hanged=false: 
write_metadata
------ execute 2 reply_execute finished
time breakdown 2: 98, 570, 0
2023/01/25 16:52:13 before return in CmpProgs, HasNetFail: false, HasCrashFail: true
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

2023/01/25 16:52:13 prog length: 6
2023/01/25 16:52:13 prog length: 4
2023/01/25 16:52:13 HasCrashFail:true HasNetFail:false
16:52:13 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f0000000240)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000017c0)='./file0\x00', &(0x7f0000001800), &(0x7f0000001840)={'L-'}, 0x16, 0x0)
---

end of program
2023/01/25 16:52:13 wait for executor 3's reply
symc3 prog: v0[] = "./file0";
v1[] = "./file0";
v2[100];
v3[] = "{L-}";

syscall(SYS_mkdir, v0, 0);
syscall(SYS_setxattr, v1, v2, v3, 22, 0);

----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1560, prog_size 584
[24324ms] exec opts: executor=3 procid=0 threaded=1 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=584 filter=0
----- executor 1 receive testcase
executor 1: prog_data_offset 1544, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1296, prog_size 248
[24334ms] exec opts: executor=0 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=248 filter=0
remove dir: /root/glusterfs-client/dfs-0-118
opendir(/root/glusterfs-client/dfs-0-118) failedremove dir time 0
-----finish removing dir
[24324ms] exec opts: executor=1 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0
executor 2: prog_data_offset 1552, prog_size 8
[24324ms] exec opts: executor=2 procid=0 threaded=0 collide=0 cover=1 extra-cover=1 comps=0 dedup=1 timeouts=50/500000/1 prog=8 filter=0

VM DIAGNOSIS:
16:52:13  Registers:
info registers vcpu 0
RAX=ffff88811603fc48 RBX=0000000000000001 RCX=ffffffffa43a0f12 RDX=ffff88811603f648
RSI=ffff88811603fc40 RDI=ffff88811603f600 RBP=ffff88811603f635 RSP=ffff88811603f4f8
R8 =ffffffffa43a0f16 R9 =ffffffffa43a0f12 R10=000000000002e036 R11=ffff88811603f548
R12=ffff88811603f648 R13=ffff88811603f600 R14=1ffff11022c07ea9 R15=ffff88811603f634
RIP=ffffffff9ff0f0d2 RFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff70d2700 ffffffff 00c00000
GS =0000 ffff888260400000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff73b7670 CR3=000000010315a001 CR4=00770ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000ffff0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=0000000000000000ffffffffff000000 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffffffffffffffff0000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=ffffffffa2839210 RBX=ffff8881002b1700 RCX=ffffffffa2821fc6 RDX=ffff88826052e7e0
RSI=0000000000000004 RDI=000000000001d9d8 RBP=0000000000000001 RSP=ffff8881002c7e68
R8 =0000000000000001 R9 =ffffed104c0a5cfd R10=ffff88826052e7e3 R11=ffffed104c0a5cfc
R12=0000000000000001 R13=ffffffffa4005b50 R14=0000000000000000 R15=0000000000000000
RIP=ffffffffa283921b RFL=00000206 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ffff888260500000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=0000606000459017 CR3=0000000115f4c002 CR4=00770ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000ffff0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=000000000000000000ffffffffffff00 XMM05=0000000000000000000000000000000a
XMM06=00000000000013880000000000000032 XMM07=00000000000000760000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
