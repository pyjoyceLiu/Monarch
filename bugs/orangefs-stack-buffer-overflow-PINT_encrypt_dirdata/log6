- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 778 tid 778

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 778, pid 778, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 15:56:10] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 35, 0
execute_one time: 2, 35
----- executor 3 write_call_output, size 0, pid 457, write pid:457
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 1, 36, 0
execute_one time: 0, 37
2023/03/25 16:56:10 for select break: 1
2023/03/25 16:56:10 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32678, flag collect 0
time breakdown 3: 6071, 38, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 12248, flag collect 0
2023/03/25 16:56:10 for select break: 1
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
2023/03/25 16:56:10 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:56:10 for select break: 1
2023/03/25 16:56:10 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2128
time breakdown 2: 6070, 39, 0
before receive testcase: 0 0
2023/03/25 16:56:10 for select break: 1
2023/03/25 16:56:10 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:56:10 wg wait finish
2023/03/25 16:56:10 ------ all executors finish execution
time breakdown 0: 6070, 40, 0
2023/03/25 16:56:10 exec time: 6108
2023/03/25 16:56:10 ----- PS len: 4
2023/03/25 16:56:10 [CLIENT] executor 3 has 20 replies
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/25 16:56:10 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:10 [SERVER] executor 0 has 4 replies
2023/03/25 16:56:10 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 16:56:10 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:56:10 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 16:56:10 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 16:56:10 [SERVER] executor 1 has 1 replies
2023/03/25 16:56:10 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 16:56:10 [SERVER] executor 2 has 0 replies
2023/03/25 16:56:10 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:56:10 ----- no new client coverage: false, true
2023/03/25 16:56:10 mutate testcase with failures
2023/03/25 16:56:10 ----- insertCall()
2023/03/25 16:56:10 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 16:56:10 ----- insertCall()
2023/03/25 16:56:10 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 16:56:10 ----- insertCall()
2023/03/25 16:56:10 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 16:56:10 ----- mutateArg()
2023/03/25 16:56:10 ----- insertCall()
2023/03/25 16:56:10 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 16:56:10 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:56:10 disable threaded and collide
2023/03/25 16:56:10 prog length: 6
2023/03/25 16:56:10 prog length: 12
2023/03/25 16:56:10 HasCrashFail:true HasNetFail:false
16:56:10 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000100)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000140)='./binderfs2\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x2)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000180)='./binderfs2\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1672
remove dir: /root/orangefs-client/dfs-0-56
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 1: 6070, 39, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 11
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 15:56:10] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:56:10] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 15:56:10] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 15:56:10] Error: Could not initialize server subsystems
[E 03/25/2023 15:56:10] Error: Could not initialize server; aborting.
mkdir time 12169
executor 3 create dir /root/orangefs-client/dfs-0-57 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-57
receive_execute: 1, 12180
receive_execute: 2, 12179
receive_execute: 2, 12180
receive_execute: 3, 12180
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 943 tid 943

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 943, pid 943, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:56:22] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20, 0
execute_one time: 0, 20
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 15:56:22] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 15:56:22] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1948
----- completed 3
execute_call 0, 12077, 0, 1
execute_one loop: 0, 0, 12078
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1353
----- completed 4
execute_call 0, 26, 0, 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 202
----- completed 5
execute_call 0, 26, 0, 2
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11463, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 11463, flag collect 0
----- executor 3 signal number : 305
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 11471, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 11471, flag collect 0
----- executor 3 signal number : 73
----- completed 9
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 40
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 12162, 0
execute_one time: 0, 12162
2023/03/25 16:56:35 for select break: 1
2023/03/25 16:56:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12183, 12163, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 16:56:35 for select break: 1
2023/03/25 16:56:35 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 241
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 12181, 12165, 0
before receive testcase: 0 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 12182, 12164, 0
before receive testcase: 0 1
2023/03/25 16:56:35 for select break: 1
2023/03/25 16:56:35 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1620
2023/03/25 16:56:35 for select break: 1
2023/03/25 16:56:35 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:56:35 wg wait finish
2023/03/25 16:56:35 ------ all executors finish execution
2023/03/25 16:56:35 exec time: 24347
2023/03/25 16:56:35 ----- PS len: 4
2023/03/25 16:56:35 [CLIENT] executor 3 has 12 replies
2023/03/25 16:56:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 1948 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 1353 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 202 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 305 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:35 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/25 16:56:35 [SERVER] executor 2 has 0 replies
2023/03/25 16:56:35 [SERVER] executor 1 has 0 replies
2023/03/25 16:56:35 [SERVER] executor 0 has 5 replies
2023/03/25 16:56:35 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 16:56:35 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:56:35 ------- fuzzer executor 0 receive 241 signal and 0 cover from userspace component
2023/03/25 16:56:35 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 16:56:35 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
time breakdown 0: 12181, 12166, 0
before receive testcase: 0 0
2023/03/25 16:56:35 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:56:35 ----- no new client coverage: false, true
2023/03/25 16:56:35 mutate testcase with failures
2023/03/25 16:56:35 ----- mutateArg()
2023/03/25 16:56:35 ----- insertCall()
2023/03/25 16:56:35 ----- insertCall()
2023/03/25 16:56:35 ----- insertCall()
2023/03/25 16:56:35 ----- insertCall()
2023/03/25 16:56:35 ----- insertCall()
2023/03/25 16:56:35 ----- mutateArg()
2023/03/25 16:56:35 ----- mutateArg()
2023/03/25 16:56:35 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:56:35 disable threaded and collide
2023/03/25 16:56:35 prog length: 6
2023/03/25 16:56:35 prog length: 20
2023/03/25 16:56:35 HasCrashFail:true HasNetFail:false
16:56:35 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
syz_failure_sync(0x1, 0x3)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)=ANY=[@ANYBLOB="00fb7e02022c2c74ebac18f03bce919df3e8c5d10a46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0fe0dd3883793d8aa71888f0c6fd27a62923e9a2b1f951063d9ab7f46e42b4621caa879275859d0f22ccdc2c926d9b320f291c2f9234726e26ffcb"], 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000640)='./file0\x00', &(0x7f0000000780), &(0x7f0000000680), 0x2, 0x3)
stat(&(0x7f0000000740)='./file0/file0/file0\x00', &(0x7f0000001a80)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001d40)=ANY=[@ANYBLOB="041378e4d80800bef4373c2e5c3ff421112701a4ad006cdd18aec135d6dd12ac730c566e6d0ee71fd96232c70832371b7843eff3e5301704b8648e906ce60915cbdfe535cb19062b5fedc65a"], 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4512
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/orangefs-client/dfs-0-57
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 48
-----finish removing dir
mkdir time 10085
executor 3 create dir /root/orangefs-client/dfs-0-58 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-58
receive_execute: 1, 10134
receive_execute: 3, 10134
receive_execute: 3, 10134
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 10134
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 960 tid 960

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 960, pid 960, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:56:45] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 15:56:45] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 15:56:45] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2011, 0, 0
execute_one loop: 0, 0, 2011
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 2061
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 15
----- completed 7
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2057, 0
execute_one time: 0, 2057
2023/03/25 16:56:47 for select break: 1
2023/03/25 16:56:47 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 10139, 2058, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:56:47 for select break: 1
2023/03/25 16:56:47 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10137, 2060, 0
before receive testcase: 0 0
2023/03/25 16:56:47 for select break: 1
2023/03/25 16:56:47 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 15812, flag collect 0
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1618
2023/03/25 16:56:47 for select break: 1
2023/03/25 16:56:47 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:56:47 wg wait finish
2023/03/25 16:56:47 ------ all executors finish execution
2023/03/25 16:56:47 exec time: 12196
2023/03/25 16:56:47 ----- PS len: 4
2023/03/25 16:56:47 [CLIENT] executor 3 has 20 replies
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:56:47 [SERVER] executor 0 has 5 replies
2023/03/25 16:56:47 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 16:56:47 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:56:47 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 16:56:47 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 16:56:47 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 16:56:47 [SERVER] executor 1 has 0 replies
2023/03/25 16:56:47 [SERVER] executor 2 has 0 replies
2023/03/25 16:56:47 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:56:47 ----- no new client coverage: false, true
2023/03/25 16:56:47 mutate testcase with failures
2023/03/25 16:56:47 ----- mutateArg()
2023/03/25 16:56:47 ----- insertCall()
2023/03/25 16:56:47 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/25 16:56:47 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:56:47 disable threaded and collide
2023/03/25 16:56:47 prog length: 6
2023/03/25 16:56:47 prog length: 18
2023/03/25 16:56:47 HasCrashFail:true HasNetFail:false
16:56:47 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
syz_failure_sync(0x0, 0x3)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0/file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x1, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$smack_xattr_label(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000b40)='security.SMACK64IPIN\x00', &(0x7f0000000b80)={'\\'}, 0x2, 0x1)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5864
remove dir: /root/orangefs-client/dfs-0-58
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 10135, 2062, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 2: 10137, 2060, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 3, 8073
receive_execute: 1, 8073
receive_execute: 2, 8073
mkdir time 8051
executor 3 create dir /root/orangefs-client/dfs-0-59 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-59
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 8075
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6439, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6439, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4085, flag collect 0
----- executor 0 signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 1528, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2082
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 15:56:55] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10048, 0, 0
execute_one loop: 0, 0, 10048
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 307
----- completed 4
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20086, 0, 0
execute_one loop: 0, 0, 20086
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 976 tid 976

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 976, pid 976, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:57:15] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20118, 0
execute_one time: 0, 20118
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
[D 03/25/2023 15:57:15] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2028, 0, 0
execute_one loop: 0, 0, 2028
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 464, write pid:464
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 22175, 0
execute_one time: 0, 22175
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 16:57:17 for select break: 1
2023/03/25 16:57:17 --------- executor 3 receive reply, reply.done 1
2023/03/25 16:57:17 for select break: 1
2023/03/25 16:57:17 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 556
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 28
----- executor 0 executes write_coverage_signal cov->size 17949, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2838
2023/03/25 16:57:17 for select break: 1
2023/03/25 16:57:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8074, 22182, 0
before receive testcase: 0 0
time breakdown 3: 8077, 22177, 0
before receive testcase: 0 1
2023/03/25 16:57:17 for select break: 1
2023/03/25 16:57:17 --------- executor 2 receive reply, reply.done 1
2023/03/25 16:57:17 wg wait finish
2023/03/25 16:57:17 ------ all executors finish execution
2023/03/25 16:57:17 exec time: 30259
2023/03/25 16:57:17 ----- PS len: 4
2023/03/25 16:57:17 [CLIENT] executor 3 has 18 replies
2023/03/25 16:57:17 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:57:17 [SERVER] executor 0 has 9 replies
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 1404 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 556 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 28 signal and 0 cover from userspace component
2023/03/25 16:57:17 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 16:57:17 [SERVER] executor 1 has 0 replies
2023/03/25 16:57:17 [SERVER] executor 2 has 0 replies
time breakdown 2: 8076, 22186, 0
before receive testcase: 0 0
2023/03/25 16:57:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:57:17 ----- no new client coverage: false, true
2023/03/25 16:57:17 mutate testcase with failures
2023/03/25 16:57:17 ----- insertCall()
2023/03/25 16:57:17 ----- generateCall 2458 open open
2023/03/25 16:57:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:57:17 disable threaded and collide
2023/03/25 16:57:17 prog length: 6
2023/03/25 16:57:17 prog length: 4
2023/03/25 16:57:17 HasCrashFail:true HasNetFail:false
16:57:17 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
open(&(0x7f0000000000)='./file0\x00', 0x220800, 0x40)
syz_failure_sync(0x1, 0x3)
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 440
remove dir: /root/orangefs-client/dfs-0-59
time breakdown 1: 8076, 22180, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 8054
executor 3 create dir /root/orangefs-client/dfs-0-60 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-60
receive_execute: 5, 8071
receive_execute: 7, 8071
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 8071
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 8072
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 15:57:25] PVFS2 server got signal 15 (server_status_flag: 2080767)
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10047
----- executor 3 write_call_output, size 0, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10047
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 992 tid 992

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 992, pid 992, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:57:35] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2006
----- completed 3
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10084, 0
execute_one time: 1, 10084
[D 03/25/2023 15:57:35] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 466, write pid:466
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 140
----- completed 4
execute_call 0, 2046, 0, 0
execute_one loop: 0, 0, 2046
executor 3, execute_one inner time: 0, 12130, 0
execute_one time: 0, 12131
2023/03/25 16:57:37 for select break: 1
2023/03/25 16:57:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 8080, 12132, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:57:37 for select break: 1
2023/03/25 16:57:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8072, 12134, 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 15511, flag collect 0
----- executor 0 signal number : 90
executor 0 server cover_cnt 5 output_pos_value 1554
2023/03/25 16:57:37 for select break: 1
2023/03/25 16:57:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8076, 12136, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 16:57:37 for select break: 1
2023/03/25 16:57:37 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:57:37 wg wait finish
2023/03/25 16:57:37 ------ all executors finish execution
2023/03/25 16:57:37 exec time: 20208
2023/03/25 16:57:37 ----- PS len: 4
2023/03/25 16:57:37 [CLIENT] executor 3 has 4 replies
2023/03/25 16:57:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:37 fuzzer receive 2006 signal and 0 cover from executor 3
2023/03/25 16:57:37 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/25 16:57:37 [SERVER] executor 0 has 5 replies
2023/03/25 16:57:37 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 16:57:37 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:57:37 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 16:57:37 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 16:57:37 ------- fuzzer executor 0 receive 90 signal and 0 cover from userspace component
2023/03/25 16:57:37 [SERVER] executor 1 has 0 replies
2023/03/25 16:57:37 [SERVER] executor 2 has 0 replies
2023/03/25 16:57:37 fsMds: [map[] map[] map[] map[]]
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 8078, 12137, 0
before receive testcase: 0 0
2023/03/25 16:57:37 ----- no new client coverage: false, true
2023/03/25 16:57:37 mutate testcase with failures
2023/03/25 16:57:37 ----- mutateArg()
2023/03/25 16:57:37 ----- insertCall()
2023/03/25 16:57:37 ----- insertCall()
2023/03/25 16:57:37 ----- insertCall()
2023/03/25 16:57:37 ----- insertCall()
2023/03/25 16:57:37 ----- insertCall()
2023/03/25 16:57:37 ----- mutateArg()
2023/03/25 16:57:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:57:37 disable threaded and collide
2023/03/25 16:57:37 prog length: 6
2023/03/25 16:57:37 prog length: 22
2023/03/25 16:57:37 HasCrashFail:true HasNetFail:false
16:57:37 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040), 0x4, 0x3)
r0 = open(&(0x7f0000000080)='./file0\x00', 0x80, 0x44)
r1 = dup(r0)
r2 = dup(r1)
fsetxattr$security_ima(r2, &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x5, 0x1, 0x12, 0x1, 0xed, "d29a1001177e33a19d7319821fe973bb7633e17071fabd9eb5aa5eaa47e32823d58998b63865d4a04531b9b9e351be677e639824ee1b0cd36237e12df640af1a100c82713235c1f77b35cc3f97d60284c301beb38b367ed271fb38e801247de6abe91e0ba39fb8ef6d450c690eae759a95ba97b322f994b7d5c96e50962cff19d02adbd4defe239857db4ea35bc6055d7bcca6992e85f9bd6dd73c52c1d0c684ca6b74f355b541d6e8f42ad5dd8a766485590244000f45a48d9edcd5106f73b4cfbfccf5110a7d517cb4ca42c102cfca061be33d06369859dcd9c72dd2e327edee5eb31f7d3b0905ae45ca3b55"}, 0xf6, 0x3)
r3 = dup(r0)
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000200)={{0xcc, 0x5, 0x8d, 0x359, 0x1f3, 0x0, 0x4b, 0xaa55}, "bc6879c31f3c48df6675c132b9e18bdb4c919fdbb40612cc06fea00e626cbbd428641fafc03dd0b70d439fa4c8691104bb3890a01d4f1d024c966b666e00bfae80d99c15b89eb1e2f89ce374195308b9f75e2757f2da81cda3350e9ea6952a13a26b3bf0414bb85170c28aa451e0bdf4cd023e2ac4ca52467a04d85658169cb19709ddc6ed982dd1308b27be84c40a1b44e43b2e459919dc105613cc7174a5df6a7a3af9f25407231af77658fed072f7eb5a94f4e5df39c3e0354f0b1e0173", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x6df)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000900), &(0x7f0000000940)='./file0\x00', 0x8, 0x3)
dup(r2)
fstat(0xffffffffffffffff, &(0x7f0000000980))
fsetxattr$user(r1, &(0x7f0000000a00), &(0x7f0000000a40)='security.ima\x00', 0xd, 0x2)
syz_failure_sync(0x0, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000a80))
fcntl$setpipe(r3, 0x407, 0x8dc)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000b00)='security.SMACK64EXEC\x00', &(0x7f0000000b40)={'trusted.overlay.redirect\x00'}, 0x1a, 0x2)
r4 = dup(r0)
syz_failure_sync(0x1, 0x3)
fcntl$setpipe(r4, 0x407, 0x7ff)
r5 = fcntl$dupfd(r1, 0x406, r1)
fstat(r5, &(0x7f0000000b80))
write$binfmt_script(r0, &(0x7f0000000c00)={'#! ', './file0', [{0x20, 'trusted.overlay.redirect\x00'}], 0xa, "1672feaee405846305df55af3b2024dc6d26024234863d02217a536581f58bb6c960439dc442b3ecd97bd5fd479bb5148065a5889b163df5356cf95e9fd6dc975e27d951eea67ea6aaf9718d760a454e18f816ec5ffe689bd21f032eedc492f4c37adf9ca79a1c8710dbe5863e06bf7b8b141f362ab35fe610c719ab45bebcdab1b8f2"}, 0xa8)
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000cc0))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6104
remove dir: /root/orangefs-client/dfs-0-60
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 4027
executor 3 create dir /root/orangefs-client/dfs-0-61 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-61
receive_execute: 2, 4057
receive_execute: 1, 4057
receive_execute: 4, 4057
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 4057
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6435, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 3 signal number : 2059
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 803 tid 803

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 803, pid 803, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 15:57:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 468, write pid:468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
2023/03/25 16:57:41 for select break: 1
2023/03/25 16:57:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4063, 28, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1552, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 75
2023/03/25 16:57:41 for select break: 1
2023/03/25 16:57:41 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2096
time breakdown 2: 4061, 29, 0
before receive testcase: 0 0
2023/03/25 16:57:41 for select break: 1
2023/03/25 16:57:41 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 4059, 30, 0
2023/03/25 16:57:41 for select break: 1
2023/03/25 16:57:41 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:57:41 wg wait finish
2023/03/25 16:57:41 ------ all executors finish execution
2023/03/25 16:57:41 exec time: 4087
2023/03/25 16:57:41 ----- PS len: 4
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 27, 0
execute_one time: 1, 27
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 16:57:41 [SERVER] executor 0 has 4 replies
2023/03/25 16:57:41 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 16:57:41 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:57:41 [CLIENT] executor 3 has 22 replies
2023/03/25 16:57:41 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 [SERVER] executor 1 has 1 replies
before receive testcase: 0 0
2023/03/25 16:57:41 [SERVER] executor 2 has 0 replies
2023/03/25 16:57:41 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 16:57:41 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 16:57:41 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:57:41 ----- no new client coverage: false, true
2023/03/25 16:57:41 mutate testcase with failures
2023/03/25 16:57:41 ----- insertCall()
2023/03/25 16:57:41 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/25 16:57:41 ----- insertCall()
2023/03/25 16:57:41 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/25 16:57:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:57:41 disable threaded and collide
2023/03/25 16:57:41 prog length: 6
2023/03/25 16:57:41 prog length: 7
2023/03/25 16:57:41 HasCrashFail:true HasNetFail:false
16:57:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f0000000140)='./file0/../file0\x00', &(0x7f0000000180), &(0x7f00000001c0)=ANY=[@ANYBLOB='\x00'], 0x1, 0x2)
setxattr$incfs_id(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={'0000000000000000000000000000000', 0x31}, 0x20, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1152
remove dir: /root/orangefs-client/dfs-0-61
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 4058, 30, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-62 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-62
receive_execute: 1, 25
receive_execute: 1, 25
receive_execute: 2, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 2, 25
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 15:57:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:57:42] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 15:57:42] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 15:57:42] Error: Could not initialize server subsystems
[E 03/25/2023 15:57:42] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 32765, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2607
----- completed 1
execute_call 0, 4039, 0, 2
execute_one loop: 0, 0, 4041
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4042, 0, 0
execute_one loop: 0, 0, 4042
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2601
----- executor 0 executes write_coverage_signal cov->size 26173, flag collect 0
----- executor 0 signal number : 1140
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 24302, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4128
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 32765, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
----- executor 3 signal number : 312
----- completed 3
execute_call 0, 26, 0, 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 6317, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 6317, flag collect 0
----- executor 3 signal number : 255
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1011 tid 1011

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1011, pid 1011, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:57:46] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 4092, 0
execute_one time: 0, 4092
----- executor 3 write_call_output, size 32765, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 105
----- completed 6
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 470, write pid:470
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 98
----- completed 7
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
executor 3, execute_one inner time: 0, 4156, 0
execute_one time: 1, 4156
2023/03/25 16:57:46 for select break: 1
2023/03/25 16:57:46 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 27, 4158, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 30940, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 26236, flag collect 0
----- executor 1 signal number : 2667
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 172
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:57:46 for select break: 1
----- executor 0 signal number : 96
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:57:46 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 27, 4159, 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 119, flag collect 0
----- executor 1 signal number : 30
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 24428, flag collect 0
executor 1 server cover_cnt 5 output_pos_value 2978
----- executor 0 signal number : 7
executor 0 server cover_cnt 9 output_pos_value 4560
2023/03/25 16:57:46 for select break: 1
2023/03/25 16:57:46 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 4161, 0
before receive testcase: 0 0
2023/03/25 16:57:46 for select break: 1
2023/03/25 16:57:46 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:57:46 wg wait finish
2023/03/25 16:57:46 ------ all executors finish execution
2023/03/25 16:57:46 exec time: 4186
2023/03/25 16:57:46 ----- PS len: 4
2023/03/25 16:57:46 [CLIENT] executor 3 has 7 replies
2023/03/25 16:57:46 fuzzer receive 2607 signal and 0 cover from executor 3
2023/03/25 16:57:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:46 fuzzer receive 312 signal and 0 cover from executor 3
2023/03/25 16:57:46 fuzzer receive 255 signal and 0 cover from executor 3
2023/03/25 16:57:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:57:46 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/25 16:57:46 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/25 16:57:46 [SERVER] executor 0 has 9 replies
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 2601 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 1140 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 96 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 16:57:46 [SERVER] executor 2 has 0 replies
2023/03/25 16:57:46 [SERVER] executor 1 has 5 replies
2023/03/25 16:57:46 ------- fuzzer executor 1 receive 2667 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 1 receive 172 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 16:57:46 ------- fuzzer executor 1 receive 30 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 16:57:46 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:57:46 ----- no new client coverage: false, true
2023/03/25 16:57:46 mutate testcase with failures
2023/03/25 16:57:46 ----- insertCall()
2023/03/25 16:57:46 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 16:57:46 ----- insertCall()
2023/03/25 16:57:46 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/25 16:57:46 ----- insertCall()
2023/03/25 16:57:46 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/25 16:57:46 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:57:46 disable threaded and collide
2023/03/25 16:57:46 prog length: 6
2023/03/25 16:57:46 prog length: 18
2023/03/25 16:57:46 HasCrashFail:true HasNetFail:false
16:57:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
lsetxattr$security_capability(&(0x7f0000000500)='./file0\x00', &(0x7f0000000540), &(0x7f0000000580)=@v2={0x2000000, [{0x3ff, 0x6}, {0x10001, 0x1}]}, 0x14, 0x0)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
syz_failure_sync(0x1, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = dup(r1)
write$binfmt_elf64(r2, &(0x7f00000005c0)={{0x7f, 0x45, 0x4c, 0x46, 0x6, 0xf9, 0x0, 0x3, 0x7, 0x3, 0x3, 0x0, 0xa0, 0x40, 0x17c, 0x1, 0x1, 0x38, 0x1, 0x2, 0x9, 0x8}, [{0x5, 0x27, 0x8fb6, 0x5, 0x0, 0x4, 0x9, 0x1ff}], ""}, 0x1078)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f00000000c0))
pwritev(r3, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
r4 = open$dir(&(0x7f0000000440)='./file0\x00', 0x2000, 0x152)
fsetxattr$security_ima(r4, &(0x7f0000000480), &(0x7f00000004c0)=@ng={0x4, 0x11, "2d9eafbef43c11"}, 0x9, 0x3)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 26, 4161, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9280
remove dir: /root/orangefs-client/dfs-0-62
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 124
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-63 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-63
receive_execute: 2, 136
receive_execute: 9, 130
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 136
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 137
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 15:57:45] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 15:57:46] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:57:46] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10027, 0, 1
execute_one loop: 0, 0, 10028
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10049, 0, 0
execute_one loop: 0, 0, 10049
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20077, 0, 0
execute_one loop: 0, 0, 20077
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1027 tid 1027

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1027, pid 1027, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:58:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20104, 0
execute_one time: 0, 20104
[D 03/25/2023 15:58:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 2006, 0, 0
execute_one loop: 0, 0, 2006
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 472, write pid:472
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 22109, 0
execute_one time: 0, 22109
2023/03/25 16:58:08 for select break: 1
2023/03/25 16:58:08 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 16:58:08 for select break: 1
2023/03/25 16:58:08 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 939
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 16:58:08 for select break: 1
2023/03/25 16:58:08 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 139, 22112, 0
before receive testcase: 0 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 13246, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1561
2023/03/25 16:58:08 for select break: 1
2023/03/25 16:58:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:58:08 wg wait finish
2023/03/25 16:58:08 ------ all executors finish execution
2023/03/25 16:58:08 exec time: 22249
2023/03/25 16:58:08 ----- PS len: 4
2023/03/25 16:58:08 [CLIENT] executor 3 has 18 replies
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:08 [SERVER] executor 2 has 0 replies
2023/03/25 16:58:08 [SERVER] executor 1 has 0 replies
2023/03/25 16:58:08 [SERVER] executor 0 has 5 replies
2023/03/25 16:58:08 ------- fuzzer executor 0 receive 939 signal and 0 cover from userspace component
2023/03/25 16:58:08 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:58:08 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 16:58:08 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 16:58:08 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 16:58:08 fsMds: [map[] map[] map[] map[]]
time breakdown 3: 142, 22109, 0
before receive testcase: 0 0
time breakdown 0: 138, 22113, 0
before receive testcase: 0 0
2023/03/25 16:58:08 ----- no new client coverage: false, true
2023/03/25 16:58:08 mutate testcase with failures
2023/03/25 16:58:08 ----- insertCall()
2023/03/25 16:58:08 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/25 16:58:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:58:08 disable threaded and collide
2023/03/25 16:58:08 prog length: 6
2023/03/25 16:58:08 prog length: 20
2023/03/25 16:58:08 HasCrashFail:true HasNetFail:false
16:58:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_opaque(&(0x7f0000002e00)='./file0/file0\x00', &(0x7f0000002e40), &(0x7f0000002e80), 0x2, 0x1)
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4608
remove dir: /root/orangefs-client/dfs-0-63
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 138, 22111, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 14
-----finish removing dir
receive_execute: 0, 12194
mkdir time 12178
executor 3 create dir /root/orangefs-client/dfs-0-64 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-64
receive_execute: 2, 12194
receive_execute: 2, 12194
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 12195
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 1 write_server_output
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 823 tid 823

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 823, pid 823, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 15:58:20] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 50, 0
execute_one time: 2, 50
2023/03/25 16:58:20 for select break: 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 write_call_output, size 0, pid 474, write pid:474
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 3, execute_one inner time: 0, 50, 0
execute_one time: 0, 50
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 12199, 64, 0
2023/03/25 16:58:20 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 13788, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 16:58:20 for select break: 1
2023/03/25 16:58:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12196, 67, 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 4119, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3753, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
executor 0 server cover_cnt 4 output_pos_value 2126
2023/03/25 16:58:20 for select break: 1
2023/03/25 16:58:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12194, 68, 0
before receive testcase: 0 0
2023/03/25 16:58:20 for select break: 1
2023/03/25 16:58:20 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:58:20 wg wait finish
2023/03/25 16:58:20 ------ all executors finish execution
2023/03/25 16:58:20 exec time: 12263
2023/03/25 16:58:20 ----- PS len: 4
2023/03/25 16:58:20 [CLIENT] executor 3 has 20 replies
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:58:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:20 [SERVER] executor 0 has 4 replies
2023/03/25 16:58:20 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 16:58:20 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:58:20 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 16:58:20 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 12196, 69, 0
before receive testcase: 0 0
2023/03/25 16:58:20 [SERVER] executor 1 has 1 replies
2023/03/25 16:58:20 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/25 16:58:20 [SERVER] executor 2 has 0 replies
2023/03/25 16:58:20 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:58:20 ----- no new client coverage: false, true
2023/03/25 16:58:20 mutate testcase with failures
2023/03/25 16:58:20 ----- mutateArg()
2023/03/25 16:58:20 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:58:20 disable threaded and collide
2023/03/25 16:58:20 prog length: 6
2023/03/25 16:58:20 prog length: 8
2023/03/25 16:58:20 HasCrashFail:true HasNetFail:false
16:58:20 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'L+', 0x8000000000002}, 0x16, 0x0)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 992
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/orangefs-client/dfs-0-64
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 16
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 15:58:20] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:58:20] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 15:58:20] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 15:58:20] Error: Could not initialize server subsystems
[E 03/25/2023 15:58:20] Error: Could not initialize server; aborting.
receive_execute: 2, 8067
receive_execute: 1, 8067
mkdir time 8051
executor 3 create dir /root/orangefs-client/dfs-0-65 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-65
receive_execute: 3, 8067
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 8069
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3037
----- completed 1
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11466, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 11466, flag collect 0
----- executor 3 signal number : 308
----- completed 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 35
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2668
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1244
----- executor 0 executes write_coverage_signal cov->size 4668, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 5002, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4306
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1045 tid 1045

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1045, pid 1045, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:58:28] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
[E 03/25/2023 15:58:28] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 15:58:28] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 48, 0
execute_one time: 1, 48
----- executor 3 write_call_output, size 0, pid 476, write pid:476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 0, 47, 0
execute_one time: 0, 47
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 8072, 48, 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 223
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 144
----- executor 0 executes write_coverage_signal cov->size 4719, flag collect 0
time breakdown 1: 8068, 51, 0
before receive testcase: 0 1
----- executor 0 signal number : 52
----- executor 0 executes write_coverage_signal cov->size 5074, flag collect 0
----- executor 0 signal number : 12
executor 0 server cover_cnt 8 output_pos_value 4749
time breakdown 2: 8070, 51, 0
before receive testcase: 0 1
before receive testcase: 0 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
2023/03/25 16:58:28 for select break: 1
2023/03/25 16:58:28 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:58:28 for select break: 1
2023/03/25 16:58:28 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:58:28 for select break: 1
2023/03/25 16:58:28 --------- executor 2 receive reply, reply.done 1
2023/03/25 16:58:28 for select break: 1
2023/03/25 16:58:28 --------- executor 3 receive reply, reply.done 1
2023/03/25 16:58:28 wg wait finish
2023/03/25 16:58:28 ------ all executors finish execution
2023/03/25 16:58:28 exec time: 8120
2023/03/25 16:58:28 ----- PS len: 4
2023/03/25 16:58:28 [CLIENT] executor 3 has 8 replies
2023/03/25 16:58:28 fuzzer receive 3037 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 308 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:28 [SERVER] executor 0 has 8 replies
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 2668 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 1244 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 223 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 144 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 52 signal and 0 cover from userspace component
2023/03/25 16:58:28 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 16:58:28 [SERVER] executor 1 has 0 replies
2023/03/25 16:58:28 [SERVER] executor 2 has 0 replies
2023/03/25 16:58:28 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:58:28 ----- no new client coverage: false, true
2023/03/25 16:58:28 mutate testcase with failures
2023/03/25 16:58:28 ----- mutateArg()
2023/03/25 16:58:28 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:58:28 disable threaded and collide
2023/03/25 16:58:28 prog length: 6
2023/03/25 16:58:28 prog length: 8
2023/03/25 16:58:28 HasCrashFail:true HasNetFail:false
16:58:28 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'L-'}, 0x16, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 992
remove dir: /root/orangefs-client/dfs-0-65
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 0: 8069, 53, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
-----executor 0 collect shmids 1
----- directly resend shmid 1
remove dir time 2056
-----finish removing dir
mkdir time 4066
executor 3 create dir /root/orangefs-client/dfs-0-66 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-66
receive_execute: 4, 6123
receive_execute: 2, 6123
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 6123
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 6122
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 32765, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2687
----- completed 1
execute_call 0, 4043, 0, 2
execute_one loop: 0, 0, 4045
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4046, 0, 0
execute_one loop: 0, 0, 4046
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11466, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 11466, flag collect 0
----- executor 3 signal number : 690
----- completed 4
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 31
----- completed 7
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 841 tid 841

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 841, pid 841, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 15:58:38] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 478, write pid:478
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 4073, 0
execute_one time: 1, 4073
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
time breakdown 3: 6128, 4075, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 16:58:38 for select break: 1
2023/03/25 16:58:38 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 2729
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 4074, 0
execute_one time: 0, 4074
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 16:58:38 for select break: 1
2023/03/25 16:58:38 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 6126, 4077, 0
----- executor 0 signal number : 1243
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:58:38 for select break: 1
2023/03/25 16:58:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6127, 4077, 0
before receive testcase: 0 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 26825, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4359
2023/03/25 16:58:38 for select break: 1
2023/03/25 16:58:38 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:58:38 wg wait finish
2023/03/25 16:58:38 ------ all executors finish execution
2023/03/25 16:58:38 exec time: 10202
2023/03/25 16:58:38 ----- PS len: 4
2023/03/25 16:58:38 [CLIENT] executor 3 has 8 replies
2023/03/25 16:58:38 fuzzer receive 2687 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 690 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/25 16:58:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:58:38 [SERVER] executor 0 has 4 replies
2023/03/25 16:58:38 ------- fuzzer executor 0 receive 2729 signal and 0 cover from userspace component
2023/03/25 16:58:38 ------- fuzzer executor 0 receive 1243 signal and 0 cover from userspace component
2023/03/25 16:58:38 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 16:58:38 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 6125, 4079, 0
2023/03/25 16:58:38 [SERVER] executor 2 has 0 replies
2023/03/25 16:58:38 [SERVER] executor 1 has 1 replies
2023/03/25 16:58:38 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 16:58:38 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:58:38 ----- no new client coverage: false, true
2023/03/25 16:58:38 mutate testcase with failures
before receive testcase: 0 0
2023/03/25 16:58:38 ----- insertCall()
2023/03/25 16:58:38 ----- insertCall()
2023/03/25 16:58:38 ----- insertCall()
2023/03/25 16:58:38 ----- mutateArg()
2023/03/25 16:58:38 ----- insertCall()
2023/03/25 16:58:38 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:58:38 disable threaded and collide
2023/03/25 16:58:38 prog length: 6
2023/03/25 16:58:38 prog length: 20
2023/03/25 16:58:38 HasCrashFail:true HasNetFail:false
16:58:38 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001d40)=ANY=[@ANYBLOB="2321202e2f66696c6530202d20ea7d2e3a5b240ac902cf0800b82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5386774ea77c17b338a56539300200000000000000cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acb451e59eea7ae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d6a9976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc301d2ba246dc5c508e868c5ecce53eb31b0e11a222bfdf356603cc104644fe6590b678443e49ddd58d0eeb1277cd3954e1a626d06c7ef47ef275900"/264], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=ANY=[@ANYBLOB="e8121c2e5c3ff421110000000000000000"], 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4456
remove dir: /root/orangefs-client/dfs-0-66
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 40
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 15:58:38] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:58:39] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 15:58:39] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 15:58:39] Error: Could not initialize server subsystems
[E 03/25/2023 15:58:39] Error: Could not initialize server; aborting.
receive_execute: 2, 2111
mkdir time 2070
executor 3 create dir /root/orangefs-client/dfs-0-67 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-67
receive_execute: 4, 2111
receive_execute: 3, 2110
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 2111
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
[E 03/25/2023 15:58:41] PVFS2 server got signal 15 (server_status_flag: 2080767)
[E 03/25/2023 15:58:41] PVFS2 server: signal 6
[E 03/25/2023 15:58:41] before print stack trace
[E 03/25/2023 15:58:41] before print stack trace
[E 03/25/2023 15:58:41] after backtrace
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb) [0x7ffff6f8318b]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0) [0x7ffff714f3c0]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb) [0x7ffff6f8318b]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libc.so.6(abort+0x12b) [0x7ffff6f62859]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libc.so.6(+0x25729) [0x7ffff6f62729]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libc.so.6(+0x36f36) [0x7ffff6f73f36]
[E 03/25/2023 15:58:41] [bt] /opt/orangefs/sbin/pvfs2-server(+0x34e937) [0x5555558a2937]
[E 03/25/2023 15:58:41] [bt] /opt/orangefs/sbin/pvfs2-server(+0x3577b8) [0x5555558ab7b8]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libpthread.so.0(+0x9609) [0x7ffff7143609]
[E 03/25/2023 15:58:41] [bt] /lib/x86_64-linux-gnu/libc.so.6(clone+0x43) [0x7ffff705f103]
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10043, 0, 0
execute_one loop: 0, 0, 10043
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1999
----- completed 5
execute_call 0, 10027, 0, 2
execute_one loop: 0, 0, 10029
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20072, 0, 0
execute_one loop: 0, 0, 20072
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1064 tid 1064

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1064, pid 1064, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:59:01] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20110, 0
execute_one time: 0, 20110
[D 03/25/2023 15:59:01] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 466
----- completed 9
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 17
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 18
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 18
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 18
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 18
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 480, write pid:480
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 22148, 0
execute_one time: 1, 22148
2023/03/25 16:59:03 for select break: 1
2023/03/25 16:59:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2116, 22150, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 16:59:03 for select break: 1
2023/03/25 16:59:03 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1056
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:59:03 for select break: 1
2023/03/25 16:59:03 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 232
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 2113, 22152, 0
----- executor 0 signal number : 314
----- executor 0 executes write_coverage_signal cov->size 15720, flag collect 0
----- executor 0 signal number : 100
executor 0 server cover_cnt 5 output_pos_value 1723
time breakdown 1: 2115, 22150, 0
before receive testcase: 0 0
2023/03/25 16:59:03 for select break: 1
2023/03/25 16:59:03 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:59:03 wg wait finish
2023/03/25 16:59:03 ------ all executors finish execution
2023/03/25 16:59:03 exec time: 24264
2023/03/25 16:59:03 ----- PS len: 4
2023/03/25 16:59:03 [CLIENT] executor 3 has 20 replies
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 1999 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 466 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:03 [SERVER] executor 0 has 5 replies
2023/03/25 16:59:03 ------- fuzzer executor 0 receive 1056 signal and 0 cover from userspace component
2023/03/25 16:59:03 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:59:03 ------- fuzzer executor 0 receive 232 signal and 0 cover from userspace component
2023/03/25 16:59:03 ------- fuzzer executor 0 receive 314 signal and 0 cover from userspace component
2023/03/25 16:59:03 ------- fuzzer executor 0 receive 100 signal and 0 cover from userspace component
time breakdown 0: 2113, 22152, 0
2023/03/25 16:59:03 [SERVER] executor 1 has 0 replies
2023/03/25 16:59:03 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 16:59:03 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 16:59:03 ----- no new client coverage: false, true
2023/03/25 16:59:03 mutate testcase with failures
2023/03/25 16:59:03 ----- insertCall()
2023/03/25 16:59:03 ----- generateCall 3662 setxattr setxattr
2023/03/25 16:59:03 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:59:03 disable threaded and collide
2023/03/25 16:59:03 prog length: 6
2023/03/25 16:59:03 prog length: 18
2023/03/25 16:59:03 HasCrashFail:true HasNetFail:false
16:59:03 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
setxattr(&(0x7f0000000b00)='./file1\x00', &(0x7f0000000b40)=@known='trusted.overlay.opaque\x00', &(0x7f0000000b80)='system.posix_acl_access\x00', 0x18, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5832
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/orangefs-client/dfs-0-67
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 16
-----finish removing dir
receive_execute: 2, 2042
receive_execute: 4, 2042
receive_execute: 1, 2043
mkdir time 2026
executor 3 create dir /root/orangefs-client/dfs-0-68 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-68
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 2043
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16337, flag collect 0
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 6112, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2096
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 15:59:05] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10036, 0, 0
execute_one loop: 0, 0, 10036
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 410
----- completed 7
execute_call 0, 10025, 0, 11
execute_one loop: 0, 0, 10036
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20072, 0, 0
execute_one loop: 0, 0, 20072
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1080 tid 1080

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1080, pid 1080, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:59:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20121, 0
execute_one time: 1, 20121
[D 03/25/2023 15:59:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2016, 0, 0
execute_one loop: 0, 0, 2016
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 12
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 482, write pid:482
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 22150, 1
execute_one time: 1, 22151
time breakdown 3: 2047, 22152, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 234
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2046, 22154, 0
before receive testcase: 0 1
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 2 receive reply, reply.done 1
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 3 receive reply, reply.done 1
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:59:27 wg wait finish
2023/03/25 16:59:27 ------ all executors finish execution
2023/03/25 16:59:27 exec time: 24199
2023/03/25 16:59:27 ----- PS len: 4
2023/03/25 16:59:27 [CLIENT] executor 3 has 18 replies
2023/03/25 16:59:27 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 [SERVER] executor 1 has 0 replies
2023/03/25 16:59:27 [SERVER] executor 0 has 9 replies
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 234 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 410 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 [SERVER] executor 2 has 0 replies
2023/03/25 16:59:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:59:27 ----- no new client coverage: false, true
2023/03/25 16:59:27 mutate testcase with failures
2023/03/25 16:59:27 ----- insertCall()
2023/03/25 16:59:27 ----- generateCall 516 getxattr getxattr
2023/03/25 16:59:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:59:27 disable threaded and collide
2023/03/25 16:59:27 prog length: 6
2023/03/25 16:59:27 prog length: 18
2023/03/25 16:59:27 HasCrashFail:true HasNetFail:false
16:59:27 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
syz_failure_sync(0x0, 0x3)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
getxattr(&(0x7f0000000880)='./file0/file0\x00', &(0x7f00000008c0)=@random={'osx.', ')\xec\x00'}, &(0x7f0000000900)=""/101, 0x65)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4232
remove dir: /root/orangefs-client/dfs-0-68
time breakdown 2: 2044, 22154, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 18002, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 2526
time breakdown 0: 2044, 22156, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-69 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-69
receive_execute: 1, 40
receive_execute: 3, 40
receive_execute: 3, 40
receive_execute: 4, 40
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 18
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 861 tid 861

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 861, pid 861, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 15:59:27] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 484, write pid:484
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 43, 0
execute_one time: 1, 43
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 44, 44, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1435
----- executor 0 executes write_coverage_signal cov->size 16526, flag collect 0
2023/03/25 16:59:27 for select break: 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 44, 0
execute_one time: 0, 44
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 16:59:27 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 4691, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4497, flag collect 0
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 75
time breakdown 2: 43, 45, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 2128
2023/03/25 16:59:27 for select break: 1
2023/03/25 16:59:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:59:27 wg wait finish
2023/03/25 16:59:27 ------ all executors finish execution
2023/03/25 16:59:27 exec time: 86
2023/03/25 16:59:27 ----- PS len: 4
2023/03/25 16:59:27 [CLIENT] executor 3 has 18 replies
2023/03/25 16:59:27 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:27 [SERVER] executor 0 has 4 replies
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 1435 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 16:59:27 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 41, 47, 0
before receive testcase: 0 0
2023/03/25 16:59:27 [SERVER] executor 1 has 1 replies
2023/03/25 16:59:27 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 16:59:27 [SERVER] executor 2 has 0 replies
2023/03/25 16:59:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:59:27 ----- no new client coverage: false, true
2023/03/25 16:59:27 mutate testcase with failures
2023/03/25 16:59:27 ----- insertCall()
2023/03/25 16:59:27 ----- generateCall 248 fstat fstat
2023/03/25 16:59:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:59:27 disable threaded and collide
2023/03/25 16:59:27 prog length: 6
2023/03/25 16:59:27 prog length: 20
2023/03/25 16:59:27 HasCrashFail:true HasNetFail:false
16:59:27 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
fstat(r3, &(0x7f0000002e00))
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
syz_failure_sync(0x0, 0x3)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=@random={'system.', 'security.selinux\x00'}, &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1576, prog_size 4416
remove dir: /root/orangefs-client/dfs-0-69
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 43, 45, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 13
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 15:59:27] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:59:27] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 15:59:27] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 15:59:27] Error: Could not initialize server subsystems
[E 03/25/2023 15:59:27] Error: Could not initialize server; aborting.
mkdir time 10066
executor 3 create dir /root/orangefs-client/dfs-0-70 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-70
receive_execute: 2, 10080
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 10079
receive_execute: 1, 10080
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 3, 10079
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 876 tid 876

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 876, pid 876, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 15:59:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 42, 0
execute_one time: 0, 42
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:59:37 for select break: 1
2023/03/25 16:59:37 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32672, flag collect 0
executor 2 write_server_output
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 12248, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3524, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3300, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2124
2023/03/25 16:59:37 for select break: 1
2023/03/25 16:59:37 --------- executor 1 receive reply, reply.done 1
2023/03/25 16:59:37 for select break: 1
2023/03/25 16:59:37 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 10081, 45, 0
before receive testcase: 0 0
2023/03/25 16:59:37 for select break: 1
2023/03/25 16:59:37 --------- executor 2 receive reply, reply.done 1
2023/03/25 16:59:37 wg wait finish
2023/03/25 16:59:37 ------ all executors finish execution
2023/03/25 16:59:37 exec time: 10125
2023/03/25 16:59:37 ----- PS len: 4
2023/03/25 16:59:37 [CLIENT] executor 3 has 20 replies
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:37 [SERVER] executor 0 has 4 replies
2023/03/25 16:59:37 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 16:59:37 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:59:37 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 16:59:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 10082, 46, 0
2023/03/25 16:59:37 [SERVER] executor 1 has 1 replies
2023/03/25 16:59:37 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
----- executor 3 write_call_output, size 0, pid 485, write pid:485
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 0, 41, 0
execute_one time: 1, 41
time breakdown 3: 10082, 43, 0
2023/03/25 16:59:37 [SERVER] executor 2 has 0 replies
before receive testcase: 0 1
2023/03/25 16:59:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:59:37 ----- no new client coverage: false, true
2023/03/25 16:59:37 mutate testcase with failures
2023/03/25 16:59:37 ----- insertCall()
2023/03/25 16:59:37 ----- insertCall()
2023/03/25 16:59:37 ----- mutateArg()
2023/03/25 16:59:37 ----- mutateArg()
2023/03/25 16:59:37 ----- insertCall()
2023/03/25 16:59:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:59:37 disable threaded and collide
2023/03/25 16:59:37 prog length: 6
2023/03/25 16:59:37 prog length: 21
2023/03/25 16:59:37 HasCrashFail:true HasNetFail:false
16:59:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f0000001bc0)=ANY=[@ANYBLOB="c4011b05a9030000550000003f00000065020000a00100000000000000000000e7e160ac04e696b12e14a0bdfb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522d0b0e62f1cf4a4b5e80ba2e5fef598772dbae4a2d22d0e7957fef26ac8b496066da21753b38caeedaee7243405e5cc10c7abf735826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f511dc2a3555874260458db55a9905bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3ebdad7379996b947df358f7259134c0bc64d01a6ceaec3d44b1134f3a006bd9b01ff35b1582f50185c40c0183ed95934352fa0b9441e9c73fa3e865944f4be8ec9f903135b74b451da313b0ace528ebd73db6a18925c993c377b78d5a3cbacb2c4b878a0b8fcb93e9f882511d9c531f3374ee678bf6d19bf8b2ca8416524663a75af1d691225559f948f736098bac59895e7aa91c4b084ca1faa29a7c1e8faa171b1ee9a611fe8a836a54aa4fa4deee0940498c12487740a40d5c59b0d7beee1238220d0ec6af1b788c2b37640a148ffc15ed250e318952d558f596ffdba908b4f9576e2d8bfd0a9d6e8db60f80673b02cf1145cb9dc562b7db4b695b558884"], 0x9f6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x579d83, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x521040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6200
remove dir: /root/orangefs-client/dfs-0-70
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 10082, 44, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-71 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-71
receive_execute: 3, 22
receive_execute: 2, 22
receive_execute: 4, 22
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1, execute_one inner time: 0, 0, 0
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
execute_one time: 2, 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1528, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2081
receive_execute: 0, 22
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1099 tid 1099

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1099, pid 1099, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 15:59:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 29, 0
execute_one time: 0, 29
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 11, 0, 7
execute_one loop: 0, 0, 18
cover_reset in execute_call
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 15:59:37] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 15:59:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 15:59:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 15:59:37] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 15:59:37] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 15:59:37] Error: Could not initialize server subsystems
[E 03/25/2023 15:59:37] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2009, 0, 0
execute_one loop: 0, 0, 2009
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 15
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 487, write pid:487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2070, 0
execute_one time: 0, 2071
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 16:59:39 for select break: 1
2023/03/25 16:59:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 26, 2071, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 31436, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 16:59:39 for select break: 1
2023/03/25 16:59:39 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 22, 2073, 0
2023/03/25 16:59:39 for select break: 1
----- executor 1 signal number : 2667
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 178, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2981
2023/03/25 16:59:39 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 2073, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/25 16:59:39 for select break: 1
2023/03/25 16:59:39 --------- executor 0 receive reply, reply.done 1
2023/03/25 16:59:39 wg wait finish
2023/03/25 16:59:39 ------ all executors finish execution
2023/03/25 16:59:39 exec time: 2100
2023/03/25 16:59:39 ----- PS len: 4
2023/03/25 16:59:39 [CLIENT] executor 3 has 21 replies
2023/03/25 16:59:39 [SERVER] executor 0 has 9 replies
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 16:59:39 [SERVER] executor 2 has 0 replies
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 16:59:39 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 [SERVER] executor 1 has 5 replies
2023/03/25 16:59:39 ------- fuzzer executor 1 receive 2667 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 920 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 16:59:39 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 16:59:39 fsMds: [map[] map[] map[] map[]]
2023/03/25 16:59:39 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 16:59:39 mutate testcase with failures
2023/03/25 16:59:39 ----- insertCall()
2023/03/25 16:59:39 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/25 16:59:39 HasCrashFail: true, .HasNetFail: false
2023/03/25 16:59:39 disable threaded and collide
2023/03/25 16:59:39 prog length: 6
2023/03/25 16:59:39 prog length: 19
2023/03/25 16:59:39 HasCrashFail:true HasNetFail:false
16:59:39 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
stat(&(0x7f0000000b80)='./file0/file0\x00', &(0x7f0000000bc0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$system_posix_acl(&(0x7f0000000b00)='./file0/file1\x00', &(0x7f0000000b40)='system.posix_acl_access\x00', &(0x7f0000000c40)={{}, {0x1, 0x7}, [{0x2, 0x6, r0}, {0x2, 0x4, 0xee00}], {}, [{0x8, 0x6}, {0x8, 0x3, 0xffffffffffffffff}, {0x8, 0x2}, {0x8, 0x0, 0xffffffffffffffff}, {0x8, 0x1}, {0x8, 0x1, 0xee01}, {0x8, 0x2, 0xffffffffffffffff}], {0x10, 0x2}, {0x20, 0x3}}, 0x6c, 0x0)
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r1}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r2 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r2, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 7560
remove dir: /root/orangefs-client/dfs-0-71
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 signal number : 920
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 27
----- executor 0 executes write_coverage_signal cov->size 14885, flag collect 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 3202
time breakdown 0: 24, 2077, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 16
-----finish removing dir
mkdir time 8059
executor 3 create dir /root/orangefs-client/dfs-0-72 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-72
receive_execute: 2, 8075
receive_execute: 5, 8075
receive_execute: 6, 8075
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
receive_execute: 8, 8076
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 15:59:47] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10027, 0, 0
execute_one loop: 0, 0, 10027
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10049, 0, 0
execute_one loop: 0, 0, 10049
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10030, 0, 0
execute_one loop: 0, 0, 10030
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30106, 0, 0
execute_one loop: 0, 0, 30106
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1114 tid 1114

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1114, pid 1114, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:00:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30131, 0
execute_one time: 1, 30131
----- executor 3 write_call_output, size 32765, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 1966
----- completed 5
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
[D 03/25/2023 16:00:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2014, 0, 0
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 479
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 489, write pid:489
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 32173, 0
execute_one time: 1, 32173
2023/03/25 17:00:20 for select break: 1
2023/03/25 17:00:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 8084, 32176, 0
executor 2 write_server_output
before receive testcase: 0 0
2023/03/25 17:00:20 for select break: 1
2023/03/25 17:00:20 for select break: 1
2023/03/25 17:00:20 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:00:20 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 8081, 32178, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
time breakdown 1: 8080, 32178, 0
2023/03/25 17:00:20 for select break: 1
2023/03/25 17:00:20 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:00:20 wg wait finish
2023/03/25 17:00:20 ------ all executors finish execution
2023/03/25 17:00:20 exec time: 40255
2023/03/25 17:00:20 ----- PS len: 4
2023/03/25 17:00:20 [CLIENT] executor 3 has 19 replies
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 1966 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
----- executor 0 signal number : 925
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 244
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 274
----- executor 0 executes write_coverage_signal cov->size 17739, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1547
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:20 [SERVER] executor 0 has 5 replies
2023/03/25 17:00:20 ------- fuzzer executor 0 receive 925 signal and 0 cover from userspace component
2023/03/25 17:00:20 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:00:20 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 17:00:20 ------- fuzzer executor 0 receive 274 signal and 0 cover from userspace component
2023/03/25 17:00:20 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 17:00:20 [SERVER] executor 1 has 0 replies
2023/03/25 17:00:20 [SERVER] executor 2 has 0 replies
2023/03/25 17:00:20 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:00:20 ----- no new client coverage: false, true
2023/03/25 17:00:20 mutate testcase with failures
2023/03/25 17:00:20 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:00:20 disable threaded and collide
2023/03/25 17:00:20 prog length: 6
2023/03/25 17:00:20 prog length: 17
2023/03/25 17:00:20 HasCrashFail:true HasNetFail:false
17:00:20 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)=ANY=[@ANYBLOB='o%x.\x00'], 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5496
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/orangefs-client/dfs-0-72
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 8077, 32180, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 34
-----finish removing dir
mkdir time 4023
executor 3 create dir /root/orangefs-client/dfs-0-73 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-73
receive_execute: 3, 4056
receive_execute: 3, 4057
receive_execute: 1, 4057
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 4057
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12276, flag collect 0
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 4584, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2092
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:00:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10039, 0, 0
execute_one loop: 0, 0, 10039
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 410
----- completed 6
execute_call 0, 10046, 0, 2
execute_one loop: 0, 0, 10048
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 25
----- completed 7
execute_call 0, 10068, 0, 1
execute_one loop: 0, 0, 10069
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30157, 0, 0
execute_one loop: 0, 0, 30157
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1132 tid 1132

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1132, pid 1132, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:00:54] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30191, 0
execute_one time: 0, 30191
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
[D 03/25/2023 16:00:54] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 10
----- completed 11
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 12
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 13132, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 13132, flag collect 0
----- executor 3 signal number : 33
----- completed 14
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 491, write pid:491
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 32245, 0
execute_one time: 1, 32245
2023/03/25 17:00:56 for select break: 1
2023/03/25 17:00:56 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 4061, 32248, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:00:56 for select break: 1
2023/03/25 17:00:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4060, 32248, 0
before receive testcase: 0 0
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:00:56 for select break: 1
2023/03/25 17:00:56 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 4059, 32249, 0
before receive testcase: 0 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 17205, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2696
2023/03/25 17:00:56 for select break: 1
2023/03/25 17:00:56 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:00:56 wg wait finish
2023/03/25 17:00:56 ------ all executors finish execution
2023/03/25 17:00:56 exec time: 36309
2023/03/25 17:00:56 ----- PS len: 4
2023/03/25 17:00:56 [CLIENT] executor 3 has 17 replies
2023/03/25 17:00:56 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 410 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 4058, 32251, 0
2023/03/25 17:00:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:00:56 fuzzer receive 16 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 17:00:56 [SERVER] executor 0 has 9 replies
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:00:56 [SERVER] executor 1 has 0 replies
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 17:00:56 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 17:00:56 [SERVER] executor 2 has 0 replies
2023/03/25 17:00:56 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:00:56 ----- no new client coverage: false, true
2023/03/25 17:00:56 mutate testcase with failures
2023/03/25 17:00:56 ----- mutateArg()
2023/03/25 17:00:56 ----- insertCall()
2023/03/25 17:00:56 ----- insertCall()
2023/03/25 17:00:56 ----- mutateArg()
2023/03/25 17:00:56 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:00:56 disable threaded and collide
2023/03/25 17:00:56 prog length: 6
2023/03/25 17:00:56 prog length: 21
2023/03/25 17:00:56 HasCrashFail:true HasNetFail:false
17:00:56 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x400082, 0x3)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f0000000300)=ANY=[@ANYBLOB="c4011b054a010000c60200003d00000065020000a10100000000000000000000e7e160ac04e696b12e14a0bddb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522a2e5fef598772dbae4a2d22d087957fef26ac8b496066da21753b38caeedaee7243405e5cc10c7abf735826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f511dc87eb74e54260458db55a9905bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3e65700"/246], 0xf6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
syz_failure_sync(0x0, 0x3)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
syz_failure_sync(0x1, 0x3)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x501040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3640
remove dir: /root/orangefs-client/dfs-0-73
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 14
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-74 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-74
receive_execute: 5, 29
receive_execute: 5, 29
receive_execute: 2, 29
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16369, flag collect 0
----- executor 0 signal number : 1419
----- executor 0 executes write_coverage_signal cov->size 6112, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1556, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2098
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:00:56] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 10055, 0, 0
execute_one loop: 0, 0, 10055
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20093, 0, 0
execute_one loop: 0, 0, 20096
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1148 tid 1148

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1148, pid 1148, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:01:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 494, write pid:494
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20121, 0
execute_one time: 0, 20121
2023/03/25 17:01:16 for select break: 1
2023/03/25 17:01:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 20122, 0
before receive testcase: 0 0
executor 2 write_server_output
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20121, 0
execute_one time: 1, 20121
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 218
----- executor 0 executes write_coverage_signal cov->size 6136, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 1607, flag collect 0
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 1614, flag collect 0
----- executor 0 signal number : 8
executor 0 server cover_cnt 8 output_pos_value 2355
time breakdown 0: 31, 20124, 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 34, 20125, 0
before receive testcase: 0 1
2023/03/25 17:01:16 for select break: 1
2023/03/25 17:01:16 for select break: 1
2023/03/25 17:01:16 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:01:16 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:01:16 for select break: 1
2023/03/25 17:01:16 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:01:16 wg wait finish
2023/03/25 17:01:16 ------ all executors finish execution
2023/03/25 17:01:16 exec time: 20156
2023/03/25 17:01:16 ----- PS len: 4
2023/03/25 17:01:16 [CLIENT] executor 3 has 21 replies
2023/03/25 17:01:16 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:01:16 [SERVER] executor 1 has 0 replies
2023/03/25 17:01:16 [SERVER] executor 0 has 8 replies
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 1419 signal and 0 cover from userspace component
2023/03/25 17:01:16 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 218 signal and 0 cover from userspace component
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 17:01:16 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 16 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:01:16 [SERVER] executor 2 has 0 replies
2023/03/25 17:01:16 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:01:16 ----- no new client coverage: false, true
2023/03/25 17:01:16 mutate testcase with failures
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
time breakdown 2: 34, 20126, 0
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 248 fstat fstat
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 17:01:16 ----- mutateArg()
2023/03/25 17:01:16 ----- mutateArg()
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 2723 pread64 pread64
2023/03/25 17:01:16 ----- insertCall()
2023/03/25 17:01:16 ----- generateCall 251 ftruncate ftruncate
2023/03/25 17:01:16 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:01:16 disable threaded and collide
2023/03/25 17:01:16 prog length: 6
2023/03/25 17:01:16 prog length: 16
2023/03/25 17:01:16 HasCrashFail:true HasNetFail:false
17:01:16 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000240))
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000200)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000002c0)='./binderfs2\x00', 0x1ff)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
ftruncate(r0, 0x1)
write$binfmt_script(r0, &(0x7f0000000040)=ANY=[@ANYBLOB="2321202e2f66696c6530205e2c5c5cc4212a235e2927217ba62d202e2f62696e6465726673002027115e5c20552d202d20552d2098263a0afa82203f67251d56"], 0x40)
fcntl$addseals(r0, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'L-'}, 0x16, 0x0)
r1 = open$dir(&(0x7f00000001c0)='./file0/file0\x00', 0x2201, 0x37962d00296a7e2b)
pread64(r1, &(0x7f0000000400)=""/127, 0x7f, 0x8)
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000580)=ANY=[@ANYBLOB="73656375726974792e55976fd53391f54785696d286196160a4a4440e8b597db5fbef7bda9ec34d874a070043667d68501000000000000000b0a568c7929c8dea7e701a88300040000d57e3f0a9981e27dc810e7f4e5a9b34097a48bfc38f7f35691beca8b455007000000000000000000000000007b20b35c7bc5be2e4d6c281d106bc0f4040fabbd91163aebc763cd37827a7f3148684b2f22b7666171ad9495d30f2af223e1dffec0937abf0156569ac15de5cc835de3045bb96a9d463e76"], &(0x7f00000004c0)=""/160, 0xa0)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 3: prog_data_offset 1576, prog_size 2336
remove dir: /root/orangefs-client/dfs-0-74
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 16:01:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2023
-----finish removing dir
mkdir time 10192
executor 3 create dir /root/orangefs-client/dfs-0-75 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-75
receive_execute: 4, 12215
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 12216
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 0, 12216
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 3, 12215
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 32765, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2687
----- completed 1
execute_call 0, 8071, 0, 1
execute_one loop: 0, 0, 8072
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8072, 0, 0
execute_one loop: 0, 0, 8072
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2577
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1148
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4105
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:01:36] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 225
----- completed 5
execute_call 0, 20071, 0, 3
execute_one loop: 0, 0, 20074
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10039, 0, 1
execute_one loop: 0, 0, 10041
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30115, 0, 0
execute_one loop: 0, 0, 30115
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1165 tid 1165

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1165, pid 1165, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:02:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 38226, 0
execute_one time: 1, 38226
[D 03/25/2023 16:02:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 48
----- completed 8
execute_call 0, 4051, 0, 1
execute_one loop: 0, 0, 4052
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 13
----- completed 13
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 496, write pid:496
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 42285, 0
execute_one time: 0, 42285
2023/03/25 17:02:11 for select break: 1
2023/03/25 17:02:11 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12221, 42287, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
2023/03/25 17:02:11 for select break: 1
2023/03/25 17:02:11 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 174
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 112
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3
executor 0 server cover_cnt 9 output_pos_value 4431
time breakdown 0: 12219, 42291, 0
2023/03/25 17:02:11 for select break: 1
2023/03/25 17:02:11 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:02:11 for select break: 1
2023/03/25 17:02:11 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:02:11 wg wait finish
2023/03/25 17:02:11 ------ all executors finish execution
2023/03/25 17:02:11 exec time: 54511
2023/03/25 17:02:11 ----- PS len: 4
2023/03/25 17:02:11 [CLIENT] executor 3 has 16 replies
2023/03/25 17:02:11 fuzzer receive 2687 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 225 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:11 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:02:11 [SERVER] executor 0 has 9 replies
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 2577 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 1148 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 174 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 112 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 17:02:11 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
time breakdown 1: 12218, 42295, 0
before receive testcase: 0 0
2023/03/25 17:02:11 [SERVER] executor 1 has 0 replies
2023/03/25 17:02:11 [SERVER] executor 2 has 0 replies
2023/03/25 17:02:11 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:02:11 ----- no new client coverage: false, true
2023/03/25 17:02:11 mutate testcase with failures
2023/03/25 17:02:11 ----- mutateArg()
2023/03/25 17:02:11 ----- mutateArg()
2023/03/25 17:02:11 ----- mutateArg()
time breakdown 2: 12216, 42292, 0
before receive testcase: 0 0
2023/03/25 17:02:11 ----- insertCall()
2023/03/25 17:02:11 ----- generateCall 2749 pwrite64 pwrite64
2023/03/25 17:02:11 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:02:11 disable threaded and collide
2023/03/25 17:02:11 prog length: 6
2023/03/25 17:02:11 prog length: 15
2023/03/25 17:02:11 HasCrashFail:true HasNetFail:false
17:02:11 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fchown(r0, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x12942, 0x100)
r2 = fcntl$dupfd(r1, 0x406, r1)
syz_failure_sync(0x0, 0x3)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
syz_failure_sync(0x1, 0x3)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f00000000c0))
pwritev(r3, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
pwrite64(r1, &(0x7f0000000480)="af204f4c9e978e3403249a8eb0cc3b8d20d36c16a244fd6349820f133ccf53cdf0620b146dfeb1489b070fb9cf65131f21912ff60b97248ba9b8fa91830ed4bad996f4e6bc14f079", 0x48, 0x5)
fsetxattr$security_ima(r2, &(0x7f0000000440), &(0x7f00000003c0)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b319d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"], 0xbd, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 3: prog_data_offset 1576, prog_size 3024
remove dir: /root/orangefs-client/dfs-0-75
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 55
-----finish removing dir
mkdir time 16185
executor 3 create dir /root/orangefs-client/dfs-0-76 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-76
receive_execute: 2, 16240
receive_execute: 6, 16238
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 16240
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 16241
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6454, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 2063
----- completed 6
execute_call 0, 10056, 0, 1
execute_one loop: 0, 0, 10057
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10057, 0, 0
execute_one loop: 0, 0, 10057
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28618, flag collect 0
----- executor 0 signal number : 2765
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1245
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 4389
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1181 tid 1181

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1181, pid 1181, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:02:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10081, 0
execute_one time: 1, 10081
-----executor 0 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 11, 0, 7
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 499, write pid:499
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 10089, 0
execute_one time: 0, 10089
time breakdown 3: 16250, 10089, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:02:37 for select break: 1
2023/03/25 17:02:37 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:02:37 for select break: 1
2023/03/25 17:02:37 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:02:37 for select break: 1
2023/03/25 17:02:37 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 16242, 10091, 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 0 signal number : 119
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 8 output_pos_value 4783
before receive testcase: 0 0
2023/03/25 17:02:37 for select break: 1
2023/03/25 17:02:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:02:37 wg wait finish
2023/03/25 17:02:37 ------ all executors finish execution
2023/03/25 17:02:37 exec time: 26336
2023/03/25 17:02:37 ----- PS len: 4
2023/03/25 17:02:37 [CLIENT] executor 3 has 15 replies
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 16246, 10096, 0
2023/03/25 17:02:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:37 [SERVER] executor 0 has 8 replies
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 2765 signal and 0 cover from userspace component
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 1245 signal and 0 cover from userspace component
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 119 signal and 0 cover from userspace component
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 17:02:37 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:02:37 [SERVER] executor 1 has 0 replies
2023/03/25 17:02:37 [SERVER] executor 2 has 0 replies
2023/03/25 17:02:37 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:02:37 ----- no new client coverage: false, true
2023/03/25 17:02:37 mutate testcase with failures
2023/03/25 17:02:37 ----- insertCall()
2023/03/25 17:02:37 ----- insertCall()
2023/03/25 17:02:37 ----- insertCall()
2023/03/25 17:02:37 ----- insertCall()
2023/03/25 17:02:37 ----- insertCall()
2023/03/25 17:02:37 ----- insertCall()
2023/03/25 17:02:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:02:37 disable threaded and collide
2023/03/25 17:02:37 prog length: 6
2023/03/25 17:02:37 prog length: 21
2023/03/25 17:02:37 HasCrashFail:true HasNetFail:false
17:02:37 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
syz_failure_sync(0x1, 0x3)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f0000000300)=ANY=[@ANYBLOB="c4011b05a9030000550000003f00000065020000a00100000000000000000000e7e160ac04e696b12e14a0bddb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522d0b0e62f1cf4a4b5e80ba2e5fef598772dbae4a2d22d0e7957fef26ac8b496066da21753b38caeedaee7243405e5cc10c7abf735826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f505bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3e65700000000000000000000000000000000e5ffffffadeb3305c5cee7965cc51a6500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000fa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000203cf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a91ae0472087c52ddeffffff000000000000000000000000000000004adc2c0f0a00000059d8aad5521dfd8e64f4ccd13862"], 0x9f6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x501040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5952
remove dir: /root/orangefs-client/dfs-0-76
time breakdown 2: 16244, 10092, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
[E 03/25/2023 16:02:37] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:02:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2041
-----finish removing dir
mkdir time 4043
executor 3 create dir /root/orangefs-client/dfs-0-77 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-77
receive_execute: 2, 6084
receive_execute: 7, 6084
receive_execute: 6, 6084
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 6085
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 2063
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 906 tid 906

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 906, pid 906, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:02:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 26, 0
execute_one time: 1, 26
----- executor 3 write_call_output, size 6454, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 501, write pid:501
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 38, 0
execute_one time: 0, 38
2023/03/25 17:02:43 for select break: 1
2023/03/25 17:02:43 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6093, 38, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28592, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 10720, flag collect 0
2023/03/25 17:02:43 for select break: 1
2023/03/25 17:02:43 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3135, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2901, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2124
2023/03/25 17:02:43 for select break: 1
2023/03/25 17:02:43 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:02:43 for select break: 1
2023/03/25 17:02:43 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:02:43 wg wait finish
2023/03/25 17:02:43 ------ all executors finish execution
2023/03/25 17:02:43 exec time: 6126
2023/03/25 17:02:43 ----- PS len: 4
time breakdown 1: 6090, 41, 0
before receive testcase: 0 0
2023/03/25 17:02:43 [CLIENT] executor 3 has 21 replies
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:02:43 [SERVER] executor 0 has 4 replies
2023/03/25 17:02:43 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 17:02:43 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:02:43 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:02:43 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:02:43 [SERVER] executor 1 has 1 replies
2023/03/25 17:02:43 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:02:43 [SERVER] executor 2 has 0 replies
2023/03/25 17:02:43 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:02:43 ----- no new client coverage: false, true
2023/03/25 17:02:43 mutate testcase with failures
2023/03/25 17:02:43 ----- mutateArg()
2023/03/25 17:02:43 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:02:43 disable threaded and collide
2023/03/25 17:02:43 prog length: 6
2023/03/25 17:02:43 prog length: 17
2023/03/25 17:02:43 HasCrashFail:true HasNetFail:false
17:02:43 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f0000000b00)='./file0/file0\x00', &(0x7f0000000100)=@random={'osx.', 'trust\x1f\x00\x00\x00ve\x9e\f\x00\x00.nlqnk\x00'}, &(0x7f0000000b40)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
syz_failure_sync(0x1, 0x3)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
time breakdown 0: 6086, 41, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5544
remove dir: /root/orangefs-client/dfs-0-77
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 2: 6091, 40, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 13
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:02:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:02:43] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:02:43] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:02:43] Error: Could not initialize server subsystems
[E 03/25/2023 16:02:43] Error: Could not initialize server; aborting.
receive_execute: 3, 16239
receive_execute: 2, 16239
mkdir time 16226
executor 3 create dir /root/orangefs-client/dfs-0-78 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-78
receive_execute: 2, 16239
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 16241
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 6450, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12252, flag collect 0
----- executor 0 signal number : 1411
----- executor 0 executes write_coverage_signal cov->size 4584, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2090
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:02:59] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10045, 0, 0
execute_one loop: 0, 0, 10045
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10028, 0, 0
execute_one loop: 0, 0, 10028
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10050, 0, 0
execute_one loop: 0, 0, 10050
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 381
----- completed 9
execute_call 0, 10027, 0, 0
execute_one loop: 0, 0, 10028
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 40151, 0, 0
execute_one loop: 0, 0, 40151
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1199 tid 1199

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1199, pid 1199, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:03:39] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 40184, 0
execute_one time: 0, 40184
[D 03/25/2023 16:03:39] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2011, 0, 0
execute_one loop: 0, 0, 2012
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 13
----- completed 12
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6442, pid 503, write pid:503
----- executor 3 executes write_coverage_signal cov->size 6442, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 42211, 0
execute_one time: 0, 42211
2023/03/25 17:03:41 for select break: 1
2023/03/25 17:03:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16245, 42212, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:03:41 for select break: 1
2023/03/25 17:03:41 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 16242, 42214, 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:03:41 for select break: 1
2023/03/25 17:03:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16241, 42215, 0
before receive testcase: 0 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 16664, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2694
2023/03/25 17:03:41 for select break: 1
2023/03/25 17:03:41 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:03:41 wg wait finish
2023/03/25 17:03:41 ------ all executors finish execution
2023/03/25 17:03:41 exec time: 58457
2023/03/25 17:03:41 ----- PS len: 4
2023/03/25 17:03:41 [CLIENT] executor 3 has 17 replies
2023/03/25 17:03:41 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 16241, 42216, 0
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 381 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:03:41 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:03:41 [SERVER] executor 0 has 9 replies
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 1411 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 17:03:41 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 17:03:41 [SERVER] executor 1 has 0 replies
2023/03/25 17:03:41 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 17:03:41 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:03:41 ----- no new client coverage: false, true
2023/03/25 17:03:41 mutate testcase with failures
2023/03/25 17:03:41 ----- mutateFailPos()
2023/03/25 17:03:41 insert call 1 at pos 2
2023/03/25 17:03:41 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:03:41 disable threaded and collide
2023/03/25 17:03:41 prog length: 6
2023/03/25 17:03:41 prog length: 13
2023/03/25 17:03:41 HasCrashFail:true HasNetFail:false
17:03:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
syz_failure_sync(0x1, 0x3)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2848
remove dir: /root/orangefs-client/dfs-0-78
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-79 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-79
receive_execute: 2, 24
receive_execute: 3, 24
receive_execute: 4, 24
receive_execute: 4, 24
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1215 tid 1215

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1215, pid 1215, value 1

-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:03:41] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 23, 0
execute_one time: 0, 23
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:03:41] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:03:41] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2002
----- completed 7
execute_call 0, 2025, 0, 1
execute_one loop: 0, 0, 2026
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 9376, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 9376, flag collect 0
----- executor 3 signal number : 1431
----- completed 12
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 505, write pid:505
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2060, 0
execute_one time: 0, 2061
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 28, 2062, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 28, 2063, 0
before receive testcase: 0 0
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 2063, 0
before receive testcase: 0 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 14568, flag collect 0
----- executor 0 signal number : 112
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
----- executor 0 signal number : 698
executor 0 server cover_cnt 6 output_pos_value 2329
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:03:44 wg wait finish
2023/03/25 17:03:44 ------ all executors finish execution
2023/03/25 17:03:44 exec time: 2092
2023/03/25 17:03:44 ----- PS len: 4
2023/03/25 17:03:44 [CLIENT] executor 3 has 13 replies
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 2002 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 1431 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 [SERVER] executor 0 has 6 replies
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 112 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 698 signal and 0 cover from userspace component
time breakdown 0: 26, 2069, 0
before receive testcase: 0 0
2023/03/25 17:03:44 [SERVER] executor 1 has 0 replies
2023/03/25 17:03:44 [SERVER] executor 2 has 0 replies
2023/03/25 17:03:44 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:03:44 ----- no new client coverage: false, true
2023/03/25 17:03:44 mutate testcase with failures
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- mutateFailPos()
2023/03/25 17:03:44 insert call 3 at pos 6
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:03:44 disable threaded and collide
2023/03/25 17:03:44 prog length: 6
2023/03/25 17:03:44 prog length: 22
2023/03/25 17:03:44 HasCrashFail:true HasNetFail:false
17:03:44 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
syz_failure_sync(0x1, 0x3)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f00000004c0)=ANY=[@ANYBLOB="2321202e2f66696c653020039642da2b0a38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5adf59eee4b0ea92e8a0cb686bb8946c785810a69916b81639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70007dbe87db9315354d352fb1fbf197b39e6fc809ae39e9ba9167975bbe9743aacdfcc1e7db2269985ed8b62e2077e7b088a379cf066164a877b1ef1bec68a2eb6d7b6102c5"], 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000740)=ANY=[@ANYBLOB="02000000010001000000000002000500", @ANYRES32=0xee00, @ANYBLOB='\x00\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="040004000000000008000000", @ANYRES32=r6, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="88010540", @ANYRES32=0xee01, @ANYBLOB="32581c534062b2bd4b88f519b7a39cc09a5d30509b14d1d4aada8356df4fa99140224caaa341af63698695c7e6df0d2c0a741f554ecbe64e965521044ef266e5ea35bcdf8f1f4044376af0c45a85d2e70cc526131290060c2c4199de7ecd4965bd54e2c8b28de5f9a10acd67d00a9dafc71a8cabceb6087651599c84fb9b3650258aaf4b937fa1a7a300642a8400", @ANYRES32=0x0, @ANYBLOB="10000100000000002000000000000000"], 0x54, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4016
remove dir: /root/orangefs-client/dfs-0-79
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 23
executor 3 create dir /root/orangefs-client/dfs-0-80 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-80
receive_execute: 7, 58
receive_execute: 7, 58
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 8, 59
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
receive_execute: 1, 58
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 991 tid 991

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 991, pid 991, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:03:44] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 26, 0
execute_one time: 0, 27
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 506, write pid:506
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 28, 0
execute_one time: 1, 28
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 67, 30, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4051, flag collect 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1405
----- executor 0 executes write_coverage_signal cov->size 1552, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
executor 0 server cover_cnt 4 output_pos_value 2098
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 65, 32, 0
before receive testcase: 0 0
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 65, 32, 0
2023/03/25 17:03:44 for select break: 1
2023/03/25 17:03:44 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:03:44 wg wait finish
2023/03/25 17:03:44 ------ all executors finish execution
2023/03/25 17:03:44 exec time: 90
2023/03/25 17:03:44 ----- PS len: 4
2023/03/25 17:03:44 [CLIENT] executor 3 has 22 replies
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 [SERVER] executor 1 has 1 replies
2023/03/25 17:03:44 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:03:44 [SERVER] executor 2 has 0 replies
2023/03/25 17:03:44 [SERVER] executor 0 has 4 replies
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 1405 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:03:44 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:44 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:03:44 ----- no new client coverage: false, true
2023/03/25 17:03:44 mutate testcase with failures
2023/03/25 17:03:44 ----- insertCall()
2023/03/25 17:03:44 ----- generateCall 222 fremovexattr fremovexattr
2023/03/25 17:03:44 ----- mutateFailPos()
2023/03/25 17:03:44 insert call 0 at pos 0
2023/03/25 17:03:44 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:03:44 disable threaded and collide
2023/03/25 17:03:44 prog length: 6
2023/03/25 17:03:44 prog length: 19
2023/03/25 17:03:44 HasCrashFail:true HasNetFail:false
17:03:44 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)={',:#'}, 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
r1 = openat(r0, &(0x7f0000000880)='./file0\x00', 0x10000, 0x20)
fremovexattr(r1, &(0x7f00000008c0)=@known='system.posix_acl_default\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4328
remove dir: /root/orangefs-client/dfs-0-80
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 59, 32, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
[D 03/25/2023 16:03:44] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 14
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 16:03:44] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:03:44] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:03:44] Error: Could not initialize server subsystems
[E 03/25/2023 16:03:44] Error: Could not initialize server; aborting.
mkdir time 6047
executor 3 create dir /root/orangefs-client/dfs-0-81 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-81
receive_execute: 1, 6062
receive_execute: 1, 6062
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 6061
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
receive_execute: 0, 6062
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
/root/orangefs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1232 tid 1232

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1232, pid 1232, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:03:50] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 26, 0
execute_one time: 0, 26
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:03:50] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:03:50] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2003
----- completed 3
execute_call 0, 2018, 0, 1
execute_one loop: 0, 0, 2019
cover_reset in execute_call
----- executor 3 write_call_output, size 6780, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6780, flag collect 0
----- executor 3 signal number : 414
----- completed 4
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 20
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 507, write pid:507
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2061, 0
execute_one time: 1, 2061
time breakdown 3: 6064, 2063, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
2023/03/25 17:03:52 for select break: 1
2023/03/25 17:03:52 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 1299
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:03:52 for select break: 1
2023/03/25 17:03:52 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 15866, flag collect 0
2023/03/25 17:03:52 for select break: 1
2023/03/25 17:03:52 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:03:52 for select break: 1
2023/03/25 17:03:52 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:03:52 wg wait finish
2023/03/25 17:03:52 ------ all executors finish execution
2023/03/25 17:03:52 exec time: 8127
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:03:52 ----- PS len: 4
time breakdown 2: 6062, 2065, 0
before receive testcase: 0 0
2023/03/25 17:03:52 [CLIENT] executor 3 has 19 replies
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 2003 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 414 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:03:52 fuzzer receive 0 signal and 0 cover from executor 3
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1733
2023/03/25 17:03:52 [SERVER] executor 0 has 5 replies
2023/03/25 17:03:52 ------- fuzzer executor 0 receive 1299 signal and 0 cover from userspace component
2023/03/25 17:03:52 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:03:52 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 17:03:52 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 17:03:52 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 17:03:52 [SERVER] executor 1 has 0 replies
2023/03/25 17:03:52 [SERVER] executor 2 has 0 replies
time breakdown 0: 6063, 2066, 0
2023/03/25 17:03:52 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:03:52 ----- no new client coverage: false, true
2023/03/25 17:03:52 mutate testcase with failures
2023/03/25 17:03:52 ----- insertCall()
2023/03/25 17:03:52 ----- generateCall 2459 open$dir open$dir
2023/03/25 17:03:52 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:03:52 disable threaded and collide
2023/03/25 17:03:52 prog length: 6
2023/03/25 17:03:52 prog length: 18
2023/03/25 17:03:52 HasCrashFail:true HasNetFail:false
17:03:52 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x40800, 0x40)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1f79810e9", 0x7}, {&(0x7f0000000440)}, {&(0x7f0000000540)="119a66f8e9fca5365d5bc3740504dd07ec9f97693656f80fb49f32bdd6c1875d8fe83e80b29e372b8d9c54074df48093364c0f0b75d2431e3b35e922d57dc83641319d99b0539d0750857f434a5bb519ca0b30d7aee2e63ff66827457653821da53db40298cf8f103226ff268175c8772f83ed37bdc05501b83495a0d5251e0b341f6af6cd4d54b74074b90f8595894e25dc241b96a26ce887e883e84c99c367f47857e01e7f1f3857fc62188f59cc9dc711cc3f30baba1b3ebbf1360815971b87d2608c0dd732c19ad4c718ee7f8b32bd9b7c5424f368237b4a82186ba158113723faf45649f743817f108c1f", 0xed}], 0x3, 0xf7, 0x7)
r2 = dup(r0)
fstat(r2, &(0x7f0000000680))
r3 = fcntl$dupfd(r1, 0x406, r1)
fsetxattr$security_smack_transmute(r3, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
open$dir(&(0x7f0000000440)='./file0\x00', 0x220400, 0x1a8)
r4 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f00000000c0))
pwritev(r4, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xfffffee6}], 0x3, 0x6, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r3, &(0x7f0000000380), &(0x7f0000000480)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a271256f13fea94df6557edf579d8e83a30133f37c637174454e2e54f6b477149a5c0cbf1c7a2"], 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 6063, 2064, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3848
remove dir: /root/orangefs-client/dfs-0-81
remove dir time 18
-----finish removing dir
mkdir time 6037
executor 3 create dir /root/orangefs-client/dfs-0-82 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-82
receive_execute: 1, 6055
receive_execute: 1, 6055
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 6055
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 6055
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 767
----- completed 7
execute_call 0, 10047, 0, 2
execute_one loop: 0, 0, 10049
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 9384, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 9384, flag collect 0
----- executor 3 signal number : 1071
----- completed 8
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 10124, 0, 0
execute_one loop: 0, 0, 10124
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20188, 0, 0
execute_one loop: 0, 0, 20189
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 509, write pid:509
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20206, 0
execute_one time: 1, 20206
2023/03/25 17:04:18 for select break: 1
2023/03/25 17:04:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6059, 20208, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
-----executor 1 collect shmids 0
----- directly resend shmid 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1008 tid 1008

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1008, pid 1008, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:04:18] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 20205, 0
execute_one time: 2, 20205
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2769
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 17:04:18 for select break: 1
time breakdown 2: 6056, 20209, 0
2023/03/25 17:04:18 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1220
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:04:18 for select break: 1
2023/03/25 17:04:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6058, 20209, 0
----- executor 0 signal number : 293
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 75
----- executor 0 executes write_coverage_signal cov->size 1895, flag collect 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/25 17:04:18 for select break: 1
2023/03/25 17:04:18 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:04:18 wg wait finish
2023/03/25 17:04:18 ------ all executors finish execution
2023/03/25 17:04:18 exec time: 26269
2023/03/25 17:04:18 ----- PS len: 4
2023/03/25 17:04:18 [CLIENT] executor 3 has 18 replies
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 767 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 1071 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:18 [SERVER] executor 0 has 11 replies
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 2769 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 1220 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 293 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 17:04:18 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 1883, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 783, flag collect 0
----- executor 0 signal number : 2
executor 0 server cover_cnt 11 output_pos_value 4551
2023/03/25 17:04:18 [SERVER] executor 1 has 1 replies
2023/03/25 17:04:18 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:04:18 [SERVER] executor 2 has 0 replies
2023/03/25 17:04:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:04:18 ----- no new client coverage: false, true
2023/03/25 17:04:18 mutate testcase with failures
2023/03/25 17:04:18 ----- mutateArg()
2023/03/25 17:04:18 ----- insertCall()
2023/03/25 17:04:18 ----- generateCall 2344 linkat linkat
2023/03/25 17:04:18 ----- insertCall()
2023/03/25 17:04:18 ----- generateCall 2462 openat openat
2023/03/25 17:04:18 ----- splice()
2023/03/25 17:04:18 ----- insertCall()
2023/03/25 17:04:18 ----- generateCall 2858 sendfile sendfile
2023/03/25 17:04:18 HasCrashFail: false, .HasNetFail: true
2023/03/25 17:04:18 disable threaded and collide
2023/03/25 17:04:18 prog length: 6
2023/03/25 17:04:18 prog length: 7
2023/03/25 17:04:18 HasCrashFail:false HasNetFail:true
17:04:18 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x400)
mkdir(&(0x7f0000000280)='./file1\x00', 0x1a)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00', 0x205c0, 0x10)
syz_failure_sync(0x0, 0x3)
r1 = dup2(r0, r0)
sendfile(r1, r0, &(0x7f00000000c0)=0x100, 0xfffffffffffffffa)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 976
remove dir: /root/orangefs-client/dfs-0-82
time breakdown 0: 6056, 20213, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 16:04:18] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:18] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[D 03/25/2023 16:04:18] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:04:18] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:04:18] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:04:18] Error: Could not initialize server subsystems
[E 03/25/2023 16:04:18] Error: Could not initialize server; aborting.
[E 03/25/2023 16:04:20] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:20] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:22] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:22] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:24] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:24] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:26] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:26] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:28] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:28] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:28] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.7:3334 failed: Connection refused
[E 03/25/2023 16:04:28] *** Out of retries.
[E 03/25/2023 16:04:28] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 16:04:28] *** Out of retries.
[E 03/25/2023 16:04:28] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 16:04:28] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 16:04:28] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:28] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:30] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:30] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:32] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:32] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:34] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:34] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:36] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:36] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:38] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:38] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:38] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.7:3334 failed: Connection refused
[E 03/25/2023 16:04:38] *** Out of retries.
[E 03/25/2023 16:04:38] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 16:04:38] *** Out of retries.
[E 03/25/2023 16:04:38] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 16:04:38] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
[E 03/25/2023 16:04:38] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:38] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:40] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:40] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:42] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:42] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:44] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:44] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:46] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:46] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
lstat(/root/orangefs-client/dfs-0-82/file0) failedremove dir time 30060
-----finish removing dir
[E 03/25/2023 16:04:48] Warning: msgpair failed to tcp://192.168.0.7:3334, will retry: Connection refused
[E 03/25/2023 16:04:48] Warning: msgpair failed to tcp://192.168.0.6:3334, will retry: Connection refused
[E 03/25/2023 16:04:48] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.7:3334 failed: Connection refused
[E 03/25/2023 16:04:48] *** Out of retries.
[E 03/25/2023 16:04:48] *** msgpairarray_completion_fn: msgpair to server tcp://192.168.0.6:3334 failed: Connection refused
[E 03/25/2023 16:04:48] *** Out of retries.
[E 03/25/2023 16:04:48] tree_get_file_size_work_cleanup:index:1 	error[1]:-1073742006
[E 03/25/2023 16:04:48] tree_get_file_size_work_cleanup:index:2 	error[2]:-1073742006
mkdir time 2024
executor 3 create dir /root/orangefs-client/dfs-0-83 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-83
receive_execute: 3, 32084
receive_execute: 8, 32085
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 7, 32085
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 32085
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6398, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 6398, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 6028, 0, 1
execute_one loop: 0, 0, 6029
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6035, 0, 0
execute_one loop: 0, 0, 6035
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 8045, 0
execute_one time: 1, 8045
----- executor 3 write_call_output, size 0, pid 511, write pid:511
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2004, 0, 1
execute_one loop: 0, 0, 2005
executor 3, execute_one inner time: 0, 8046, 0
execute_one time: 0, 8046
2023/03/25 17:04:58 for select break: 1
2023/03/25 17:04:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 32093, 8047, 0
before receive testcase: 0 0
2023/03/25 17:04:58 for select break: 1
2023/03/25 17:04:58 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 32092, 8048, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2718
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 1259
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:04:58 for select break: 1
2023/03/25 17:04:58 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:04:58 for select break: 1
2023/03/25 17:04:58 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:04:58 wg wait finish
2023/03/25 17:04:58 ------ all executors finish execution
2023/03/25 17:04:58 exec time: 40141
2023/03/25 17:04:58 ----- PS len: 4
2023/03/25 17:04:58 [CLIENT] executor 3 has 7 replies
2023/03/25 17:04:58 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:04:58 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:04:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:04:58 [SERVER] executor 0 has 4 replies
2023/03/25 17:04:58 ------- fuzzer executor 0 receive 2718 signal and 0 cover from userspace component
2023/03/25 17:04:58 ------- fuzzer executor 0 receive 1259 signal and 0 cover from userspace component
2023/03/25 17:04:58 ------- fuzzer executor 0 receive 295 signal and 0 cover from userspace component
2023/03/25 17:04:58 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 17:04:58 [SERVER] executor 2 has 0 replies
2023/03/25 17:04:58 [SERVER] executor 1 has 0 replies
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 32092, 8055, 0
before receive testcase: 0 0
2023/03/25 17:04:58 fsMds: [map[] map[] map[] map[]]
----- executor 0 signal number : 295
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4361
time breakdown 0: 32087, 8053, 0
before receive testcase: 0 0
2023/03/25 17:04:58 ----- no new client coverage: false, true
2023/03/25 17:04:58 mutate testcase with failures
2023/03/25 17:04:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:04:58 disable threaded and collide
2023/03/25 17:04:58 prog length: 6
2023/03/25 17:04:58 prog length: 17
2023/03/25 17:04:58 HasCrashFail:true HasNetFail:false
17:04:58 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)=ANY=[@ANYBLOB='@\x00\x00\x00'], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
syz_failure_sync(0x0, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)=ANY=[@ANYBLOB='trrlay.~\x00\x00irect\x00\x00'], 0x1a, 0x1)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3896
remove dir: /root/orangefs-client/dfs-0-83
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 8045
executor 3 create dir /root/orangefs-client/dfs-0-84 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-84
receive_execute: 1, 8088
receive_execute: 10, 8088
receive_execute: 10, 8089
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 8088
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1026 tid 1026

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1026, pid 1026, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:05:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 513, write pid:513
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 0, 45, 0
execute_one time: 0, 45
2023/03/25 17:05:06 for select break: 1
2023/03/25 17:05:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:05:06 for select break: 1
2023/03/25 17:05:06 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8098, 47, 0
before receive testcase: 0 0
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 45, 0
execute_one time: 1, 45
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 17:05:06 for select break: 1
2023/03/25 17:05:06 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:05:06 for select break: 1
2023/03/25 17:05:06 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:05:06 wg wait finish
2023/03/25 17:05:06 ------ all executors finish execution
2023/03/25 17:05:06 exec time: 8137
2023/03/25 17:05:06 ----- PS len: 4
2023/03/25 17:05:06 [CLIENT] executor 3 has 17 replies
2023/03/25 17:05:06 [SERVER] executor 0 has 4 replies
2023/03/25 17:05:06 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:05:06 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 17:05:06 [SERVER] executor 1 has 1 replies
2023/03/25 17:05:06 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:05:06 [SERVER] executor 2 has 0 replies
2023/03/25 17:05:06 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 15184, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 4302, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4098, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2126
2023/03/25 17:05:06 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:05:06 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 8093, 49, 0
before receive testcase: 0 0
2023/03/25 17:05:06 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:06 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 3: 8099, 46, 0
before receive testcase: 0 1
2023/03/25 17:05:06 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:05:06 ----- no new client coverage: false, true
2023/03/25 17:05:06 mutate testcase with failures
2023/03/25 17:05:06 ----- insertCall()
2023/03/25 17:05:06 ----- generateCall 231 fsetxattr fsetxattr
2023/03/25 17:05:06 ----- mutateArg()
2023/03/25 17:05:06 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:05:06 disable threaded and collide
2023/03/25 17:05:06 prog length: 6
2023/03/25 17:05:06 prog length: 9
2023/03/25 17:05:06 HasCrashFail:true HasNetFail:false
17:05:06 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000080)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x0)
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_origin(0xffffffffffffffff, 0x0, &(0x7f0000000240), 0x2, 0x2)
fcntl$getflags(0xffffffffffffffff, 0x0)
syz_failure_sync(0x1, 0x3)
setxattr$system_posix_acl(&(0x7f0000001380)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_ima(0x0, 0x0, 0x0, 0x0, 0x0)
fsetxattr(0xffffffffffffffff, &(0x7f0000000100)=@known='com.apple.system.Security\x00', &(0x7f00000000c0)='u\xc4XJ\xa0a\xf9\xa8\x88\x9c\xf9\xff\x14\x8d\x90\x15\xec\xbb\x1b\x15v\x00\xfc\xc96\xbc\x11\xfd\x1aO\x95\xaas+\xd6\x18\xfba\xba\xe3b|\xdd\xa9\xa4\'', 0x2e, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1304
remove dir: /root/orangefs-client/dfs-0-84
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 8089, 49, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 14
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:05:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:05:06] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:05:06] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:05:06] Error: Could not initialize server subsystems
[E 03/25/2023 16:05:06] Error: Could not initialize server; aborting.
mkdir time 2028
executor 3 create dir /root/orangefs-client/dfs-0-85 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-85
receive_execute: 1, 2042
receive_execute: 1, 2042
receive_execute: 2, 2042
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 2043
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1042 tid 1042

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1042, pid 1042, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:05:08] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 25, 0
execute_one time: 0, 25
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
2023/03/25 17:05:08 for select break: 1
2023/03/25 17:05:08 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 2992, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1190, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 906, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2100
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 17:05:08 for select break: 1
time breakdown 2: 2044, 34, 0
2023/03/25 17:05:08 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 0: 2043, 34, 0
before receive testcase: 0 1
2023/03/25 17:05:08 for select break: 1
2023/03/25 17:05:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:05:08 for select break: 1
2023/03/25 17:05:08 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:05:08 wg wait finish
2023/03/25 17:05:08 ------ all executors finish execution
2023/03/25 17:05:08 exec time: 2077
2023/03/25 17:05:08 ----- PS len: 4
2023/03/25 17:05:08 [CLIENT] executor 3 has 9 replies
2023/03/25 17:05:08 [SERVER] executor 1 has 1 replies
2023/03/25 17:05:08 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:05:08 [SERVER] executor 0 has 4 replies
2023/03/25 17:05:08 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 17:05:08 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:05:08 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:05:08 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:05:08 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:08 [SERVER] executor 2 has 0 replies
----- executor 3 write_call_output, size 6398, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 7
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 515, write pid:515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 0, 30
time breakdown 3: 2046, 31, 0
before receive testcase: 0 0
2023/03/25 17:05:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:05:08 ----- no new client coverage: false, true
2023/03/25 17:05:08 mutate testcase with failures
2023/03/25 17:05:08 ----- mutateFailPos()
2023/03/25 17:05:08 insert call 0 at pos 0
2023/03/25 17:05:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:05:08 disable threaded and collide
2023/03/25 17:05:08 prog length: 6
2023/03/25 17:05:08 prog length: 9
2023/03/25 17:05:08 HasCrashFail:true HasNetFail:false
17:05:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=@random={'btrfs.', '\x06*\\\x00'}, &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
time breakdown 1: 2043, 34, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1616
remove dir: /root/orangefs-client/dfs-0-85
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 10
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:05:08] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:05:08] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:05:08] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:05:08] Error: Could not initialize server subsystems
[E 03/25/2023 16:05:08] Error: Could not initialize server; aborting.
mkdir time 2025
executor 3 create dir /root/orangefs-client/dfs-0-86 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-86
receive_execute: 2, 2035
receive_execute: 2, 2035
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2036
receive_execute: 1, 2036
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
Terminated
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1057 tid 1057

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1057, pid 1057, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:05:10] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 29, 0
execute_one time: 1, 29
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 516, write pid:516
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 46, 0
execute_one time: 1, 46
2023/03/25 17:05:10 for select break: 1
2023/03/25 17:05:10 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:05:10 for select break: 1
2023/03/25 17:05:10 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2038, 48, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 3: 2040, 47, 0
before receive testcase: 0 0
2023/03/25 17:05:10 for select break: 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28590, flag collect 0
----- executor 0 signal number : 1429
----- executor 0 executes write_coverage_signal cov->size 10412, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3135, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2901, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2122
2023/03/25 17:05:10 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:05:10 for select break: 1
2023/03/25 17:05:10 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:05:10 wg wait finish
2023/03/25 17:05:10 ------ all executors finish execution
2023/03/25 17:05:10 exec time: 2086
2023/03/25 17:05:10 ----- PS len: 4
2023/03/25 17:05:10 [CLIENT] executor 3 has 9 replies
2023/03/25 17:05:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 0: 2037, 50, 0
2023/03/25 17:05:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:10 [SERVER] executor 0 has 4 replies
2023/03/25 17:05:10 ------- fuzzer executor 0 receive 1429 signal and 0 cover from userspace component
2023/03/25 17:05:10 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:05:10 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:05:10 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 2037, 50, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 17:05:10 [SERVER] executor 1 has 1 replies
2023/03/25 17:05:10 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:05:10 [SERVER] executor 2 has 0 replies
2023/03/25 17:05:10 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:05:10 ----- no new client coverage: false, true
2023/03/25 17:05:10 mutate testcase with failures
2023/03/25 17:05:10 ----- mutateArg()
2023/03/25 17:05:10 ----- mutateArg()
2023/03/25 17:05:10 ----- insertCall()
2023/03/25 17:05:10 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 17:05:10 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:05:10 disable threaded and collide
2023/03/25 17:05:10 prog length: 6
2023/03/25 17:05:10 prog length: 4
2023/03/25 17:05:10 HasCrashFail:true HasNetFail:false
17:05:10 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)='./file0\x00')
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f00000000c0)=ANY=[@ANYBLOB="2321202e2f66696c6530205c245e2428262a212e5b235b5b2d074a9843a6ba47c2ea000000000000877c220313efe164df9614dbf9e5b653c4c6087889f0d0f8f292f05709211e9a837a542b907beb07639820a410770ee07165b0ebb220b6ca1e030000000000000003b7c286"], 0x3f)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 544
remove dir: /root/orangefs-client/dfs-0-86
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 16
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:05:10] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:05:10] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:05:10] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:05:10] Error: Could not initialize server subsystems
[E 03/25/2023 16:05:10] Error: Could not initialize server; aborting.
mkdir time 2015
executor 3 create dir /root/orangefs-client/dfs-0-87 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-87
receive_execute: 2, 2030
receive_execute: 1, 2031
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 2031
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 3, 2031
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28991, flag collect 0
----- executor 0 signal number : 2535
----- executor 0 executes write_coverage_signal cov->size 17257, flag collect 0
----- executor 0 signal number : 1131
----- executor 0 executes write_coverage_signal cov->size 3112, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 2641, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4052
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1270 tid 1270

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1270, pid 1270, value 1

----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:05:12] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 517, write pid:517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 34, 0
execute_one time: 1, 34
2023/03/25 17:05:13 for select break: 1
2023/03/25 17:05:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2034, 35, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:05:13 for select break: 1
2023/03/25 17:05:13 --------- executor 2 receive reply, reply.done 1
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 34, 0
execute_one time: 0, 34
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 17281, flag collect 0
----- executor 0 signal number : 80
----- executor 0 executes write_coverage_signal cov->size 3369, flag collect 0
----- executor 0 signal number : 49
----- executor 0 executes write_coverage_signal cov->size 2749, flag collect 0
----- executor 0 signal number : 8
executor 0 server cover_cnt 8 output_pos_value 4489
2023/03/25 17:05:13 for select break: 1
2023/03/25 17:05:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2032, 36, 0
before receive testcase: 0 0
time breakdown 2: 2033, 36, 0
before receive testcase: 0 1
2023/03/25 17:05:13 for select break: 1
2023/03/25 17:05:13 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:05:13 wg wait finish
2023/03/25 17:05:13 ------ all executors finish execution
2023/03/25 17:05:13 exec time: 2071
2023/03/25 17:05:13 ----- PS len: 4
2023/03/25 17:05:13 [CLIENT] executor 3 has 4 replies
2023/03/25 17:05:13 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:05:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:13 [SERVER] executor 0 has 8 replies
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 2535 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 1131 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 49 signal and 0 cover from userspace component
2023/03/25 17:05:13 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 17:05:13 [SERVER] executor 1 has 0 replies
2023/03/25 17:05:13 [SERVER] executor 2 has 0 replies
2023/03/25 17:05:13 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:05:13 ----- no new client coverage: false, true
2023/03/25 17:05:13 mutate testcase with failures
2023/03/25 17:05:13 ----- insertCall()
2023/03/25 17:05:13 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 17:05:13 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:05:13 disable threaded and collide
2023/03/25 17:05:13 prog length: 6
2023/03/25 17:05:13 prog length: 14
2023/03/25 17:05:13 HasCrashFail:true HasNetFail:false
17:05:13 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000440), &(0x7f0000000480), 0x4, 0x2)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 2032, 41, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3120
remove dir: /root/orangefs-client/dfs-0-87
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:05:12] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:05:12] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2030
-----finish removing dir
mkdir time 4025
executor 3 create dir /root/orangefs-client/dfs-0-88 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-88
receive_execute: 5, 6055
receive_execute: 1, 6055
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 6055
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 6057
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 2063
----- completed 5
execute_call 0, 10068, 0, 1
execute_one loop: 0, 0, 10069
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10070, 0, 0
execute_one loop: 0, 0, 10070
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28625, flag collect 0
----- executor 0 signal number : 2767
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1351
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 4497
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1285 tid 1285

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1285, pid 1285, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:05:29] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10093, 0
execute_one time: 1, 10093
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:05:29] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:05:29] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 32765, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 727
----- completed 13
execute_call 0, 2017, 0, 1
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 518, write pid:518
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12110, 0
execute_one time: 0, 12110
2023/03/25 17:05:31 for select break: 1
2023/03/25 17:05:31 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6064, 12110, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 247
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:05:31 for select break: 1
2023/03/25 17:05:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6060, 12113, 0
before receive testcase: 0 1
----- executor 0 signal number : 132
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 0 signal number : 138
executor 0 server cover_cnt 10 output_pos_value 5062
2023/03/25 17:05:31 for select break: 1
2023/03/25 17:05:31 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6056, 12115, 0
before receive testcase: 0 0
2023/03/25 17:05:31 for select break: 1
2023/03/25 17:05:31 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:05:31 wg wait finish
2023/03/25 17:05:31 ------ all executors finish execution
2023/03/25 17:05:31 exec time: 18175
2023/03/25 17:05:31 ----- PS len: 4
2023/03/25 17:05:31 [CLIENT] executor 3 has 14 replies
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 727 signal and 0 cover from executor 3
2023/03/25 17:05:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:31 [SERVER] executor 0 has 10 replies
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 2767 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 1351 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 247 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 132 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:05:31 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:05:31 [SERVER] executor 1 has 0 replies
2023/03/25 17:05:31 [SERVER] executor 2 has 0 replies
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 6061, 12119, 0
before receive testcase: 0 0
2023/03/25 17:05:31 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:05:31 ----- no new client coverage: false, true
2023/03/25 17:05:31 mutate testcase with failures
2023/03/25 17:05:31 ----- insertCall()
2023/03/25 17:05:31 ----- insertCall()
2023/03/25 17:05:31 ----- insertCall()
2023/03/25 17:05:31 ----- insertCall()
2023/03/25 17:05:31 ----- mutateArg()
2023/03/25 17:05:31 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:05:31 disable threaded and collide
2023/03/25 17:05:31 prog length: 6
2023/03/25 17:05:31 prog length: 20
2023/03/25 17:05:31 HasCrashFail:true HasNetFail:false
17:05:31 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)=ANY=[@ANYBLOB="2321202e2f66696cebdb202d20ea7d2e3a5b240ac9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=@ng={0x4, 0x13, "1c01d88f9abef4373c2e5c3ff42111"}, 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file0\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4488
remove dir: /root/orangefs-client/dfs-0-88
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 24
-----finish removing dir
mkdir time 2017
executor 3 create dir /root/orangefs-client/dfs-0-89 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-89
receive_execute: 5, 2041
receive_execute: 7, 2041
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 2041
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 2042
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 2063
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8170, flag collect 0
----- executor 0 signal number : 1411
----- executor 0 executes write_coverage_signal cov->size 3032, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2090
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1302 tid 1302

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1302, pid 1302, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:05:33] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 34, 0
execute_one time: 0, 35
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:05:33] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:05:33] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2009, 0, 0
execute_one loop: 0, 0, 2009
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 315
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 13
----- completed 10
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 520, write pid:520
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2056, 0
execute_one time: 0, 2056
2023/03/25 17:05:35 for select break: 1
2023/03/25 17:05:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2050, 2057, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:05:35 for select break: 1
2023/03/25 17:05:35 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 837
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 2042, 2058, 0
before receive testcase: 0 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:05:35 for select break: 1
2023/03/25 17:05:35 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2048, 2059, 1
before receive testcase: 0 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 16028, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 15
executor 0 server cover_cnt 9 output_pos_value 3126
2023/03/25 17:05:35 for select break: 1
2023/03/25 17:05:35 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:05:35 wg wait finish
2023/03/25 17:05:35 ------ all executors finish execution
2023/03/25 17:05:35 exec time: 4102
2023/03/25 17:05:35 ----- PS len: 4
2023/03/25 17:05:35 [CLIENT] executor 3 has 20 replies
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 315 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 0: 2046, 2061, 0
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:35 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 17:05:35 [SERVER] executor 0 has 9 replies
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 1411 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:05:35 [SERVER] executor 2 has 0 replies
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 837 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 17:05:35 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 17:05:35 [SERVER] executor 1 has 0 replies
2023/03/25 17:05:35 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:05:35 ----- no new client coverage: false, true
2023/03/25 17:05:35 RandomInsertFailure()
2023/03/25 17:05:35 failed servers: [1 2]
2023/03/25 17:05:35 filter Disconn Calls: 3 1, [0 1] [0 1]
2023/03/25 17:05:35 insertSync 1 1 1
2023/03/25 17:05:35 part nodes: [0 3]
2023/03/25 17:05:35 filter Disconn Calls: 3 2, [0 1 2 3] [0 1 2 3]
2023/03/25 17:05:35 insertSync 1 2 3
2023/03/25 17:05:35 findAndInsert at 1
2023/03/25 17:05:35 findAndInsert at 3
2023/03/25 17:05:35 HasCrashFail: true, .HasNetFail: true
2023/03/25 17:05:35 disable threaded and collide
2023/03/25 17:05:35 prog length: 6
2023/03/25 17:05:35 prog length: 6
2023/03/25 17:05:35 prog length: 5
2023/03/25 17:05:35 HasCrashFail:true HasNetFail:true
17:05:35 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.5 -j DROP;iptables -A INPUT -s 192.168.0.8 -j DROP;iptables -A OUTPUT -d 192.168.0.5 -j DROP;iptables -A OUTPUT -d 192.168.0.8 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
stat(&(0x7f00000007c0)='.\x00', &(0x7f0000000800))
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x3, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 2040, prog_size 408
remove dir: /root/orangefs-client/dfs-0-89
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 472
remove dir time 31
-----finish removing dir
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-90 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-90
receive_execute: 4, 51
receive_execute: 1, 51
receive_execute: 2, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 10369, pid 522, write pid:522
----- executor 3 executes write_coverage_signal cov->size 10369, flag collect 1
----- executor 3 cover number : 2190, signal number : 2608
----- completed 1
execute_call 0, 3, 0, 3
execute_one loop: 0, 0, 6
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 522, write pid:522
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
----- executor 3 write_call_output, size 0, pid 522, write pid:522
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 3 write_call_output, size 0, pid 522, write pid:522
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2002, 0, 0
execute_one loop: 0, 0, 2002
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 2025, 0
execute_one time: 0, 2025
execute_call 0, 2003, 0, 0
execute_one loop: 0, 0, 2003
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1077 tid 1077

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1077, pid 1077, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:05:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 522, write pid:522
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 0, 2033, 0
execute_one time: 0, 2033
executor 2 write_server_output
time breakdown 3: 56, 2034, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 9179, flag collect 1
2023/03/25 17:05:37 for select break: 1
2023/03/25 17:05:37 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:05:37 for select break: 1
----- executor 0 cover number : 1415, signal number : 1726
----- executor 0 executes write_coverage_signal cov->size 5740, flag collect 1
----- executor 0 cover number : 315, signal number : 334
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 17:05:37 --------- executor 3 receive reply, reply.done 1
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2034, 0
execute_one time: 0, 2034
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 719, signal number : 899
executor 1 server cover_cnt 1 output_pos_value 1622
2023/03/25 17:05:37 for select break: 1
2023/03/25 17:05:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 2040, 0
before receive testcase: 0 0
----- executor 0 cover number : 284, signal number : 292
----- executor 0 executes write_coverage_signal cov->size 11183, flag collect 1
time breakdown 2: 55, 2035, 0
before receive testcase: 0 0
----- executor 0 cover number : 100, signal number : 78
executor 0 server cover_cnt 4 output_pos_value 4557
2023/03/25 17:05:37 for select break: 1
2023/03/25 17:05:37 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:05:37 wg wait finish
2023/03/25 17:05:37 ------ all executors finish execution
2023/03/25 17:05:37 exec time: 2095
2023/03/25 17:05:37 ----- PS len: 4
2023/03/25 17:05:37 [CLIENT] executor 3 has 5 replies
2023/03/25 17:05:37 [SERVER] executor 1 has 1 replies
2023/03/25 17:05:37 fuzzer receive 2608 signal and 2190 cover from executor 3
2023/03/25 17:05:37 ------- fuzzer executor 1 receive 899 signal and 719 cover from userspace component
2023/03/25 17:05:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:37 [SERVER] executor 0 has 4 replies
time breakdown 0: 52, 2043, 0
2023/03/25 17:05:37 [SERVER] executor 2 has 0 replies
2023/03/25 17:05:37 ------- fuzzer executor 0 receive 1726 signal and 1415 cover from userspace component
2023/03/25 17:05:37 ------- fuzzer executor 0 receive 334 signal and 315 cover from userspace component
2023/03/25 17:05:37 ------- fuzzer executor 0 receive 292 signal and 284 cover from userspace component
2023/03/25 17:05:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:05:37 ------- fuzzer executor 0 receive 78 signal and 100 cover from userspace component
2023/03/25 17:05:37 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 17:05:37 mutate testcase with failures
2023/03/25 17:05:37 ----- insertCall()
2023/03/25 17:05:37 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/25 17:05:37 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:05:37 disable threaded and collide
2023/03/25 17:05:37 prog length: 6
2023/03/25 17:05:37 prog length: 18
2023/03/25 17:05:37 HasCrashFail:true HasNetFail:false
17:05:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
syz_failure_sync(0x1, 0x3)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
setxattr$security_capability(&(0x7f0000000b00)='./file0/file1\x00', &(0x7f0000000b40), &(0x7f0000000b80)=@v2={0x2000000, [{0x80000001, 0x200}, {0x9, 0x10000}]}, 0x14, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5984
remove dir: /root/orangefs-client/dfs-0-90
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 24
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:05:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:05:37] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:05:37] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:05:37] Error: Could not initialize server subsystems
[E 03/25/2023 16:05:37] Error: Could not initialize server; aborting.
mkdir time 6037
executor 3 create dir /root/orangefs-client/dfs-0-91 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-91
receive_execute: 7, 6061
receive_execute: 3, 6061
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 11, 6062
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 12, 6062
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12252, flag collect 0
----- executor 0 signal number : 1411
----- executor 0 executes write_coverage_signal cov->size 4539, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1197, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2087
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:05:43] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 10036, 0, 0
execute_one loop: 0, 0, 10036
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10041, 0, 0
execute_one loop: 0, 0, 10041
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 40157, 0, 0
execute_one loop: 0, 0, 40157
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1320 tid 1320

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1320, pid 1320, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:06:23] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 40201, 0
execute_one time: 1, 40201
[D 03/25/2023 16:06:23] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 382
----- completed 11
execute_call 0, 2006, 0, 3
execute_one loop: 0, 0, 2009
cover_reset in execute_call
----- executor 3 write_call_output, size 6742, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6742, flag collect 0
----- executor 3 signal number : 14
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 17
----- completed 14
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6408, pid 524, write pid:524
----- executor 3 executes write_coverage_signal cov->size 6408, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 42232, 0
execute_one time: 1, 42232
2023/03/25 17:06:25 for select break: 1
2023/03/25 17:06:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6074, 42234, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:06:25 for select break: 1
2023/03/25 17:06:25 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6068, 42236, 0
before receive testcase: 0 0
time breakdown 2: 6073, 42236, 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 16989, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2691
2023/03/25 17:06:25 for select break: 1
2023/03/25 17:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6064, 42238, 0
before receive testcase: 0 0
2023/03/25 17:06:25 for select break: 1
2023/03/25 17:06:25 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:06:25 wg wait finish
2023/03/25 17:06:25 ------ all executors finish execution
2023/03/25 17:06:25 exec time: 48301
2023/03/25 17:06:25 ----- PS len: 4
2023/03/25 17:06:25 [CLIENT] executor 3 has 18 replies
2023/03/25 17:06:25 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:25 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:25 [SERVER] executor 0 has 9 replies
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 1411 signal and 0 cover from userspace component
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:06:25 [SERVER] executor 1 has 0 replies
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:06:25 [SERVER] executor 2 has 0 replies
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 17:06:25 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/25 17:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:06:25 ----- no new client coverage: false, true
2023/03/25 17:06:25 mutate testcase with failures
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- mutateArg()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- insertCall()
2023/03/25 17:06:25 ----- mutateArg()
2023/03/25 17:06:25 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:06:25 disable threaded and collide
2023/03/25 17:06:25 prog length: 6
2023/03/25 17:06:25 prog length: 20
2023/03/25 17:06:25 HasCrashFail:true HasNetFail:false
17:06:25 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file0', [{0x20, '-'}, {0x20, '\xea}.:[$'}], 0xa, "c9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fad8eb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb31"}, 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f0000001a80)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']\xc0\xb8(Z^\x00', 0x7, 0x1)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=@ng={0x4, 0x13, "1c01d88f9abef4373c2e5c3ff42111"}, 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4752
remove dir: /root/orangefs-client/dfs-0-91
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 32
-----finish removing dir
mkdir time 29
executor 3 create dir /root/orangefs-client/dfs-0-92 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-92
receive_execute: 4, 62
receive_execute: 4, 62
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 62
receive_execute: 2, 62
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8184, flag collect 0
----- executor 0 signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 3038, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 984, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2099
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1336 tid 1336

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1336, pid 1336, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:06:25] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 39, 0
execute_one time: 0, 39
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:06:25] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:06:25] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2007, 0, 0
execute_one loop: 0, 0, 2007
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 526, write pid:526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2065, 0
execute_one time: 0, 2066
2023/03/25 17:06:27 for select break: 1
2023/03/25 17:06:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 2066, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 815
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:06:27 for select break: 1
2023/03/25 17:06:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:06:27 for select break: 1
2023/03/25 17:06:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 66, 2068, 0
before receive testcase: 0 0
time breakdown 1: 66, 2068, 0
before receive testcase: 0 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 15973, flag collect 0
----- executor 0 signal number : 11
executor 0 server cover_cnt 9 output_pos_value 3099
2023/03/25 17:06:27 for select break: 1
2023/03/25 17:06:27 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:06:27 wg wait finish
2023/03/25 17:06:27 ------ all executors finish execution
2023/03/25 17:06:27 exec time: 2132
2023/03/25 17:06:27 ----- PS len: 4
2023/03/25 17:06:27 [CLIENT] executor 3 has 20 replies
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 [SERVER] executor 0 has 9 replies
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 1409 signal and 0 cover from userspace component
2023/03/25 17:06:27 [SERVER] executor 2 has 0 replies
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
time breakdown 0: 64, 2071, 0
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 815 signal and 0 cover from userspace component
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/25 17:06:27 [SERVER] executor 1 has 0 replies
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 17:06:27 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 17:06:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:06:27 ----- no new client coverage: false, true
2023/03/25 17:06:27 mutate testcase with failures
2023/03/25 17:06:27 ----- insertCall()
2023/03/25 17:06:27 ----- insertCall()
2023/03/25 17:06:27 ----- insertCall()
2023/03/25 17:06:27 ----- insertCall()
2023/03/25 17:06:27 ----- insertCall()
2023/03/25 17:06:27 ----- insertCall()
2023/03/25 17:06:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:06:27 disable threaded and collide
2023/03/25 17:06:27 prog length: 6
2023/03/25 17:06:27 prog length: 20
2023/03/25 17:06:27 HasCrashFail:true HasNetFail:false
17:06:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001d40)=ANY=[@ANYBLOB="2321202e2f66696c6530202d20aa7d2e3a5b240ac9bf562165132082b9e9505b8a2c641f02cf1bfbb82bb32619cd5e205d63f7b820692226d05621b6ca73675b5fadadb40dd294d41442692214d75f5868384c4f2de5e892b96e6d27a8d00986774ea77c17b338a5653930417e2e6611d0f593cfbb2f1a2b8f2b8cbdb0c7409593ca2b91495acbae3353945dd61518e55b35d9efa908653971a60ad7d184748d03775ef0e09a124dffbaae5c8ce80cdbbfd00a2efd5ad7590982c050885cb3d692976717bc8072be2a6bb0f693ba8e3bc0fb2fb7b5fd1cc3e868c5ecce53eb319493bf4a8bca957f9cd0ed87bd"], 0xe0)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)='\x00', 0x1, 0x2)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$user(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=']@+\xd0+}\x00', 0x7, 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000280)='./file0\x00', 0x8000, 0x24)
readv(r0, &(0x7f00000004c0)=[{&(0x7f00000002c0)=""/248, 0xf8}, {&(0x7f00000003c0)=""/61, 0x3d}, {&(0x7f0000000400)=""/168, 0xa8}], 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), &(0x7f0000000580)={0x0, 0xfb, 0x7e, 0x2, 0x2, "2c2c74ebac18f03bce919df3e8c5d10a", "46fd8c57408820066d44a08195843aa644ccc0dfc0710e9e3daf32d689186f8f6bc5b616270ff11e023da1b661da0f10fbe116e325c4321888f0e2a027a62923e9a2b8c98bfd3d9ab7f46e42b4621caa879275859d0f22ccdcffcb895dfdc28f15b10548b64be43707"}, 0x7e, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x2)
stat(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700), &(0x7f0000000800)=@v3={0x3000000, [{0x2, 0x2}, {0x9, 0x8}], r1}, 0x18, 0x1)
getxattr(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)=@known='trusted.overlay.metacopy\x00', &(0x7f00000008c0)=""/198, 0xc6)
r2 = dup2(r0, r0)
pread64(r2, &(0x7f00000009c0)=""/4096, 0x1000, 0x10001)
setxattr$security_ima(&(0x7f00000019c0)='./file0/file0\x00', &(0x7f0000001a00), &(0x7f0000001a40)=ANY=[@ANYBLOB="04131c01dcf255813ad0bf338827ebf7f4"], 0x11, 0x0)
fstat(r2, &(0x7f0000001b00))
stat(&(0x7f0000001b80)='./file1\x00', &(0x7f0000001bc0))
fstat(r2, &(0x7f0000001c40))
fstat(r2, &(0x7f0000001cc0))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4432
remove dir: /root/orangefs-client/dfs-0-92
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 39
-----finish removing dir
receive_execute: 2, 10108
mkdir time 10069
executor 3 create dir /root/orangefs-client/dfs-0-93 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-93
receive_execute: 4, 10108
receive_execute: 5, 10108
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 10108
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 3032, flag collect 0
execute_one time: 5, 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 4 output_pos_value 2086
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1351 tid 1351

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1351, pid 1351, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:06:37] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 23, 0
execute_one time: 0, 23
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:06:37] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:06:37] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 359
----- completed 7
execute_call 0, 2013, 0, 1
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 12
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 527, write pid:527
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2055, 0
execute_one time: 1, 2055
2023/03/25 17:06:40 for select break: 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 498
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 10113, 2058, 0
before receive testcase: 0 1
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 10112, 2058, 0
before receive testcase: 0 1
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 15596, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2776
2023/03/25 17:06:40 --------- executor 3 receive reply, reply.done 1
2023/03/25 17:06:40 for select break: 1
2023/03/25 17:06:40 for select break: 1
2023/03/25 17:06:40 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:06:40 for select break: 1
2023/03/25 17:06:40 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:06:40 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:06:40 wg wait finish
2023/03/25 17:06:40 ------ all executors finish execution
2023/03/25 17:06:40 exec time: 12168
2023/03/25 17:06:40 ----- PS len: 4
2023/03/25 17:06:40 [CLIENT] executor 3 has 20 replies
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 [SERVER] executor 1 has 0 replies
2023/03/25 17:06:40 [SERVER] executor 2 has 0 replies
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 359 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:40 [SERVER] executor 0 has 9 replies
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 498 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 17:06:40 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
time breakdown 0: 10110, 2060, 0
2023/03/25 17:06:40 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:06:40 ----- no new client coverage: false, true
2023/03/25 17:06:40 mutate testcase with failures
2023/03/25 17:06:40 ----- insertCall()
2023/03/25 17:06:40 ----- generateCall 3764 symlink symlink
2023/03/25 17:06:40 ----- insertCall()
2023/03/25 17:06:40 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/25 17:06:40 ----- mutateArg()
2023/03/25 17:06:40 ----- mutateArg()
2023/03/25 17:06:40 ----- insertCall()
2023/03/25 17:06:40 ----- mutateArg()
2023/03/25 17:06:40 HasCrashFail: false, .HasNetFail: true
2023/03/25 17:06:40 disable threaded and collide
2023/03/25 17:06:40 prog length: 6
2023/03/25 17:06:40 prog length: 9
2023/03/25 17:06:40 HasCrashFail:false HasNetFail:true
17:06:40 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.7 -j DROP;iptables -A OUTPUT -d 192.168.0.7 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000280)='./file1\x00', 0x0)
symlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file1\x00')
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open(&(0x7f0000000100)='./file1\x00', 0x100, 0x25)
dup(r0)
r1 = dup(r0)
r2 = dup2(r1, r1)
fsetxattr$smack_xattr_label(r2, &(0x7f0000000080)='security.SMACK64IPIN\x00', &(0x7f00000000c0)={'#'}, 0x2, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1704, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1712, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 392
time breakdown 3: 10113, 2057, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1720, prog_size 1120
remove dir: /root/orangefs-client/dfs-0-93
remove dir time 27
-----finish removing dir
receive_execute: 2, 6069
mkdir time 6042
executor 3 create dir /root/orangefs-client/dfs-0-94 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-94
receive_execute: 4, 6069
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 6070
receive_execute: 3, 6070
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 2
----- executor 3 write_call_output, size 32765, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2690
----- completed 1
execute_call 0, 6028, 0, 2
execute_one loop: 0, 0, 6030
cover_reset in execute_call
----- executor 3 write_call_output, size 11363, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 11363, flag collect 0
----- executor 3 signal number : 683
----- completed 2
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6040, 0, 0
execute_one loop: 0, 0, 6040
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 8047, 0
execute_one time: 0, 8047
----- executor 3 write_call_output, size 0, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2004, 0, 0
execute_one loop: 0, 0, 2004
cover_reset in execute_call
----- executor 3 write_call_output, size 11977, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 11977, flag collect 0
----- executor 3 signal number : 88
----- completed 5
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 530, write pid:530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 8070, 0
execute_one time: 0, 8070
2023/03/25 17:06:54 for select break: 1
2023/03/25 17:06:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6075, 8071, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 2730
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:06:54 for select break: 1
2023/03/25 17:06:54 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:06:54 for select break: 1
2023/03/25 17:06:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 6073, 8073, 0
----- executor 0 signal number : 1233
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4343
2023/03/25 17:06:54 for select break: 1
2023/03/25 17:06:54 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:06:54 wg wait finish
2023/03/25 17:06:54 ------ all executors finish execution
2023/03/25 17:06:54 exec time: 14146
2023/03/25 17:06:54 ----- PS len: 4
2023/03/25 17:06:54 [CLIENT] executor 3 has 9 replies
2023/03/25 17:06:54 fuzzer receive 2690 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 683 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:06:54 [SERVER] executor 2 has 0 replies
2023/03/25 17:06:54 [SERVER] executor 0 has 4 replies
2023/03/25 17:06:54 ------- fuzzer executor 0 receive 2730 signal and 0 cover from userspace component
2023/03/25 17:06:54 [SERVER] executor 1 has 0 replies
2023/03/25 17:06:54 ------- fuzzer executor 0 receive 1233 signal and 0 cover from userspace component
2023/03/25 17:06:54 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 17:06:54 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 0: 6071, 8076, 0
before receive testcase: 0 0
2023/03/25 17:06:54 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 6073, 8073, 0
before receive testcase: 0 0
2023/03/25 17:06:54 ----- no new client coverage: false, true
2023/03/25 17:06:54 mutate testcase with failures
2023/03/25 17:06:54 ----- insertCall()
2023/03/25 17:06:54 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/25 17:06:54 ----- mutateArg()
2023/03/25 17:06:54 ----- insertCall()
2023/03/25 17:06:54 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 17:06:54 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:06:54 disable threaded and collide
2023/03/25 17:06:54 prog length: 6
2023/03/25 17:06:54 prog length: 7
2023/03/25 17:06:54 HasCrashFail:true HasNetFail:false
17:06:54 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$security_selinux(&(0x7f0000000100)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000080)={'/'}, 0x2, 0x0)
syz_failure_sync(0x1, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000000c0), &(0x7f0000000140)='./file0\x00', 0x8, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1264
remove dir: /root/orangefs-client/dfs-0-94
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 63
-----finish removing dir
mkdir time 6074
executor 3 create dir /root/orangefs-client/dfs-0-95 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-95
receive_execute: 5, 6137
receive_execute: 4, 6137
receive_execute: 2, 6137
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 6138
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6638, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 6638, flag collect 0
----- executor 3 signal number : 28
----- completed 3
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1100 tid 1100

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1100, pid 1100, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:07:00] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 40, 0
execute_one time: 1, 40
----- executor 3 write_call_output, size 0, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 532, write pid:532
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 47, 0
execute_one time: 1, 47
2023/03/25 17:07:00 for select break: 1
2023/03/25 17:07:00 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6144, 49, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16337, flag collect 0
----- executor 0 signal number : 1417
----- executor 0 executes write_coverage_signal cov->size 6100, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 2174, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 1758, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2110
2023/03/25 17:07:00 for select break: 1
2023/03/25 17:07:00 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 6141, 51, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
2023/03/25 17:07:00 for select break: 1
2023/03/25 17:07:00 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 0: 6139, 52, 0
2023/03/25 17:07:00 for select break: 1
2023/03/25 17:07:00 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:07:00 wg wait finish
2023/03/25 17:07:00 ------ all executors finish execution
2023/03/25 17:07:00 exec time: 6190
2023/03/25 17:07:00 ----- PS len: 4
2023/03/25 17:07:00 [CLIENT] executor 3 has 7 replies
2023/03/25 17:07:00 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:07:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:00 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 17:07:00 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:00 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:00 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:00 [SERVER] executor 0 has 4 replies
2023/03/25 17:07:00 ------- fuzzer executor 0 receive 1417 signal and 0 cover from userspace component
2023/03/25 17:07:00 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:07:00 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:07:00 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 6142, 53, 0
2023/03/25 17:07:00 [SERVER] executor 1 has 1 replies
2023/03/25 17:07:00 [SERVER] executor 2 has 0 replies
2023/03/25 17:07:00 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 17:07:00 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:07:00 ----- no new client coverage: false, true
2023/03/25 17:07:00 mutate testcase with failures
2023/03/25 17:07:00 ----- mutateArg()
2023/03/25 17:07:00 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:07:00 disable threaded and collide
2023/03/25 17:07:00 prog length: 6
2023/03/25 17:07:00 prog length: 22
2023/03/25 17:07:00 HasCrashFail:true HasNetFail:false
17:07:00 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001a80)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001980)={'#! ', './file0', [{0x20, 'com.apple.system.Security\x00'}, {0x20, 'security.SMACK64TRANSMUTE\x00'}, {}], 0xa, "4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"}, 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8808
remove dir: /root/orangefs-client/dfs-0-95
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 11
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:07:00] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:07:00] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:07:00] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:07:00] Error: Could not initialize server subsystems
[E 03/25/2023 16:07:00] Error: Could not initialize server; aborting.
receive_execute: 2, 6049
receive_execute: 4, 6049
mkdir time 6038
executor 3 create dir /root/orangefs-client/dfs-0-96 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-96
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 5, 6051
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 2, 6049
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 6398, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 18
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1116 tid 1116

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1116, pid 1116, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:07:06] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 52, 0
execute_one time: 2, 52
2023/03/25 17:07:06 for select break: 1
2023/03/25 17:07:06 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 534, write pid:534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
executor 3, execute_one inner time: 0, 52, 0
execute_one time: 0, 52
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 6056, 52, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28612, flag collect 0
----- executor 0 signal number : 1429
----- executor 0 executes write_coverage_signal cov->size 10660, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3547, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3009, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2122
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 17:07:06 for select break: 1
2023/03/25 17:07:06 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:07:06 for select break: 1
2023/03/25 17:07:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6051, 56, 0
before receive testcase: 0 0
2023/03/25 17:07:06 for select break: 1
2023/03/25 17:07:06 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:07:06 wg wait finish
2023/03/25 17:07:06 ------ all executors finish execution
2023/03/25 17:07:06 exec time: 6107
2023/03/25 17:07:06 ----- PS len: 4
2023/03/25 17:07:06 [CLIENT] executor 3 has 22 replies
2023/03/25 17:07:06 [SERVER] executor 1 has 1 replies
2023/03/25 17:07:06 [SERVER] executor 2 has 0 replies
2023/03/25 17:07:06 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:07:06 [SERVER] executor 0 has 4 replies
2023/03/25 17:07:06 ------- fuzzer executor 0 receive 1429 signal and 0 cover from userspace component
2023/03/25 17:07:06 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:07:06 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:07:06 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 6053, 58, 0
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:07:06 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:07:06 ----- no new client coverage: false, true
2023/03/25 17:07:06 mutate testcase with failures
2023/03/25 17:07:06 ----- mutateArg()
2023/03/25 17:07:06 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:07:06 disable threaded and collide
2023/03/25 17:07:06 prog length: 6
2023/03/25 17:07:06 prog length: 17
time breakdown 1: 6051, 56, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 17:07:06 HasCrashFail:true HasNetFail:false
17:07:06 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee01)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x40800, 0x40)
ftruncate(0xffffffffffffffff, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
pwritev(r1, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1f79810e9", 0x7}, {&(0x7f0000000440)}, {&(0x7f0000000540)="119a66f8e9fca5365d5bc3740504dd07ec9f97693656f80fb49f32bdd6c1875d8fe83e80b29e372b8d9c54074df48093364c0f0b75d2431e3b35e922d57dc83641319d99b0539d0750857f434a5bb519ca0b30d7aee2e63ff66827457653821da53db40298cf8f103226ff268175c8772f83ed37bdc05501b83495a0d5251e0b341f6af6cd4d54b74074b90f8595894e25dc241b96a26ce887e883e84c99c367f47857e01e7f1f3857fc62188f59cc9dc711cc3f30baba1b3ebbf1360815971b87d2608c0dd732c19ad4c718ee7f8b32bd9b7c5424f368237b4a82186ba158113723faf45649f743817f108c1f", 0xed}], 0x3, 0xf7, 0x7)
r2 = dup(r0)
fstat(r2, &(0x7f0000000680))
r3 = fcntl$dupfd(r1, 0x406, r1)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000040), &(0x7f0000000080), 0xfffffffffffffd77, 0x0)
r4 = fcntl$dupfd(r1, 0x0, r1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f00000000c0))
pwritev(r4, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xfffffee6}], 0x3, 0x6, 0x9)
syz_failure_sync(0x1, 0x3)
fsetxattr$security_ima(r3, &(0x7f0000000380), &(0x7f0000000480)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a271256f13fea94df6557edf579d8e83a30133f37c637174454e2e54f6b477149a5c0cbf1c7a2"], 0x63, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3712
remove dir: /root/orangefs-client/dfs-0-96
remove dir time 22
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:07:06] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:07:06] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:07:06] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:07:06] Error: Could not initialize server subsystems
[E 03/25/2023 16:07:06] Error: Could not initialize server; aborting.
mkdir time 10164
executor 3 create dir /root/orangefs-client/dfs-0-97 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-97
receive_execute: 3, 10187
receive_execute: 0, 10187
receive_execute: 6, 10188
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 4, 10187
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 2061
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 15
----- completed 7
execute_call 0, 60261, 0, 0
execute_one loop: 0, 0, 60261
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 60263, 0, 0
execute_one loop: 0, 0, 60263
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1133 tid 1133

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1133, pid 1133, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:08:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 60296, 0
execute_one time: 1, 60296
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 536, write pid:536
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 60297, 0
execute_one time: 0, 60297
executor 0 write_server_output
time breakdown 3: 10194, 60298, 0
2023/03/25 17:08:16 for select break: 1
2023/03/25 17:08:16 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1996
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:08:16 for select break: 1
2023/03/25 17:08:16 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2714
2023/03/25 17:08:16 for select break: 1
2023/03/25 17:08:16 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:08:16 for select break: 1
2023/03/25 17:08:16 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:08:16 wg wait finish
2023/03/25 17:08:16 ------ all executors finish execution
2023/03/25 17:08:16 exec time: 70491
time breakdown 0: 10190, 60302, 0
2023/03/25 17:08:16 ----- PS len: 4
before receive testcase: 0 1
2023/03/25 17:08:16 [CLIENT] executor 3 has 17 replies
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:16 [SERVER] executor 2 has 0 replies
2023/03/25 17:08:16 [SERVER] executor 0 has 4 replies
2023/03/25 17:08:16 [SERVER] executor 1 has 1 replies
2023/03/25 17:08:16 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:08:16 ------- fuzzer executor 0 receive 1996 signal and 0 cover from userspace component
2023/03/25 17:08:16 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/25 17:08:16 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 17:08:16 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 17:08:16 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:08:16 ----- no new client coverage: false, true
2023/03/25 17:08:16 mutate testcase with failures
2023/03/25 17:08:16 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:08:16 disable threaded and collide
2023/03/25 17:08:16 prog length: 6
2023/03/25 17:08:16 prog length: 22
time breakdown 2: 10187, 60301, 0
before receive testcase: 0 0
2023/03/25 17:08:16 HasCrashFail:true HasNetFail:false
17:08:16 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
syz_failure_sync(0x1, 0x3)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='com.apple.system.Security\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001840)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'}, &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
write$binfmt_script(r4, &(0x7f0000001a80)=ANY=[@ANYBLOB="2321202e2f66696c653020636f6d2e6170706c652e73797374656d2e5365637572697479002073656375726974792e534d41434b36345452414e534d55544500200a4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770488999616e428a8d9c7ff30a42b0db140499dff00147e96235550f873ffff8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"], 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8520
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/orangefs-client/dfs-0-97
time breakdown 1: 10192, 60301, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 24
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:08:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:08:17] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:08:17] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:08:17] Error: Could not initialize server subsystems
[E 03/25/2023 16:08:17] Error: Could not initialize server; aborting.
receive_execute: 3, 10089
mkdir time 10065
executor 3 create dir /root/orangefs-client/dfs-0-98 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-98
receive_execute: 4, 10089
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 10089
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 10091
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 2063
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1149 tid 1149

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1149, pid 1149, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:08:27] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 49, 0
execute_one time: 1, 49
----- executor 3 write_call_output, size 6402, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6410, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6410, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6402, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 6402, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:604
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 69, 0
execute_one time: 0, 69
2023/03/25 17:08:27 for select break: 1
2023/03/25 17:08:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 10095, 69, 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28650, flag collect 0
----- executor 0 signal number : 1429
----- executor 0 executes write_coverage_signal cov->size 10437, flag collect 0
----- executor 0 signal number : 318
----- executor 0 executes write_coverage_signal cov->size 3591, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 3010, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 77
2023/03/25 17:08:27 for select break: 1
2023/03/25 17:08:27 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2123
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 10093, 72, 0
2023/03/25 17:08:27 for select break: 1
2023/03/25 17:08:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10092, 73, 0
before receive testcase: 0 0
2023/03/25 17:08:27 for select break: 1
2023/03/25 17:08:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:08:27 wg wait finish
2023/03/25 17:08:27 ------ all executors finish execution
2023/03/25 17:08:27 exec time: 10163
2023/03/25 17:08:27 ----- PS len: 4
2023/03/25 17:08:27 [CLIENT] executor 3 has 22 replies
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:27 [SERVER] executor 2 has 0 replies
2023/03/25 17:08:27 [SERVER] executor 0 has 4 replies
2023/03/25 17:08:27 ------- fuzzer executor 0 receive 1429 signal and 0 cover from userspace component
2023/03/25 17:08:27 ------- fuzzer executor 0 receive 318 signal and 0 cover from userspace component
2023/03/25 17:08:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/25 17:08:27 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 17:08:27 [SERVER] executor 1 has 1 replies
2023/03/25 17:08:27 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
time breakdown 1: 10092, 73, 0
before receive testcase: 0 0
2023/03/25 17:08:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:08:27 ----- no new client coverage: false, true
2023/03/25 17:08:27 mutate testcase with failures
2023/03/25 17:08:27 ----- insertCall()
2023/03/25 17:08:27 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 17:08:27 ----- insertCall()
2023/03/25 17:08:27 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 17:08:27 ----- insertCall()
2023/03/25 17:08:27 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/25 17:08:27 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 17:08:27 ----- insertCall()
2023/03/25 17:08:27 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/25 17:08:27 ----- insertCall()
2023/03/25 17:08:27 ----- generateCall 2344 linkat linkat
2023/03/25 17:08:27 ----- mutateArg()
2023/03/25 17:08:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:08:27 disable threaded and collide
2023/03/25 17:08:27 prog length: 6
2023/03/25 17:08:27 prog length: 14
2023/03/25 17:08:27 HasCrashFail:true HasNetFail:false
17:08:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x40, 0x0)
linkat(r0, &(0x7f0000000200)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000240)='./file0\x00', 0x1000)
fsetxattr$system_posix_acl(r0, &(0x7f0000000140)='system.posix_acl_access\x00', &(0x7f0000000280)=ANY=[@ANYBLOB="02004db1974ce6005a670079a695be9c3d03b30000", @ANYRES32=0xee00, @ANYBLOB="040001000000000008000100", @ANYRES32, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee01, @ANYBLOB="100033f0000000002000020000000000"], 0x3c, 0x2)
syz_failure_sync(0x1, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000040)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000100)='./binderfs2\x00', 0x1ff)
r1 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r1, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-', 0x3}, 0x16, 0x0)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000080)='./binderfs\x00', 0x1ff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2344
remove dir: /root/orangefs-client/dfs-0-98
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 24
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:08:27] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:08:27] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:08:27] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:08:27] Error: Could not initialize server subsystems
[E 03/25/2023 16:08:27] Error: Could not initialize server; aborting.
mkdir time 20228
executor 3 create dir /root/orangefs-client/dfs-0-99 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-99
receive_execute: 4, 20252
receive_execute: 4, 20252
receive_execute: 3, 20251
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 20252
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3068
----- completed 1
execute_call 0, 17, 0, 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2672
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1234
----- executor 0 executes write_coverage_signal cov->size 3537, flag collect 0
----- executor 0 signal number : 312
----- executor 0 executes write_coverage_signal cov->size 3952, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4307
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:08:47] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 10046, 0, 0
execute_one loop: 0, 0, 10046
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 317
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10047, 0, 0
execute_one loop: 0, 0, 10047
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1384 tid 1384

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1384, pid 1384, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:08:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10088, 0
execute_one time: 0, 10088
[D 03/25/2023 16:08:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2006, 0, 0
execute_one loop: 0, 0, 2006
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 253
----- completed 10
execute_call 0, 23, 0, 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6398, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 6398, flag collect 0
----- executor 3 signal number : 28
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 11378, pid 606, write pid:606
----- executor 3 executes write_coverage_signal cov->size 11378, flag collect 0
----- executor 3 signal number : 274
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 12130, 0
execute_one time: 1, 12130
2023/03/25 17:08:59 for select break: 1
time breakdown 3: 20258, 12132, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:08:59 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
executor 2 write_server_output
----- executor 0 signal number : 222
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 147
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:08:59 for select break: 1
2023/03/25 17:08:59 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 84
----- executor 0 executes write_coverage_signal cov->size 23020, flag collect 0
time breakdown 2: 20255, 12133, 0
before receive testcase: 0 0
----- executor 0 signal number : 18
executor 0 server cover_cnt 9 output_pos_value 4798
2023/03/25 17:08:59 for select break: 1
2023/03/25 17:08:59 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20256, 12134, 0
before receive testcase: 0 0
2023/03/25 17:08:59 for select break: 1
2023/03/25 17:08:59 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:08:59 wg wait finish
2023/03/25 17:08:59 ------ all executors finish execution
2023/03/25 17:08:59 exec time: 32387
2023/03/25 17:08:59 ----- PS len: 4
2023/03/25 17:08:59 [CLIENT] executor 3 has 14 replies
2023/03/25 17:08:59 [SERVER] executor 0 has 9 replies
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 2672 signal and 0 cover from userspace component
2023/03/25 17:08:59 [SERVER] executor 1 has 0 replies
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 1234 signal and 0 cover from userspace component
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 312 signal and 0 cover from userspace component
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 17:08:59 [SERVER] executor 2 has 0 replies
2023/03/25 17:08:59 fuzzer receive 3068 signal and 0 cover from executor 3
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 222 signal and 0 cover from userspace component
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 317 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 147 signal and 0 cover from userspace component
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 253 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 17:08:59 fuzzer receive 274 signal and 0 cover from executor 3
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 20256, 12135, 0
2023/03/25 17:08:59 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:08:59 ----- no new client coverage: false, true
2023/03/25 17:08:59 mutate testcase with failures
2023/03/25 17:08:59 ----- mutateArg()
2023/03/25 17:08:59 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:08:59 disable threaded and collide
2023/03/25 17:08:59 prog length: 6
2023/03/25 17:08:59 prog length: 17
2023/03/25 17:08:59 HasCrashFail:true HasNetFail:false
17:08:59 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x1, 0x3)
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5536
remove dir: /root/orangefs-client/dfs-0-99
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 53
-----finish removing dir
mkdir time 14199
executor 3 create dir /root/orangefs-client/dfs-0-100 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-100
receive_execute: 2, 14252
receive_execute: 3, 14252
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 14252
receive_execute: 6, 14253
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 6406, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6406, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12252, flag collect 0
----- executor 0 signal number : 1411
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 1373, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 1251, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2104
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:09:13] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 308
----- completed 5
execute_call 0, 10052, 0, 1
execute_one loop: 0, 0, 10053
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 10024, 0, 0
execute_one loop: 0, 0, 10024
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10021, 0, 0
execute_one loop: 0, 0, 10021
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30098, 0, 0
execute_one loop: 0, 0, 30098
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1400 tid 1400

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1400, pid 1400, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:09:43] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30141, 0
execute_one time: 1, 30141
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
[D 03/25/2023 16:09:43] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2012, 0, 0
execute_one loop: 0, 0, 2012
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 14
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 12900, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 12900, flag collect 0
----- executor 3 signal number : 33
----- completed 13
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 16
execute_call 0, 2, 0, 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 608, write pid:608
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 32177, 0
execute_one time: 0, 32177
time breakdown 3: 14259, 32178, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
2023/03/25 17:09:45 for select break: 1
executor 1 write_server_output
2023/03/25 17:09:45 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 407
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 16990, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 10
executor 0 server cover_cnt 9 output_pos_value 2694
2023/03/25 17:09:45 for select break: 1
2023/03/25 17:09:45 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:09:45 for select break: 1
2023/03/25 17:09:45 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14255, 32182, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:09:45 for select break: 1
2023/03/25 17:09:45 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:09:45 wg wait finish
2023/03/25 17:09:45 ------ all executors finish execution
2023/03/25 17:09:45 exec time: 46437
2023/03/25 17:09:45 ----- PS len: 4
2023/03/25 17:09:45 [CLIENT] executor 3 has 17 replies
2023/03/25 17:09:45 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 308 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 14257, 32184, 0
2023/03/25 17:09:45 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:09:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:09:45 [SERVER] executor 0 has 9 replies
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 1411 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 407 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 17:09:45 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 17:09:45 [SERVER] executor 1 has 0 replies
2023/03/25 17:09:45 [SERVER] executor 2 has 0 replies
2023/03/25 17:09:45 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:09:45 ----- no new client coverage: false, true
2023/03/25 17:09:45 mutate testcase with failures
2023/03/25 17:09:45 ----- insertCall()
2023/03/25 17:09:45 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 17:09:45 ----- insertCall()
2023/03/25 17:09:45 ----- generateCall 170 dup dup
before receive testcase: 0 0
2023/03/25 17:09:45 ----- mutateArg()
time breakdown 1: 14254, 32182, 0
before receive testcase: 0 0
2023/03/25 17:09:45 ----- insertCall()
2023/03/25 17:09:45 ----- generateCall 2814 rmdir rmdir
2023/03/25 17:09:45 ----- insertCall()
2023/03/25 17:09:45 ----- generateCall 2341 lchown lchown
2023/03/25 17:09:45 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:09:45 disable threaded and collide
2023/03/25 17:09:45 prog length: 6
2023/03/25 17:09:45 prog length: 12
2023/03/25 17:09:45 HasCrashFail:true HasNetFail:false
17:09:45 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f00000009c0)='./file0\x00', 0x0)
rmdir(&(0x7f0000000140)='./file0\x00')
write$binfmt_script(0xffffffffffffffff, 0x0, 0x0)
syz_failure_sync(0x0, 0x3)
r0 = dup(0xffffffffffffffff)
write$binfmt_script(r0, &(0x7f0000000000)={'#! ', './file0', [{0x20, '{(x:-{$.}}:.^'}, {}, {}, {0x20, '}%+'}, {0x20, '&'}, {}, {0x20, '['}, {0x20, ',\xab\xac.!$.^!}&\\,.^$\xe5\x14\\-)\')'}, {0x20, '%^}\xa7@*+)'}], 0xa, "205909b158d4068b320e451125869addd9a3cea5c6b7d59b5ebf9bb6187660d64fba2e90df824fdd0cf20cefff627e4ecc7d90955001f9dd8fe814c8b83e48a0b790109ec90defe26017394876a37dcad8b838f5e24aa8942901a370cf4060be0523a7c6dd17024134b425"}, 0xb0)
rmdir(&(0x7f00000000c0)='./file0\x00')
r1 = open(&(0x7f0000000100)='./file0\x00', 0xc00, 0x1)
dup(r1)
syz_failure_sync(0x1, 0x3)
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000180)='./file0\x00', r2, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2104
remove dir: /root/orangefs-client/dfs-0-100
remove dir time 17
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-101 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-101
receive_execute: 4, 27
receive_execute: 2, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 28
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6450, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 10053, 0, 1
execute_one loop: 0, 0, 10054
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10058, 0, 0
execute_one loop: 0, 0, 10058
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2005
----- executor 0 executes write_coverage_signal cov->size 28533, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 78
executor 0 server cover_cnt 4 output_pos_value 2722
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
[E 03/25/2023 16:09:55] PVFS2 server got signal 15 (server_status_flag: 2080767)
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20076, 0, 0
execute_one loop: 0, 0, 20076
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1416 tid 1416

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1416, pid 1416, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30155, 0
execute_one time: 1, 30155
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 9, 0, 5
execute_one loop: 0, 0, 14
cover_reset in execute_call
[D 03/25/2023 16:10:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2008, 0, 0
execute_one loop: 0, 0, 2008
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 610, write pid:610
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 392
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 32170, 0
execute_one time: 0, 32170
2023/03/25 17:10:18 for select break: 1
2023/03/25 17:10:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 32170, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 42
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:10:18 for select break: 1
2023/03/25 17:10:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 32172, 0
before receive testcase: 0 0
2023/03/25 17:10:18 for select break: 1
2023/03/25 17:10:18 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 338
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 29, 32172, 0
before receive testcase: 0 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1
executor 0 server cover_cnt 9 output_pos_value 3130
2023/03/25 17:10:18 for select break: 1
2023/03/25 17:10:18 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:18 wg wait finish
2023/03/25 17:10:18 ------ all executors finish execution
2023/03/25 17:10:18 exec time: 32201
2023/03/25 17:10:18 ----- PS len: 4
2023/03/25 17:10:18 [CLIENT] executor 3 has 12 replies
2023/03/25 17:10:18 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:18 fuzzer receive 392 signal and 0 cover from executor 3
2023/03/25 17:10:18 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:18 [SERVER] executor 1 has 0 replies
time breakdown 0: 31, 32174, 0
2023/03/25 17:10:18 [SERVER] executor 0 has 9 replies
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 2005 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 42 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 338 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 17:10:18 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 17:10:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:18 ----- no new client coverage: false, true
2023/03/25 17:10:18 ----- generateCall 2750 pwritev pwritev
2023/03/25 17:10:18 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 17:10:18 ----- generateCall 2723 pread64 pread64
2023/03/25 17:10:18 ----- generateCall 2858 sendfile sendfile
2023/03/25 17:10:18 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/25 17:10:18 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 17:10:18 ----- generateCall 2723 pread64 pread64
2023/03/25 17:10:18 ----- generateCall 222 fremovexattr fremovexattr
2023/03/25 17:10:18 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 17:10:18 ----- generateCall 2858 sendfile sendfile
2023/03/25 17:10:18 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/25 17:10:18 ----- generateCall 171 dup2 dup2
2023/03/25 17:10:18 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/25 17:10:18 ----- generateCall 2858 sendfile sendfile
2023/03/25 17:10:18 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 17:10:18 map[./file0:true]
2023/03/25 17:10:18 HasCrashFail: false, .HasNetFail: false
2023/03/25 17:10:18 prog length: 20
2023/03/25 17:10:18 HasCrashFail:false HasNetFail:false
17:10:18 ---executing program 0:
---
---
---
pwritev(0xffffffffffffffff, &(0x7f0000000200)=[{&(0x7f0000000000)="182f6dbc5ac5b4252a6a03901b622ff77fe33fb082a61711f09a9a68b80df8d61da1c138738e96dbce3a64f007be1b888337f648fc2128aa9e990498efde4c5d09e5c4ff1c81f5a56eb5b09213068aa5549bb77b16d077368d54312a86a9788512752e683c4ab77c6c4b3a6c613679ce0f716edcf0db3e55144748304d27cdb541d7eeb83febedcb5b07b2a602b643071c28b6484c890a26882c83012ecc87ff58167e7b5f9a2d61f68d6d6f80f8f13bd9bcff50dbae2ec6b9c2b5faab", 0xbd}, {&(0x7f00000000c0)="4cceb6436bb10b985b90823d80682730fd6928ee138b22faad30361f834111b9aaeba2e3969313ff8418d45aefe40f3b5be77aa5e7e67f2fe2b8c16e66c93ae55868c1450ae48b43a7a6d698b1cbc07b9af1d33b62207c89c1882a9f4734d88fcdce9e6d40612866effc8ca758b8707624e91f52cdc4908fb95d2279b8c0fd64283bc707e7c62f178dfeb03de06682c928e19dfdf4ffcb9d3a97b75302e3", 0x9e}, {&(0x7f0000000180)="5abe5e42f4e87978c2095745627997fb30381e5c432afb900c4ffffb7e8c2716b7d8b838a6c2b7ff9dbe0b49ebb3d6cf1273905ab92c9ee6dcd76add6d55353936a3711c525978db17dfcf9e30b0bfb641467d5abe9c68571a5dcdfb6069bec222da684a", 0x64}], 0x3, 0xc5, 0x8)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$security_ima(r0, &(0x7f0000000240), &(0x7f0000000280)=@v1={0x2, "df55110e6bdbc96e59fe7bd5a4a1b6ad7a8ec463"}, 0x15, 0x2)
pread64(r0, &(0x7f00000002c0)=""/143, 0x8f, 0xa41)
sendfile(r0, r0, 0x0, 0x2)
fcntl$addseals(r0, 0x409, 0x1)
fsetxattr$security_ima(r0, &(0x7f0000000380), &(0x7f00000003c0)=@v1={0x2, "83f3fa1f"}, 0x5, 0x2)
pread64(r0, &(0x7f0000000400)=""/20, 0x14, 0x8)
r1 = open$dir(&(0x7f0000000440)='./file0\x00', 0x8002, 0x41)
fremovexattr(r1, &(0x7f0000000480)=@known='system.posix_acl_default\x00')
fsetxattr$security_ima(r1, &(0x7f00000004c0), &(0x7f0000000500)=@sha1={0x1, "acadf21ff835f4fc57be1606105e0dffd4d96051"}, 0x15, 0x0)
r2 = dup(r1)
r3 = openat(r1, &(0x7f0000000540)='./file0\x00', 0x2, 0x142)
sendfile(r2, r3, &(0x7f0000000580)=0xfffffffffffffffc, 0x9)
fcntl$setpipe(r3, 0x407, 0x20)
r4 = open(&(0x7f00000005c0)='\x00', 0x80, 0xd6)
r5 = dup2(r4, r0)
setxattr$security_ima(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680)=@md5={0x1, "370409927794f6eef624eb01db6a507a"}, 0x11, 0x2)
sendfile(r5, r3, &(0x7f00000006c0)=0x6, 0x1)
write$binfmt_script(r4, &(0x7f0000000700)={'#! ', './file0', [{0x20, 'system.posix_acl_default\x00'}, {0x20, '-\"@#\''}, {0x20, 'security.ima\x00'}, {0x20, 'security.ima\x00'}, {0x20, ',&'}, {0x20, '!,*)'}, {0x20, '--\xbb}%^\x01\x13'}, {}, {}, {0x20, '!'}], 0xa, "b75277048f4ff4ae2a0d01a9d66587c8f2aeb0f46e0306c7f10cca150491823c8f9c452f08e93871073fbabb3da0c0f9e57bcb3de9b63c50d8b78382893750705eee1d8f024044f4f4916d7cd5c2f95df81c5a3c13a950acfbf900c1287c47e6d4a17e4df7b2eb2848d31f0cf80ee0d960332e174de616d125146b47e6ea626ad09847c0f790721043847d523ab6dca2dd0da828a01c0c89c7453b81f7b908dadc99fe18d87f62864c38b0ea9307a0e2d17731ae43b80957569e7b3956e0b44e067094331da96915624a37cef82c"}, 0x12a)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5416
remove dir: /root/orangefs-client/dfs-0-101
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 18
-----finish removing dir
receive_execute: 1, 2034
mkdir time 2016
executor 3 create dir /root/orangefs-client/dfs-0-102 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-102
receive_execute: 4, 2034
receive_execute: 3, 2034
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 3, 2033
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 6450, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2063
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4, 0
execute_one time: 0, 4
2023/03/25 17:10:20 for select break: 1
2023/03/25 17:10:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2038, 4, 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8169, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 3026, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2085
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:10:20 for select break: 1
2023/03/25 17:10:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2036, 7, 0
before receive testcase: 0 0
2023/03/25 17:10:20 for select break: 1
2023/03/25 17:10:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 2035, 6, 0
before receive testcase: 0 1
2023/03/25 17:10:20 for select break: 1
2023/03/25 17:10:20 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:20 wg wait finish
2023/03/25 17:10:20 ------ all executors finish execution
2023/03/25 17:10:20 exec time: 2041
2023/03/25 17:10:20 ----- PS len: 4
2023/03/25 17:10:20 [CLIENT] executor 3 has 20 replies
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:20 [SERVER] executor 0 has 4 replies
2023/03/25 17:10:20 ------- fuzzer executor 0 receive 1409 signal and 0 cover from userspace component
2023/03/25 17:10:20 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:10:20 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:10:20 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:10:20 [SERVER] executor 1 has 0 replies
2023/03/25 17:10:20 [SERVER] executor 2 has 0 replies
before receive testcase: 0 0
2023/03/25 17:10:20 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:20 ----- no new client coverage: false, true
2023/03/25 17:10:20 mutate testcase with failures
2023/03/25 17:10:20 ----- insertCall()
2023/03/25 17:10:20 ----- generateCall 2458 open open
2023/03/25 17:10:20 ----- mutateArg()
2023/03/25 17:10:20 ----- insertCall()
2023/03/25 17:10:20 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/25 17:10:20 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:20 disable threaded and collide
2023/03/25 17:10:20 prog length: 6
2023/03/25 17:10:20 prog length: 12
2023/03/25 17:10:20 HasCrashFail:true HasNetFail:false
17:10:20 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fchown(0xffffffffffffffff, 0x0, 0xee01)
ftruncate(0xffffffffffffffff, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x1, 0xb)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x0)
fsetxattr$security_smack_transmute(0xffffffffffffffff, 0x0, 0x0, 0x0, 0x0)
pwritev(r0, &(0x7f0000000640)=[{&(0x7f0000000400)="ab76b1", 0x3}], 0x1, 0x0, 0x7)
dup(0xffffffffffffffff)
fstat(r0, &(0x7f00000007c0))
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000040), 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=@v2={0x2000000, [{0x1, 0xfffc0000}, {0x4, 0x1f}]}, 0x14, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1816
remove dir: /root/orangefs-client/dfs-0-102
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 2037, 7, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 16
-----finish removing dir
mkdir time 4032
executor 3 create dir /root/orangefs-client/dfs-0-103 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-103
receive_execute: 1, 4048
receive_execute: 2, 4048
receive_execute: 1, 4048
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 4049
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 18462, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 18462, flag collect 0
----- executor 3 signal number : 1022
----- completed 5
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 9275, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 9275, flag collect 0
----- executor 3 signal number : 955
----- completed 7
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1173 tid 1173

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1173, pid 1173, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:10:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
[D 03/25/2023 16:10:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 613, write pid:613
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 56, 0
execute_one time: 0, 56
time breakdown 3: 4052, 57, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 3324
----- executor 0 executes write_coverage_signal cov->size 27227, flag collect 0
time breakdown 2: 4050, 58, 0
----- executor 0 signal number : 1289
----- executor 0 executes write_coverage_signal cov->size 4119, flag collect 0
----- executor 0 signal number : 310
----- executor 0 executes write_coverage_signal cov->size 4141, flag collect 0
----- executor 0 signal number : 84
----- executor 0 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 0 signal number : 147
execute_call 0, 17, 1, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 56, 0
execute_one time: 1, 56
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
executor 0 server cover_cnt 5 output_pos_value 5170
before receive testcase: 0 1
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 3 receive reply, reply.done 1
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:10:24 wg wait finish
2023/03/25 17:10:24 ------ all executors finish execution
2023/03/25 17:10:24 exec time: 4109
2023/03/25 17:10:24 ----- PS len: 4
2023/03/25 17:10:24 [CLIENT] executor 3 has 12 replies
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 1022 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 [SERVER] executor 0 has 5 replies
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 3324 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 1289 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 310 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 147 signal and 0 cover from userspace component
2023/03/25 17:10:24 [SERVER] executor 1 has 1 replies
2023/03/25 17:10:24 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:10:24 [SERVER] executor 2 has 0 replies
time breakdown 0: 4049, 60, 0
before receive testcase: 0 1
2023/03/25 17:10:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:24 ----- no new client coverage: false, true
2023/03/25 17:10:24 mutate testcase with failures
2023/03/25 17:10:24 ----- mutateArg()
2023/03/25 17:10:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:24 disable threaded and collide
2023/03/25 17:10:24 prog length: 6
2023/03/25 17:10:24 prog length: 13
2023/03/25 17:10:24 HasCrashFail:true HasNetFail:false
17:10:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x142, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
pwritev(r0, &(0x7f0000000240)=[{&(0x7f0000000280)="61e704ad9248e77f28c34cd1af4cc2f673e36752b583064084d58ba954f9e4922f6dcbc538bbe9f31b4e29f817e8992b8ba1a87a70ad67fd3846d8dad41f8e7b9d326eeded9d8063aa29afce4253cddd1b694810e9cd7d24eb9706b60800000000000000b5f3267e35d9bf6d569a459373a8d1841227e473167de8131498c21124", 0x71}, {&(0x7f0000000180)="71d4f56879aab8c5cf1683070c3f65f978c799d31bb0aecf18a58ef316ca45dcb1b704edd256ccaed43e80af1d7306f40d384e7af215f59224d83e6a92e49b5028b3c7e62f6552128d2d5a71810ea9d9c2ce57129f7b6009417d928ced7abf409b2dc7730c1372eb21671677cc11a0c7910108fef6b4b34191ef5708a47948a4170563435f0b", 0x86}], 0x47, 0x6, 0x92)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2488
remove dir: /root/orangefs-client/dfs-0-103
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 1: 4049, 60, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 29
-----finish removing dir
receive_execute: 3, 43
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-104 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-104
receive_execute: 5, 41
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 44
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 43
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 18463, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 18463, flag collect 0
----- executor 3 signal number : 3068
----- completed 5
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13523, flag collect 0
----- executor 0 signal number : 2210
----- executor 0 executes write_coverage_signal cov->size 19068, flag collect 0
----- executor 0 signal number : 1230
----- executor 0 executes write_coverage_signal cov->size 1167, flag collect 0
----- executor 0 signal number : 284
----- executor 0 executes write_coverage_signal cov->size 1733, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3813
-----executor 1 collect shmids 3
----- directly resend shmid 3
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1436 tid 1436

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1436, pid 1436, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:24] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 615, write pid:615
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 29, 1
execute_one time: 0, 31
-----executor 1 collect shmids 1
----- directly resend shmid 1
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13522, flag collect 0
executor 2 write_server_output
-----executor 1 collect shmids 2
----- directly resend shmid 2
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 49, 32, 0
----- executor 1 signal number : 1849
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 163
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 90
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 30, 0
execute_one time: 1, 30
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 766
----- executor 0 executes write_coverage_signal cov->size 19092, flag collect 0
----- executor 0 signal number : 98
----- executor 0 executes write_coverage_signal cov->size 1424, flag collect 0
----- executor 0 signal number : 37
----- executor 0 executes write_coverage_signal cov->size 1805, flag collect 0
----- executor 0 signal number : 13
executor 0 server cover_cnt 8 output_pos_value 4739
time breakdown 2: 47, 34, 0
before receive testcase: 0 0
executor 1 server cover_cnt 4 output_pos_value 2150
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:24 for select break: 1
2023/03/25 17:10:24 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:24 wg wait finish
2023/03/25 17:10:24 ------ all executors finish execution
2023/03/25 17:10:24 exec time: 77
2023/03/25 17:10:24 ----- PS len: 4
2023/03/25 17:10:24 [CLIENT] executor 3 has 13 replies
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 3068 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:24 [SERVER] executor 0 has 8 replies
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 2210 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 1230 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 284 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 766 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 98 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 37 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
time breakdown 1: 47, 34, 0
before receive testcase: 0 0
2023/03/25 17:10:24 [SERVER] executor 1 has 4 replies
2023/03/25 17:10:24 ------- fuzzer executor 1 receive 1849 signal and 0 cover from userspace component
2023/03/25 17:10:24 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:24 ------- fuzzer executor 1 receive 163 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 1 receive 90 signal and 0 cover from userspace component
2023/03/25 17:10:24 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 17:10:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:24 ----- no new client coverage: false, true
time breakdown 0: 46, 35, 0
before receive testcase: 0 0
2023/03/25 17:10:24 mutate testcase with failures
2023/03/25 17:10:24 ----- insertCall()
2023/03/25 17:10:24 ----- generateCall 3662 setxattr setxattr
2023/03/25 17:10:24 ----- mutateArg()
2023/03/25 17:10:24 ----- insertCall()
2023/03/25 17:10:24 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/25 17:10:24 ----- insertCall()
2023/03/25 17:10:24 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 17:10:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:24 disable threaded and collide
2023/03/25 17:10:24 prog length: 6
2023/03/25 17:10:24 prog length: 13
2023/03/25 17:10:24 HasCrashFail:true HasNetFail:false
17:10:24 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
syz_failure_sync(0x0, 0x3)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
syz_failure_sync(0x1, 0x3)
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=ANY=[@ANYBLOB="62747366732e19062a5c"], &(0x7f00000004c0)=""/4096, 0x1000)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000001640), &(0x7f0000001680)='./file0\x00', 0x8, 0x1)
lsetxattr$security_capability(&(0x7f0000001580)='./file0\x00', &(0x7f00000015c0), &(0x7f0000001600)=@v2={0x2000000, [{0x7849, 0xb81}, {0x101, 0x2000}]}, 0x14, 0x1)
setxattr(&(0x7f00000014c0)='./file0\x00', &(0x7f0000001500)=@known='trusted.overlay.redirect\x00', &(0x7f0000001540)='security.capability\x00', 0x14, 0x2)
---

end of program
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2696
remove dir: /root/orangefs-client/dfs-0-104
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:10:24] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:24] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:10:24] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:10:24] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:10:24] Error: Could not initialize server subsystems
[E 03/25/2023 16:10:24] Error: Could not initialize server; aborting.
remove dir time 2045
-----finish removing dir
mkdir time 10076
executor 3 create dir /root/orangefs-client/dfs-0-105 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-105
receive_execute: 2, 12122
receive_execute: 2, 12122
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 12121
executor 2 before execute_one
receive_execute: 3, 12121
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 1, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
----- executor 3 write_call_output, size 0, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1190 tid 1190

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1190, pid 1190, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:10:36] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 1, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 43, 0
execute_one time: 0, 43
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 616, write pid:616
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 53, 0
execute_one time: 0, 53
2023/03/25 17:10:36 for select break: 1
2023/03/25 17:10:36 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 13668, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3913, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3753, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2126
2023/03/25 17:10:36 for select break: 1
2023/03/25 17:10:36 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12124, 56, 0
2023/03/25 17:10:36 for select break: 1
2023/03/25 17:10:36 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/25 17:10:36 for select break: 1
2023/03/25 17:10:36 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:36 wg wait finish
2023/03/25 17:10:36 ------ all executors finish execution
2023/03/25 17:10:36 exec time: 12178
time breakdown 1: 12124, 56, 0
before receive testcase: 0 0
2023/03/25 17:10:36 ----- PS len: 4
2023/03/25 17:10:36 [CLIENT] executor 3 has 13 replies
2023/03/25 17:10:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:36 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:36 [SERVER] executor 1 has 1 replies
2023/03/25 17:10:36 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:10:36 [SERVER] executor 0 has 4 replies
2023/03/25 17:10:36 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 17:10:36 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:10:36 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:10:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 12124, 56, 0
before receive testcase: 0 0
2023/03/25 17:10:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:36 ----- no new client coverage: false, true
2023/03/25 17:10:36 mutate testcase with failures
time breakdown 3: 12124, 54, 0
before receive testcase: 0 0
2023/03/25 17:10:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:36 disable threaded and collide
2023/03/25 17:10:36 prog length: 6
2023/03/25 17:10:36 prog length: 9
2023/03/25 17:10:36 HasCrashFail:true HasNetFail:false
17:10:36 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f00000014c0)=ANY=[@ANYBLOB="62747266732e062a5c00efd1217b45c57720e5d17a465fc5a070f118a56d242da26f0458d46a125ccf9fcfe084854d4cd354efa59d6da6dd91a3d09574fd23115a2825e9de1e602600f467c03f3d6264b46e56bb0bb66af7804255066d53bf312396378ebf7db7de153720ba80d74000672f61431b6977bec171df667728638d3e3ebe5022aaa9abd7d6853fe09981b921b3ddcc03a74dbdb4abe7e7c43cfb6588be4582"], &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1736
remove dir: /root/orangefs-client/dfs-0-105
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 1, 47
receive_execute: 1, 47
receive_execute: 2, 47
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-106 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8168, flag collect 0
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 2968, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2086
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
----- executor 3 write_call_output, size 0, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1453 tid 1453

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1453, pid 1453, value 1

-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:36] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 40, 0
execute_one time: 0, 40
----- executor 3 write_call_output, size 0, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 16:10:36] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:36] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 16:10:36] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:10:36] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:10:36] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:10:36] Error: Could not initialize server subsystems
[E 03/25/2023 16:10:36] Error: Could not initialize server; aborting.
----- executor 3 write_call_output, size 0, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2009, 0, 0
execute_one loop: 0, 0, 2009
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 618, write pid:618
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 2056, 0
execute_one time: 0, 2056
2023/03/25 17:10:38 for select break: 1
2023/03/25 17:10:38 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 51, 2056, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 668
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 19044, flag collect 0
----- executor 1 signal number : 2321
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:10:38 for select break: 1
2023/03/25 17:10:38 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 49, 2058, 0
before receive testcase: 0 0
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 35
executor 1 server cover_cnt 5 output_pos_value 2634
----- executor 0 signal number : 30
----- executor 0 executes write_coverage_signal cov->size 14837, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2956
2023/03/25 17:10:38 for select break: 1
2023/03/25 17:10:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 48, 2059, 0
before receive testcase: 0 0
2023/03/25 17:10:38 for select break: 1
2023/03/25 17:10:38 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:38 wg wait finish
2023/03/25 17:10:38 ------ all executors finish execution
2023/03/25 17:10:38 exec time: 2107
2023/03/25 17:10:38 ----- PS len: 4
2023/03/25 17:10:38 [CLIENT] executor 3 has 9 replies
2023/03/25 17:10:38 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:38 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:38 [SERVER] executor 0 has 9 replies
2023/03/25 17:10:38 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
time breakdown 0: 48, 2060, 0
2023/03/25 17:10:38 [SERVER] executor 1 has 5 replies
2023/03/25 17:10:38 ------- fuzzer executor 1 receive 2321 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 668 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 30 signal and 0 cover from userspace component
2023/03/25 17:10:38 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 17:10:38 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:38 ----- no new client coverage: false, true
2023/03/25 17:10:38 ----- enqueue testcases with server coveraged
2023/03/25 17:10:38 disable threaded and collide
2023/03/25 17:10:38 prog length: 6
2023/03/25 17:10:38 prog length: 9
2023/03/25 17:10:38 HasCrashFail:true HasNetFail:false
17:10:38 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:pinentry_exec_t:s0\x00', 0x25, 0x1)
listxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/151, 0x97)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v1={0x1000000, [{0x2, 0x3}]}, 0xc, 0x1)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
lgetxattr(&(0x7f0000000440)='./file0\x00', &(0x7f00000014c0)=ANY=[@ANYBLOB="62747266732e062a5c00efd1217b45c57720e5d17a465fc5a070f118a56d242da26f0458d46a125ccf9fcfe084854d4cd354efa59d6da6dd91a3d09574fd23115a2825e9de1e602600f467c03f3d6264b46e56bb0bb66af7804255066d53bf312396378ebf7db7de153720ba80d74000672f61431b6977bec171df667728638d3e3ebe5022aaa9abd7d6853fe09981b921b3ddcc03a74dbdb4abe7e7c43cfb6588be4582"], &(0x7f00000004c0)=""/4096, 0x1000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1736
remove dir: /root/orangefs-client/dfs-0-106
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 37
-----finish removing dir
receive_execute: 2, 4068
mkdir time 4031
executor 3 create dir /root/orangefs-client/dfs-0-107 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-107
receive_execute: 4, 4068
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 4068
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 4068
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 1
----- executor 3 cover number : 1749, signal number : 2061
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 1
----- executor 3 cover number : 1749, signal number : 15
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8169, flag collect 1
----- executor 0 cover number : 1195, signal number : 1409
----- executor 0 executes write_coverage_signal cov->size 3028, flag collect 1
----- executor 0 cover number : 300, signal number : 313
----- executor 0 executes write_coverage_signal cov->size 778, flag collect 1
----- executor 0 cover number : 280, signal number : 279
----- executor 0 executes write_coverage_signal cov->size 798, flag collect 1
----- executor 0 cover number : 98, signal number : 71
executor 0 server cover_cnt 4 output_pos_value 3958
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1468 tid 1468

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1468, pid 1468, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:42] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 34, 0
execute_one time: 0, 34
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:10:42] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:42] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 2012, 0, 0
execute_one loop: 0, 0, 2012
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 1
----- executor 3 cover number : 1749, signal number : 16
----- completed 6
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 1
----- executor 3 cover number : 1749, signal number : 16
----- completed 7
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 1
----- executor 3 cover number : 1749, signal number : 16
----- completed 8
execute_call 0, 1, 0, 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 619, write pid:619
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 1
----- executor 3 cover number : 1749, signal number : 16
----- completed 9
execute_call 0, 2, 0, 5
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 2066, 0
execute_one time: 1, 2066
time breakdown 3: 4073, 2067, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:10:44 for select break: 1
2023/03/25 17:10:44 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:44 for select break: 1
2023/03/25 17:10:44 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:10:44 for select break: 1
2023/03/25 17:10:44 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 4072, 2068, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 4071, 2068, 0
before receive testcase: 0 1
----- executor 0 cover number : 1630, signal number : 1830
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 423, signal number : 1939
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 294, signal number : 329
----- executor 0 executes write_coverage_signal cov->size 14831, flag collect 1
----- executor 0 cover number : 109, signal number : 110
executor 0 server cover_cnt 9 output_pos_value 10647
2023/03/25 17:10:44 for select break: 1
2023/03/25 17:10:44 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:44 wg wait finish
2023/03/25 17:10:44 ------ all executors finish execution
2023/03/25 17:10:44 exec time: 6155
2023/03/25 17:10:44 ----- PS len: 4
2023/03/25 17:10:44 [CLIENT] executor 3 has 9 replies
2023/03/25 17:10:44 fuzzer receive 2061 signal and 1749 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 15 signal and 1749 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 16 signal and 1749 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 16 signal and 1749 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 16 signal and 1749 cover from executor 3
2023/03/25 17:10:44 fuzzer receive 16 signal and 1749 cover from executor 3
2023/03/25 17:10:44 [SERVER] executor 0 has 9 replies
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 1409 signal and 1195 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 313 signal and 300 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 279 signal and 280 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 71 signal and 98 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 1830 signal and 1630 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 1939 signal and 423 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 329 signal and 294 cover from userspace component
2023/03/25 17:10:44 ------- fuzzer executor 0 receive 110 signal and 109 cover from userspace component
time breakdown 0: 4070, 2087, 0
2023/03/25 17:10:44 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:44 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/25 17:10:44 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:44 ----- triage return due to empty signal extra
2023/03/25 17:10:44 mutate testcase with failures
2023/03/25 17:10:44 ----- mutateArg()
2023/03/25 17:10:44 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:44 disable threaded and collide
2023/03/25 17:10:44 prog length: 6
2023/03/25 17:10:44 prog length: 3
2023/03/25 17:10:44 HasCrashFail:true HasNetFail:false
17:10:44 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
symlink(&(0x7f0000000000)='./file0/file0/file0\x00', &(0x7f0000000040)='./file0/file0\x00')
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 328
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/orangefs-client/dfs-0-107
remove dir time 29
-----finish removing dir
receive_execute: 2, 2046
receive_execute: 21, 2046
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
mkdir time 2017
executor 3 create dir /root/orangefs-client/dfs-0-108 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-108
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 21, 2045
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 2050
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 621, write pid:621
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1516, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2081
Terminated
----- executor 3 write_call_output, size 0, pid 621, write pid:621
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1484 tid 1484

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1484, pid 1484, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:46] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 44, 0
execute_one time: 0, 44
----- executor 3 write_call_output, size 0, pid 621, write pid:621
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 0, 40
2023/03/25 17:10:46 for select break: 1
2023/03/25 17:10:46 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 2071, 41, 0
before receive testcase: 0 0
----- executor 0 signal number : 920
----- executor 0 executes write_coverage_signal cov->size 1552, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 525, flag collect 0
----- executor 0 signal number : 8
executor 0 server cover_cnt 8 output_pos_value 3046
time breakdown 1: 2067, 46, 0
2023/03/25 17:10:46 for select break: 1
2023/03/25 17:10:46 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:46 for select break: 1
2023/03/25 17:10:46 --------- executor 2 receive reply, reply.done 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
time breakdown 2: 2066, 47, 0
before receive testcase: 0 0
2023/03/25 17:10:46 for select break: 1
2023/03/25 17:10:46 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:46 wg wait finish
before receive testcase: 0 1
2023/03/25 17:10:46 ------ all executors finish execution
2023/03/25 17:10:46 exec time: 2096
2023/03/25 17:10:46 ----- PS len: 4
2023/03/25 17:10:46 [CLIENT] executor 3 has 3 replies
2023/03/25 17:10:46 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:10:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:46 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:46 [SERVER] executor 0 has 8 replies
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 17:10:46 [SERVER] executor 1 has 0 replies
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 920 signal and 0 cover from userspace component
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 17:10:46 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 17:10:46 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:46 ----- no new client coverage: false, true
2023/03/25 17:10:46 mutate testcase with failures
2023/03/25 17:10:46 ----- mutateArg()
2023/03/25 17:10:46 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:46 disable threaded and collide
2023/03/25 17:10:46 prog length: 6
2023/03/25 17:10:46 prog length: 17
2023/03/25 17:10:46 HasCrashFail:true HasNetFail:false
17:10:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xbd, 0x2, 0x6, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5536
remove dir: /root/orangefs-client/dfs-0-108
time breakdown 0: 2048, 49, 0
before receive testcase: 0 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:10:46] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:46] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2032
-----finish removing dir
receive_execute: 6, 2046
receive_execute: 6, 2046
receive_execute: 5, 2044
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-109 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-109
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 8, 2046
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1499 tid 1499

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1499, pid 1499, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:48] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 24, 0
execute_one time: 0, 25
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:10:48] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:48] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 12894, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 12894, flag collect 0
----- executor 3 signal number : 34
----- completed 6
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6447, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6447, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 12996, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 12996, flag collect 0
----- executor 3 signal number : 510
----- completed 8
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 24
----- completed 10
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 12
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 16
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 622, write pid:622
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 20
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2075, 0
execute_one time: 0, 2075
2023/03/25 17:10:51 for select break: 1
2023/03/25 17:10:51 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 2054, 2076, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:10:51 for select break: 1
2023/03/25 17:10:51 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2052, 2078, 0
before receive testcase: 0 0
2023/03/25 17:10:51 for select break: 1
2023/03/25 17:10:51 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 241
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2052, 2079, 0
before receive testcase: 0 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 18414, flag collect 0
2023/03/25 17:10:51 for select break: 1
2023/03/25 17:10:51 --------- executor 0 receive reply, reply.done 1
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1642
2023/03/25 17:10:51 wg wait finish
2023/03/25 17:10:51 ------ all executors finish execution
2023/03/25 17:10:51 exec time: 4126
2023/03/25 17:10:51 ----- PS len: 4
2023/03/25 17:10:51 [CLIENT] executor 3 has 17 replies
2023/03/25 17:10:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 510 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:10:51 [SERVER] executor 0 has 5 replies
2023/03/25 17:10:51 ------- fuzzer executor 0 receive 1126 signal and 0 cover from userspace component
2023/03/25 17:10:51 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:10:51 ------- fuzzer executor 0 receive 241 signal and 0 cover from userspace component
2023/03/25 17:10:51 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 17:10:51 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 17:10:51 [SERVER] executor 1 has 0 replies
2023/03/25 17:10:51 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:51 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:51 ----- no new client coverage: false, true
2023/03/25 17:10:51 ----- enqueue testcases with server coveraged
2023/03/25 17:10:51 disable threaded and collide
2023/03/25 17:10:51 prog length: 6
2023/03/25 17:10:51 prog length: 17
2023/03/25 17:10:51 HasCrashFail:true HasNetFail:false
17:10:51 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xbd, 0x2, 0x6, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5536
remove dir: /root/orangefs-client/dfs-0-109
time breakdown 0: 2049, 2080, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 23
-----finish removing dir
mkdir time 2043
executor 3 create dir /root/orangefs-client/dfs-0-110 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-110
receive_execute: 1, 2066
receive_execute: 3, 2066
receive_execute: 4, 2066
receive_execute: 5, 2067
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1516 tid 1516

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1516, pid 1516, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:53] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 35, 0
execute_one time: 1, 35
----- executor 3 write_call_output, size 0, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
[E 03/25/2023 16:10:53] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:53] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 2034, 0, 0
execute_one loop: 0, 0, 2034
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1682, signal number : 2009
----- completed 4
execute_call 0, 8, 0, 13
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 409
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 19
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 7
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 8
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 10
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 11
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 12
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 13
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 14
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 15
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 16
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 624, write pid:624
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 1
----- executor 3 cover number : 1751, signal number : 20
----- completed 17
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 2128, 0
execute_one time: 0, 2128
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2072, 2129, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2070, 2131, 1
before receive testcase: 0 0
time breakdown 1: 2069, 2131, 0
before receive testcase: 0 1
----- executor 0 cover number : 1060, signal number : 1284
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 229, signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 17732, flag collect 1
----- executor 0 cover number : 109, signal number : 83
executor 0 server cover_cnt 5 output_pos_value 3307
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:10:55 wg wait finish
2023/03/25 17:10:55 ------ all executors finish execution
2023/03/25 17:10:55 exec time: 4216
2023/03/25 17:10:55 ----- PS len: 4
2023/03/25 17:10:55 [CLIENT] executor 3 has 17 replies
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 2009 signal and 1682 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 409 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 19 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 [SERVER] executor 1 has 0 replies
2023/03/25 17:10:55 [SERVER] executor 0 has 5 replies
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 1284 signal and 1060 cover from userspace component
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 20 signal and 1751 cover from executor 3
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 17:10:55 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 238 signal and 229 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 152 signal and 126 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 83 signal and 109 cover from userspace component
time breakdown 0: 2067, 2150, 0
before receive testcase: 0 0
2023/03/25 17:10:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:55 ----- triage return due to empty signal extra
2023/03/25 17:10:55 mutate testcase with failures
2023/03/25 17:10:55 ----- mutateArg()
2023/03/25 17:10:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:55 disable threaded and collide
2023/03/25 17:10:55 prog length: 6
2023/03/25 17:10:55 prog length: 13
2023/03/25 17:10:55 HasCrashFail:true HasNetFail:false
17:10:55 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000440)='./file0\x00', 0x608240, 0x100)
syz_failure_sync(0x0, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
syz_failure_sync(0x1, 0x3)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000180)="4feea2dfc423d4c2643dca60c80f132948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b47c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3fb4635ef755bdfd58", 0xf7}, {&(0x7f0000000280)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c4f733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235e76dd0a58904cf27f43eec9291f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783", 0xbd}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x5, 0x3, 0x2, 0x3, 0x5a, "d8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce92b524a5d2fd0eba3d4c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5a334a890a2712"}, 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2848
remove dir: /root/orangefs-client/dfs-0-110
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 19
-----finish removing dir
receive_execute: 3, 33
receive_execute: 20, 33
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-111 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-111
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 23, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 2063
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4092, flag collect 0
----- executor 0 signal number : 1405
----- executor 0 executes write_coverage_signal cov->size 1513, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 389, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2080
receive_execute: 22, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1532 tid 1532

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1532, pid 1532, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:10:55] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 25, 0
execute_one time: 0, 25
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 626, write pid:626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 56, 26, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 54, 26, 0
----- executor 0 signal number : 898
----- executor 0 executes write_coverage_signal cov->size 1537, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 646, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 0 signal number : 8
executor 0 server cover_cnt 8 output_pos_value 3023
time breakdown 1: 55, 27, 0
before receive testcase: 0 1
time breakdown 0: 36, 28, 0
before receive testcase: 0 0
before receive testcase: 0 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 0 receive reply, reply.done 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
2023/03/25 17:10:55 for select break: 1
2023/03/25 17:10:55 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:10:55 wg wait finish
2023/03/25 17:10:55 ------ all executors finish execution
2023/03/25 17:10:55 exec time: 69
2023/03/25 17:10:55 ----- PS len: 4
2023/03/25 17:10:55 [CLIENT] executor 3 has 13 replies
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:10:55 [SERVER] executor 0 has 8 replies
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 1405 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 898 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 17:10:55 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 17:10:55 [SERVER] executor 1 has 0 replies
2023/03/25 17:10:55 [SERVER] executor 2 has 0 replies
2023/03/25 17:10:55 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:10:55 ----- no new client coverage: false, true
2023/03/25 17:10:55 mutate testcase with failures
2023/03/25 17:10:55 ----- insertCall()
2023/03/25 17:10:55 ----- generateCall 2458 open open
2023/03/25 17:10:55 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:10:55 disable threaded and collide
2023/03/25 17:10:55 prog length: 6
2023/03/25 17:10:55 prog length: 18
2023/03/25 17:10:55 HasCrashFail:true HasNetFail:false
17:10:55 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r1, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
syz_failure_sync(0x0, 0x3)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
open(&(0x7f0000000b00)='./file0\x00', 0x8b00, 0x4)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
syz_failure_sync(0x1, 0x3)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5672
remove dir: /root/orangefs-client/dfs-0-111
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[E 03/25/2023 16:10:55] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:10:55] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2028
-----finish removing dir
mkdir time 2034
executor 3 create dir /root/orangefs-client/dfs-0-112 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-112
receive_execute: 9, 4062
receive_execute: 10, 4062
receive_execute: 10, 4062
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 11, 4063
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 32, 0, 0
execute_one loop: 0, 0, 32
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28591, flag collect 0
----- executor 0 signal number : 1429
----- executor 0 executes write_coverage_signal cov->size 10624, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 2723, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 2847, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2112
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:10:59] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 10039, 0, 0
execute_one loop: 0, 0, 10039
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 309
----- completed 11
execute_call 0, 10027, 0, 1
execute_one loop: 0, 0, 10028
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 10046, 0, 0
execute_one loop: 0, 0, 10046
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10038, 0, 0
execute_one loop: 0, 0, 10038
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 106
----- completed 14
execute_call 0, 10056, 0, 1
execute_one loop: 0, 0, 10057
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 50208, 0, 0
execute_one loop: 0, 0, 50208
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1547 tid 1547

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1547, pid 1547, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:11:49] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 50264, 0
execute_one time: 1, 50264
[D 03/25/2023 16:11:49] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 13
----- completed 17
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:627
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 52278, 0
execute_one time: 1, 52278
2023/03/25 17:11:51 for select break: 1
2023/03/25 17:11:51 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:11:51 for select break: 1
2023/03/25 17:11:51 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 4072, 52284, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
2023/03/25 17:11:51 for select break: 1
2023/03/25 17:11:51 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 4074, 52282, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 16548, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 9 output_pos_value 2371
2023/03/25 17:11:51 for select break: 1
2023/03/25 17:11:51 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:11:51 wg wait finish
2023/03/25 17:11:51 ------ all executors finish execution
2023/03/25 17:11:51 exec time: 56349
2023/03/25 17:11:51 ----- PS len: 4
2023/03/25 17:11:51 [CLIENT] executor 3 has 18 replies
2023/03/25 17:11:51 [SERVER] executor 0 has 9 replies
2023/03/25 17:11:51 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:11:51 [SERVER] executor 1 has 0 replies
2023/03/25 17:11:51 [SERVER] executor 2 has 0 replies
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 1429 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 17:11:51 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 106 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 17:11:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:51 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:11:51 ----- no new client coverage: false, true
2023/03/25 17:11:51 mutate testcase with failures
2023/03/25 17:11:51 ----- insertCall()
2023/03/25 17:11:51 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 17:11:51 ----- insertCall()
2023/03/25 17:11:51 ----- insertCall()
2023/03/25 17:11:51 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:11:51 disable threaded and collide
2023/03/25 17:11:51 prog length: 6
2023/03/25 17:11:51 prog length: 20
2023/03/25 17:11:51 HasCrashFail:true HasNetFail:false
17:11:51 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x800)
setxattr$incfs_size(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=0x1cb0, 0x8, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
readlinkat(r0, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/138, 0x8a)
r1 = dup2(r0, r0)
faccessat(r1, &(0x7f0000000240)='./file0\x00', 0x2)
fstat(r0, &(0x7f0000000280))
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
r2 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x800, 0xa0)
readv(r2, &(0x7f00000019c0)=[{&(0x7f0000000400)=""/223, 0xdf}, {&(0x7f0000000500)=""/90, 0x5a}, {&(0x7f0000000580)=""/159, 0x9f}, {&(0x7f0000000640)=""/149, 0x95}, {&(0x7f0000000700)=""/41, 0x29}, {&(0x7f0000000740)=""/247, 0xf7}, {&(0x7f0000000840)=""/86, 0x56}, {&(0x7f00000008c0)=""/4096, 0x1000}, {&(0x7f00000018c0)=""/205, 0xcd}], 0x9)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$addseals(r3, 0x409, 0x8)
lsetxattr$security_evm(&(0x7f0000001a80)='./file0\x00', &(0x7f0000001ac0), &(0x7f0000001b00)=@md5={0x1, "0ac3b1ce90b14346f55e90108050f523"}, 0x11, 0x2)
setxattr$security_selinux(&(0x7f0000001b40)='./file0\x00', &(0x7f0000001b80), &(0x7f0000001bc0)='system_u:object_r:dlm_control_device_t:s0\x00', 0x2a, 0x3)
getxattr(&(0x7f0000001c00)='./file0\x00', &(0x7f0000001c40)=ANY=[@ANYBLOB="731e737465012e72656375720000000073846c696e757800"], &(0x7f0000001c80)=""/4096, 0x1000)
setxattr$trusted_overlay_opaque(&(0x7f0000002c80)='./file0/file0\x00', &(0x7f0000002cc0), &(0x7f0000002d00), 0x2, 0x1)
syz_failure_sync(0x1, 0x3)
fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
setxattr$security_evm(&(0x7f0000002d40)='./file0\x00', &(0x7f0000002d80), &(0x7f0000002dc0)=@ng={0x4, 0x3, "78ec49af"}, 0x6, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4376
remove dir: /root/orangefs-client/dfs-0-112
time breakdown 0: 4071, 52286, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 4072, 52284, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 6051
executor 3 create dir /root/orangefs-client/dfs-0-113 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-113
receive_execute: 2, 6074
receive_execute: 4, 6074
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 6075
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 6074
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6446, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 6686, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6686, flag collect 0
----- executor 3 signal number : 29
----- completed 16
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
execute_call 0, 38, 0, 0
execute_one loop: 0, 0, 38
----- executor 3 signal number : 16
----- completed 17
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1217 tid 1217

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1217, pid 1217, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:11:57] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6446, pid 629, write pid:629
----- executor 3 executes write_coverage_signal cov->size 6446, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 65, 0
execute_one time: 0, 65
2023/03/25 17:11:57 for select break: 1
2023/03/25 17:11:57 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32631, flag collect 0
time breakdown 3: 6079, 66, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 64, 0
execute_one time: 0, 64
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
2023/03/25 17:11:57 for select break: 1
2023/03/25 17:11:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6078, 68, 0
2023/03/25 17:11:57 for select break: 1
2023/03/25 17:11:57 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 12164, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3730, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2126
time breakdown 2: 6079, 67, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 17:11:57 for select break: 1
2023/03/25 17:11:57 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:11:57 wg wait finish
2023/03/25 17:11:57 ------ all executors finish execution
2023/03/25 17:11:57 exec time: 6145
2023/03/25 17:11:57 ----- PS len: 4
2023/03/25 17:11:57 [CLIENT] executor 3 has 20 replies
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 [SERVER] executor 1 has 1 replies
2023/03/25 17:11:57 [SERVER] executor 0 has 4 replies
2023/03/25 17:11:57 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:11:57 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 17:11:57 [SERVER] executor 2 has 0 replies
2023/03/25 17:11:57 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:11:57 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:11:57 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:11:57 fuzzer receive 16 signal and 0 cover from executor 3
time breakdown 0: 6076, 70, 0
2023/03/25 17:11:57 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:11:57 ----- no new client coverage: false, true
2023/03/25 17:11:57 mutate testcase with failures
2023/03/25 17:11:57 ----- insertCall()
2023/03/25 17:11:57 ----- mutateArg()
2023/03/25 17:11:57 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:11:57 disable threaded and collide
2023/03/25 17:11:57 prog length: 6
2023/03/25 17:11:57 prog length: 22
2023/03/25 17:11:57 HasCrashFail:true HasNetFail:false
17:11:57 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
syz_failure_sync(0x1, 0x3)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r1, &(0x7f00000003c0)='./file0\x00', 0x60)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [{0x20, '#'}, {0x20, ']'}, {0x20, '+'}], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89a23950c69de18da6bf6df08ab5ada1d196e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70"}, 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f0000000500)=ANY=[@ANYBLOB="06020c00992029002bf9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355aca481856eefbb429a540fa1a530647db0f290744eb238c6b819ba811460d3a48e9d7783215910c23cea2e0c05fdb2b7c4cde65d2ed3934250599d38e4bbaf9b4c96a7e7aa89e33da9c8fb141497fa506a8109232312e9a7d25f90e0c4ffec971d1158bea4243361b832322a2f4bdad9b423379b8c03ffbb2392f3bf35e042ac3344ecaaf037abc22e7bf6719002566e6581831696e5dc47a5285484a1e6c488cd4d896015afde3d89441695004faaf85f7863f4d71abdb6f85c3d8d4456b2e1068114e92988c2665e9bfa795d06ebd2fcc04aff26b45daa7a1c0c0d8f0722caf6d9618a4547fc09652bb6401d46"], 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4904
remove dir: /root/orangefs-client/dfs-0-113
remove dir time 15
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:11:57] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:11:57] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:11:57] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:11:57] Error: Could not initialize server subsystems
[E 03/25/2023 16:11:57] Error: Could not initialize server; aborting.
mkdir time 6042
executor 3 create dir /root/orangefs-client/dfs-0-114 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-114
receive_execute: 0, 6057
receive_execute: 3, 6058
receive_execute: 3, 6058
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 6058
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1565 tid 1565

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1565, pid 1565, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:12:03] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 18, 0
execute_one time: 0, 18
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:12:03] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:12:03] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 2030, 0, 0
execute_one loop: 0, 0, 2030
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 631, write pid:631
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2047, 0
execute_one time: 0, 2047
time breakdown 3: 6063, 2048, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 1104
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:12:05 for select break: 1
2023/03/25 17:12:05 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 6061, 2050, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 12388, flag collect 0
2023/03/25 17:12:05 for select break: 1
2023/03/25 17:12:05 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 6061, 2050, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 17:12:05 for select break: 1
2023/03/25 17:12:05 --------- executor 3 receive reply, reply.done 1
2023/03/25 17:12:05 for select break: 1
2023/03/25 17:12:05 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:12:05 wg wait finish
2023/03/25 17:12:05 ------ all executors finish execution
2023/03/25 17:12:05 exec time: 8114
2023/03/25 17:12:05 ----- PS len: 4
2023/03/25 17:12:05 [CLIENT] executor 3 has 22 replies
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 [SERVER] executor 2 has 0 replies
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 [SERVER] executor 0 has 5 replies
2023/03/25 17:12:05 ------- fuzzer executor 0 receive 1104 signal and 0 cover from userspace component
2023/03/25 17:12:05 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:12:05 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/25 17:12:05 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 17:12:05 ------- fuzzer executor 0 receive 102 signal and 0 cover from userspace component
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 [SERVER] executor 1 has 0 replies
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:05 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:12:05 ----- no new client coverage: false, true
2023/03/25 17:12:05 mutate testcase with failures
2023/03/25 17:12:05 ----- insertCall()
2023/03/25 17:12:05 ----- mutateArg()
2023/03/25 17:12:05 ----- insertCall()
2023/03/25 17:12:05 ----- mutateArg()
2023/03/25 17:12:05 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:12:05 disable threaded and collide
2023/03/25 17:12:05 prog length: 6
2023/03/25 17:12:05 prog length: 21
2023/03/25 17:12:05 HasCrashFail:true HasNetFail:false
17:12:05 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
stat(&(0x7f0000000080)='./file1\x00', &(0x7f0000001100))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
write$binfmt_aout(r4, &(0x7f0000000300)=ANY=[@ANYBLOB="c4011b05a9030000550000003f00000065020000a00100000000000000000000e7e160ac04e696b12e14a0bddb40e4ba88ba6067d769d0f6f2a691656984a33d787a3d7c5381c89cbf8f5facf9f7b522d0b0e62f1cf4a4b5e80ba2e5fef598772dbae4a2d22d0e7957fef26ac8b496066da21753b38caeedaee7243405e5cc10c7abf735826704eba6f4789137893f44c70abca9321fd2b7e8cf53444a69d3ce14edb399fe02a56d7ca79bd74022b4ac33834faca29593f511dc87eb74e54260458db55a9905bdacdcb0ac6a9fc34026013ba1ce5cb33a3d814749d5302997c9ef529a7704d1789e6123ecfb6f397050df145bf3ex9f6)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x501040, 0x4)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5944
remove dir: /root/orangefs-client/dfs-0-114
----- executor 0 signal number : 102
executor 0 server cover_cnt 5 output_pos_value 1618
time breakdown 0: 6057, 2057, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 14
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-115 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-115
receive_execute: 1, 29
receive_execute: 7, 29
receive_execute: 9, 30
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 29
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1581 tid 1581

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1581, pid 1581, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:12:05] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 22, 0
execute_one time: 1, 22
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:12:05] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:12:05] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 32765, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2006
----- completed 3
execute_call 0, 2008, 0, 6
execute_one loop: 0, 0, 2014
cover_reset in execute_call
----- executor 3 write_call_output, size 12996, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 12996, flag collect 0
----- executor 3 signal number : 891
----- completed 4
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 33
----- completed 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6696, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 6696, flag collect 0
----- executor 3 signal number : 30
----- completed 10
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 30
----- completed 14
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 30
----- completed 16
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6696, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 6696, flag collect 0
----- executor 3 signal number : 30
----- completed 18
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:633
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2091, 0
execute_one time: 0, 2091
2023/03/25 17:12:08 for select break: 1
2023/03/25 17:12:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 39, 2092, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1284
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:12:08 for select break: 1
2023/03/25 17:12:08 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 240
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 37, 2093, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/25 17:12:08 for select break: 1
2023/03/25 17:12:08 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 36, 2094, 0
----- executor 0 signal number : 92
----- executor 0 executes write_coverage_signal cov->size 15464, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1720
2023/03/25 17:12:08 for select break: 1
2023/03/25 17:12:08 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:12:08 wg wait finish
2023/03/25 17:12:08 ------ all executors finish execution
2023/03/25 17:12:08 exec time: 2124
2023/03/25 17:12:08 ----- PS len: 4
2023/03/25 17:12:08 [CLIENT] executor 3 has 21 replies
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 2006 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 891 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:08 [SERVER] executor 0 has 5 replies
2023/03/25 17:12:08 ------- fuzzer executor 0 receive 1284 signal and 0 cover from userspace component
2023/03/25 17:12:08 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
time breakdown 0: 30, 2095, 0
2023/03/25 17:12:08 ------- fuzzer executor 0 receive 240 signal and 0 cover from userspace component
2023/03/25 17:12:08 ------- fuzzer executor 0 receive 92 signal and 0 cover from userspace component
2023/03/25 17:12:08 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 17:12:08 [SERVER] executor 1 has 0 replies
2023/03/25 17:12:08 [SERVER] executor 2 has 0 replies
2023/03/25 17:12:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:12:08 ----- no new client coverage: false, true
2023/03/25 17:12:08 mutate testcase with failures
2023/03/25 17:12:08 ----- insertCall()
2023/03/25 17:12:08 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 17:12:08 ----- insertCall()
2023/03/25 17:12:08 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/25 17:12:08 ----- insertCall()
2023/03/25 17:12:08 ----- generateCall 2343 link link
2023/03/25 17:12:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:12:08 disable threaded and collide
2023/03/25 17:12:08 prog length: 6
2023/03/25 17:12:08 prog length: 20
2023/03/25 17:12:08 HasCrashFail:true HasNetFail:false
17:12:08 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
link(&(0x7f0000000a00)='./file0\x00', &(0x7f0000000a40)='./file0\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='security.SMACK64MMAP\x00', &(0x7f00000003c0)=ANY=[@ANYBLOB='\x00\x00\x00\x00'], 0x4, 0x1)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000880)='./file1\x00', &(0x7f00000008c0), &(0x7f0000000900), 0x2, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
syz_failure_sync(0x0, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
syz_failure_sync(0x1, 0x3)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)=ANY=[@ANYBLOB="747275737465a783940065726c61792e72656469726563740000"], 0x1a, 0x1)
lsetxattr$trusted_overlay_origin(&(0x7f0000000940)='./file1\x00', &(0x7f0000000980), &(0x7f00000009c0), 0x2, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4616
remove dir: /root/orangefs-client/dfs-0-115
remove dir time 29
-----finish removing dir
mkdir time 2034
executor 3 create dir /root/orangefs-client/dfs-0-116 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-116
receive_execute: 1, 2072
receive_execute: 2, 2072
receive_execute: 2, 2072
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 2068
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1431
----- executor 0 executes write_coverage_signal cov->size 16643, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4279, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 4389, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2107
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:12:10] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10034, 0, 0
execute_one loop: 0, 0, 10034
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1596 tid 1596

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1596, pid 1596, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:12:20] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10077, 0
execute_one time: 0, 10077
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
[D 03/25/2023 16:12:20] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 634, write pid:634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
executor 3, execute_one inner time: 0, 12089, 0
execute_one time: 1, 12089
time breakdown 3: 2074, 12093, 0
executor 1 write_server_output
2023/03/25 17:12:22 for select break: 1
2023/03/25 17:12:22 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:12:22 for select break: 1
2023/03/25 17:12:22 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2074, 12093, 0
before receive testcase: 0 0
2023/03/25 17:12:22 for select break: 1
2023/03/25 17:12:22 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 2074, 12093, 0
before receive testcase: 0 0
----- executor 0 signal number : 137
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 17495, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2337
2023/03/25 17:12:22 for select break: 1
2023/03/25 17:12:22 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:12:22 wg wait finish
2023/03/25 17:12:22 ------ all executors finish execution
2023/03/25 17:12:22 exec time: 14167
2023/03/25 17:12:22 ----- PS len: 4
2023/03/25 17:12:22 [CLIENT] executor 3 has 20 replies
2023/03/25 17:12:22 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:22 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 17:12:22 [SERVER] executor 0 has 9 replies
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 1431 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 17:12:22 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
time breakdown 0: 2073, 12096, 0
before receive testcase: 0 0
2023/03/25 17:12:22 [SERVER] executor 1 has 0 replies
2023/03/25 17:12:22 [SERVER] executor 2 has 0 replies
2023/03/25 17:12:22 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:12:22 ----- no new client coverage: false, true
2023/03/25 17:12:22 mutate testcase with failures
2023/03/25 17:12:22 ----- mutateArg()
2023/03/25 17:12:22 ----- insertCall()
2023/03/25 17:12:22 ----- removeCall()
2023/03/25 17:12:22 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:12:22 disable threaded and collide
2023/03/25 17:12:22 prog length: 6
2023/03/25 17:12:22 prog length: 20
2023/03/25 17:12:22 HasCrashFail:true HasNetFail:false
17:12:22 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x30)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
r1 = fcntl$dupfd(r0, 0x406, r0)
linkat(r1, &(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00', 0x1000)
renameat(r1, &(0x7f0000000180)='./file0\x00', r0, &(0x7f00000001c0)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000200)='./file0\x00', r2, 0x0)
r3 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$dupfd(r0, 0x0, r3)
pread64(r4, &(0x7f0000000d00)=""/225, 0xe1, 0x3)
r5 = open$dir(&(0x7f0000000e00)='./file0\x00', 0x0, 0x10b)
syz_failure_sync(0x0, 0x3)
linkat(r5, &(0x7f0000000e40)='./file0\x00', r1, &(0x7f0000000e80)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000ec0)='./file0\x00', 0x200, 0x10)
pread64(r3, &(0x7f0000000f00)=""/86, 0x56, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000f80)='./file0\x00', &(0x7f0000000fc0), &(0x7f0000001000)='./file1\x00', 0x8, 0x1)
r6 = dup2(r4, r1)
syz_failure_sync(0x1, 0x3)
openat(r6, &(0x7f0000001040)='./file0\x00', 0x0, 0x1ac)
sendfile(r6, 0xffffffffffffffff, &(0x7f0000001080)=0xffff, 0xa7)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3240
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/orangefs-client/dfs-0-116
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 14
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-117 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-117
receive_execute: 1, 25
receive_execute: 4, 24
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 25
receive_execute: 4, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6454, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 6454, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20461, flag collect 0
----- executor 0 signal number : 1423
----- executor 0 executes write_coverage_signal cov->size 7565, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1945, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 1995, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2099
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:12:22] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 10043, 0, 0
execute_one loop: 0, 0, 10043
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 10042, 0, 0
execute_one loop: 0, 0, 10042
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20085, 0, 0
execute_one loop: 0, 0, 20085
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1612 tid 1612

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1612, pid 1612, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:12:42] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 32765, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 410
----- completed 18
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 636, write pid:636
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 20115, 0
execute_one time: 0, 20116
2023/03/25 17:12:42 for select break: 1
2023/03/25 17:12:42 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 29, 20116, 0
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:12:42 for select break: 1
2023/03/25 17:12:42 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 20117, 0
before receive testcase: 0 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 20115, 0
execute_one time: 0, 20115
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 142
----- executor 0 executes write_coverage_signal cov->size 7601, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 2334, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 2067, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 8 output_pos_value 2285
2023/03/25 17:12:42 for select break: 1
2023/03/25 17:12:42 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 26, 20118, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:12:42 for select break: 1
2023/03/25 17:12:42 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:12:42 wg wait finish
2023/03/25 17:12:42 ------ all executors finish execution
2023/03/25 17:12:42 exec time: 20150
2023/03/25 17:12:42 ----- PS len: 4
2023/03/25 17:12:42 [CLIENT] executor 3 has 20 replies
2023/03/25 17:12:42 [SERVER] executor 0 has 8 replies
2023/03/25 17:12:42 [SERVER] executor 1 has 0 replies
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 1423 signal and 0 cover from userspace component
2023/03/25 17:12:42 [SERVER] executor 2 has 0 replies
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/25 17:12:42 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:12:42 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 142 signal and 0 cover from userspace component
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 29, 20125, 0
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 410 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:12:42 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/25 17:12:42 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:12:42 ----- no new client coverage: false, true
2023/03/25 17:12:42 mutate testcase with failures
2023/03/25 17:12:42 ----- insertCall()
2023/03/25 17:12:42 ----- generateCall 516 getxattr getxattr
2023/03/25 17:12:42 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:12:42 disable threaded and collide
2023/03/25 17:12:42 prog length: 6
2023/03/25 17:12:42 prog length: 5
2023/03/25 17:12:42 HasCrashFail:true HasNetFail:false
17:12:42 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000000000)='./file0/../file0\x00', &(0x7f0000000040)=@known='system.sockprotoname\x00', &(0x7f0000000080)=""/14, 0xe)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x0)
lchown(&(0x7f0000000140)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 656
remove dir: /root/orangefs-client/dfs-0-117
[D 03/25/2023 16:12:42] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2022
-----finish removing dir
mkdir time 8053
executor 3 create dir /root/orangefs-client/dfs-0-118 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-118
receive_execute: 1, 10075
receive_execute: 9, 10075
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 10076
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 8, 10076
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 639, write pid:639
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1628 tid 1628

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1628, pid 1628, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:12:52] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 22, 0
execute_one time: 1, 22
----- executor 3 write_call_output, size 0, pid 639, write pid:639
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:12:52] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:12:52] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 639, write pid:639
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 2013, 0, 0
execute_one loop: 0, 0, 2013
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 639, write pid:639
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2003
----- completed 4
execute_call 0, 20107, 0, 3
execute_one loop: 0, 0, 20110
cover_reset in execute_call
----- executor 3 write_call_output, size 16061, pid 639, write pid:639
----- executor 3 executes write_coverage_signal cov->size 16061, flag collect 0
----- executor 3 signal number : 1152
----- completed 5
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 22152, 0
execute_one time: 0, 22152
2023/03/25 17:13:14 for select break: 1
2023/03/25 17:13:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10086, 22154, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1448
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:13:14 for select break: 1
2023/03/25 17:13:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10084, 22157, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 5 output_pos_value 1942
2023/03/25 17:13:14 for select break: 1
2023/03/25 17:13:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10084, 22157, 0
before receive testcase: 0 0
2023/03/25 17:13:14 for select break: 1
2023/03/25 17:13:14 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:13:14 wg wait finish
2023/03/25 17:13:14 ------ all executors finish execution
2023/03/25 17:13:14 exec time: 32238
2023/03/25 17:13:14 ----- PS len: 4
2023/03/25 17:13:14 [CLIENT] executor 3 has 5 replies
2023/03/25 17:13:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:14 fuzzer receive 2003 signal and 0 cover from executor 3
2023/03/25 17:13:14 fuzzer receive 1152 signal and 0 cover from executor 3
2023/03/25 17:13:14 [SERVER] executor 0 has 5 replies
2023/03/25 17:13:14 ------- fuzzer executor 0 receive 1448 signal and 0 cover from userspace component
2023/03/25 17:13:14 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:13:14 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/25 17:13:14 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/25 17:13:14 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 17:13:14 [SERVER] executor 1 has 0 replies
2023/03/25 17:13:14 [SERVER] executor 2 has 0 replies
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 10076, 22162, 0
before receive testcase: 0 0
2023/03/25 17:13:14 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:13:14 ----- no new client coverage: false, true
2023/03/25 17:13:14 ----- enqueue testcases with server coveraged
2023/03/25 17:13:14 disable threaded and collide
2023/03/25 17:13:14 prog length: 6
2023/03/25 17:13:14 prog length: 5
2023/03/25 17:13:14 HasCrashFail:true HasNetFail:false
17:13:14 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
getxattr(&(0x7f0000000000)='./file0/../file0\x00', &(0x7f0000000040)=@known='system.sockprotoname\x00', &(0x7f0000000080)=""/14, 0xe)
open$dir(&(0x7f0000000b00)='./file0\x00', 0x20040, 0x0)
lchown(&(0x7f0000000140)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 656
remove dir: /root/orangefs-client/dfs-0-118
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 2025
executor 3 create dir /root/orangefs-client/dfs-0-119 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-119
receive_execute: 6, 2046
receive_execute: 3, 2046
receive_execute: 8, 2046
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 2047
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 642, write pid:642
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1645 tid 1645

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1645, pid 1645, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:13:16] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 0, pid 642, write pid:642
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 32, 0
execute_one time: 1, 32
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:13:16] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:13:16] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 642, write pid:642
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 2011, 0, 0
execute_one loop: 0, 0, 2011
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 642, write pid:642
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1678, signal number : 2002
----- completed 4
execute_call 0, 10060, 0, 7
execute_one loop: 0, 0, 10067
cover_reset in execute_call
----- executor 3 write_call_output, size 16069, pid 642, write pid:642
----- executor 3 executes write_coverage_signal cov->size 16069, flag collect 1
----- executor 3 cover number : 2231, signal number : 1152
----- completed 5
execute_call 0, 4, 0, 3
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 12116, 0
execute_one time: 1, 12116
2023/03/25 17:13:28 for select break: 1
2023/03/25 17:13:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 2057, 12118, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 2049, 12120, 0
before receive testcase: 0 1
time breakdown 1: 2054, 12120, 0
before receive testcase: 0 1
----- executor 0 cover number : 931, signal number : 1126
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/25 17:13:28 for select break: 1
2023/03/25 17:13:28 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:13:28 for select break: 1
2023/03/25 17:13:28 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 229, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 109, signal number : 102
executor 0 server cover_cnt 5 output_pos_value 3040
2023/03/25 17:13:28 for select break: 1
2023/03/25 17:13:28 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:13:28 wg wait finish
2023/03/25 17:13:28 ------ all executors finish execution
2023/03/25 17:13:28 exec time: 14187
2023/03/25 17:13:28 ----- PS len: 4
2023/03/25 17:13:28 [CLIENT] executor 3 has 5 replies
2023/03/25 17:13:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:28 fuzzer receive 2002 signal and 1678 cover from executor 3
2023/03/25 17:13:28 fuzzer receive 1152 signal and 2231 cover from executor 3
2023/03/25 17:13:28 [SERVER] executor 0 has 5 replies
2023/03/25 17:13:28 ------- fuzzer executor 0 receive 1126 signal and 931 cover from userspace component
2023/03/25 17:13:28 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/25 17:13:28 ------- fuzzer executor 0 receive 239 signal and 229 cover from userspace component
2023/03/25 17:13:28 ------- fuzzer executor 0 receive 152 signal and 126 cover from userspace component
2023/03/25 17:13:28 ------- fuzzer executor 0 receive 102 signal and 109 cover from userspace component
2023/03/25 17:13:28 [SERVER] executor 1 has 0 replies
2023/03/25 17:13:28 [SERVER] executor 2 has 0 replies
2023/03/25 17:13:28 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:13:28 ----- triage return due to empty signal extra
2023/03/25 17:13:28 mutate testcase with failures
2023/03/25 17:13:28 ----- mutateArg()
2023/03/25 17:13:28 ----- mutateArg()
2023/03/25 17:13:28 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:13:28 disable threaded and collide
2023/03/25 17:13:28 prog length: 6
2023/03/25 17:13:28 prog length: 13
2023/03/25 17:13:28 HasCrashFail:true HasNetFail:false
17:13:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fdatasync(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xee00)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x16)
ftruncate(0xffffffffffffffff, 0x4)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x402c3, 0x100)
r1 = fcntl$dupfd(r0, 0x406, r0)
syz_failure_sync(0x0, 0x3)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
syz_failure_sync(0x1, 0x3)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_GET_RW_HINT(r2, 0x40b, &(0x7f00000000c0))
pwritev(r2, &(0x7f0000000340)=[{&(0x7f0000000100)="13b768bb3afdcff3a8708b30583f7dbab31f66aa919153febc3a1317376b12b61a78c5b1d7a888148e8048c048ad5fde7757685ac6ca539eeb4d6d5b21d71906f6f8289723e09f671db07d2dbbd5763c", 0x50}, {&(0x7f0000000640)="4feea2dfc423d4c2643dca60c80f13bf872f71135df44b2948cae4619ab21cb136ea59c63653c6313aab1e209800e3f745b45bfff5bbbba6d14d06abcf7c68444fb31005dbdef45d834e960f91f13c0962bba68ea91374f82da95bf64840da54907f9e495f86be049bd720bbec2174886964cdb11a4fcc4c9d988c40e9e519a38a786fda9e0bbbe1d3b6be0d6a7ada9b698f93f9d4d304475b8560c83c310023f3c88b9032a084001c7955e23fcd9014da8091832d0776d95e611e2badd9d0d4111912f9d8d0689af2ac3f4d4aef83a8555670be0ff2fcaa5c54f0d3cf9649aff446dfe8eaf7832ba07fbdc247671037f211f0614b325d24a498b18a7cbd0824cf3f", 0x102}, {&(0x7f00000003c0)="09fada161b5a9c1a9125212af44d937f54071ee68a7ae24ff93aaee5faefaa23ae63c9f2cb8c06733acbb301c9c279b2c877211abbcdd71e14b66d2bdcd12de3712e7c58ead843c565a101ab485f1e83b974a3508b1f8d4e21801235d06dd0a58904cf27f47e533717f679f7587c33908081847d03f935ff017aa492c0304884989fdfcb79ac50a1ff20bfdf2d17856012e8feb6b6017fef4e133b7730b3f56724489ab33ac56167cf27e3e257ddd83c81531c3ebc8bd87a470e82b783c5e6b83170ae9dcc049e9ec654e94b63a5d67a8de52693878ba450c7925868cac1e71c1db647a3af3a87120aaeb34e632061e733884143f8eee584faa8fd8ec28938425d1392b7c3", 0x105}], 0x3, 0x6, 0x9)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f0000000500)=ANY=[@ANYBLOB="05030200000003005ad8ee1f99c6852ef4837cb5f4c9c2ed709ece3ff19195d00b46de99e62d45b318d93a1d2fed47af1f2b95590e917fd7959aea85ce5b924c350b74a2f7f7e9f912261636657e41b77d63f8fc4e5ad8974e7f27bdd09de642608a6222a2452aa08f93e4de837469af9981cbac4949a8c7d00112c826188dffdffd77b61738530462c3ef9f3d28c9478e70483dcbbeaa59530524920d434859a221e7fec4fe918559d33f8236b1cee44a399bff299c3cf98e8053e5cf952902b561d703ef7050f9091a0306161b19ddff6e2b827b936d0330f843ac457ecd498625c9dbd2076f90768b8c21a53b121290bae2b2844f65e142e9a87666940f9869eead1171234ad8de98fb7ed71383f9a9"], 0x63, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2920
remove dir: /root/orangefs-client/dfs-0-119
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 2052, 12141, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 30
-----finish removing dir
mkdir time 10177
executor 3 create dir /root/orangefs-client/dfs-0-120 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-120
receive_execute: 22, 10207
receive_execute: 1, 10207
receive_execute: 21, 10207
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 23, 10207
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 2813
----- completed 5
execute_call 0, 20121, 0, 3
execute_one loop: 0, 0, 20124
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20125, 0, 0
execute_one loop: 0, 0, 20125
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1999
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 517
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2896
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1661 tid 1661

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1661, pid 1661, value 1

-----executor 0 collect shmids 3
----- directly resend shmid 3
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:13:59] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 644, write pid:644
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 20166, 0
execute_one time: 1, 20166
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0, execute_one inner time: 0, 20167, 0
execute_one time: 0, 20167
2023/03/25 17:13:59 for select break: 1
2023/03/25 17:13:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10230, 20168, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:13:59 for select break: 1
2023/03/25 17:13:59 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:13:59 for select break: 1
time breakdown 2: 10229, 20168, 0
before receive testcase: 0 0
2023/03/25 17:13:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10228, 20169, 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
executor 0 server cover_cnt 8 output_pos_value 2970
2023/03/25 17:13:59 for select break: 1
2023/03/25 17:13:59 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:13:59 wg wait finish
2023/03/25 17:13:59 ------ all executors finish execution
2023/03/25 17:13:59 exec time: 30378
2023/03/25 17:13:59 ----- PS len: 4
2023/03/25 17:13:59 [CLIENT] executor 3 has 13 replies
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 [SERVER] executor 0 has 8 replies
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 1999 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 517 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/25 17:13:59 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 17:13:59 [SERVER] executor 2 has 0 replies
2023/03/25 17:13:59 fuzzer receive 2813 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:13:59 [SERVER] executor 1 has 0 replies
2023/03/25 17:13:59 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:13:59 ----- no new client coverage: false, true
2023/03/25 17:13:59 mutate testcase with failures
2023/03/25 17:13:59 ----- mutateArg()
2023/03/25 17:13:59 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:13:59 disable threaded and collide
2023/03/25 17:13:59 prog length: 6
2023/03/25 17:13:59 prog length: 22
2023/03/25 17:13:59 HasCrashFail:true HasNetFail:false
17:13:59 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x1015, 0x0, 0x5, "3bcc72875b5dc3993c39edd67e69a684", ""}, 0x1015, 0x1)
stat(&(0x7f0000001080)='./file0\x00', &(0x7f00000010c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, r0, 0xee00)
r1 = open(&(0x7f0000001140)='./file0\x00', 0x800, 0x42)
pread64(r1, &(0x7f0000001180)=""/176, 0xb0, 0x5)
preadv(r1, &(0x7f0000001540)=[{&(0x7f0000001240)=""/15, 0xf}, {&(0x7f0000001280)=""/130, 0x82}, {&(0x7f0000001340)=""/59, 0x3b}, {&(0x7f0000001380)=""/157, 0x9d}, {&(0x7f0000001440)=""/91, 0x5b}, {&(0x7f00000014c0)=""/91, 0x5b}], 0x6, 0x8e7, 0x7fffffff)
r2 = open$dir(&(0x7f00000015c0)='./file0\x00', 0x100, 0x111)
fcntl$setstatus(r2, 0x4, 0x40c00)
stat(&(0x7f0000001600)='./file0\x00', &(0x7f0000001640))
fremovexattr(r2, &(0x7f00000016c0)=@known='system.advise\x00')
sendfile(r1, r1, 0x0, 0xffff)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000001700)='./cgroup/syz1\x00', 0x1ff)
r3 = fcntl$dupfd(r1, 0x0, r1)
fcntl$lock(r3, 0x26, &(0x7f0000001740)={0x2, 0x4, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getown(r2, 0x9)
fsetxattr$security_smack_transmute(r3, &(0x7f0000001780), &(0x7f00000017c0), 0x4, 0x0)
lgetxattr(&(0x7f0000001800)='./file0\x00', &(0x7f0000001a80)=ANY=[@ANYBLOB="7365637572697479de6222827d82c9bc525dd22e7365638680e3a520da22f03f724f494975726974792e534d41434b36345452414e534d55544500"], &(0x7f0000001880)=""/176, 0xb0)
r4 = open(&(0x7f0000001940)='./file0\x00', 0x14800, 0x100)
syz_failure_sync(0x1, 0x3)
write$binfmt_script(r4, &(0x7f0000001980)={'#! ', './file0', [{0x20, 'com.apple.system.Security\x00'}, {0x20, 'security.SMACK64TRANSMUTE\x00'}, {}], 0xa, "4aff140e2d73778572d6894e225b81d3b7a792ff6638dbdb986cdeec2219f552335e7261a109620bfa89fdaa8f7764ff3b472f5cb3710a3f349453d87dde458fb1efd12db43c7bfadd9900d64d6cd9157405778f9e4dbfae571ad17191d2f99286bf4b2f8d163f1a19c705a5412d1b09cc7880f5f02ccbeca3c64a770440499dd50f147e96235550f8732b2b8308331dc8ab587aa927d730c3c5173496fcf3c0afab0a"}, 0xe5)
fcntl$setstatus(r1, 0x4, 0x42000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8776
remove dir: /root/orangefs-client/dfs-0-120
time breakdown 0: 10208, 20170, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 1
----- directly resend shmid 1
[E 03/25/2023 16:13:59] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:13:59] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2043
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-121 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-121
receive_execute: 2, 2055
receive_execute: 4, 2055
receive_execute: 3, 2055
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 2056
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6458, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 2063
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6458, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6458, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6458, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 16
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6466, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 6466, flag collect 0
----- executor 3 signal number : 16
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6458, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 16
----- completed 19
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1247 tid 1247

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1247, pid 1247, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:14:01] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 646, write pid:646
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 42, 0
execute_one time: 0, 42
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28653, flag collect 0
time breakdown 3: 2060, 43, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1433
----- executor 0 executes write_coverage_signal cov->size 10636, flag collect 0
----- executor 0 signal number : 316
----- executor 0 executes write_coverage_signal cov->size 3135, flag collect 0
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 2059, 44, 0
before receive testcase: 0 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 2901, flag collect 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 42, 0
execute_one time: 1, 42
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
----- executor 0 signal number : 75
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2058, 45, 0
executor 0 server cover_cnt 4 output_pos_value 2126
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:14:01 wg wait finish
2023/03/25 17:14:01 ------ all executors finish execution
2023/03/25 17:14:01 exec time: 2101
2023/03/25 17:14:01 ----- PS len: 4
2023/03/25 17:14:01 [CLIENT] executor 3 has 22 replies
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 [SERVER] executor 1 has 1 replies
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:14:01 [SERVER] executor 2 has 0 replies
2023/03/25 17:14:01 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 1433 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 316 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 2057, 46, 0
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:01 ----- no new client coverage: false, true
2023/03/25 17:14:01 mutate testcase with failures
2023/03/25 17:14:01 ----- mutateArg()
2023/03/25 17:14:01 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:01 disable threaded and collide
2023/03/25 17:14:01 prog length: 6
2023/03/25 17:14:01 prog length: 17
2023/03/25 17:14:01 HasCrashFail:true HasNetFail:false
17:14:01 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x4, 0x1)
setxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='TRUE', 0x4, 0x1)
lsetxattr$security_ima(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x3, 0x2, 0xa, 0xfffff800, 0x66, "39384e14a3f2ddba63d8a782d563d003966a54aa318c4b9551c5584bce15b91a4560556db2a6b12b912dc0bc84ba915a1e08b089b4b22b70c8c36f4e588d5b546e09cc7aee1180ddae2de975d50c76f4748fdfa68fa17d5bbcf93f98e3eea961112254793403"}, 0x6f, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file2\x00', &(0x7f0000000880)='security.SMACK64IPIN\x00', &(0x7f0000000380)={',2#'}, 0x1, 0x0)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/file0\x00', 0xe, 0x3)
link(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0)='./file0\x00')
link(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)='./file0/file0\x00')
lremovexattr(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)=@known='user.syz\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680), 0x2, 0x3)
syz_failure_sync(0x1, 0x3)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f00000006c0), &(0x7f0000000700)='./file0/file0\x00', 0xe, 0x6)
lsetxattr$trusted_overlay_origin(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x2)
fcntl$setpipe(r0, 0x407, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000800)='security.SMACK64IPOUT\x00', &(0x7f0000000840)={'trusted.overlay.redirect\x00'}, 0x1a, 0x1)
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3976
remove dir: /root/orangefs-client/dfs-0-121
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 2, 44
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-122 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-122
receive_execute: 0, 42
receive_execute: 3, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 45
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 20
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 10015, flag collect 0
----- executor 1 signal number : 913
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 13
executor 1 server cover_cnt 3 output_pos_value 941
Terminated
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1262 tid 1262

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1262, pid 1262, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:14:01] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 62, 0
execute_one time: 0, 62
[D 03/25/2023 16:14:01] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[D 03/25/2023 16:14:01] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 6450, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 15
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 647, write pid:647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 71, 0
execute_one time: 0, 71
time breakdown 3: 48, 73, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 1536
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1523
----- executor 0 executes write_coverage_signal cov->size 15166, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 4508, flag collect 0
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 4152, flag collect 0
----- executor 0 signal number : 75
time breakdown 2: 46, 76, 0
before receive testcase: 0 0
----- executor 1 signal number : 159
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2213
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 3 receive reply, reply.done 1
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 88
----- executor 1 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 1 signal number : 29
executor 1 server cover_cnt 8 output_pos_value 2768
time breakdown 0: 42, 76, 0
2023/03/25 17:14:01 for select break: 1
2023/03/25 17:14:01 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:14:01 wg wait finish
2023/03/25 17:14:01 ------ all executors finish execution
2023/03/25 17:14:01 exec time: 121
2023/03/25 17:14:01 ----- PS len: 4
time breakdown 1: 46, 77, 0
before receive testcase: 0 1
2023/03/25 17:14:01 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 1523 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:14:01 [CLIENT] executor 3 has 17 replies
2023/03/25 17:14:01 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:14:01 [SERVER] executor 1 has 8 replies
2023/03/25 17:14:01 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 913 signal and 0 cover from userspace component
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 1536 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 159 signal and 0 cover from userspace component
2023/03/25 17:14:01 [SERVER] executor 2 has 0 replies
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 88 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 1 receive 29 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:14:01 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:14:01 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/25 17:14:01 ----- no new client coverage: false, true
2023/03/25 17:14:01 mutate testcase with failures
2023/03/25 17:14:01 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:01 disable threaded and collide
2023/03/25 17:14:01 prog length: 6
2023/03/25 17:14:01 prog length: 22
2023/03/25 17:14:01 HasCrashFail:true HasNetFail:false
17:14:01 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x6)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f00000004c0)=ANY=[@ANYBLOB="2302002e2f66696c65302023205d202b0a38b5ecf63cceb0b2e26ea32afc733fbf6df08ab5ada1d196e80ea92e8aa4248e0cb63586bb8946c78504006991639fe8969c3d6983a0d0f1f3f0f085eb7306c18a70000000000000000000"], 0x5b)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(0xffffffffffffffff, &(0x7f0000000300)=@known='trusted.overlay.impure\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x1}], {0x4, 0x4}, [{0x8, 0x0, r6}, {0x8, 0x5}, {0x8, 0x5, 0xee01}, {}], {0x10, 0x1}}, 0x54, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4512
remove dir: /root/orangefs-client/dfs-0-122
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 21
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[E 03/25/2023 16:14:01] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:14:01] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:14:01] Error: Could not initialize server subsystems
[E 03/25/2023 16:14:01] Error: Could not initialize server; aborting.
receive_execute: 3, 4094
mkdir time 4073
executor 3 create dir /root/orangefs-client/dfs-0-123 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-123
receive_execute: 5, 4093
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 4094
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
receive_execute: 4, 4094
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1277 tid 1277

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1277, pid 1277, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:14:05] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 21, 0
execute_one time: 0, 21
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2061
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 648, write pid:648
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 23, 0
execute_one time: 0, 24
2023/03/25 17:14:05 for select break: 1
2023/03/25 17:14:05 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4084, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1401
----- executor 0 executes write_coverage_signal cov->size 1505, flag collect 0
----- executor 0 signal number : 311
----- executor 0 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2089
2023/03/25 17:14:05 for select break: 1
2023/03/25 17:14:05 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:14:05 for select break: 1
2023/03/25 17:14:05 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4098, 27, 0
before receive testcase: 0 0
----- executor 1 signal number : 899
time breakdown 0: 4098, 26, 0
executor 1 server cover_cnt 1 output_pos_value 903
before receive testcase: 0 0
2023/03/25 17:14:05 for select break: 1
2023/03/25 17:14:05 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:14:05 wg wait finish
2023/03/25 17:14:05 ------ all executors finish execution
2023/03/25 17:14:05 exec time: 4123
2023/03/25 17:14:05 ----- PS len: 4
2023/03/25 17:14:05 [CLIENT] executor 3 has 22 replies
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:05 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:05 ------- fuzzer executor 0 receive 1401 signal and 0 cover from userspace component
2023/03/25 17:14:05 ------- fuzzer executor 0 receive 311 signal and 0 cover from userspace component
2023/03/25 17:14:05 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:14:05 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 4097, 28, 0
before receive testcase: 0 0
2023/03/25 17:14:05 [SERVER] executor 1 has 1 replies
2023/03/25 17:14:05 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:14:05 [SERVER] executor 2 has 0 replies
2023/03/25 17:14:05 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:05 ----- no new client coverage: false, true
2023/03/25 17:14:05 mutate testcase with failures
2023/03/25 17:14:05 ----- mutateArg()
2023/03/25 17:14:05 ----- insertCall()
2023/03/25 17:14:05 ----- mutateArg()
2023/03/25 17:14:05 ----- insertCall()
2023/03/25 17:14:05 ----- generateCall 248 fstat fstat
2023/03/25 17:14:05 ----- mutateArg()
2023/03/25 17:14:05 ----- insertCall()
2023/03/25 17:14:05 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/25 17:14:05 ----- mutateFailPos()
2023/03/25 17:14:05 insert call 1 at pos 0
2023/03/25 17:14:05 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:05 disable threaded and collide
2023/03/25 17:14:05 prog length: 6
2023/03/25 17:14:05 prog length: 13
2023/03/25 17:14:05 HasCrashFail:true HasNetFail:false
17:14:05 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000000c0)='./binderfs\x00', 0x1ff)
r0 = dup(0xffffffffffffffff)
r1 = open(&(0x7f0000000080)='./file0/file0\x00', 0x40, 0x100)
r2 = dup2(0xffffffffffffffff, r0)
write$binfmt_script(r1, &(0x7f0000000180)={'#! ', './file0', [{0x20, '-$%!*!'}, {0x20, '[\\'}, {0x20, '/'}, {0x20, 'U-'}, {}, {0x20, 'U-'}], 0xa, "cd967bda7927aea3f831d9b0842604fd861dc4a79594d0fa7d042a792fd66f9374915bde876b6cb6ad6dcfae1d7e5ddd63b33fd277ba28858da83d857db1d5a5709283fcf02d7c67ae7c0e05d31876b9a9cef7d08f8ea03fb1dae9958c6f04b39b16faca03be102d4399787b0195a7343bf07825299aa1e399c5fc3e010a7b9e915ef0eed260d4acd786701c1d633526a24fc6fd539a1fd84ba59aa9688ee76d372370ef285eb7b34d197da2ae5312f3eff38a78743df2cc8afd967f14c03ce083cdde423641b371d0e30a1472356de5990b572b584f5082241ae0d3cd08d6202ab5136426f93f8bc23ff40873add82f6bc4bdb5978275f1640c"}, 0x118)
r3 = fcntl$dupfd(r2, 0x406, r0)
fstat(r3, &(0x7f0000000100))
fcntl$addseals(r2, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 4100, 25, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2416
remove dir: /root/orangefs-client/dfs-0-123
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 15
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:14:05] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:14:05] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:14:05] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:14:05] Error: Could not initialize server subsystems
[E 03/25/2023 16:14:05] Error: Could not initialize server; aborting.
mkdir time 6039
executor 3 create dir /root/orangefs-client/dfs-0-124 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-124
receive_execute: 5, 6054
receive_execute: 4, 6054
receive_execute: 6, 6051
receive_execute: 5, 6054
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 6474, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 6474, flag collect 0
----- executor 3 signal number : 2061
----- completed 2
execute_call 0, 6046, 0, 1
execute_one loop: 0, 0, 6047
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6690, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 6690, flag collect 0
----- executor 3 signal number : 28
----- completed 6
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6450, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6070, 0, 0
execute_one loop: 0, 0, 6070
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1293 tid 1293

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1293, pid 1293, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:14:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 6101, 0
execute_one time: 0, 6101
----- executor 3 write_call_output, size 0, pid 650, write pid:650
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 6100, 0
execute_one time: 1, 6100
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 6059, 6102, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 2723
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 1: 6057, 6103, 0
before receive testcase: 0 1
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 1 receive reply, reply.done 1
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1250
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4360
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:14:17 wg wait finish
2023/03/25 17:14:17 ------ all executors finish execution
2023/03/25 17:14:17 exec time: 12160
2023/03/25 17:14:17 ----- PS len: 4
2023/03/25 17:14:17 [CLIENT] executor 3 has 13 replies
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 2723 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 1250 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/25 17:14:17 [SERVER] executor 1 has 1 replies
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
time breakdown 0: 6058, 6106, 0
2023/03/25 17:14:17 [SERVER] executor 2 has 0 replies
time breakdown 2: 6059, 6103, 0
before receive testcase: 0 0
2023/03/25 17:14:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:17 ----- no new client coverage: false, true
2023/03/25 17:14:17 mutate testcase with failures
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- mutateArg()
2023/03/25 17:14:17 ----- mutateArg()
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- mutateArg()
2023/03/25 17:14:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:17 disable threaded and collide
2023/03/25 17:14:17 prog length: 6
2023/03/25 17:14:17 prog length: 22
2023/03/25 17:14:17 HasCrashFail:true HasNetFail:false
17:14:17 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
sendfile(0xffffffffffffffff, 0xffffffffffffffff, &(0x7f0000000000)=0x1, 0x1)
r0 = dup(0xffffffffffffffff)
r1 = dup(0xffffffffffffffff)
sendfile(r0, r1, &(0x7f0000000040)=0x9d, 0x8)
fdatasync(r0)
pread64(r0, &(0x7f0000000080)=""/11, 0xb, 0x2)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x60803, 0x18)
faccessat(r2, &(0x7f0000000100)='./file0\x00', 0x20)
getdents64(r2, &(0x7f0000000140)=""/227, 0xe3)
r3 = dup2(r2, r2)
syz_failure_sync(0x0, 0x3)
r4 = dup(r3)
write$binfmt_script(r3, &(0x7f0000000240)={'#! ', './file0', [], 0xa, "38b5ecf63cceb0b2e26ea32afc733f89e8402b86962b6da24b50c69de18da6bf6df08ab5ad3fa996e80ea92e8aa4248e0cb686bb8946c785810a6991639fe8969c3d6983a0d0f1f3f0f0"}, 0x55)
syz_failure_sync(0x1, 0x3)
fcntl$setownex(r4, 0xf, &(0x7f00000002c0)={0x1, 0xffffffffffffffff})
fremovexattr(r4, &(0x7f0000000300)=@known='system.advise\x00')
r5 = dup2(r2, r2)
ftruncate(r5, 0x3)
mkdirat(r2, &(0x7f0000000340)='./file0\x00', 0x18b)
fsetxattr$security_ima(r1, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x6, 0x2, 0xc, 0x992029, 0x2b, "f9167ac8c4f364f2702f1e796f681ff1b78a178b87f2ca3def8d769b7d78932ce5ace59b17b99126973355"}, 0x34, 0x2)
fstat(r2, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000540)='system.posix_acl_default\x00', &(0x7f00000004c0)=ANY=[@ANYBLOB="0200000100eeff0080000002000500", @ANYRES32=0xee00, @ANYBLOB="00300100", @ANYRES64=r1, @ANYRESDEC=r6, @ANYRES64, @ANYBLOB="08000500", @ANYRES32, @ANYBLOB="80080508", @ANYRES16=r0, @ANYRES16, @ANYRES32=0x0, @ANYBLOB="10000100000000002000000000000000"], 0x54, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3976
remove dir: /root/orangefs-client/dfs-0-124
remove dir time 45
-----finish removing dir
receive_execute: 7, 67
receive_execute: 7, 67
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-125 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-125
receive_execute: 3, 67
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
-----executor 1 collect shmids 3
----- directly resend shmid 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 69
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 6450, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 6450, flag collect 0
----- executor 3 signal number : 2061
----- completed 7
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 6539, flag collect 0
----- executor 1 signal number : 722
----- executor 1 executes write_coverage_signal cov->size 20373, flag collect 0
----- executor 1 signal number : 146
----- executor 1 executes write_coverage_signal cov->size 25324, flag collect 0
----- executor 1 signal number : 90
----- executor 1 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 1 signal number : 24
executor 1 server cover_cnt 4 output_pos_value 995
execute_call 0, 31, 0, 0
execute_one loop: 0, 0, 31
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 31, 0, 0
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1309 tid 1309

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1309, pid 1309, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:14:17] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 56, 0
execute_one time: 2, 56
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 652, write pid:652
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 57, 0
execute_one time: 0, 57
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 77, 57, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4056, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 1541, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 311
----- executor 0 executes write_coverage_signal cov->size 1419, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 669, flag collect 0
----- executor 0 signal number : 75
time breakdown 2: 74, 59, 0
executor 0 server cover_cnt 4 output_pos_value 2091
----- executor 1 signal number : 767
----- executor 1 executes write_coverage_signal cov->size 20373, flag collect 0
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 25324, flag collect 0
time breakdown 0: 70, 60, 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 8 output_pos_value 1774
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 74, 61, 0
2023/03/25 17:14:17 for select break: 1
2023/03/25 17:14:17 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:14:17 wg wait finish
2023/03/25 17:14:17 ------ all executors finish execution
2023/03/25 17:14:17 exec time: 130
2023/03/25 17:14:17 ----- PS len: 4
2023/03/25 17:14:17 [CLIENT] executor 3 has 22 replies
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:17 [SERVER] executor 1 has 8 replies
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 722 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 146 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 90 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 24 signal and 0 cover from userspace component
2023/03/25 17:14:17 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 767 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/25 17:14:17 [SERVER] executor 2 has 0 replies
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 311 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 17:14:17 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/25 17:14:17 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:17 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 17:14:17 mutate testcase with failures
2023/03/25 17:14:17 ----- insertCall()
2023/03/25 17:14:17 ----- mutateFailPos()
2023/03/25 17:14:17 insert call 2 at pos 3
2023/03/25 17:14:17 ----- mutateArg()
2023/03/25 17:14:17 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:17 disable threaded and collide
2023/03/25 17:14:17 prog length: 6
2023/03/25 17:14:17 prog length: 5
2023/03/25 17:14:17 HasCrashFail:true HasNetFail:false
17:14:17 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_selinux(&(0x7f0000000000)='./file0/file0\x00', 0x0, 0x0, 0xfffffe2d, 0x1)
syz_failure_sync(0x0, 0x3)
getxattr(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 696
remove dir: /root/orangefs-client/dfs-0-125
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 24
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
[D 03/25/2023 16:14:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:14:17] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:14:17] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:14:17] Error: Could not initialize server subsystems
[E 03/25/2023 16:14:17] Error: Could not initialize server; aborting.
[D 03/25/2023 16:14:17] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:14:17] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:14:17] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:14:17] Error: Could not initialize server subsystems
[E 03/25/2023 16:14:17] Error: Could not initialize server; aborting.
receive_execute: 5, 6066
receive_execute: 3, 6068
receive_execute: 2, 6068
mkdir time 6044
executor 3 create dir /root/orangefs-client/dfs-0-126 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-126
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 6069
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 6690, pid 653, write pid:653
----- executor 3 executes write_coverage_signal cov->size 6690, flag collect 0
----- executor 3 signal number : 2074
----- completed 1
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4091, flag collect 0
----- executor 0 signal number : 1406
----- executor 0 executes write_coverage_signal cov->size 1493, flag collect 0
----- executor 0 signal number : 311
----- executor 0 executes write_coverage_signal cov->size 595, flag collect 0
----- executor 0 signal number : 289
----- executor 0 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2090
Terminated
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 653, write pid:653
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[E 03/25/2023 16:14:23] PVFS2 server got signal 15 (server_status_flag: 2080767)
----- executor 3 write_call_output, size 32765, pid 653, write pid:653
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 295
----- completed 3
execute_call 0, 10035, 0, 2
execute_one loop: 0, 0, 10037
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10037, 0, 0
execute_one loop: 0, 0, 10037
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1684 tid 1684

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1684, pid 1684, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:14:33] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 653, write pid:653
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10086, 0
execute_one time: 2, 10086
[D 03/25/2023 16:14:33] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
----- executor 3 write_call_output, size 0, pid 653, write pid:653
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
executor 3, execute_one inner time: 0, 12105, 0
execute_one time: 0, 12105
time breakdown 3: 6074, 12108, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:14:36 for select break: 1
2023/03/25 17:14:36 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 572
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 6070, 12109, 0
2023/03/25 17:14:36 for select break: 1
2023/03/25 17:14:36 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:14:36 for select break: 1
2023/03/25 17:14:36 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 13559, flag collect 0
----- executor 0 signal number : 14
executor 0 server cover_cnt 9 output_pos_value 2851
before receive testcase: 0 0
time breakdown 2: 6071, 12110, 0
before receive testcase: 0 0
2023/03/25 17:14:36 for select break: 1
2023/03/25 17:14:36 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:14:36 wg wait finish
2023/03/25 17:14:36 ------ all executors finish execution
2023/03/25 17:14:36 exec time: 18180
2023/03/25 17:14:36 ----- PS len: 4
2023/03/25 17:14:36 [CLIENT] executor 3 has 5 replies
2023/03/25 17:14:36 fuzzer receive 2074 signal and 0 cover from executor 3
2023/03/25 17:14:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:36 fuzzer receive 295 signal and 0 cover from executor 3
2023/03/25 17:14:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:36 [SERVER] executor 0 has 9 replies
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 1406 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 311 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 289 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 572 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 138 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 17:14:36 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 17:14:36 [SERVER] executor 1 has 0 replies
2023/03/25 17:14:36 [SERVER] executor 2 has 0 replies
2023/03/25 17:14:36 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:36 ----- no new client coverage: false, true
2023/03/25 17:14:36 mutate testcase with failures
2023/03/25 17:14:36 ----- mutateArg()
2023/03/25 17:14:36 ----- mutateArg()
2023/03/25 17:14:36 ----- insertCall()
2023/03/25 17:14:36 ----- generateCall 541 ioctl ioctl
2023/03/25 17:14:36 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:36 disable threaded and collide
2023/03/25 17:14:36 prog length: 6
2023/03/25 17:14:36 prog length: 10
2023/03/25 17:14:36 HasCrashFail:true HasNetFail:false
17:14:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x101002, 0x10)
ioctl(r0, 0x81, &(0x7f00000000c0)="5ef8216958c0f96723e43fbea2e0270c67d9fc8853876a98af764444c0a8288793b0c67baa408c5ff945375f4907e07539ceb93ec0d4826a4de03493f270788954")
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
syz_failure_sync(0x0, 0x3)
mkdirat$binderfs(0xffffffffffffff9c, 0x0, 0x1ff)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000080)='./binderfs2\x00', 0x1ff)
r1 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(r1, 0x409, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000340)='./file0\x00', 0x0, &(0x7f00000003c0)={'U-'}, 0x16, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 1352
remove dir: /root/orangefs-client/dfs-0-126
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 6071, 12112, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 2016
executor 3 create dir /root/orangefs-client/dfs-0-127 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-127
receive_execute: 1, 2059
receive_execute: 3, 2059
receive_execute: 3, 2059
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 2060
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 6458, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6482, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 6482, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
Terminated
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 642
----- completed 6
execute_call 0, 10053, 0, 0
execute_one loop: 0, 0, 10053
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6458, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 6458, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10056, 0, 0
execute_one loop: 0, 0, 10056
----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): call atexit in pid 1326 tid 1326

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1326, pid 1326, value 1

----------executor 1 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 1 2>&1): [S 03/25/2023 16:14:48] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 1 collect shmids 0
----- directly resend shmid 0
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 10103, 0
execute_one time: 1, 10103
----- executor 3 write_call_output, size 0, pid 655, write pid:655
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 25, 0, 1
execute_one loop: 0, 0, 26
executor 3, execute_one inner time: 0, 10111, 0
execute_one time: 0, 10111
2023/03/25 17:14:48 for select break: 1
2023/03/25 17:14:48 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2660
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 899
executor 1 server cover_cnt 1 output_pos_value 903
time breakdown 3: 2064, 10114, 0
2023/03/25 17:14:48 for select break: 1
2023/03/25 17:14:48 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 2062, 10117, 0
before receive testcase: 0 0
----- executor 0 signal number : 1249
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4317
before receive testcase: 0 0
time breakdown 0: 2060, 10118, 0
before receive testcase: 0 1
time breakdown 2: 2062, 10119, 0
before receive testcase: 0 1
2023/03/25 17:14:48 for select break: 1
2023/03/25 17:14:48 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:14:48 for select break: 1
2023/03/25 17:14:48 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:14:48 wg wait finish
2023/03/25 17:14:48 ------ all executors finish execution
2023/03/25 17:14:48 exec time: 12185
2023/03/25 17:14:48 ----- PS len: 4
2023/03/25 17:14:48 [CLIENT] executor 3 has 10 replies
2023/03/25 17:14:48 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 642 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:14:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:48 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:48 ------- fuzzer executor 0 receive 2660 signal and 0 cover from userspace component
2023/03/25 17:14:48 ------- fuzzer executor 0 receive 1249 signal and 0 cover from userspace component
2023/03/25 17:14:48 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/25 17:14:48 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/25 17:14:48 [SERVER] executor 1 has 1 replies
2023/03/25 17:14:48 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 17:14:48 [SERVER] executor 2 has 0 replies
2023/03/25 17:14:48 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:48 ----- no new client coverage: false, true
2023/03/25 17:14:48 mutate testcase with failures
2023/03/25 17:14:48 ----- mutateArg()
2023/03/25 17:14:48 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:48 disable threaded and collide
2023/03/25 17:14:48 prog length: 6
2023/03/25 17:14:48 prog length: 3
2023/03/25 17:14:48 HasCrashFail:true HasNetFail:false
17:14:48 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lsetxattr$user(&(0x7f0000000040)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 336
remove dir: /root/orangefs-client/dfs-0-127
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 49
-----finish removing dir
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
receive_execute: 11, 67
receive_execute: 10, 67
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-128 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-128
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
-----executor 1 collect shmids 2
----- directly resend shmid 2
receive_execute: 9, 67
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 69
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
/root/orangefs-node-down.sh: 1: kill: No such process

execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 657, write pid:657
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
[D 03/25/2023 16:14:48] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
[E 03/25/2023 16:14:48] Error: handle 7686143364045646502 is invalid (out of bounds)
[E 03/25/2023 16:14:48] Error adding handle range 3-1537228672809129302,4611686018427387903-6148914691236517202 to filesystem orangefs
[E 03/25/2023 16:14:48] Error: Could not initialize server subsystems
[E 03/25/2023 16:14:48] Error: Could not initialize server; aborting.
[E 03/25/2023 16:14:48] PVFS2 server got signal 15 (server_status_flag: 2080767)
execute_call 0, 10051, 0, 0
execute_one loop: 0, 0, 10051
----- executor 3 write_call_output, size 0, pid 657, write pid:657
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 10051, 0, 0
execute_one loop: 0, 0, 10051
cover_reset in execute_call
executor 3 waits for recv msg
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1702 tid 1702

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1702, pid 1702, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:14:58] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 0, pid 657, write pid:657
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
executor 3, execute_one inner time: 0, 10092, 0
execute_one time: 0, 10092
2023/03/25 17:14:58 for select break: 1
2023/03/25 17:14:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 79, 10093, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/25 17:14:58 for select break: 1
2023/03/25 17:14:58 --------- executor 1 receive reply, reply.done 1
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 10092, 0
execute_one time: 2, 10092
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 934
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 257, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 0 signal number : 27
executor 0 server cover_cnt 4 output_pos_value 1137
2023/03/25 17:14:58 for select break: 1
2023/03/25 17:14:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 77, 10098, 0
before receive testcase: 0 0
2023/03/25 17:14:58 for select break: 1
2023/03/25 17:14:58 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:14:58 wg wait finish
2023/03/25 17:14:58 ------ all executors finish execution
2023/03/25 17:14:58 exec time: 10166
2023/03/25 17:14:58 ----- PS len: 4
2023/03/25 17:14:58 [CLIENT] executor 3 has 3 replies
2023/03/25 17:14:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:14:58 [SERVER] executor 0 has 4 replies
2023/03/25 17:14:58 ------- fuzzer executor 0 receive 934 signal and 0 cover from userspace component
2023/03/25 17:14:58 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 17:14:58 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/25 17:14:58 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 17:14:58 [SERVER] executor 1 has 0 replies
2023/03/25 17:14:58 [SERVER] executor 2 has 0 replies
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:14:58 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:14:58 ----- no new client coverage: false, true
2023/03/25 17:14:58 mutate testcase with failures
2023/03/25 17:14:58 ----- insertCall()
2023/03/25 17:14:58 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/25 17:14:58 ----- insertCall()
2023/03/25 17:14:58 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/25 17:14:58 ----- insertCall()
2023/03/25 17:14:58 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/25 17:14:58 ----- insertCall()
2023/03/25 17:14:58 ----- generateCall 2458 open open
2023/03/25 17:14:58 ----- insertCall()
2023/03/25 17:14:58 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/25 17:14:58 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:14:58 disable threaded and collide
2023/03/25 17:14:58 prog length: 6
2023/03/25 17:14:58 prog length: 11
2023/03/25 17:14:58 HasCrashFail:true HasNetFail:false
17:14:58 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000100)='./file2\x00', 0x208000, 0x80)
open(&(0x7f0000000240)='./file1\x00', 0x20802, 0x120)
fsetxattr$security_evm(r0, &(0x7f0000000140), &(0x7f0000000180)=@sha1={0x1, "3425b91e83823940601557b887828f508687dafb"}, 0x15, 0x3)
fsetxattr$security_ima(r0, &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x5, 0x3, 0x14, 0x4, 0x8e, "02a3d09a705e0a74f07e4323736dd3685576e70aa61fa514cbecae2c83e15314b4bf3b0ef78020da564dd7d788f289f770d10ba8cf9cf02d996246fd48e618e402d39708da99d0d393318adf68be1fcefa84f41456ef8dfb636011ab81499830d9d44d796ed13f00aa9b52808815ce23936c931d71077920187591150023025e669b1268a88462de6d555b192bbf"}, 0x97, 0x3)
mkdir(&(0x7f00000009c0)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, 0x0, 0x0)
fsetxattr$security_evm(r0, &(0x7f00000001c0), &(0x7f0000000200)=@ng={0x4, 0x1, "795621d2fa6248d1f39f"}, 0xc, 0x5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='./file1\x00', 0x8, 0x3)
syz_failure_sync(0x0, 0x3)
rmdir(&(0x7f00000000c0)='./file0\x00')
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 2280
remove dir: /root/orangefs-client/dfs-0-128
time breakdown 1: 78, 10097, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 2: 76, 10099, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
[D 03/25/2023 16:14:58] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
remove dir time 2033
-----finish removing dir
receive_execute: 3, 4049
mkdir time 2015
executor 3 create dir /root/orangefs-client/dfs-0-129 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-129
receive_execute: 4, 4049
receive_execute: 6, 4049
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 4049
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 6462, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 6462, flag collect 0
----- executor 3 signal number : 2063
----- completed 2
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6462, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 6462, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2660
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1249
----- executor 0 executes write_coverage_signal cov->size 3890, flag collect 0
----- executor 0 signal number : 301
----- executor 0 executes write_coverage_signal cov->size 4351, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4299
/root/orangefs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6328, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 6328, flag collect 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 signal number : 389
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): call atexit in pid 1718 tid 1718

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 1718, pid 1718, value 1

----------executor 0 debug cmd (/root/orangefs-node-up.sh 192.168.0.5 3 1 0 2>&1): [S 03/25/2023 16:15:02] PVFS2 Server on node 192.168.0.5 version 2.9.7-orangefs-REV-65ab0d2 starting...

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 62, 0
execute_one time: 0, 62
2023/03/25 17:15:02 for select break: 1
2023/03/25 17:15:02 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 659, write pid:659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
executor 3, execute_one inner time: 0, 61, 0
execute_one time: 1, 61
time breakdown 3: 4055, 67, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 17:15:02 for select break: 1
2023/03/25 17:15:02 --------- executor 2 receive reply, reply.done 1
2023/03/25 17:15:02 for select break: 1
2023/03/25 17:15:02 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 217
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 4053, 69, 0
before receive testcase: 0 0
time breakdown 2: 4050, 68, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 0 signal number : 146
----- executor 0 executes write_coverage_signal cov->size 4147, flag collect 0
----- executor 0 signal number : 54
----- executor 0 executes write_coverage_signal cov->size 4423, flag collect 0
----- executor 0 signal number : 12
executor 0 server cover_cnt 8 output_pos_value 4740
2023/03/25 17:15:02 for select break: 1
2023/03/25 17:15:02 --------- executor 0 receive reply, reply.done 1
2023/03/25 17:15:02 wg wait finish
2023/03/25 17:15:02 ------ all executors finish execution
2023/03/25 17:15:02 exec time: 4122
2023/03/25 17:15:02 ----- PS len: 4
2023/03/25 17:15:02 [CLIENT] executor 3 has 11 replies
2023/03/25 17:15:02 [SERVER] executor 1 has 0 replies
2023/03/25 17:15:02 [SERVER] executor 0 has 8 replies
2023/03/25 17:15:02 [SERVER] executor 2 has 0 replies
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 2660 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 1249 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 301 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 217 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 146 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 54 signal and 0 cover from userspace component
2023/03/25 17:15:02 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 389 signal and 0 cover from executor 3
2023/03/25 17:15:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 17:15:02 fsMds: [map[] map[] map[] map[]]
2023/03/25 17:15:02 ----- no new client coverage: false, true
time breakdown 0: 4052, 73, 0
before receive testcase: 0 0
2023/03/25 17:15:02 mutate testcase with failures
2023/03/25 17:15:02 ----- insertCall()
2023/03/25 17:15:02 ----- generateCall 248 fstat fstat
2023/03/25 17:15:02 ----- insertCall()
2023/03/25 17:15:02 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/25 17:15:02 HasCrashFail: true, .HasNetFail: false
2023/03/25 17:15:02 disable threaded and collide
2023/03/25 17:15:02 prog length: 6
2023/03/25 17:15:02 prog length: 20
2023/03/25 17:15:02 HasCrashFail:true HasNetFail:false
17:15:02 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x1}, 0x16, 0x1)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'osx.', 'trusted.overlay.nlink\x00'}, &(0x7f0000000140)=""/218, 0xda)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
syz_failure_sync(0x0, 0x3)
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, r0}, {0x2, 0x3}], {}, [{0x8, 0x3b215d7e7e2042b}], {0x10, 0x4}, {0x20, 0x4}}, 0x4c, 0x6)
setxattr$trusted_overlay_upper(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={0x0, 0xfb, 0xc3, 0x2, 0x5, "bed60a67a8d3e9550de61a4195f74425", "1389a1a1a33dd660fde988ed1dc849985f9b0288b348c5b666c2c70dace26ebb653026fa097b8db53b508113f5750c6d298ae99cc3add2c3da2b23d476d3d2e4e2c146a563230bb25e57afa9c7312ada2f214a28592e0f182dce51374a761712557994a4f2f7841b8c69d6feac748e8de683612cd514d5225d577ad02aaed501c18dad21c87820b7ff38026269a052a2cfd95ce16d4ad839dbaa2ea8c620184e70876a1fd1ca3fd3d11285bf0536"}, 0xc3, 0x2)
r1 = open(&(0x7f0000000b00)='./file0\x00', 0x420040, 0x100)
fstat(r1, &(0x7f0000000b40))
r2 = openat(0xffffffffffffff9c, &(0x7f00000005c0)='./file0\x00', 0x2000, 0x0)
renameat(0xffffffffffffffff, &(0x7f0000000580)='./file0/file0\x00', r2, &(0x7f0000000600)='./file0\x00')
listxattr(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680)=""/17, 0x11)
syz_failure_sync(0x1, 0x3)
setxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64\x00', &(0x7f0000000740)={'osx.'}, 0x5, 0x2)
setxattr$security_capability(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v2={0x2000000, [{0x6, 0x7fff}, {0x0, 0x480000}]}, 0x14, 0x2)
setxattr$security_capability(&(0x7f0000000bc0)='./file0/file0\x00', &(0x7f0000000c00), 0xfffffffffffffffc, 0x0, 0x0)
open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x0)
lsetxattr$user(&(0x7f0000000880)='./file0/file1\x00', &(0x7f00000008c0), &(0x7f0000000900)='trusted.overlay.nlink\x00', 0x16, 0x0)
setxattr$security_ima(&(0x7f0000000940)='./file0/file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x14, "9f0714884e59181c4fe20bd3b81fd59e6736"}, 0x14, 0x0)
setxattr(&(0x7f0000000a00)='./file0/file1\x00', &(0x7f0000000a40)=@random={'system.', ']&$,)@}^\x00'}, &(0x7f0000000a80)='security.capability\x00', 0x14, 0x3)
open(&(0x7f0000000ac0)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6016
remove dir: /root/orangefs-client/dfs-0-129
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
[E 03/25/2023 16:15:02] PVFS2 server got signal 15 (server_status_flag: 2080767)
[D 03/25/2023 16:15:02] PVFS2 Server version 2.9.7-orangefs-REV-65ab0d2 starting.
Node-3:/root/daemon-log.362
=================================================================
==362==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffffffe250 at pc 0x7ffff75faa6d bp 0x7fffffff8920 sp 0x7fffffff80c8
READ of size 5 at 0x7fffffffe250 thread T0
    #0 0x7ffff75faa6c  (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c)
    #1 0x555555796371 in PINT_encrypt_dirdata (/opt/orangefs/bin/pvfs2fuse+0x242371)
    #2 0x5555556e8a55 in remove_rmdirent_setup_msgpair (/opt/orangefs/bin/pvfs2fuse+0x194a55)
    #3 0x55555578989b in PINT_state_machine_invoke (/opt/orangefs/bin/pvfs2fuse+0x23589b)
    #4 0x55555578a706 in PINT_state_machine_next (/opt/orangefs/bin/pvfs2fuse+0x236706)
    #5 0x55555578a785 in PINT_state_machine_continue (/opt/orangefs/bin/pvfs2fuse+0x236785)
    #6 0x555555679ad1 in PINT_client_state_machine_test (/opt/orangefs/bin/pvfs2fuse+0x125ad1)
    #7 0x55555567aef5 in PINT_client_wait_internal (/opt/orangefs/bin/pvfs2fuse+0x126ef5)
    #8 0x55555567b5c2 in PVFS_sys_wait (/opt/orangefs/bin/pvfs2fuse+0x1275c2)
    #9 0x55555567e70e in PVFS_sys_getattr (/opt/orangefs/bin/pvfs2fuse+0x12a70e)
    #10 0x555555665504 in pvfs_fuse_getattr_pfhp (/opt/orangefs/bin/pvfs2fuse+0x111504)
    #11 0x5555556664f7 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1124f7)
    #12 0x7ffff710b7a6 in fuse_fs_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0xd7a6)
    #13 0x7ffff710ec5f in fuse_lib_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x10c5f)
    #14 0x7ffff71189a9 in do_getattr (/lib/x86_64-linux-gnu/libfuse.so.2+0x1a9a9)
    #15 0x7ffff711c72e in fuse_ll_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x1e72e)
    #16 0x7ffff711f155 in fuse_session_process_buf (/lib/x86_64-linux-gnu/libfuse.so.2+0x21155)
    #17 0x7ffff7115702 in fuse_session_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x17702)
    #18 0x7ffff7113e30 in fuse_loop (/lib/x86_64-linux-gnu/libfuse.so.2+0x15e30)
    #19 0x7ffff7121bdf in fuse_main_common (/lib/x86_64-linux-gnu/libfuse.so.2+0x23bdf)
    #20 0x7ffff7121c5f in fuse_main_real (/lib/x86_64-linux-gnu/libfuse.so.2+0x23c5f)
    #21 0x55555566bc4f in pvfs_fuse_main (/opt/orangefs/bin/pvfs2fuse+0x117c4f)
    #22 0x55555566cdb0 in main (/opt/orangefs/bin/pvfs2fuse+0x118db0)
    #23 0x7ffff6f280b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #24 0x555555664c8d in _start (/opt/orangefs/bin/pvfs2fuse+0x110c8d)

Address 0x7fffffffe250 is located in stack of thread T0 at offset 0 in frame
    #0 0x5555556663e0 in pvfs_fuse_getattr (/opt/orangefs/bin/pvfs2fuse+0x1123e0)

  This frame has 1 object(s):
    [48, 128) 'pfh' (line 301)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/lib/x86_64-linux-gnu/libasan.so.5+0x67a6c) 
Shadow bytes around the buggy address:
  0x10007fff7bf0: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c00: 04 f2 00 f3 f3 f3 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f3 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00
=>0x10007fff7c40: 00 00 00 00 00 00 00 00 00 00[f1]f1 f1 f1 f1 f1
  0x10007fff7c50: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00
  0x10007fff7c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==362==ABORTING
opendir(/root/orangefs-client/dfs-0-129) failedremove dir time 2012
-----finish removing dir

VM DIAGNOSIS:
17:15:04  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000001 RDX=0000000000000000
RSI=00007ffff73fd087 RDI=00007fffffffdd90 RBP=00007fffffffe420 RSP=00007fffffffdff0
R8 =0000000000000000 R9 =00007fffffffde80 R10=000000000000000a R11=0000000000000082
R12=0000000000000000 R13=0000000000000000 R14=0000000000000001 R15=0000000000000000
RIP=00007ffff730296a RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff480 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff084e000 CR3=0000000111aee003 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000000012001 Opmask01=0000000000000000 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116 00007fffffffe050
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffdff0 0000003000000018
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe050 00007fffffffe050
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe116
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748caa0 00007ffff7402ef2
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7387d88 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 2525252525252525 2525252525252525 2525252525252525 2525252525252525
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 656d697420726964 2065766f6d657200 0a7325203a726964 2065766f6d657200
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 40484c5105574c41 0540534a48405700 0a5600051f574c41 0540534a48405700
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
info registers vcpu 1
RAX=ffffffff81b939b0 RBX=0000000000000001 RCX=0000000000000000 RDX=ff1100026572e7e0
RSI=ff110001002cfe78 RDI=0000000001e3193e RBP=ff110001002b9680 RSP=ff110001002cfee8
R8 =0000000001e3193d R9 =ff110001155d80c0 R10=ff1100026572da40 R11=0000000000002800
R12=ff110001002b9680 R13=ff110001002b9680 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81b939bb RFL=00000202 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265700000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff07d7000 CR3=00000001145c6004 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000100000000000 Opmask01=0000000000001000 Opmask02=00000000000000ff Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240 0000000000000000
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff72ea64a 0000000006df4238
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff72ea481
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 36342e3320202020 5b0a656e6f642074 696e6920676e7263 203a6d6f646e6172
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 20292e3320202020 5b0a5f626f642073 3265202067656e63 203a205d38383830
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 3038303932203a68 74706564206b6361 7473207473657461 6572672064657375
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 303830393220205d 3532333720342e32 202020000a656661 6520672064656220
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
