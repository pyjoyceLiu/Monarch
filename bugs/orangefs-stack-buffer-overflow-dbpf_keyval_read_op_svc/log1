
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22328, write pid:22329
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
time breakdown 4: 188, 1, 0
before receive testcase: 0 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 21838, pid 22302, write pid:22303
----- executor 3 executes write_coverage_signal cov->size 21838, flag collect 0
----- executor 3 signal number : 3098
----- completed 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
executor 3, execute_one inner time: 72, 51, 0
execute_one time: 1, 123
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 168, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 19889, flag collect 0
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 2254
----- executor 1 executes write_coverage_signal cov->size 19054, flag collect 0
----- executor 1 signal number : 1269
----- executor 1 executes write_coverage_signal cov->size 3015, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2096, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3899
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31249, flag collect 0
----- executor 0 signal number : 2728
----- executor 0 executes write_coverage_signal cov->size 16203, flag collect 0
----- executor 0 signal number : 1040
----- executor 0 executes write_coverage_signal cov->size 4639, flag collect 0
time breakdown 3: 378, 133, 0
before receive testcase: 0 1
----- executor 0 signal number : 340
----- executor 0 executes write_coverage_signal cov->size 3183, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4197
time breakdown 0: 151, 136, 0
before receive testcase: 0 1
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 149, 136, 0
before receive testcase: 0 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:07 wg wait finish
2023/03/10 23:08:07 ------ all executors finish execution
2023/03/10 23:08:07 exec time: 299
2023/03/10 23:08:07 ----- PS len: 5
2023/03/10 23:08:07 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 2728 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 1040 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 340 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 2: 154, 148, 0
before receive testcase: 0 1
2023/03/10 23:08:07 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 2254 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 1269 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:07 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:07 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:07 fuzzer receive 3098 signal and 0 cover from executor 3
2023/03/10 23:08:07 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 170 dup dup
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 231 fsetxattr fsetxattr
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/10 23:08:07 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:07 prog length: 2
2023/03/10 23:08:07 prog length: 3
2023/03/10 23:08:07 HasCrashFail:false HasNetFail:false
23:08:07 ---executing program 0:
---
---
---
dup(0xffffffffffffffff)
fsetxattr(0xffffffffffffffff, &(0x7f0000000080)=ANY=[@ANYBLOB="4c753b14004d093b61961e655aa1045bc760b36f430a18caccaf3d6c73bc6e9eb4b81e39fbc75f32c7d7021b1567849ed687c932206b43a764d2aa019beca930035b0cad2e43571b31d1f948a94ae6d3fc776a6388698a"], &(0x7f0000000040)='%:&.\x00', 0x5, 0x3)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000100), 0x2, 0x1)
chdir(&(0x7f00000000c0)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1696, prog_size 488
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/orangefs-client/dfs-0-7965
remove dir time 93
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-7966 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7966
receive_execute: 30, 111
receive_execute: 17, 121
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22304, write pid:22305
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22304, write pid:22305
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 6, 121
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
time breakdown 3: 141, 3, 0
before receive testcase: 0 1
receive_execute: 25, 113
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 3 receive reply, reply.done 1
current dir: executor 4: /root/orangefs-client/dfs-0-7966
receive_execute: 128, 151
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22330, write pid:22331
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3024
----- completed 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22330, write pid:22331
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 4184, pid 22330, write pid:22331
----- executor 4 executes write_coverage_signal cov->size 4184, flag collect 0
----- executor 4 signal number : 18
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 39
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 27, 40, 0
execute_one time: 1, 67
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 27628, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 486, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2652
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2491
----- executor 0 executes write_coverage_signal cov->size 27918, flag collect 0
----- executor 0 signal number : 1208
----- executor 0 executes write_coverage_signal cov->size 4221, flag collect 0
----- executor 0 signal number : 301
----- executor 0 executes write_coverage_signal cov->size 3161, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4093
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1281
----- executor 2 executes write_coverage_signal cov->size 7704, flag collect 0
----- executor 2 signal number : 370
----- executor 2 executes write_coverage_signal cov->size 7117, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 4395
time breakdown 2: 133, 96, 0
before receive testcase: 0 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:07 wg wait finish
2023/03/10 23:08:07 ------ all executors finish execution
2023/03/10 23:08:07 exec time: 225
2023/03/10 23:08:07 ----- PS len: 5
2023/03/10 23:08:07 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:07 fuzzer receive 3024 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 18 signal and 0 cover from executor 4
2023/03/10 23:08:07 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 2491 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 1208 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 301 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:07 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
time breakdown 1: 149, 93, 0
2023/03/10 23:08:07 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 2652 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 1281 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 370 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:07 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
time breakdown 4: 279, 68, 0
before receive testcase: 0 1
2023/03/10 23:08:07 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 2781 readlinkat readlinkat
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 2858 sendfile sendfile
2023/03/10 23:08:07 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:07 prog length: 3
2023/03/10 23:08:07 prog length: 3
2023/03/10 23:08:07 HasCrashFail:false HasNetFail:false
23:08:07 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
readlinkat(r0, &(0x7f00000000c0)='./file1/file0\x00', &(0x7f0000000100)=""/8, 0x8)
lsetxattr$security_capability(&(0x7f0000000000)='./file1/file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x8}, {0x5, 0x7}]}, 0x14, 0x1)
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
sendfile(r0, r0, &(0x7f0000000080)=0x3f, 0x7fff)
fsetxattr$trusted_overlay_opaque(r0, &(0x7f0000000000), &(0x7f0000000040), 0x2, 0x3)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 2120, prog_size 576
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 784
remove dir: /root/orangefs-client/dfs-0-7966
time breakdown 0: 138, 102, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 100
-----finish removing dir
mkdir time 39
executor 3 create dir /root/orangefs-client/dfs-0-7967 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7967
receive_execute: 4, 144
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7967
receive_execute: 3, 153
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 8, 166
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22333, write pid:22334
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 5
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22333, write pid:22334
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22333, write pid:22334
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 6, 1, 0
execute_one time: 0, 7
receive_execute: 103, 173
receive_execute: 4, 165
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
2023/03/10 23:08:07 for select break: 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
2023/03/10 23:08:07 --------- executor 4 receive reply, reply.done 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
time breakdown 4: 174, 8, 0
before receive testcase: 0 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20389, pid 22306, write pid:22307
----- executor 3 executes write_coverage_signal cov->size 20389, flag collect 0
----- executor 3 signal number : 3071
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22306, write pid:22307
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22306, write pid:22307
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 3, 0
execute_one time: 0, 20
time breakdown 3: 276, 21, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 156, 41, 0
before receive testcase: 0 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 21478, flag collect 0
----- executor 0 signal number : 2685
----- executor 0 executes write_coverage_signal cov->size 25075, flag collect 0
----- executor 0 signal number : 1321
----- executor 0 executes write_coverage_signal cov->size 2175, flag collect 0
----- executor 0 signal number : 297
----- executor 0 executes write_coverage_signal cov->size 2438, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4396
time breakdown 0: 177, 22, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:07 wg wait finish
2023/03/10 23:08:07 ------ all executors finish execution
2023/03/10 23:08:07 exec time: 208
2023/03/10 23:08:07 ----- PS len: 5
2023/03/10 23:08:07 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 2685 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 1321 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 297 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:07 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:07 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:07 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:07 fuzzer receive 3071 signal and 0 cover from executor 3
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:07 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- mutateArg()
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 2343 link link
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 121 chmod chmod
2023/03/10 23:08:07 ----- mutateArg()
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/10 23:08:07 ----- mutateArg()
2023/03/10 23:08:07 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:07 prog length: 3
2023/03/10 23:08:07 prog length: 6
2023/03/10 23:08:07 HasCrashFail:false HasNetFail:false
23:08:07 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x402440, 0x108)
r1 = dup(0xffffffffffffffff)
fcntl$dupfd(r0, 0x0, r1)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
chmod(&(0x7f0000000200)='./file0\x00', 0x1)
link(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:su_exec_t:s0\x00', 0x1f, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x4, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/orangefs-client/dfs-0-7967
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 148, 64, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1672, prog_size 1128
remove dir time 28
-----finish removing dir
mkdir time 44
executor 3 create dir /root/orangefs-client/dfs-0-7968 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7968
receive_execute: 13, 77
receive_execute: 1, 76
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7968
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 3 receive reply, reply.done 1
receive_execute: 20, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22309, write pid:22310
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22309, write pid:22310
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22309, write pid:22310
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 3: 97, 1, 0
before receive testcase: 0 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 16, 0
receive_execute: 14, 77
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 35, 141
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22336, write pid:22337
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3026
----- completed 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22336, write pid:22337
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22336, write pid:22337
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22336, write pid:22337
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 513
----- completed 4
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 4 write_call_output, size 13128, pid 22336, write pid:22337
----- executor 4 executes write_coverage_signal cov->size 13128, flag collect 0
----- executor 4 signal number : 67
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22336, write pid:22337
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 40
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 65, 61, 0
execute_one time: 1, 126
2023/03/10 23:08:07 for select break: 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:07 --------- executor 4 receive reply, reply.done 1
----- executor 1 signal number : 2654
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1330
----- executor 1 executes write_coverage_signal cov->size 15171, flag collect 0
----- executor 1 signal number : 360
----- executor 1 executes write_coverage_signal cov->size 13152, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 4436
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 3780, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 972, flag collect 0
----- executor 2 signal number : 44
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 1 receive reply, reply.done 1
time breakdown 4: 176, 128, 0
before receive testcase: 0 1
time breakdown 1: 91, 195, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4479, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2198, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 3753, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1396, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
time breakdown 0: 103, 194, 0
before receive testcase: 0 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 90, 209, 0
before receive testcase: 0 1
2023/03/10 23:08:07 for select break: 1
2023/03/10 23:08:07 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:07 wg wait finish
2023/03/10 23:08:07 ------ all executors finish execution
2023/03/10 23:08:07 exec time: 302
2023/03/10 23:08:07 ----- PS len: 5
2023/03/10 23:08:07 [CLIENT] executor 4 has 6 replies
2023/03/10 23:08:07 fuzzer receive 3026 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 513 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 67 signal and 0 cover from executor 4
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:07 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:07 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 2654 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 1330 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 360 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:07 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:07 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:07 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:07 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- mutateArg()
2023/03/10 23:08:07 mutate testcase with failures
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/10 23:08:07 ----- insertCall()
2023/03/10 23:08:07 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/10 23:08:07 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:07 prog length: 3
2023/03/10 23:08:07 prog length: 3
2023/03/10 23:08:07 HasCrashFail:false HasNetFail:false
23:08:07 ---executing program 0:
---
---
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x4)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x40040, 0x0)
pread64(r0, &(0x7f0000000240)=""/90, 0x5a, 0x9)
---
setxattr$security_evm(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x2, "2643cf8c168a824f5ee8148a0e8c0b43"}, 0x11, 0x3)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x10800, 0x100)
fcntl$addseals(r0, 0x409, 0xe)
---

end of program
----- executor 4 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 384
remove dir: /root/orangefs-client/dfs-0-7968
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 4: prog_data_offset 1720, prog_size 584
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 253
-----finish removing dir
mkdir time 151
executor 3 create dir /root/orangefs-client/dfs-0-7969 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7969
receive_execute: 5, 408
receive_execute: 20, 408
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 223, 412
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22312, write pid:22313
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-7969
executor 2 before execute_one
receive_execute: 33, 413
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 6, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 20643, pid 22312, write pid:22313
----- executor 3 executes write_coverage_signal cov->size 20643, flag collect 0
----- executor 3 signal number : 3093
----- completed 2
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 10978, pid 22312, write pid:22313
----- executor 3 executes write_coverage_signal cov->size 10978, flag collect 0
----- executor 3 signal number : 1063
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 34, 447
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 27, 6, 0
execute_one time: 1, 33
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
2023/03/10 23:08:08 for select break: 1
2023/03/10 23:08:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 635, 35, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 13159, pid 22340, write pid:22341
----- executor 4 executes write_coverage_signal cov->size 13159, flag collect 0
----- executor 4 signal number : 2733
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22340, write pid:22341
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22340, write pid:22341
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 4, 1, 0
execute_one time: 1, 7
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
----- executor 1 signal number : 3070
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:08 for select break: 1
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:08 --------- executor 4 receive reply, reply.done 1
----- executor 1 signal number : 1317
2023/03/10 23:08:08 for select break: 1
2023/03/10 23:08:08 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 419, 45, 0
before receive testcase: 0 1
time breakdown 4: 481, 8, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 4465, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2066, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1443, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 802, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
2023/03/10 23:08:08 for select break: 1
2023/03/10 23:08:08 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 428, 60, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 5519, flag collect 0
----- executor 1 signal number : 316
----- executor 1 executes write_coverage_signal cov->size 5257, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 4795
2023/03/10 23:08:08 for select break: 1
2023/03/10 23:08:08 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:08 wg wait finish
2023/03/10 23:08:08 ------ all executors finish execution
2023/03/10 23:08:08 exec time: 477
2023/03/10 23:08:08 ----- PS len: 5
2023/03/10 23:08:08 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:08 fuzzer receive 2733 signal and 0 cover from executor 4
2023/03/10 23:08:08 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:08 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:08 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:08 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:08 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:08 ------- fuzzer executor 1 receive 3070 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 1 receive 1317 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 1 receive 316 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:08 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:08 fuzzer receive 3093 signal and 0 cover from executor 3
2023/03/10 23:08:08 fuzzer receive 1063 signal and 0 cover from executor 3
2023/03/10 23:08:08 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:08 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:08 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:08 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:08 mutate testcase with failures
2023/03/10 23:08:08 ----- insertCall()
2023/03/10 23:08:08 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:08 mutate testcase with failures
2023/03/10 23:08:08 ----- insertCall()
2023/03/10 23:08:08 ----- generateCall 2458 open open
2023/03/10 23:08:08 ----- insertCall()
2023/03/10 23:08:08 ----- mutateArg()
2023/03/10 23:08:08 ----- mutateArg()
2023/03/10 23:08:08 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:08 prog length: 15
2023/03/10 23:08:08 prog length: 20
2023/03/10 23:08:08 HasCrashFail:false HasNetFail:false
23:08:08 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='com.apple.system.Security\x00')
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@random={'system.', 'com.apple.system.Security\x00'}, &(0x7f0000000100)=""/121, 0x79)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'U+'}, 0x16, 0x3)
lsetxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=@random={'system.', 'system.'}, &(0x7f00000002c0)='U+', 0x2, 0x1)
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x2, 0x2)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500), &(0x7f0000000540)='system_u:object_r:tape_device_t:s0\x00', 0x23, 0x2)
lsetxattr$security_ima(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@md5={0x1, "9c5d58fc481f280f566ab202b428edfa"}, 0x11, 0x1)
listxattr(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680)=""/70, 0x46)
readlinkat(r0, 0x0, &(0x7f0000000740), 0x0)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0), &(0x7f0000000800)=@md5={0x1, "d9ec59b0fa31debfdea91896ff37018e"}, 0x11, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)={0x0, 0xfb, 0xbb, 0x4, 0x9, "110f4c464167969254ac0146c0cb1ce8", "34a865b71ff9fbea4944f85c15b2ae3c0744ac1580720400542c40f79e0ec9a77c38d047f83906846d26d75ad03558e0d9d8e866600db2378dfa6a1bdc89e705d0d49e249b29f2c28b622f6fda2e04cba881d64078bc74a6e78c7a3b38a3fd69d7d24ce5f04cc9be849685acca7ec75c2d56cb07172495869be7132fd38b4dd2e5e4deb663e54c1e0be84d75185fdfdd27660a7dcecd5f69914ff99ce6042473d797c1ec2419"}, 0xbb, 0x1)
stat(&(0x7f0000000340)='./file1\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000300)='./file1\x00', 0x0, r1)
ioctl(r0, 0x401, &(0x7f00000009c0)="21e8a5e1da4af499b325016805f67b97c8ec4cba6b468c041e1c42afe95421b7feefd36657b764ff43038bd3417d38356c354a51e89df1521707b88912286b787d61ba7a8d49f21f1ee5c62c55cc062abde8f19bbd252a2271f26206")
---
lsetxattr$security_capability(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x9, 0x4}, {0x6, 0x40}]}, 0x14, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x0)
rename(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)=0x3, 0x8, 0x2)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), &(0x7f0000000340)='\x00', 0x1, 0x2)
renameat(0xffffffffffffffff, &(0x7f0000000380)='./file1\x00', 0xffffffffffffff9c, &(0x7f00000003c0)='\x00')
readlink(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0)=""/81, 0x51)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
readlink(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)=""/8, 0x8)
open(&(0x7f0000000400)='./file0\x00', 0x20500, 0xa1)
rmdir(&(0x7f0000000680)='./file1\x00')
sync()
r0 = openat(0xffffffffffffffff, &(0x7f00000006c0)='./file2\x00', 0x220000, 0xd5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740), &(0x7f0000000780)='./file2\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f00000007c0)='./file1/file0\x00', &(0x7f0000000800), &(0x7f0000000840)={0x0, 0xfb, 0xc3, 0x4, 0x3, "282248737f704aae236a470f7797faa7", "b25ac77d7c511861ae19e54bca24ff5c090b8045cedbd8c2b7ebc3f2b8f2d5289402278fcad20ebf3345a605db3c4f67605b5e2aeb7d4e73306e6f717ebf15b33815bee07fc5f23ade31d84dbd6701bd8cdba3a385c2071164caa2423ddce3a1b3ef695f1b28545e0a40f4d1a6c0a44c8e0a87f1f7884c71d6a5cb380b6466c852533a4141f4bd3720541051217b0d8593d62024892c26c867183b87ef5a2f1172cb2543332ca9f607e2d037f9cd"}, 0xc3, 0x3)
stat(&(0x7f0000000440)='./file2\x00', &(0x7f0000000c80)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000a40)='./file0\x00', &(0x7f0000000a80)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000b00)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000940)='system.posix_acl_access\x00', &(0x7f0000000b80)={{}, {0x1, 0x6}, [{0x2, 0x7, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x4, r1}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x1, 0xee01}, {0x2, 0x4, 0xee01}, {0x2, 0x4, 0xee01}, {0x2, 0x4, r2}], {0x4, 0x2}, [{0x8, 0x1, 0xee00}, {}, {0x8, 0x2}, {}, {0x8, 0x2, r3}, {0x8, 0x1}, {0x8, 0x6, 0xee00}], {0x10, 0x1}, {0x20, 0x4}}, 0x9c, 0x7)
open$dir(&(0x7f0000000c40)='./file1\x00', 0x402000, 0xc0)
---

end of program
----- executor 4 receive testcase
----- executor 3 receive testcase
executor 4: prog_data_offset 5296, prog_size 6792
executor 3: prog_data_offset 1336, prog_size 3960
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/orangefs-client/dfs-0-7969
time breakdown 1: 450, 57, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 224
-----finish removing dir
mkdir time 134
executor 3 create dir /root/orangefs-client/dfs-0-7970 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7970
receive_execute: 13, 359
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-7970
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 4, 386
receive_execute: 31, 387
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
receive_execute: 37, 371
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
----- executor 3 write_call_output, size 0, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7073, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 7073, flag collect 0
----- executor 3 signal number : 2065
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7073, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 7073, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 7315, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 7315, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 18
cover_reset in execute_call
receive_execute: 26, 441
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7315, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 7315, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 9082, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9082, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 9324, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9324, flag collect 0
----- executor 4 signal number : 28
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 12493, pid 22315, write pid:22317
----- executor 3 executes write_coverage_signal cov->size 12493, flag collect 0
----- executor 3 signal number : 758
----- completed 6
----- executor 3 write_call_output, size 14146, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 14146, flag collect 0
----- executor 3 signal number : 51
----- completed 7
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7073, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 7073, flag collect 0
----- executor 3 signal number : 21
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22345
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
----- executor 4 write_call_output, size 32765, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 929
----- completed 4
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 9650, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 9650, flag collect 0
----- executor 3 signal number : 53
----- completed 14
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 26122, pid 22315, write pid:22316
----- executor 3 executes write_coverage_signal cov->size 26122, flag collect 0
----- executor 3 signal number : 442
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 157, 22, 24
execute_one time: 0, 203
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22345
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/10 23:08:08 for select break: 1
2023/03/10 23:08:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 418, 204, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 9074, pid 22343, write pid:22345
----- executor 4 executes write_coverage_signal cov->size 9074, flag collect 0
----- executor 4 signal number : 19
----- completed 6
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 9074, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9074, flag collect 0
----- executor 4 signal number : 21
----- completed 8
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 5613, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 5613, flag collect 0
----- executor 4 signal number : 32
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 9314, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9314, flag collect 0
----- executor 4 signal number : 24
----- completed 11
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 9554, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9554, flag collect 0
----- executor 4 signal number : 21
----- completed 14
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 4 write_call_output, size 9074, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9074, flag collect 0
----- executor 4 signal number : 21
----- completed 15
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 9216, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 9216, flag collect 0
----- executor 4 signal number : 21
----- completed 16
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 4 write_call_output, size 11375, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 11375, flag collect 0
----- executor 4 signal number : 51
----- completed 17
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22343, write pid:22344
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 23
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 52
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 242, 199, 1
execute_one time: 0, 442
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 467, 443, 0
before receive testcase: 0 1
----- executor 0 signal number : 2537
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1253
----- executor 0 executes write_coverage_signal cov->size 16751, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 10467, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4171
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 589, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 10290, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 2647, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 3 output_pos_value 211
time breakdown 2: 408, 508, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1968
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1030
----- executor 1 executes write_coverage_signal cov->size 15933, flag collect 0
----- executor 1 signal number : 410
----- executor 1 executes write_coverage_signal cov->size 17347, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3497
time breakdown 1: 390, 512, 0
before receive testcase: 0 1
time breakdown 0: 382, 528, 0
before receive testcase: 0 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:09 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:09 wg wait finish
2023/03/10 23:08:09 ------ all executors finish execution
2023/03/10 23:08:09 exec time: 911
2023/03/10 23:08:09 ----- PS len: 5
2023/03/10 23:08:09 [CLIENT] executor 4 has 20 replies
2023/03/10 23:08:09 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 28 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 929 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 19 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 21 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 32 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 24 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 21 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 21 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 21 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 51 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 2537 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 1253 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/10 23:08:09 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 1968 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 1030 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 410 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:09 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:09 [CLIENT] executor 3 has 15 replies
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 758 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 51 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 442 signal and 0 cover from executor 3
2023/03/10 23:08:09 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:09 mutate testcase with failures
2023/03/10 23:08:09 ----- mutateArg()
2023/03/10 23:08:09 ----- mutateArg()
2023/03/10 23:08:09 mutate testcase with failures
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 248 fstat fstat
2023/03/10 23:08:09 ----- mutateArg()
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 2753 read read
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/10 23:08:09 ----- mutateArg()
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 2749 pwrite64 pwrite64
2023/03/10 23:08:09 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:09 prog length: 1
2023/03/10 23:08:09 prog length: 4
2023/03/10 23:08:09 HasCrashFail:false HasNetFail:false
23:08:09 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x40000, 0xaf801f0e5cc38c61)
---
fstat(0xffffffffffffffff, &(0x7f0000000100))
read(0xffffffffffffffff, &(0x7f0000000000)=""/103, 0x67)
fcntl$setstatus(0xffffffffffffffff, 0x4, 0x43000)
pwrite64(0xffffffffffffffff, &(0x7f0000000180)="d4a246da82c43f8cd7d0026d64b5966702d4104fc8f3027679c4640e82f3ad70836e4a909f9f7de004086b9e279eabdf07c904cf6ef81d0652332dddc2f856950f18caeaacd30ad139133533d2852e19874f3ce4536624a8dcffd1f13002b6a31bac1c2ede0ad63b83ea4e57d918152679a09f28122a26216ccb2ec4f881796f0ffc1af2edfd1a86f1c59a52dbed3567cad54396220ed94122bc447552bf55dad5ef0bd277c3e7f382047ce6596b2d996bebc6228a6124cfb48f735ad3ae2ff0dbb2426167ea82224b574b0877df15836cb707cc95782d3bea27a94b2862f477794c7b1c6b0df143d8f81ae9b99d8cd31d25362e7af7e19aedd1534e", 0xfc, 0xffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-7970
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 680
remove dir time 131
-----finish removing dir
receive_execute: 18, 155
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-7971 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7971
receive_execute: 19, 151
receive_execute: 13, 155
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 321, 155
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 7083, pid 22320, write pid:22321
----- executor 3 executes write_coverage_signal cov->size 7083, flag collect 0
----- executor 3 signal number : 2067
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-7971
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 2, 14, 0
execute_one time: 0, 16
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 476, 18, 0
before receive testcase: 0 1
receive_execute: 33, 236
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22348, write pid:22349
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22348, write pid:22349
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22348, write pid:22349
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22348, write pid:22349
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 4: 269, 1, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24402, flag collect 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 13
----- executor 2 signal number : 2012
----- executor 2 executes write_coverage_signal cov->size 9920, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1890, flag collect 0
executor 0 write_server_output
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 486, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 168, 90, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 12161, flag collect 0
----- executor 0 signal number : 1919
----- executor 0 executes write_coverage_signal cov->size 5530, flag collect 0
----- executor 0 signal number : 358
----- executor 0 executes write_coverage_signal cov->size 2649, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 1561, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 2657
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:09 wg wait finish
2023/03/10 23:08:09 ------ all executors finish execution
2023/03/10 23:08:09 exec time: 256
2023/03/10 23:08:09 ----- PS len: 5
2023/03/10 23:08:09 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 1919 signal and 0 cover from userspace component
2023/03/10 23:08:09 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:09 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:09 fuzzer receive 2067 signal and 0 cover from executor 3
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 358 signal and 0 cover from userspace component
2023/03/10 23:08:09 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 2012 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
time breakdown 0: 170, 98, 0
before receive testcase: 0 1
2023/03/10 23:08:09 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:09 mutate testcase with failures
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 2810 renameat renameat
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/10 23:08:09 mutate testcase with failures
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 196 fchown fchown
2023/03/10 23:08:09 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:09 prog length: 5
2023/03/10 23:08:09 prog length: 6
2023/03/10 23:08:09 HasCrashFail:false HasNetFail:false
23:08:09 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file1/file0\x00', 0x10000, 0x4)
renameat(r1, &(0x7f0000000080)='.\x00', r0, &(0x7f00000000c0)='./file1\x00')
open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f00000004c0)={0x0, 0xfb, 0x1015, 0x4, 0x8, "762dbe1114d373e2dd929f6a73840d14", ""}, 0x1015, 0x2)
---
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x40, 0x11)
fcntl$setflags(r0, 0x2, 0x1)
lsetxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0x0, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x121800, 0x4)
fchown(r1, 0xee01, 0xee00)
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5288
remove dir: /root/orangefs-client/dfs-0-7971
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 signal number : 334
----- executor 2 executes write_coverage_signal cov->size 2358, flag collect 0
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 2424, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 2722
time breakdown 2: 173, 99, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 6624, prog_size 952
remove dir time 47
-----finish removing dir
mkdir time 106
executor 3 create dir /root/orangefs-client/dfs-0-7972 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7972
receive_execute: 5, 153
current dir: executor 4: /root/orangefs-client/dfs-0-7972
receive_execute: 3, 154
receive_execute: 85, 153
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
receive_execute: 13, 153
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 12523, pid 22322, write pid:22324
----- executor 3 executes write_coverage_signal cov->size 12523, flag collect 0
----- executor 3 signal number : 2680
----- completed 1
----- executor 3 write_call_output, size 21140, pid 22322, write pid:22323
----- executor 3 executes write_coverage_signal cov->size 21140, flag collect 0
----- executor 3 signal number : 835
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
receive_execute: 29, 201
----- executor 3 write_call_output, size 0, pid 22322, write pid:22323
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22322, write pid:22323
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22322, write pid:22323
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 63, 13, 0
execute_one time: 1, 76
----- executor 4 write_call_output, size 23406, pid 22351, write pid:22352
----- executor 4 executes write_coverage_signal cov->size 23406, flag collect 0
----- executor 4 signal number : 3089
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22351, write pid:22352
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22351, write pid:22352
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 12748, pid 22351, write pid:22352
----- executor 4 executes write_coverage_signal cov->size 12748, flag collect 0
----- executor 4 signal number : 399
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
time breakdown 3: 238, 78, 0
before receive testcase: 0 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 32765, pid 22351, write pid:22352
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 447
----- completed 5
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22351, write pid:22352
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 43, 1, 0
execute_one time: 0, 44
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2755
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1045
----- executor 2 executes write_coverage_signal cov->size 6347, flag collect 0
----- executor 2 signal number : 352
----- executor 2 executes write_coverage_signal cov->size 5843, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 77
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 4242
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 2342
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1218
----- executor 1 executes write_coverage_signal cov->size 4770, flag collect 0
----- executor 1 signal number : 286
time breakdown 2: 157, 109, 0
before receive testcase: 0 0
time breakdown 4: 230, 45, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4455, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2114, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2283, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1018, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 158, 120, 0
before receive testcase: 0 1
2023/03/10 23:08:09 for select break: 1
2023/03/10 23:08:09 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:09 wg wait finish
2023/03/10 23:08:09 ------ all executors finish execution
2023/03/10 23:08:09 exec time: 290
2023/03/10 23:08:09 ----- PS len: 5
2023/03/10 23:08:09 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 2755 signal and 0 cover from userspace component
2023/03/10 23:08:09 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:09 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 2342 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 1218 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 1045 signal and 0 cover from userspace component
2023/03/10 23:08:09 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:09 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:09 [CLIENT] executor 4 has 6 replies
2023/03/10 23:08:09 fuzzer receive 3089 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 2680 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 835 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 399 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 447 signal and 0 cover from executor 4
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:09 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 352 signal and 0 cover from userspace component
2023/03/10 23:08:09 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:09 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:09 mutate testcase with failures
2023/03/10 23:08:09 ----- mutateArg()
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/10 23:08:09 mutate testcase with failures
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/10 23:08:09 ----- insertCall()
2023/03/10 23:08:09 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/10 23:08:09 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:09 prog length: 2
2023/03/10 23:08:09 prog length: 3
2023/03/10 23:08:09 HasCrashFail:false HasNetFail:false
23:08:09 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0/file0\x00', 0x3315c0, 0x3648cfcba82b6d9a)
lsetxattr$security_smack_transmute(&(0x7f0000000040)='./file0/file0\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x4, 0x1)
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000000), &(0x7f0000000040)='./file0\x00', 0x8, 0x2)
fcntl$addseals(r0, 0x409, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/orangefs-client/dfs-0-7972
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 executes write_coverage_signal cov->size 4537, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3936
time breakdown 1: 188, 115, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1784, prog_size 472
remove dir time 73
-----finish removing dir
mkdir time 47
executor 3 create dir /root/orangefs-client/dfs-0-7973 successfully
receive_execute: 18, 120
current dir: executor 3: /root/orangefs-client/dfs-0-7973
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 29, 120
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7973
receive_execute: 60, 129
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7422, pid 22325, write pid:22326
----- executor 3 executes write_coverage_signal cov->size 7422, flag collect 0
receive_execute: 1, 121
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 signal number : 2146
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7065, pid 22325, write pid:22326
----- executor 3 executes write_coverage_signal cov->size 7065, flag collect 0
----- executor 3 signal number : 17
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 2, 0
execute_one time: 1, 11
time breakdown 3: 189, 13, 0
before receive testcase: 0 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 3 receive reply, reply.done 1
receive_execute: 35, 215
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22355, write pid:22356
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22355, write pid:22356
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22355, write pid:22356
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
executor 0 write_server_output
executor 2 write_server_output
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 4 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 24421, flag collect 0
----- executor 0 signal number : 1945
----- executor 0 executes write_coverage_signal cov->size 9727, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2803, flag collect 0
----- executor 0 signal number : 297
----- executor 0 executes write_coverage_signal cov->size 2445, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 2665
time breakdown 0: 138, 103, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 124, 99, 0
before receive testcase: 0 1
time breakdown 4: 250, 3, 0
before receive testcase: 0 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:10 wg wait finish
2023/03/10 23:08:10 ------ all executors finish execution
2023/03/10 23:08:10 exec time: 234
2023/03/10 23:08:10 ----- PS len: 5
2023/03/10 23:08:10 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:10 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:10 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:10 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:10 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:10 fuzzer receive 2146 signal and 0 cover from executor 3
2023/03/10 23:08:10 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 1945 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 297 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:10 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:10 mutate testcase with failures
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/10 23:08:10 ----- mutateArg()
2023/03/10 23:08:10 mutate testcase with failures
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 2781 readlinkat readlinkat
2023/03/10 23:08:10 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:10 prog length: 2
2023/03/10 23:08:10 prog length: 2
2023/03/10 23:08:10 HasCrashFail:false HasNetFail:false
23:08:10 ---executing program 0:
---
---
---
lsetxattr$security_smack_transmute(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x2)
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x3648cfcba82b6df3)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
readlinkat(r0, &(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=""/46, 0x2e)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/orangefs-client/dfs-0-7973
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 155, 108, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 23
-----finish removing dir
----- executor 4 receive testcase
executor 4: prog_data_offset 1768, prog_size 328
mkdir time 36
executor 3 create dir /root/orangefs-client/dfs-0-7974 successfully
receive_execute: 1, 60
current dir: executor 3: /root/orangefs-client/dfs-0-7974
current dir: executor 4: /root/orangefs-client/dfs-0-7974
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
receive_execute: 93, 71
receive_execute: 13, 70
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 14, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7361, pid 22327, write pid:22328
----- executor 3 executes write_coverage_signal cov->size 7361, flag collect 0
----- executor 3 signal number : 2088
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
execute_one loop: 0, 0, 50
receive_execute: 14, 172
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21893, pid 22327, write pid:22328
----- executor 3 executes write_coverage_signal cov->size 21893, flag collect 0
----- executor 3 signal number : 1038
----- completed 2
cover_reset in execute_call
----- executor 4 write_call_output, size 8752, pid 22358, write pid:22359
----- executor 4 executes write_coverage_signal cov->size 8752, flag collect 0
----- executor 4 signal number : 2093
----- completed 1
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22358, write pid:22359
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 131, 0, 0
execute_one time: 0, 131
time breakdown 3: 171, 132, 0
before receive testcase: 0 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 34, 12, 0
execute_one time: 0, 47
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 2520, flag collect 0
----- executor 0 signal number : 140
----- executor 0 executes write_coverage_signal cov->size 432, flag collect 0
----- executor 0 signal number : 44
executor 0 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 169, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 865, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 82, 162, 0
before receive testcase: 0 1
time breakdown 4: 186, 47, 0
before receive testcase: 0 0
time breakdown 0: 83, 150, 0
before receive testcase: 0 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:10 wg wait finish
2023/03/10 23:08:10 ------ all executors finish execution
2023/03/10 23:08:10 exec time: 236
2023/03/10 23:08:10 ----- PS len: 5
2023/03/10 23:08:10 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:10 fuzzer receive 2093 signal and 0 cover from executor 4
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:10 [SERVER] executor 0 has 3 replies
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:10 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:10 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 2587 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 1304 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 299 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:10 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:10 fuzzer receive 2088 signal and 0 cover from executor 3
2023/03/10 23:08:10 fuzzer receive 1038 signal and 0 cover from executor 3
2023/03/10 23:08:10 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:10 mutate testcase with failures
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/10 23:08:10 mutate testcase with failures
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 2749 pwrite64 pwrite64
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 216 fdatasync fdatasync
2023/03/10 23:08:10 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:10 prog length: 2
2023/03/10 23:08:10 prog length: 4
2023/03/10 23:08:10 HasCrashFail:false HasNetFail:false
23:08:10 ---executing program 0:
---
---
---
lsetxattr$security_selinux(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x3)
---
pwrite64(0xffffffffffffffff, &(0x7f0000000000)="947abb1e61eae8fd83e00fd18205e882b547070c7843879c583629e3f7e82bbf3b710ed9316b658afea864d9e46992b9e816d0f462089ed7d130745da47da7cc360f90871130a11e300c044b339041c8b75271183880674c54e865edac822d578db78012cf1419095c6d73e56be9cb1f229085680b1b71c824cd3f6d00f651441a0af46c8ba633dd3ec4b6ea7d31e8c5a4a277905255be576b0bd2a9f898a6cf4e90a52cdafb48f073cfac26aabc2c813aa54ec73d32206ec20516db75b2edb0f8343bfcc2eebcb79c258b9261deade90fc3", 0xd2, 0x8001)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
stat(&(0x7f0000000a40)='./file0\x00', 0x0)
fdatasync(0xffffffffffffffff)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2587
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1304
----- executor 2 executes write_coverage_signal cov->size 3628, flag collect 0
----- executor 2 signal number : 299
----- executor 2 executes write_coverage_signal cov->size 4532, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 4282
time breakdown 2: 61, 176, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1768, prog_size 688
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/orangefs-client/dfs-0-7974
remove dir time 134
-----finish removing dir
mkdir time 26
executor 3 create dir /root/orangefs-client/dfs-0-7975 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7975
receive_execute: 44, 161
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22329, write pid:22330
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 1, 177
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 17, 176
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7325, pid 22329, write pid:22330
----- executor 3 executes write_coverage_signal cov->size 7325, flag collect 0
----- executor 3 signal number : 2080
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 0, 13
current dir: executor 4: /root/orangefs-client/dfs-0-7975
time breakdown 3: 205, 14, 0
before receive testcase: 0 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 3 receive reply, reply.done 1
receive_execute: 6, 177
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 18, 225
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22360, write pid:22361
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22360, write pid:22363
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
----- executor 4 write_call_output, size 32765, pid 22360, write pid:22361
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2848
----- completed 3
----- executor 4 write_call_output, size 32765, pid 22360, write pid:22362
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 317
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 192, 19, 0
execute_one time: 1, 211
time breakdown 4: 243, 213, 0
before receive testcase: 0 1
executor 0 write_server_output
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15110, flag collect 0
----- executor 1 signal number : 1759
----- executor 1 executes write_coverage_signal cov->size 8243, flag collect 0
----- executor 1 signal number : 1087
----- executor 1 executes write_coverage_signal cov->size 3720, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1858, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 3224
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 4455, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2294, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 4803, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1828, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 1: 198, 250, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2791
----- executor 2 executes write_coverage_signal cov->size 20198, flag collect 0
----- executor 2 signal number : 1037
----- executor 2 executes write_coverage_signal cov->size 8340, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 4590, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4261
time breakdown 2: 178, 280, 0
before receive testcase: 0 1
2023/03/10 23:08:10 for select break: 1
2023/03/10 23:08:10 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:10 wg wait finish
2023/03/10 23:08:10 ------ all executors finish execution
2023/03/10 23:08:10 exec time: 457
2023/03/10 23:08:10 ----- PS len: 5
2023/03/10 23:08:10 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:10 fuzzer receive 2848 signal and 0 cover from executor 4
2023/03/10 23:08:10 fuzzer receive 317 signal and 0 cover from executor 4
2023/03/10 23:08:10 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:10 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 1759 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 1087 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:10 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 2791 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 1037 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/10 23:08:10 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:10 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:10 fuzzer receive 2080 signal and 0 cover from executor 3
2023/03/10 23:08:10 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:10 mutate testcase with failures
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 2808 removexattr removexattr
2023/03/10 23:08:10 ----- mutateArg()
2023/03/10 23:08:10 mutate testcase with failures
2023/03/10 23:08:10 ----- mutateArg()
2023/03/10 23:08:10 ----- insertCall()
2023/03/10 23:08:10 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/10 23:08:10 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:10 prog length: 5
2023/03/10 23:08:10 prog length: 1
2023/03/10 23:08:10 HasCrashFail:false HasNetFail:false
23:08:10 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x200, 0x0)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file1\x00')
removexattr(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=@known='system.sockprotoname\x00')
chmod(&(0x7f0000000000)='./file1\x00', 0x14)
---
lsetxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_access\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="02000000010000000000000002000300", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="021d0200", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=0x0, @ANYBLOB="040006000000000008000400", @ANYRES32=0xee01, @ANYBLOB="08e7ccfb", @ANYRES32, @ANYBLOB="08000400", @ANYRES32=0x0, @ANYBLOB="10000400000000002000040000000000"], 0x5c, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 776
remove dir: /root/orangefs-client/dfs-0-7975
----- executor 4 receive testcase
executor 4: prog_data_offset 2112, prog_size 872
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 198, 268, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 129
-----finish removing dir
receive_execute: 12, 141
receive_execute: 20, 142
current dir: executor 4: /root/orangefs-client/dfs-0-7976
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-7976 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7976
receive_execute: 270, 142
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 141
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
----- executor 3 write_call_output, size 7329, pid 22331, write pid:22332
----- executor 3 executes write_coverage_signal cov->size 7329, flag collect 0
----- executor 3 signal number : 2081
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22331, write pid:22332
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
receive_execute: 24, 246
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7619, pid 22364, write pid:22365
----- executor 4 executes write_coverage_signal cov->size 7619, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 2, 3, 0
execute_one time: 1, 5
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 270, 6, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22331, write pid:22332
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 852
----- completed 3
execute_one loop: 0, 0, 55
----- executor 3 write_call_output, size 32765, pid 22331, write pid:22333
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 333
----- completed 4
----- executor 3 write_call_output, size 32765, pid 22331, write pid:22334
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 140
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
executor 3, execute_one inner time: 280, 106, 0
execute_one time: 0, 386
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 385, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 7980, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 7140, flag collect 0
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 1945, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 3 output_pos_value 211
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 412, 388, 0
before receive testcase: 0 1
time breakdown 2: 146, 392, 0
before receive testcase: 0 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 2053, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2424
----- executor 0 executes write_coverage_signal cov->size 29255, flag collect 0
----- executor 0 signal number : 1219
----- executor 0 executes write_coverage_signal cov->size 10223, flag collect 0
time breakdown 1: 162, 401, 0
before receive testcase: 0 0
----- executor 0 signal number : 310
----- executor 0 executes write_coverage_signal cov->size 6203, flag collect 0
----- executor 0 signal number : 83
executor 0 server cover_cnt 4 output_pos_value 4049
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:11 wg wait finish
2023/03/10 23:08:11 ------ all executors finish execution
2023/03/10 23:08:11 exec time: 546
2023/03/10 23:08:11 ----- PS len: 5
2023/03/10 23:08:11 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:11 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:11 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 2424 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 1219 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 310 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/10 23:08:11 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:11 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:11 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:11 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:11 fuzzer receive 2081 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 852 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 140 signal and 0 cover from executor 3
time breakdown 0: 153, 405, 0
before receive testcase: 0 1
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:11 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:11 mutate testcase with failures
2023/03/10 23:08:11 ----- insertCall()
2023/03/10 23:08:11 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/10 23:08:11 ----- insertCall()
2023/03/10 23:08:11 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/10 23:08:11 ----- insertCall()
2023/03/10 23:08:11 ----- generateCall 3764 symlink symlink
2023/03/10 23:08:11 ----- mutateArg()
2023/03/10 23:08:11 ----- mutateArg()
2023/03/10 23:08:11 ----- insertCall()
2023/03/10 23:08:11 ----- generateCall 217 fgetxattr fgetxattr
2023/03/10 23:08:11 mutate testcase with failures
2023/03/10 23:08:11 ----- insertCall()
2023/03/10 23:08:11 ----- generateCall 250 fsync fsync
2023/03/10 23:08:11 ----- mutateArg()
2023/03/10 23:08:11 ----- mutateArg()
2023/03/10 23:08:11 ----- mutateArg()
2023/03/10 23:08:11 ----- insertCall()
2023/03/10 23:08:11 ----- generateCall 231 fsetxattr fsetxattr
2023/03/10 23:08:11 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:11 prog length: 6
2023/03/10 23:08:11 prog length: 4
2023/03/10 23:08:11 HasCrashFail:false HasNetFail:false
23:08:11 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r1 = open$dir(&(0x7f0000000080)='./file0\x00', 0x101000, 0x931b080da3eb0d56)
fgetxattr(r1, &(0x7f00000001c0)=@known='com.apple.FinderInfo\x00', &(0x7f0000000200)=""/118, 0x76)
fsetxattr$security_capability(r1, &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x2000000, [{0x0, 0x1f}, {0x7, 0x5}]}, 0x14, 0x2)
symlink(&(0x7f0000000140)='.\x00', &(0x7f0000000180)='./file0\x00')
write$binfmt_misc(r0, &(0x7f0000000000)=ANY=[@ANYBLOB="73797a31fb21aa929bd1f11005328b749c1751dfaebaa5df6ed99687c45c5b3eac8dc322d052924ed7bc4c22024dc15af853703c554ab7918551d78cade125ef38fe386d9e73c9e6bb97fecc512d60468b52be8000"], 0x55)
---
fsetxattr(0xffffffffffffffff, &(0x7f00000000c0)=@known='trusted.overlay.redirect\x00', &(0x7f0000000100)='\x00', 0x1, 0x2)
fsync(0xffffffffffffffff)
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1256
remove dir: /root/orangefs-client/dfs-0-7976
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2592, prog_size 568
remove dir time 48
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-7977 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7977
current dir: executor 4: /root/orangefs-client/dfs-0-7977
receive_execute: 2, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 20, 73
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22335, write pid:22336
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7094, pid 22335, write pid:22336
----- executor 3 executes write_coverage_signal cov->size 7094, flag collect 0
----- executor 3 signal number : 2068
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22335, write pid:22336
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22335, write pid:22336
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 15, 74
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 64
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 297, 102
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22366, write pid:22367
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22366, write pid:22367
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22335, write pid:22337
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 7094, pid 22335, write pid:22336
----- executor 3 executes write_coverage_signal cov->size 7094, flag collect 0
----- executor 3 signal number : 15
----- completed 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 169, 1, 0
execute_one time: 1, 170
----- executor 4 write_call_output, size 32765, pid 22366, write pid:22367
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3021
----- completed 3
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 93, 173, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 18484, pid 22366, write pid:22368
----- executor 4 executes write_coverage_signal cov->size 18484, flag collect 0
----- executor 4 signal number : 378
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 152, 4, 0
execute_one time: 1, 156
time breakdown 4: 399, 158, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2817
----- executor 0 executes write_coverage_signal cov->size 30442, flag collect 0
----- executor 0 signal number : 1085
----- executor 0 executes write_coverage_signal cov->size 6768, flag collect 0
----- executor 0 signal number : 351
----- executor 0 executes write_coverage_signal cov->size 5389, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4343
time breakdown 0: 73, 192, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2551
time breakdown 1: 79, 194, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1210
----- executor 2 executes write_coverage_signal cov->size 8484, flag collect 0
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 4918, flag collect 0
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 4164
2023/03/10 23:08:11 for select break: 1
2023/03/10 23:08:11 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:11 wg wait finish
2023/03/10 23:08:11 ------ all executors finish execution
2023/03/10 23:08:11 exec time: 291
2023/03/10 23:08:11 ----- PS len: 5
2023/03/10 23:08:11 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:11 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:11 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:11 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:11 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 2551 signal and 0 cover from userspace component
2023/03/10 23:08:11 [CLIENT] executor 3 has 6 replies
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 1210 signal and 0 cover from userspace component
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 2817 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 1085 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 351 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:11 fuzzer receive 3021 signal and 0 cover from executor 4
2023/03/10 23:08:11 fuzzer receive 378 signal and 0 cover from executor 4
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/10 23:08:11 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:11 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:11 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:11 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/10 23:08:11 ----- generateCall 2723 pread64 pread64
2023/03/10 23:08:11 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/10 23:08:11 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/10 23:08:11 ----- generateCall 2462 openat openat
2023/03/10 23:08:11 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/10 23:08:11 ----- generateCall 220 flock flock
2023/03/10 23:08:11 ----- generateCall 131 close close
2023/03/10 23:08:11 ----- generateCall 2723 pread64 pread64
2023/03/10 23:08:11 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/10 23:08:11 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/10 23:08:11 ----- generateCall 222 fremovexattr fremovexattr
2023/03/10 23:08:11 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/10 23:08:11 ----- generateCall 131 close close
2023/03/10 23:08:11 ----- generateCall 220 flock flock
2023/03/10 23:08:11 map[./file0:true]
2023/03/10 23:08:11 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:11 prog length: 20
2023/03/10 23:08:11 prog length: 20
2023/03/10 23:08:11 HasCrashFail:false HasNetFail:false
23:08:11 ---executing program 0:
---
---
---
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)=')(}\x95{)\x00', 0x7, 0x1)
pread64(0xffffffffffffffff, &(0x7f0000000080)=""/186, 0xba, 0xaf87)
fsetxattr$security_selinux(0xffffffffffffffff, &(0x7f0000000140), &(0x7f0000000180)='system_u:object_r:dmidecode_exec_t:s0\x00', 0x26, 0x0)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fsetxattr$security_capability(r0, &(0x7f00000001c0), &(0x7f0000000200)=@v2={0x2000000, [{0x0, 0xffff}, {0x2, 0x9105}]}, 0x14, 0x0)
r1 = dup2(r0, 0xffffffffffffffff)
r2 = openat(r1, &(0x7f0000000240)='./file0\x00', 0x402000, 0x166)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000280), &(0x7f00000002c0)='#(\x00', 0x3, 0x6)
flock(r2, 0xb)
close(r1)
r3 = open(&(0x7f0000000300)='./file0\x00', 0x200782, 0x108)
pread64(r3, &(0x7f0000000340)=""/40, 0x28, 0x3ff)
r4 = dup(r3)
fsetxattr$trusted_overlay_redirect(r4, &(0x7f0000000380), 0xfffffffffffffffd, 0x0, 0x4)
fsetxattr$trusted_overlay_opaque(r3, &(0x7f00000003c0), &(0x7f0000000400), 0x2, 0x1)
r5 = fcntl$dupfd(r3, 0x406, r4)
fremovexattr(r5, &(0x7f0000000440)=@known='trusted.overlay.origin\x00')
fcntl$notify(r5, 0x402, 0x49)
close(r2)
flock(0xffffffffffffffff, 0x4)
---
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)=')(}\x95{)\x00', 0x7, 0x1)
pread64(0xffffffffffffffff, &(0x7f0000000080)=""/186, 0xba, 0xaf87)
fsetxattr$security_selinux(0xffffffffffffffff, &(0x7f0000000140), &(0x7f0000000180)='system_u:object_r:dmidecode_exec_t:s0\x00', 0x26, 0x0)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fsetxattr$security_capability(r0, &(0x7f00000001c0), &(0x7f0000000200)=@v2={0x2000000, [{0x0, 0xffff}, {0x2, 0x9105}]}, 0x14, 0x0)
r1 = dup2(r0, 0xffffffffffffffff)
r2 = openat(r1, &(0x7f0000000240)='./file0\x00', 0x402000, 0x166)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000280), &(0x7f00000002c0)='#(\x00', 0x3, 0x6)
flock(r2, 0xb)
close(r1)
r3 = open(&(0x7f0000000300)='./file0\x00', 0x200782, 0x108)
pread64(r3, &(0x7f0000000340)=""/40, 0x28, 0x3ff)
r4 = dup(r3)
fsetxattr$trusted_overlay_redirect(r4, &(0x7f0000000380), 0xfffffffffffffffd, 0x0, 0x4)
fsetxattr$trusted_overlay_opaque(r3, &(0x7f00000003c0), &(0x7f0000000400), 0x2, 0x1)
r5 = fcntl$dupfd(r3, 0x406, r4)
fremovexattr(r5, &(0x7f0000000440)=@known='trusted.overlay.origin\x00')
fcntl$notify(r5, 0x402, 0x49)
close(r2)
flock(0xffffffffffffffff, 0x4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 89, 217, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3240
remove dir: /root/orangefs-client/dfs-0-7977
----- executor 4 receive testcase
executor 4: prog_data_offset 4576, prog_size 3240
remove dir time 415
-----finish removing dir
receive_execute: 30, 504
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 64
executor 3 create dir /root/orangefs-client/dfs-0-7978 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7978
receive_execute: 25, 512
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 522
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7978
receive_execute: 69, 506
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7347, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 7347, flag collect 0
----- executor 3 signal number : 2085
----- completed 11
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22339, write pid:22340
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
receive_execute: 40, 551
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 26, 18, 0
execute_one time: 0, 44
time breakdown 3: 575, 45, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 7538, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 7538, flag collect 0
----- executor 4 signal number : 2084
----- completed 11
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22369, write pid:22370
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 32, 12, 0
execute_one time: 1, 44
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4465, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32370, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2090, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1653, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 2 signal number : 1953
----- executor 2 executes write_coverage_signal cov->size 12814, flag collect 0
time breakdown 4: 591, 47, 0
before receive testcase: 0 0
----- executor 2 signal number : 336
----- executor 1 executes write_coverage_signal cov->size 109, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:12 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 4206, flag collect 0
----- executor 2 signal number : 299
----- executor 2 executes write_coverage_signal cov->size 3046, flag collect 0
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 2679
2023/03/10 23:08:12 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:12 wg wait finish
2023/03/10 23:08:12 ------ all executors finish execution
2023/03/10 23:08:12 exec time: 627
2023/03/10 23:08:12 ----- PS len: 5
2023/03/10 23:08:12 [CLIENT] executor 4 has 20 replies
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 2084 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:12 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 1953 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 299 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
time breakdown 0: 534, 115, 0
before receive testcase: 0 0
time breakdown 2: 524, 105, 0
before receive testcase: 0 1
2023/03/10 23:08:12 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:12 [CLIENT] executor 3 has 20 replies
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 2085 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:12 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:12 mutate testcase with failures
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/10 23:08:12 ----- mutateArg()
2023/03/10 23:08:12 mutate testcase with failures
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:12 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:12 prog length: 4
2023/03/10 23:08:12 prog length: 5
2023/03/10 23:08:12 HasCrashFail:false HasNetFail:false
23:08:12 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file0\x00', 0x101000, 0xbe)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000140)={0x0, 0xfb, 0x71, 0x2, 0x3, "c385ca206e8992dd35fff167bd8fa54d", "098869eb7e9b6a1444e15a84c9e90d59f92d4bcf940ff52ab31c5c738026ad3480b85dd0549b834fea0ffee0c3265a29ef34f2af95dc5624e5aba8e2ca2223b70d24203d2dd102d9998fd8d405827a0ce0f119cfec6b4c47af664903"}, 0x71, 0x3)
unlink(&(0x7f0000000100)='./file0\x00')
setxattr$smack_xattr_label(0x0, 0x0, 0x0, 0x3, 0x0)
---
fcntl$setownex(0xffffffffffffffff, 0xf, &(0x7f0000000000)={0x2})
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x8a02, 0x2)
fcntl$setstatus(r0, 0x4, 0x0)
setxattr(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100)=@random={'trusted.', '%+\'\':[-.**![+\'!{\x00'}, &(0x7f0000000140)='.&}.\x00', 0x5, 0x0)
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000080)=0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/orangefs-client/dfs-0-7978
----- executor 4 receive testcase
executor 4: prog_data_offset 2328, prog_size 904
time breakdown 1: 537, 105, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 64
-----finish removing dir
receive_execute: 19, 106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
mkdir time 34
executor 3 create dir /root/orangefs-client/dfs-0-7979 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7979
receive_execute: 59, 114
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 15, 99
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
current dir: executor 4: /root/orangefs-client/dfs-0-7979
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 15, 114
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7101, pid 22342, write pid:22343
----- executor 3 executes write_coverage_signal cov->size 7101, flag collect 0
----- executor 3 signal number : 2068
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 7101, pid 22342, write pid:22343
----- executor 3 executes write_coverage_signal cov->size 7101, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 7101, pid 22342, write pid:22343
----- executor 3 executes write_coverage_signal cov->size 7101, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22342, write pid:22343
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 34, 11, 0
execute_one time: 1, 45
receive_execute: 30, 159
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 3 receive reply, reply.done 1
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22372, write pid:22373
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 3: 173, 47, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 7494, pid 22372, write pid:22373
----- executor 4 executes write_coverage_signal cov->size 7494, flag collect 0
----- executor 4 signal number : 2086
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22372, write pid:22373
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7252, pid 22372, write pid:22373
----- executor 4 executes write_coverage_signal cov->size 7252, flag collect 0
----- executor 4 signal number : 15
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22372, write pid:22373
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 19, 2, 0
execute_one time: 0, 22
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12185, flag collect 0
----- executor 0 signal number : 1921
----- executor 0 executes write_coverage_signal cov->size 5482, flag collect 0
----- executor 0 signal number : 358
----- executor 0 executes write_coverage_signal cov->size 1599, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 1399, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 2659
time breakdown 4: 189, 23, 0
before receive testcase: 0 1
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 4 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1946
----- executor 2 executes write_coverage_signal cov->size 20395, flag collect 0
----- executor 2 signal number : 334
----- executor 2 executes write_coverage_signal cov->size 5353, flag collect 0
----- executor 2 signal number : 307
----- executor 2 executes write_coverage_signal cov->size 4567, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 2677
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 129, 71, 0
before receive testcase: 0 1
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 122, 80, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 486, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:12 wg wait finish
2023/03/10 23:08:12 ------ all executors finish execution
2023/03/10 23:08:12 exec time: 219
2023/03/10 23:08:12 ----- PS len: 5
2023/03/10 23:08:12 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 2086 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 1921 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 358 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 1: 125, 106, 0
before receive testcase: 0 1
2023/03/10 23:08:12 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:12 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 1946 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 307 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:12 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:12 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:12 mutate testcase with failures
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 187 faccessat faccessat
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/10 23:08:12 mutate testcase with failures
2023/03/10 23:08:12 ----- mutateArg()
2023/03/10 23:08:12 ----- mutateArg()
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/10 23:08:12 ----- mutateArg()
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 251 ftruncate ftruncate
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 2753 read read
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 216 fdatasync fdatasync
2023/03/10 23:08:12 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:12 prog length: 10
2023/03/10 23:08:12 prog length: 8
2023/03/10 23:08:12 HasCrashFail:false HasNetFail:false
23:08:12 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x240000, 0x6c)
faccessat(r1, &(0x7f0000000300)='./file1\x00', 0x25)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file1\x00')
write$binfmt_script(r0, &(0x7f0000000180)={'#! ', './file1', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, '-'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '{4-,]+*.'}, {0x20, '!:'}, {}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ')$\')'}], 0xa, "7fd026cdfb97672cbb351aeece9037c7b1859eded75b7ab2a8c81b96b53b6a210f85636a30e35af2b266d1a4f0533af8cd5cfa10d5b07824e6f1b7258fe6c6bafe8be2bc994837182d29c6e4ec8711d000fae83d875578bba99752d2307b86a1098d18ef25f57f2905d8d0ad2524c60b43133430e6e8eb2a8099f4920ff92866969c591a38bdc4e70bedbbef"}, 0xf3)
chmod(&(0x7f0000000000)='./file1\x00', 0x14)
fstat(r0, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f00000000c0)='./file1\x00', r2, 0xee00)
fsetxattr$trusted_overlay_opaque(r1, &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x4)
---
r0 = dup(0xffffffffffffffff)
r1 = dup2(r0, r0)
fcntl$getown(r0, 0x9)
fdatasync(r1)
r2 = openat(r0, &(0x7f0000000000)='./file0\x00', 0x82, 0x8)
read(0xffffffffffffffff, &(0x7f0000000080)=""/230, 0xe6)
ftruncate(r0, 0xd5d)
fcntl$F_SET_RW_HINT(r2, 0x40c, &(0x7f0000000040)=0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2520
remove dir: /root/orangefs-client/dfs-0-7979
----- executor 4 receive testcase
executor 4: prog_data_offset 3856, prog_size 880
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 133
-----finish removing dir
mkdir time 114
executor 3 create dir /root/orangefs-client/dfs-0-7980 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7980
receive_execute: 60, 247
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-7980
receive_execute: 27, 246
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 247
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 36, 247
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 38, 262
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22376, write pid:22377
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 1, 2, 0
execute_one time: 1, 3
time breakdown 4: 300, 4, 0
before receive testcase: 0 1
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 13007, pid 22345, write pid:22347
----- executor 3 executes write_coverage_signal cov->size 13007, flag collect 0
----- executor 3 signal number : 2690
----- completed 1
----- executor 3 write_call_output, size 21845, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 21845, flag collect 0
----- executor 3 signal number : 822
----- completed 2
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4855, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 4855, flag collect 0
----- executor 3 signal number : 35
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9333, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 9333, flag collect 0
----- executor 3 signal number : 159
----- completed 9
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22345, write pid:22346
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 27
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 144, 104, 0
execute_one time: 0, 248
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5250, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 1350, flag collect 0
----- executor 2 signal number : 44
time breakdown 3: 307, 254, 0
before receive testcase: 0 1
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 282, 248, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31252, flag collect 0
----- executor 0 signal number : 2726
----- executor 0 executes write_coverage_signal cov->size 16213, flag collect 0
----- executor 0 signal number : 1040
----- executor 0 executes write_coverage_signal cov->size 6521, flag collect 0
----- executor 0 signal number : 338
----- executor 0 executes write_coverage_signal cov->size 3705, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4193
time breakdown 0: 293, 246, 0
before receive testcase: 0 0
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 2351
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1182
----- executor 1 executes write_coverage_signal cov->size 7914, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 8247, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3909
2023/03/10 23:08:12 for select break: 1
2023/03/10 23:08:12 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:12 wg wait finish
2023/03/10 23:08:12 ------ all executors finish execution
2023/03/10 23:08:12 exec time: 519
2023/03/10 23:08:12 ----- PS len: 5
2023/03/10 23:08:12 [CLIENT] executor 4 has 8 replies
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:12 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 2726 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 1040 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 338 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:12 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:12 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 2351 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 1182 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:12 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:12 [CLIENT] executor 3 has 10 replies
2023/03/10 23:08:12 fuzzer receive 2690 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 822 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/10 23:08:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:12 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:12 mutate testcase with failures
2023/03/10 23:08:12 ----- mutateArg()
2023/03/10 23:08:12 ----- mutateArg()
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 194 fchmod fchmod
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/10 23:08:12 mutate testcase with failures
2023/03/10 23:08:12 ----- insertCall()
2023/03/10 23:08:12 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/10 23:08:12 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:12 prog length: 2
2023/03/10 23:08:12 prog length: 3
2023/03/10 23:08:12 HasCrashFail:false HasNetFail:false
23:08:12 ---executing program 0:
---
---
---
lsetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.origin\x00', &(0x7f0000000080)='\x00', 0x1, 0x3)
fchmod(0xffffffffffffffff, 0xc8)
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x0, 0x21)
write$binfmt_elf32(r0, &(0x7f0000000480)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x3, 0x7f, 0x3, 0x100000001, 0x2, 0x3e, 0x8, 0x3e0, 0x38, 0x104, 0x0, 0x0, 0x20, 0x2, 0x3, 0x0, 0x6}, [{0x6, 0x6, 0x6c98, 0x7, 0x87fa, 0x0, 0x8, 0x4}], "33f23d4fa944f5aa60a4e5ce21f3d84cc682f55c7320f9d8b9080a0a2558a4eb2f8ee7b448b00e325070e8d29ff15aca3933f74507b5449e10323296e68d1e4db89631adee0a80fd097d3cb72101b29744b1334f38973a54c25d16d970fab347e4d4b85be7d73f3bfc1825d4f4a32ae84d1c7c2753f8d3194b7cd90b79905f5028d0ff000d8c173d85a600da0267dcc3977dc4f900d5633487247f5332560f23afadd03cd98e353fcec8b3be334e0fc19af145de7b1d6a3d507f446bcd4ac1b3870806c283f66fbeb3fca078883800ac0b2d5332657044c76ecfb3d8875c8ba91a0777", ['\x00', '\x00', '\x00']}, 0x43b)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1696, prog_size 2744
time breakdown 1: 265, 258, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/orangefs-client/dfs-0-7980
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 189
-----finish removing dir
mkdir time 87
executor 3 create dir /root/orangefs-client/dfs-0-7981 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7981
receive_execute: 5, 280
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 287
receive_execute: 27, 281
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 17, 285
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7981
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7076, pid 22349, write pid:22350
----- executor 3 executes write_coverage_signal cov->size 7076, flag collect 0
----- executor 3 signal number : 2067
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22349, write pid:22350
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 10, 13
time breakdown 3: 310, 24, 0
before receive testcase: 0 1
receive_execute: 254, 337
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 9601, pid 22379, write pid:22380
----- executor 4 executes write_coverage_signal cov->size 9601, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22379, write pid:22380
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 32765, pid 22379, write pid:22380
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 786
----- completed 3
execute_one loop: 0, 0, 33
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
executor 4, execute_one inner time: 36, 41, 0
execute_one time: 0, 77
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15208, flag collect 0
----- executor 2 signal number : 1757
----- executor 2 executes write_coverage_signal cov->size 8700, flag collect 0
----- executor 2 signal number : 1090
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4472, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4065, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2114, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2073, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1018, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
time breakdown 4: 591, 79, 0
before receive testcase: 0 1
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 302, 134, 0
before receive testcase: 0 0
----- executor 1 signal number : 1929
----- executor 1 executes write_coverage_signal cov->size 22676, flag collect 0
----- executor 1 signal number : 1020
----- executor 1 executes write_coverage_signal cov->size 6396, flag collect 0
----- executor 1 signal number : 358
----- executor 1 executes write_coverage_signal cov->size 4632, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3396
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 285, 141, 0
before receive testcase: 0 0
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 4 receive reply, reply.done 1
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1480, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 3225
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:13 wg wait finish
2023/03/10 23:08:13 ------ all executors finish execution
2023/03/10 23:08:13 exec time: 440
2023/03/10 23:08:13 ----- PS len: 5
2023/03/10 23:08:13 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:13 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:13 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:13 fuzzer receive 786 signal and 0 cover from executor 4
2023/03/10 23:08:13 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:13 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 1929 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 1020 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 358 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:13 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:13 fuzzer receive 2067 signal and 0 cover from executor 3
2023/03/10 23:08:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:13 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 1757 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 1090 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
time breakdown 2: 308, 149, 0
before receive testcase: 0 0
2023/03/10 23:08:13 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:13 mutate testcase with failures
2023/03/10 23:08:13 ----- mutateArg()
2023/03/10 23:08:13 mutate testcase with failures
2023/03/10 23:08:13 ----- insertCall()
2023/03/10 23:08:13 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/10 23:08:13 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:13 prog length: 1
2023/03/10 23:08:13 prog length: 1
2023/03/10 23:08:13 HasCrashFail:false HasNetFail:false
23:08:13 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x309002, 0x62c10c9eb44b8aa9)
---
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x68, 0x1, 0x7f, "1e161856bbe481868c71f7d20c51cba4", "3aa9f1f6aaf7c4315c633e32ba9dc3bb9ac5da187fc5658bf84e51082d911e45fd48a3bfb934a30e79f409a4d102cee4a740edc0e72e5079f2d3fca514eedce9d53ea0220cd695de75714e73caaa4b526f9367"}, 0x68, 0x1)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-7981
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 576
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 102
-----finish removing dir
receive_execute: 26, 136
mkdir time 33
executor 3 create dir /root/orangefs-client/dfs-0-7982 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7982
receive_execute: 28, 137
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 132, 139
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7073, pid 22351, write pid:22352
----- executor 3 executes write_coverage_signal cov->size 7073, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7982
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 3, 7, 0
execute_one time: 0, 10
time breakdown 3: 271, 12, 0
before receive testcase: 0 1
receive_execute: 14, 132
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 31, 156
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22382, write pid:22383
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
time breakdown 4: 187, 2, 0
before receive testcase: 0 1
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20518, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 205
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 3 receive reply, reply.done 1
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 4 receive reply, reply.done 1
----- executor 0 signal number : 1944
----- executor 0 executes write_coverage_signal cov->size 8245, flag collect 0
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1965, flag collect 0
----- executor 0 signal number : 285
----- executor 0 executes write_coverage_signal cov->size 1848, flag collect 0
----- executor 0 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 2648
time breakdown 0: 165, 28, 0
before receive testcase: 0 1
time breakdown 2: 158, 9, 0
before receive testcase: 0 0
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 0 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:13 wg wait finish
2023/03/10 23:08:13 ------ all executors finish execution
2023/03/10 23:08:13 exec time: 172
2023/03/10 23:08:13 ----- PS len: 5
2023/03/10 23:08:13 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:13 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:13 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 1944 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 285 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/10 23:08:13 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:13 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:13 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/10 23:08:13 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:13 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:13 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:13 mutate testcase with failures
2023/03/10 23:08:13 ----- insertCall()
2023/03/10 23:08:13 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/10 23:08:13 ----- insertCall()
2023/03/10 23:08:13 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/10 23:08:13 ----- insertCall()
2023/03/10 23:08:13 ----- generateCall 2810 renameat renameat
2023/03/10 23:08:13 mutate testcase with failures
2023/03/10 23:08:13 ----- insertCall()
2023/03/10 23:08:13 ----- generateCall 3765 symlinkat symlinkat
2023/03/10 23:08:13 ----- insertCall()
2023/03/10 23:08:13 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:13 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:13 prog length: 13
2023/03/10 23:08:13 prog length: 3
2023/03/10 23:08:13 HasCrashFail:false HasNetFail:false
23:08:13 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
fsetxattr$security_evm(r0, &(0x7f0000000440), &(0x7f0000000600)=ANY=[@ANYBLOB="443259f8110928494322a0ee38c10474b01b7a5fd7673ff27e2c47aad19295d1af51db03bf82052da6189576d93dc614b8f07d960f2391ea031e52493e8d57d2e537576516"], 0x4d, 0x1)
truncate(&(0x7f0000000000)='./file1\x00', 0x0)
setxattr$incfs_size(0x0, 0x0, 0x0, 0x0, 0x0)
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(r0, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(r0, &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
stat(&(0x7f0000000400)='./file1\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
setxattr$system_posix_acl(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000540)={{}, {0x1, 0x1}, [{0x2, 0x5, 0xee00}, {0x2, 0x5, r1}, {0x2, 0x0, r2}, {0x2, 0x2, r3}, {0x2, 0x4}, {0x2, 0x4, r4}, {0x2, 0x5}, {0x2, 0x4, r5}], {0x4, 0x7}, [{0x8, 0x6, r6}, {0x8, 0x6}, {0x8, 0x0, 0xffffffffffffffff}, {0x8, 0x5, 0xffffffffffffffff}, {0x8, 0x6, r7}, {0x8, 0x4, 0xee01}, {0x8, 0x6}], {0x10, 0x1}, {0x20, 0x1}}, 0x9c, 0x2)
renameat(r0, &(0x7f0000000680)='./file1\x00', r0, &(0x7f00000006c0)='./file1\x00')
---
symlinkat(&(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00')
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000080)='./file0\x00', 0xee01, r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 5968, prog_size 488
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 162, 36, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4632
remove dir: /root/orangefs-client/dfs-0-7982
remove dir time 66
-----finish removing dir
mkdir time 67
executor 3 create dir /root/orangefs-client/dfs-0-7983 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7983
receive_execute: 13, 143
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 32, 134
receive_execute: 8, 143
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7983
receive_execute: 2, 143
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22353, write pid:22355
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 16, 203
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22353, write pid:22355
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 3078
----- completed 2
----- executor 3 write_call_output, size 21369, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 21369, flag collect 0
----- executor 3 signal number : 835
----- completed 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 87
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 73
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 73
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 73
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 73
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 73
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 9327, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 9327, flag collect 0
----- executor 3 signal number : 73
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22353, write pid:22354
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7988, pid 22384, write pid:22385
----- executor 4 executes write_coverage_signal cov->size 7988, flag collect 0
cover_reset in execute_call
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 44
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 49
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
2023/03/10 23:08:13 for select break: 1
2023/03/10 23:08:13 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 78, 82, 0
execute_one time: 0, 160
time breakdown 3: 166, 161, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 32765, pid 22384, write pid:22385
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 313
----- completed 2
execute_one loop: 0, 0, 66
cover_reset in execute_call
execute_one loop: 0, 0, 52
----- executor 4 write_call_output, size 5641, pid 22384, write pid:22385
----- executor 4 executes write_coverage_signal cov->size 5641, flag collect 0
----- executor 4 signal number : 53
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 53
executor 4, execute_one inner time: 228, 62, 0
execute_one time: 0, 290
time breakdown 4: 219, 366, 0
before receive testcase: 0 1
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2759
----- executor 2 executes write_coverage_signal cov->size 30388, flag collect 0
----- executor 2 signal number : 1031
----- executor 2 executes write_coverage_signal cov->size 12208, flag collect 0
----- executor 2 signal number : 351
----- executor 2 executes write_coverage_signal cov->size 6486, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4230
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19597, flag collect 0
----- executor 0 signal number : 2033
----- executor 0 executes write_coverage_signal cov->size 10642, flag collect 0
----- executor 0 signal number : 1135
----- executor 0 executes write_coverage_signal cov->size 9498, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 3363, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 3548
time breakdown 0: 151, 436, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2303
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1269
----- executor 1 executes write_coverage_signal cov->size 14316, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 11929, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3948
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:14 wg wait finish
2023/03/10 23:08:14 ------ all executors finish execution
2023/03/10 23:08:14 exec time: 585
2023/03/10 23:08:14 ----- PS len: 5
2023/03/10 23:08:14 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:14 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 313 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 53 signal and 0 cover from executor 4
2023/03/10 23:08:14 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 2033 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 1135 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:14 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 2303 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 1269 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:14 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 2759 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 1031 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 351 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:14 [CLIENT] executor 3 has 13 replies
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 3078 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 835 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:14 mutate testcase with failures
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 2344 linkat linkat
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 2780 readlink readlink
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 3764 symlink symlink
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 516 getxattr getxattr
2023/03/10 23:08:14 ----- insertCall()
time breakdown 2: 156, 436, 0
before receive testcase: 0 0
time breakdown 1: 154, 432, 0
before receive testcase: 0 0
2023/03/10 23:08:14 ----- generateCall 2780 readlink readlink
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 4127 write$binfmt_aout write$binfmt_aout
2023/03/10 23:08:14 mutate testcase with failures
2023/03/10 23:08:14 ----- mutateArg()
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 2343 link link
2023/03/10 23:08:14 ----- mutateArg()
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:14 ----- mutateArg()
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/10 23:08:14 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:14 prog length: 11
2023/03/10 23:08:14 prog length: 6
2023/03/10 23:08:14 HasCrashFail:false HasNetFail:false
23:08:14 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f00000002c0)='./file2\x00', 0x102, 0x0)
write$binfmt_aout(r1, &(0x7f00000024c0)={{0xcc, 0xe6, 0x1f, 0x2d1, 0x1fe, 0x0, 0x295, 0x60000000}, "68ec0c426004ccb1f719964b7a13c45f29b4b098a1ddc41ecb8e8501d841ddff5988f32373d07a93b4f8dd7278151e30eafa1065965f9bad99c312b2", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x65c)
linkat(r0, &(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00', 0x0)
symlink(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)='./file1\x00')
r2 = openat(r0, &(0x7f00000000c0)='./file1\x00', 0x200, 0x0)
fcntl$dupfd(r0, 0x0, r2)
getxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='trusted.overlay.metacopy\x00', &(0x7f00000014c0)=""/4096, 0x1000)
readlink(&(0x7f0000000100)='./file1\x00', &(0x7f00000004c0)=""/4096, 0x1000)
readlink(&(0x7f0000000240)='./file1/../file0\x00', &(0x7f0000000280)=""/31, 0x1f)
---
setxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140), &(0x7f0000000080), 0x2, 0x3)
lsetxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0xfffffffffffffd9b, 0x0)
setxattr$incfs_size(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)=0x8, 0x8, 0x0)
setxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000180)=@known='system.sockprotoname\x00', &(0x7f00000001c0)='y\x00', 0x2, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000200)={'#! ', './file0', [{0x20, '^(]('}, {0x20, '\\#('}, {0x20, '\'$'}], 0xa, "ca38b3cb8c3f271c8f1966634a271d1068ac5ddcc201871ef4b5a9cb76c72028e69d1eed37f8fe83e0faa64ad9c25425decaf61048a2f655fddaf5b2d40b194b853a6f0e261d"}, 0x5d)
link(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4000
remove dir: /root/orangefs-client/dfs-0-7983
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 5336, prog_size 1696
remove dir time 160
-----finish removing dir
mkdir time 66
executor 3 create dir /root/orangefs-client/dfs-0-7984 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7984
receive_execute: 6, 240
current dir: executor 4: /root/orangefs-client/dfs-0-7984
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 263
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 1
receive_execute: 11, 291
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 286, 299
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
receive_execute: 21, 351
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8013, pid 22387, write pid:22388
----- executor 4 executes write_coverage_signal cov->size 8013, flag collect 0
----- executor 4 signal number : 2084
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22387, write pid:22388
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 4 write_call_output, size 8493, pid 22387, write pid:22388
----- executor 4 executes write_coverage_signal cov->size 8493, flag collect 0
----- executor 4 signal number : 15
----- completed 3
execute_one loop: 0, 0, 39
cover_reset in execute_call
----- executor 3 write_call_output, size 22529, pid 22356, write pid:22357
----- executor 3 executes write_coverage_signal cov->size 22529, flag collect 0
----- executor 3 signal number : 3090
----- completed 1
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22356, write pid:22357
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22356, write pid:22357
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22387, write pid:22389
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22356, write pid:22360
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22356, write pid:22360
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 9213, pid 22387, write pid:22388
----- executor 4 executes write_coverage_signal cov->size 9213, flag collect 0
----- executor 4 signal number : 16
----- completed 5
execute_one loop: 0, 0, 51
----- executor 4 write_call_output, size 8493, pid 22387, write pid:22389
----- executor 4 executes write_coverage_signal cov->size 8493, flag collect 0
----- executor 4 signal number : 16
----- completed 6
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 166, 58, 0
execute_one time: 0, 224
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 372, 238, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 18982, pid 22356, write pid:22358
----- executor 3 executes write_coverage_signal cov->size 18982, flag collect 0
----- executor 3 signal number : 449
----- completed 6
execute_one loop: 0, 0, 53
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22356, write pid:22358
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 22356, write pid:22357
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
----- executor 3 write_call_output, size 7809, pid 22356, write pid:22359
----- executor 3 executes write_coverage_signal cov->size 7809, flag collect 0
----- executor 3 signal number : 33
----- completed 9
----- executor 3 write_call_output, size 0, pid 22356, write pid:22361
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
----- executor 3 write_call_output, size 7576, pid 22356, write pid:22360
----- executor 3 executes write_coverage_signal cov->size 7576, flag collect 0
----- executor 3 signal number : 25
----- completed 11
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 364, 24, 0
execute_one time: 0, 388
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7314, flag collect 0
----- executor 1 signal number : 1725
----- executor 1 executes write_coverage_signal cov->size 13755, flag collect 0
----- executor 1 signal number : 1139
----- executor 1 executes write_coverage_signal cov->size 6036, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2843, flag collect 0
----- executor 1 signal number : 75
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 2739
time breakdown 3: 585, 389, 0
before receive testcase: 0 1
executor 0 write_server_output
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 1 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 3238
time breakdown 1: 257, 451, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 4472, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2390, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 7113, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2260, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1071
----- executor 2 executes write_coverage_signal cov->size 9339, flag collect 0
----- executor 2 signal number : 355
----- executor 2 executes write_coverage_signal cov->size 7773, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4254
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 273, 447, 0
before receive testcase: 0 0
2023/03/10 23:08:14 for select break: 1
2023/03/10 23:08:14 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:14 wg wait finish
2023/03/10 23:08:14 ------ all executors finish execution
2023/03/10 23:08:14 exec time: 723
2023/03/10 23:08:14 ----- PS len: 5
2023/03/10 23:08:14 [CLIENT] executor 4 has 6 replies
2023/03/10 23:08:14 fuzzer receive 2084 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:14 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:14 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:14 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 1725 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 1139 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:14 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 2739 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 1071 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 355 signal and 0 cover from userspace component
2023/03/10 23:08:14 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:14 [CLIENT] executor 3 has 11 replies
2023/03/10 23:08:14 fuzzer receive 3090 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 449 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:14 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/10 23:08:14 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:14 mutate testcase with failures
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 2347 llistxattr llistxattr
2023/03/10 23:08:14 mutate testcase with failures
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 171 dup2 dup2
2023/03/10 23:08:14 ----- mutateArg()
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/10 23:08:14 ----- insertCall()
2023/03/10 23:08:14 ----- generateCall 2462 openat openat
2023/03/10 23:08:14 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:14 prog length: 4
2023/03/10 23:08:14 prog length: 5
2023/03/10 23:08:14 HasCrashFail:false HasNetFail:false
23:08:14 ---executing program 0:
---
---
---
llistxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000100)=""/191, 0xbf)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x0)
open(&(0x7f00000000c0)='./file0\x00', 0x40040, 0x0)
stat(0x0, 0x0)
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
setxattr$incfs_id(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000080), &(0x7f00000000c0)={'0000000000000000000000000000000', 0x31}, 0x20, 0x3)
lseek(r0, 0x0, 0x3)
dup2(r0, r0)
openat(0xffffffffffffffff, &(0x7f0000000100)='./file0/file0\x00', 0x40, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1784, prog_size 896
time breakdown 0: 302, 432, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
remove dir: /root/orangefs-client/dfs-0-7984
remove dir time 101
-----finish removing dir
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-7985 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7985
receive_execute: 2, 136
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 48, 135
current dir: executor 4: /root/orangefs-client/dfs-0-7985
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7086, pid 22362, write pid:22363
----- executor 3 executes write_coverage_signal cov->size 7086, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22362, write pid:22363
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 17, 133
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
receive_execute: 23, 146
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 60
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22362, write pid:22364
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 23868, pid 22362, write pid:22363
----- executor 3 executes write_coverage_signal cov->size 23868, flag collect 0
----- executor 3 signal number : 1131
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 136, 341
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 46
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 195, 46, 0
execute_one time: 0, 241
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 183, 241, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22391, write pid:22393
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
----- executor 4 write_call_output, size 23522, pid 22391, write pid:22392
----- executor 4 executes write_coverage_signal cov->size 23522, flag collect 0
----- executor 4 signal number : 2862
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 6078, pid 22391, write pid:22392
----- executor 4 executes write_coverage_signal cov->size 6078, flag collect 0
----- executor 4 signal number : 42
----- completed 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22391, write pid:22392
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22391, write pid:22392
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 73, 3, 0
execute_one time: 1, 76
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 27659, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4413, flag collect 0
time breakdown 4: 477, 77, 0
before receive testcase: 0 1
----- executor 0 signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 2331, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 6063, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1991, flag collect 0
----- executor 0 signal number : 77
----- executor 1 signal number : 2242
----- executor 1 executes write_coverage_signal cov->size 20472, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2137
----- executor 1 signal number : 1173
----- executor 1 executes write_coverage_signal cov->size 5718, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 3586, flag collect 0
----- executor 1 signal number : 80
executor 1 server cover_cnt 4 output_pos_value 3794
time breakdown 0: 138, 283, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2748
----- executor 2 executes write_coverage_signal cov->size 21974, flag collect 0
----- executor 2 signal number : 1055
time breakdown 1: 186, 258, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 7473, flag collect 0
----- executor 2 signal number : 347
----- executor 2 executes write_coverage_signal cov->size 4119, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 4242
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:15 wg wait finish
2023/03/10 23:08:15 ------ all executors finish execution
2023/03/10 23:08:15 exec time: 438
2023/03/10 23:08:15 ----- PS len: 5
2023/03/10 23:08:15 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 2862 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 42 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 1425 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
time breakdown 2: 160, 283, 0
before receive testcase: 0 1
2023/03/10 23:08:15 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 2242 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 1173 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:15 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 2748 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 1055 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 347 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:15 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:15 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 1131 signal and 0 cover from executor 3
2023/03/10 23:08:15 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:15 mutate testcase with failures
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 2781 readlinkat readlinkat
2023/03/10 23:08:15 mutate testcase with failures
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 120 chdir chdir
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:15 prog length: 7
2023/03/10 23:08:15 prog length: 8
2023/03/10 23:08:15 HasCrashFail:false HasNetFail:false
23:08:15 ---executing program 0:
---
---
---
setxattr$security_evm(0x0, 0x0, &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0x0, 0x6)
lchown(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
readlinkat(r1, &(0x7f0000000040)='./file1\x00', &(0x7f0000000080)=""/121, 0x79)
ioctl(0xffffffffffffffff, 0x0, 0x0)
---
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
setxattr$security_evm(&(0x7f0000000080)='./file1/file0\x00', &(0x7f0000000240), &(0x7f0000000140)=@sha1={0x1, "7470070000003300000000001000"}, 0x15, 0x1)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', 0x0, 0x0, 0x3, 0x0)
unlink(&(0x7f00000000c0)='./file1\x00')
readlink(0x0, 0x0, 0xd04f4189ba8b536c)
r0 = openat(0xffffffffffffffff, 0x0, 0x0, 0x0)
write$binfmt_script(r0, &(0x7f0000000180)={'#! ', './file1', [{0x20, 'security.evm\x00'}, {0x20, 'trusted.overlay.opaque\x00'}], 0xa, "ab751c40d3aeca0bfe6cf38373a6da5d720eb77f4644de9fe4239cd7fabffe42231b6f86a2f0fedeff37edb2c262337899764489d27eba220fb5e783a924f4105d9136455ae106522690648a5245df732495a151f432e1396fc7f85102ccaa8ef80462e7147c22eb95baa7e74b89be7a2438"}, 0xa3)
chdir(&(0x7f0000000000)='./file1\x00')
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 2424, prog_size 1704
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1088
remove dir: /root/orangefs-client/dfs-0-7985
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 159
-----finish removing dir
mkdir time 103
executor 3 create dir /root/orangefs-client/dfs-0-7986 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7986
receive_execute: 20, 271
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 272
current dir: executor 4: /root/orangefs-client/dfs-0-7986
receive_execute: 53, 290
receive_execute: 12, 281
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22365, write pid:22366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22365, write pid:22366
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22365, write pid:22366
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 0
----- executor 3 signal number : 2063
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22365, write pid:22367
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22365, write pid:22367
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22365, write pid:22367
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 21283, pid 22365, write pid:22366
----- executor 3 executes write_coverage_signal cov->size 21283, flag collect 0
----- executor 3 signal number : 1032
----- completed 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 26, 381
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 67, 51, 0
execute_one time: 9, 118
----- executor 4 write_call_output, size 18606, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 18606, flag collect 0
----- executor 4 signal number : 2812
----- completed 2
execute_one loop: 0, 0, 40
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 15672, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 15672, flag collect 0
----- executor 4 signal number : 393
----- completed 4
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 3: 343, 143, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 7501, pid 22394, write pid:22395
----- executor 4 executes write_coverage_signal cov->size 7501, flag collect 0
----- executor 4 signal number : 68
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 53, 6, 0
execute_one time: 0, 59
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2838
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1643
----- executor 0 executes write_coverage_signal cov->size 5632, flag collect 0
----- executor 0 signal number : 304
----- executor 0 executes write_coverage_signal cov->size 4639, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4879
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 0 receive reply, reply.done 1
time breakdown 4: 407, 61, 0
before receive testcase: 0 0
----- executor 2 signal number : 2824
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1133
----- executor 2 executes write_coverage_signal cov->size 8198, flag collect 0
----- executor 2 signal number : 356
----- executor 2 executes write_coverage_signal cov->size 6200, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 4401
time breakdown 2: 301, 159, 0
before receive testcase: 0 0
2023/03/10 23:08:15 for select break: 1
2023/03/10 23:08:15 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:15 wg wait finish
2023/03/10 23:08:15 ------ all executors finish execution
2023/03/10 23:08:15 exec time: 463
2023/03/10 23:08:15 ----- PS len: 5
2023/03/10 23:08:15 [CLIENT] executor 4 has 8 replies
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 2812 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 393 signal and 0 cover from executor 4
2023/03/10 23:08:15 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 2824 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 1133 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:15 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 2838 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 1643 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 304 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:15 [CLIENT] executor 3 has 7 replies
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:15 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 1032 signal and 0 cover from executor 3
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:15 fuzzer receive 68 signal and 0 cover from executor 4
2023/03/10 23:08:15 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:15 mutate testcase with failures
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 3970 unlink unlink
2023/03/10 23:08:15 ----- mutateArg()
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/10 23:08:15 mutate testcase with failures
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 516 getxattr getxattr
2023/03/10 23:08:15 ----- insertCall()
2023/03/10 23:08:15 ----- generateCall 2346 listxattr listxattr
2023/03/10 23:08:15 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:15 prog length: 5
2023/03/10 23:08:15 prog length: 3
2023/03/10 23:08:15 HasCrashFail:false HasNetFail:false
23:08:15 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x569080, 0x100)
setxattr$security_evm(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@sha1={0x1, "4f4e490000000000001ceb650e5cafce36e1112c"}, 0x15, 0xe6498df0c78f1518)
lsetxattr$trusted_overlay_opaque(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180)='./file1/file0\x00', 0xe, 0x2)
unlink(&(0x7f00000000c0)='./file1\x00')
---
unlink(&(0x7f00000000c0)='./file1\x00')
listxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000200)=""/200, 0xc8)
getxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=@known='trusted.syz\x00', &(0x7f0000000100)=""/244, 0xf4)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1136
remove dir: /root/orangefs-client/dfs-0-7986
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3360, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 972, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 299, 183, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 291, 177, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2472, prog_size 440
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 122
-----finish removing dir
mkdir time 196
executor 3 create dir /root/orangefs-client/dfs-0-7987 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7987
receive_execute: 17, 319
receive_execute: 2, 320
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 32, 320
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22370, write pid:22371
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-7987
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7098, pid 22370, write pid:22371
----- executor 3 executes write_coverage_signal cov->size 7098, flag collect 0
----- executor 3 signal number : 2072
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
receive_execute: 8, 319
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7087, pid 22370, write pid:22371
----- executor 3 executes write_coverage_signal cov->size 7087, flag collect 0
----- executor 3 signal number : 18
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7087, pid 22370, write pid:22371
----- executor 3 executes write_coverage_signal cov->size 7087, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7087, pid 22370, write pid:22371
----- executor 3 executes write_coverage_signal cov->size 7087, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 15, 15, 0
execute_one time: 0, 30
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 352, 31, 0
before receive testcase: 0 1
receive_execute: 25, 364
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8646, pid 22398, write pid:22399
----- executor 4 executes write_coverage_signal cov->size 8646, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22398, write pid:22399
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 4 write_call_output, size 8646, pid 22398, write pid:22399
----- executor 4 executes write_coverage_signal cov->size 8646, flag collect 0
----- executor 4 signal number : 15
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 18
executor 4, execute_one inner time: 23, 21, 0
execute_one time: 1, 44
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 389, 46, 0
before receive testcase: 0 1
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 97, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 3 output_pos_value 211
time breakdown 2: 337, 97, 0
before receive testcase: 0 1
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4479, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2114, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2073, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1018, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
time breakdown 0: 327, 102, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1920
----- executor 1 executes write_coverage_signal cov->size 28185, flag collect 0
----- executor 1 signal number : 336
----- executor 1 executes write_coverage_signal cov->size 7571, flag collect 0
----- executor 1 signal number : 319
----- executor 1 executes write_coverage_signal cov->size 6633, flag collect 0
----- executor 1 signal number : 78
executor 1 server cover_cnt 4 output_pos_value 2666
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:16 wg wait finish
2023/03/10 23:08:16 ------ all executors finish execution
2023/03/10 23:08:16 exec time: 436
2023/03/10 23:08:16 ----- PS len: 5
2023/03/10 23:08:16 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:16 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:16 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:16 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:16 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:16 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 1920 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 319 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:16 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 2072 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:16 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:16 mutate testcase with failures
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 2458 open open
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/10 23:08:16 mutate testcase with failures
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 2462 openat openat
2023/03/10 23:08:16 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:16 prog length: 6
2023/03/10 23:08:16 prog length: 2
2023/03/10 23:08:16 HasCrashFail:false HasNetFail:false
23:08:16 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
setxattr$incfs_metadata(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)="85950ee25b0567817ed963e09bff9ded0ea3bef070ce7873cdd3b4208be1a37f6a8adc21d60782800e4aa92f4a06af84c27adc196eab295d6b2f822e63d273a233e0cf65ca708c6c27cc72fc8a9c435d00a0ec89bbc331c18b1b52f099301a5b1cc2ba54b8067af542a8f1b102b34525505abe19422230736fbe7ad309175fa2460d1dd95e5c83d2a5dab73ced4604c6ae9767fc398b42f376d476de2b725af222abfd15b8129479c46083fd303156b0e9a282a0744472254c9a880905153cd6979e1274d7", 0xc5, 0x3)
open(&(0x7f00000001c0)='./file1\x00', 0x100, 0x12d)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000200), &(0x7f0000000240)='./file1\x00', 0x8, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0), &(0x7f00000003c0)=ANY=[@ANYBLOB="00fb8f06807dada49f0de163b7b413e5b7969e0da68e60e859afcd431fd06026d30fdf579015210627886839c6e60efa5a62d47c53cb39d93be44a981b499455cd0231f4acbf44e923a94a9a99c7067258a69293fd10fe6c2717357b154bbd25bc0fa1420592c0dced8821292903bd29323b4784ec2f1e59a3705e15970826a68ec499000000000000000000000000ac618b839a9a9c52d1888dc8beca5f12592fe16ca4e90d05a45831bd9b5385eaa41ba98f"], 0x8f, 0x2)
chmod(&(0x7f0000000000)='./file1\x00', 0x0)
---
r0 = dup(0xffffffffffffffff)
openat(r0, &(0x7f0000000000)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2928, prog_size 240
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 322, 116, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1592
remove dir: /root/orangefs-client/dfs-0-7987
remove dir time 77
-----finish removing dir
receive_execute: 2, 152
mkdir time 71
executor 3 create dir /root/orangefs-client/dfs-0-7988 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7988
receive_execute: 16, 153
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7988
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 20, 225
receive_execute: 21, 226
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22401, write pid:22402
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22401, write pid:22402
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 91, 222
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 247, 3, 0
before receive testcase: 0 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21116, pid 22373, write pid:22374
----- executor 3 executes write_coverage_signal cov->size 21116, flag collect 0
----- executor 3 signal number : 3091
----- completed 1
execute_one loop: 0, 0, 56
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22373, write pid:22374
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 11258, pid 22373, write pid:22374
----- executor 3 executes write_coverage_signal cov->size 11258, flag collect 0
----- executor 3 signal number : 400
----- completed 3
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22373, write pid:22374
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22373, write pid:22374
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26129, pid 22373, write pid:22374
----- executor 3 executes write_coverage_signal cov->size 26129, flag collect 0
----- executor 3 signal number : 443
----- completed 6
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 95, 5, 0
execute_one time: 5, 100
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 313, 110, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31802, flag collect 0
----- executor 0 signal number : 2739
----- executor 0 executes write_coverage_signal cov->size 16387, flag collect 0
----- executor 0 signal number : 1040
----- executor 0 executes write_coverage_signal cov->size 6139, flag collect 0
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 3507, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4209
2023/03/10 23:08:16 for select break: 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 156, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2730, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 702, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 169, 176, 0
before receive testcase: 0 1
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 179, 176, 0
before receive testcase: 0 1
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:16 wg wait finish
2023/03/10 23:08:16 ------ all executors finish execution
2023/03/10 23:08:16 exec time: 361
2023/03/10 23:08:16 ----- PS len: 5
2023/03/10 23:08:16 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:16 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 2739 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 1040 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:16 [CLIENT] executor 3 has 6 replies
2023/03/10 23:08:16 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:16 fuzzer receive 3091 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 443 signal and 0 cover from executor 3
2023/03/10 23:08:16 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 2230 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 1172 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:16 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:16 mutate testcase with failures
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 2814 rmdir rmdir
2023/03/10 23:08:16 ----- mutateArg()
2023/03/10 23:08:16 mutate testcase with failures
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/10 23:08:16 ----- splice()
2023/03/10 23:08:16 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:16 prog length: 4
2023/03/10 23:08:16 prog length: 3
2023/03/10 23:08:16 HasCrashFail:false HasNetFail:false
23:08:16 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000300)='./file1/file0\x00', &(0x7f0000000340), &(0x7f0000000380)={'U+', 0x7fff}, 0xffffffffffffff36, 0x3)
truncate(&(0x7f00000000c0)='./file1\x00', 0x33f442c6)
rmdir(&(0x7f0000000000)='./file1/file0\x00')
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', 0x0, &(0x7f0000000080)='./file0\x00', 0x8, 0x6)
setxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180), &(0x7f0000000140)='./file0\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100), &(0x7f00000001c0)={0x0, 0xfb, 0xdc, 0x7, 0x3, "ad2a4536ace7cb07d3c3a208e401dce2", "fcfb84dfeb680c12f8620201f75f9c232eeea8bc8d74ab5f692dd0e2e413ba5f6f0d88086b75361c02d479e9ee112d5e58835a0c08e33debe358752fad318a2cdee0200de995af6f562168c8bf370981944fbcb9e94c6a685d87f99702e42c00639d79ca9f614ae93984c65300bdd5e6cf0d0cdefedb2fb0a16dead02fcd494a2819d9c178f31b6ba5a443e4b9e409eefc1501db5d5bb8691c5170070b3a7303a9ec7aa2ec7fe07eefddde757fc6b2f201cb11f5b661d47f716e032512b0a7b6a0543ed8d895b3"}, 0xdc, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
remove dir: /root/orangefs-client/dfs-0-7988
----- executor 4 receive testcase
executor 4: prog_data_offset 2016, prog_size 1240
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 25676, flag collect 0
----- executor 2 signal number : 2230
----- executor 2 executes write_coverage_signal cov->size 22238, flag collect 0
----- executor 2 signal number : 1172
----- executor 2 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 2898, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3778
time breakdown 2: 246, 135, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 72
-----finish removing dir
receive_execute: 1, 107
receive_execute: 18, 108
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7989
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 22, 108
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
mkdir time 36
executor 3 create dir /root/orangefs-client/dfs-0-7989 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7989
receive_execute: 25, 108
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 133, 133
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7136, pid 22403, write pid:22404
----- executor 4 executes write_coverage_signal cov->size 7136, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 7136, pid 22403, write pid:22404
----- executor 4 executes write_coverage_signal cov->size 7136, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 7136, pid 22403, write pid:22404
----- executor 4 executes write_coverage_signal cov->size 7136, flag collect 0
----- executor 4 signal number : 16
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 4, execute_one inner time: 10, 6, 0
execute_one time: 0, 16
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 266, 18, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 12504, pid 22377, write pid:22379
----- executor 3 executes write_coverage_signal cov->size 12504, flag collect 0
----- executor 3 signal number : 2676
----- completed 1
----- executor 3 write_call_output, size 21824, pid 22377, write pid:22378
----- executor 3 executes write_coverage_signal cov->size 21824, flag collect 0
----- executor 3 signal number : 834
----- completed 2
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22377, write pid:22378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 43
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22377, write pid:22378
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 36
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 124, 36, 0
execute_one time: 0, 160
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 16912, flag collect 0
----- executor 0 signal number : 1855
----- executor 0 executes write_coverage_signal cov->size 6885, flag collect 0
----- executor 0 signal number : 1029
----- executor 0 executes write_coverage_signal cov->size 3225, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 1471, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3268
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 130, 163, 0
before receive testcase: 0 0
time breakdown 3: 133, 161, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 3042
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1628
----- executor 1 executes write_coverage_signal cov->size 7390, flag collect 0
----- executor 1 signal number : 354
----- executor 1 executes write_coverage_signal cov->size 5219, flag collect 0
----- executor 1 signal number : 96
executor 1 server cover_cnt 4 output_pos_value 5133
time breakdown 1: 126, 170, 0
before receive testcase: 0 1
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1929
----- executor 2 executes write_coverage_signal cov->size 32004, flag collect 0
----- executor 2 signal number : 1132
----- executor 2 executes write_coverage_signal cov->size 9592, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 6257, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 3523
2023/03/10 23:08:16 for select break: 1
2023/03/10 23:08:16 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:16 wg wait finish
2023/03/10 23:08:16 ------ all executors finish execution
2023/03/10 23:08:16 exec time: 297
2023/03/10 23:08:16 ----- PS len: 5
2023/03/10 23:08:16 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:16 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:16 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:16 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:16 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 1855 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 1029 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:16 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 3042 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 1628 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 354 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 1 receive 96 signal and 0 cover from userspace component
2023/03/10 23:08:16 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:16 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:16 fuzzer receive 2676 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 834 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:16 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 108, 190, 0
before receive testcase: 0 0
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 1929 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 1132 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/10 23:08:16 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:16 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:16 mutate testcase with failures
2023/03/10 23:08:16 ----- mutateArg()
2023/03/10 23:08:16 mutate testcase with failures
2023/03/10 23:08:16 ----- mutateArg()
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/10 23:08:16 ----- mutateArg()
2023/03/10 23:08:16 ----- mutateArg()
2023/03/10 23:08:16 ----- insertCall()
2023/03/10 23:08:16 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/10 23:08:16 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:16 prog length: 4
2023/03/10 23:08:16 prog length: 6
2023/03/10 23:08:16 HasCrashFail:false HasNetFail:false
23:08:16 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file1\x00', 0x234542, 0x1)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file1\x00')
chmod(&(0x7f0000000000)='./file1\x00', 0x14)
---
fstat(0xffffffffffffffff, &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
r3 = open(&(0x7f0000000280)='./file0\x00', 0x200000, 0x144)
fcntl$F_SET_RW_HINT(r3, 0x40c, &(0x7f00000002c0)=0x3)
lsetxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_access\x00', &(0x7f0000000200)=ANY=[@ANYBLOB="02000000012956000609000000000000", @ANYRES32=r0, @ANYBLOB="02000200", @ANYRES32=r1, @ANYBLOB="02000000", @ANYRES32=0xee01, @ANYBLOB="040000000000000008000500", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32, @ANYBLOB="08000300", @ANYRES32=r2, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="10000100000000002000000000000000"], 0x5c, 0x2)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1944, prog_size 1552
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 608
remove dir: /root/orangefs-client/dfs-0-7989
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 187
-----finish removing dir
mkdir time 142
executor 3 create dir /root/orangefs-client/dfs-0-7990 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7990
current dir: executor 4: /root/orangefs-client/dfs-0-7990
receive_execute: 66, 328
receive_execute: 85, 329
receive_execute: 94, 329
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 9, 1
receive_execute: 92, 329
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7569, pid 22380, write pid:22381
----- executor 3 executes write_coverage_signal cov->size 7569, flag collect 0
----- executor 3 signal number : 2081
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22380, write pid:22381
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 211, 394
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22406, write pid:22407
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22406, write pid:22407
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22406, write pid:22407
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 8436, pid 22406, write pid:22407
----- executor 4 executes write_coverage_signal cov->size 8436, flag collect 0
----- executor 4 signal number : 2073
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22406, write pid:22407
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8678, pid 22406, write pid:22407
----- executor 4 executes write_coverage_signal cov->size 8678, flag collect 0
----- executor 4 signal number : 28
----- completed 6
execute_one loop: 0, 0, 32
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 46, 4, 0
execute_one time: 4, 50
time breakdown 4: 605, 62, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 7569, pid 22380, write pid:22381
----- executor 3 executes write_coverage_signal cov->size 7569, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 51
2023/03/10 23:08:17 for select break: 1
2023/03/10 23:08:17 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 32765, pid 22380, write pid:22382
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 332
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 160, 1, 0
execute_one time: 0, 161
2023/03/10 23:08:17 for select break: 1
time breakdown 3: 423, 161, 0
2023/03/10 23:08:17 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3360, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2740
----- executor 0 executes write_coverage_signal cov->size 21995, flag collect 0
----- executor 0 signal number : 1053
----- executor 0 executes write_coverage_signal cov->size 4556, flag collect 0
----- executor 0 signal number : 343
----- executor 0 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4225
2023/03/10 23:08:17 for select break: 1
2023/03/10 23:08:17 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15208, flag collect 0
----- executor 2 signal number : 1757
----- executor 2 executes write_coverage_signal cov->size 8700, flag collect 0
----- executor 2 signal number : 1090
----- executor 2 executes write_coverage_signal cov->size 3855, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1426, flag collect 0
----- executor 2 signal number : 79
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 864, flag collect 0
----- executor 1 signal number : 44
time breakdown 0: 430, 156, 0
before receive testcase: 0 0
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:17 for select break: 1
2023/03/10 23:08:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 414, 172, 0
before receive testcase: 0 1
executor 2 server cover_cnt 4 output_pos_value 3225
time breakdown 2: 395, 190, 0
before receive testcase: 0 1
2023/03/10 23:08:17 for select break: 1
2023/03/10 23:08:17 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:17 wg wait finish
2023/03/10 23:08:17 ------ all executors finish execution
2023/03/10 23:08:17 exec time: 541
2023/03/10 23:08:17 ----- PS len: 5
2023/03/10 23:08:17 [CLIENT] executor 4 has 6 replies
2023/03/10 23:08:17 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:17 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:17 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:17 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:17 ------- fuzzer executor 2 receive 1757 signal and 0 cover from userspace component
2023/03/10 23:08:17 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:17 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 2 receive 1090 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:17 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:17 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:17 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:17 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:17 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:17 fuzzer receive 28 signal and 0 cover from executor 4
2023/03/10 23:08:17 fuzzer receive 2081 signal and 0 cover from executor 3
2023/03/10 23:08:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:17 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:17 fuzzer receive 332 signal and 0 cover from executor 3
2023/03/10 23:08:17 ------- fuzzer executor 0 receive 2740 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 0 receive 1053 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 0 receive 343 signal and 0 cover from userspace component
2023/03/10 23:08:17 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:17 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:17 mutate testcase with failures
2023/03/10 23:08:17 ----- insertCall()
2023/03/10 23:08:17 ----- generateCall 516 getxattr getxattr
2023/03/10 23:08:17 ----- mutateArg()
2023/03/10 23:08:17 mutate testcase with failures
2023/03/10 23:08:17 ----- insertCall()
2023/03/10 23:08:17 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/10 23:08:17 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:17 prog length: 14
2023/03/10 23:08:17 prog length: 20
2023/03/10 23:08:17 HasCrashFail:false HasNetFail:false
23:08:17 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='com.apple.system.Security\x00')
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@random={'system.', 'com.\x17pple3system.Secueity\x00'}, &(0x7f0000000100)=""/121, 0x79)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'U+'}, 0x16, 0x3)
lsetxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=ANY=[@ANYBLOB="73797374656d1073790b482f2723"], &(0x7f00000002c0)='U+', 0x2, 0x1)
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x2, 0x2)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500), &(0x7f0000000540)='system_u:object_r:tape_device_t:s0\x00', 0x23, 0x2)
lsetxattr$security_ima(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@md5={0x1, "9c5d58fc481f280f566ab202b428edfa"}, 0x11, 0x1)
getxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=@random={'osx.', 'security.selinux\x00'}, &(0x7f0000000a40)=""/135, 0x87)
listxattr(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680)=""/70, 0x46)
readlinkat(r0, 0x0, &(0x7f0000000740), 0x0)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0), &(0x7f0000000800)=@md5={0x1, "d9ec59b0fa31debfdea91896ff37018e"}, 0x11, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)={0x0, 0xfb, 0xbb, 0x4, 0x9, "110f4c464167969254ac0146c0cb1ce8", "34a865b71ff9fbea4944f85c15b2ae3c0744ac1580720400542c40f79e0ec9a77c38d047f83906846d26d75ad03558e0d9d8e866600db2378dfa6a1bdc89e705d0d49e249b29f2c28b622f6fda2e04cba881d64078bc74a6e78c7a3b38a3fd69d7d24ce5f04cc9be849685acca7ec75c2d56cb07172495869be7132fd38b4dd2e5e4deb663e54c1e0be84d75185fdfdd27660a7dcecd5f69914ff99ce6042473d797c1ec2419"}, 0xbb, 0x1)
ioctl(r0, 0x401, &(0x7f00000009c0)="21e8a5e1da4af499b325016805f67b97c8ec4cba6b468c041e1c42afe95421b7feefd36657b764ff43038bd3417d38356c354a51e89df1521707b88912286b787d61ba7a8d49f21f1ee5c62c55cc062abde8f19bbd252a2271f26206")
---
lsetxattr$security_capability(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x9, 0x4}, {0x3, 0x40}]}, 0x14, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x0)
rename(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)=0x3, 0x8, 0x2)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), &(0x7f0000000340)='\x00', 0x1, 0x2)
renameat(0xffffffffffffffff, &(0x7f0000000380)='./file1\x00', 0xffffffffffffff9c, &(0x7f00000003c0)='\x00')
readlink(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0)=""/81, 0x51)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
readlink(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)=""/8, 0x8)
rmdir(&(0x7f0000000680)='./file1\x00')
sync()
r0 = openat(0xffffffffffffffff, &(0x7f00000006c0)='./file2\x00', 0x220000, 0xd5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740), &(0x7f0000000780)='./file2\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f00000007c0)='./file1/file0\x00', &(0x7f0000000800), &(0x7f0000000840)={0x0, 0xfb, 0xc3, 0x4, 0x3, "282248737f704aae236a470f7797faa7", "b25ac77d7c511861ae19e54bca24ff5c090b8045cedbd8c2b7ebc3f2b8f2d5289402278fcad20ebf3345a605db3c4f67605b5e2aeb7d4e73306e6f717ebf15b33815bee07fc5f23ade31d84dbd6701bd8cdba3a385c2071164caa2423ddce3a1b3ef695f1b28545e0a40f4d1a6c0a44c8e0a87f1f7884c71d6a5cb380b6466c852533a4141f4bd3720541051217b0d8593d62024892c26c867183b87ef5a2f1172cb2543332ca9f607e2d037f9cd"}, 0xc3, 0x3)
lsetxattr$security_evm(&(0x7f0000000400)='./file2\x00', &(0x7f0000000440), &(0x7f0000000c80)=@ng={0x4, 0xe, "e04b6ed6316ca69a9bfe3a24f4477d"}, 0x11, 0x1)
stat(&(0x7f0000000980)='./file2\x00', &(0x7f00000009c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000a40)='./file0\x00', &(0x7f0000000a80)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000b00)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000940)='system.posix_acl_access\x00', &(0x7f0000000b80)={{}, {0x1, 0x6}, [{0x2, 0x7, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x4, r1}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x1, 0xee01}, {0x2, 0x4, 0xee01}, {0x2, 0x4, 0xee01}, {0x2, 0x4, r2}], {0x4, 0x2}, [{0x8, 0x1, 0xee00}, {}, {0x8, 0x2}, {}, {0x8, 0x2, r3}, {0x8, 0x1}, {0x8, 0x6, 0xee00}], {0x10, 0x1}, {0x20, 0x4}}, 0x9c, 0x7)
open$dir(&(0x7f0000000c40)='./file1\x00', 0x402000, 0xc0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3880
remove dir: /root/orangefs-client/dfs-0-7990
----- executor 4 receive testcase
executor 4: prog_data_offset 5216, prog_size 7016
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 101
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-7991 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7991
receive_execute: 53, 114
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 46, 114
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 28, 110
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 42, 115
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
current dir: executor 4: /root/orangefs-client/dfs-0-7991
----- executor 3 write_call_output, size 7552, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7552, flag collect 0
----- executor 3 signal number : 2076
----- completed 1
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7312, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7312, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 88, 174
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 9190, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 9190, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 9674, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 9674, flag collect 0
----- executor 4 signal number : 28
----- completed 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 12505, pid 22383, write pid:22385
----- executor 3 executes write_coverage_signal cov->size 12505, flag collect 0
----- executor 3 signal number : 761
----- completed 6
----- executor 3 write_call_output, size 21336, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 21336, flag collect 0
----- executor 3 signal number : 674
----- completed 7
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 0
----- executor 3 signal number : 33
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 0
----- executor 3 signal number : 23
----- completed 13
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22383, write pid:22384
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 44
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
2023/03/10 23:08:17 for select break: 1
2023/03/10 23:08:17 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 0, pid 22409, write pid:22412
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
----- executor 4 write_call_output, size 32765, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 928
----- completed 4
----- executor 4 write_call_output, size 0, pid 22409, write pid:22411
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 27
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 133, 78, 0
execute_one time: 1, 211
time breakdown 3: 167, 212, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 14
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 15
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 17
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22409, write pid:22410
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 31
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 227, 102, 0
execute_one time: 0, 329
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 4: 262, 331, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4465, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2462, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 8373, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2584, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
time breakdown 0: 164, 389, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1955
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1032
----- executor 1 executes write_coverage_signal cov->size 21932, flag collect 0
----- executor 1 signal number : 431
----- executor 1 executes write_coverage_signal cov->size 19629, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3508
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:18 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 32039, flag collect 0
----- executor 2 signal number : 2340
----- executor 2 executes write_coverage_signal cov->size 24401, flag collect 0
----- executor 2 signal number : 1172
----- executor 2 executes write_coverage_signal cov->size 10101, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 4834, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3888
2023/03/10 23:08:18 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 165, 395, 0
before receive testcase: 0 1
time breakdown 2: 144, 402, 0
before receive testcase: 0 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:18 wg wait finish
2023/03/10 23:08:18 ------ all executors finish execution
2023/03/10 23:08:18 exec time: 536
2023/03/10 23:08:18 ----- PS len: 5
2023/03/10 23:08:18 [CLIENT] executor 4 has 20 replies
2023/03/10 23:08:18 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 28 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 928 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:18 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:18 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 1955 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 1032 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 431 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:18 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 2340 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 1172 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:18 [CLIENT] executor 3 has 14 replies
2023/03/10 23:08:18 fuzzer receive 2076 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 761 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 674 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:18 mutate testcase with failures
2023/03/10 23:08:18 ----- mutateArg()
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 196 fchown fchown
2023/03/10 23:08:18 mutate testcase with failures
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 2809 rename rename
2023/03/10 23:08:18 ----- mutateArg()
2023/03/10 23:08:18 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:18 prog length: 4
2023/03/10 23:08:18 prog length: 2
2023/03/10 23:08:18 HasCrashFail:false HasNetFail:false
23:08:18 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file1/file0\x00', 0x20041, 0x32)
fstat(0xffffffffffffffff, &(0x7f0000000040)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fchown(r0, r1, 0xffffffffffffffff)
open$dir(&(0x7f0000000480)='./file1\x00', 0x200040, 0x103)
---
unlink(&(0x7f00000000c0)='./file1\x00')
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/orangefs-client/dfs-0-7991
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1872, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 78
-----finish removing dir
mkdir time 74
executor 3 create dir /root/orangefs-client/dfs-0-7992 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7992
receive_execute: 23, 155
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 27, 156
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7992
receive_execute: 222, 202
receive_execute: 39, 205
receive_execute: 38, 205
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7458, pid 22387, write pid:22388
----- executor 3 executes write_coverage_signal cov->size 7458, flag collect 0
----- executor 3 signal number : 2152
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22387, write pid:22388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22387, write pid:22388
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7341, pid 22387, write pid:22388
----- executor 3 executes write_coverage_signal cov->size 7341, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 14, 0
execute_one time: 0, 40
----- executor 4 write_call_output, size 8255, pid 22414, write pid:22415
----- executor 4 executes write_coverage_signal cov->size 8255, flag collect 0
----- executor 4 signal number : 2086
----- completed 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 429, 41, 0
before receive testcase: 0 0
----- executor 4 write_call_output, size 8013, pid 22414, write pid:22415
----- executor 4 executes write_coverage_signal cov->size 8013, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 38, 12, 0
execute_one time: 0, 50
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 132, flag collect 0
executor 2 write_server_output
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2310, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 1 signal number : 44
executor 0 write_server_output
time breakdown 4: 265, 51, 0
before receive testcase: 0 1
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 executes write_coverage_signal cov->size 24732, flag collect 0
----- executor 0 signal number : 1452
----- executor 0 executes write_coverage_signal cov->size 9119, flag collect 0
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 4 receive reply, reply.done 1
----- executor 0 signal number : 318
----- executor 0 executes write_coverage_signal cov->size 2988, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2442, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2144
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 243, 77, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2520, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:18 wg wait finish
2023/03/10 23:08:18 ------ all executors finish execution
2023/03/10 23:08:18 exec time: 292
2023/03/10 23:08:18 ----- PS len: 5
2023/03/10 23:08:18 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:18 fuzzer receive 2086 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:18 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 1452 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 318 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:18 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:18 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:18 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:18 fuzzer receive 2152 signal and 0 cover from executor 3
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:18 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/10 23:08:18 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:18 mutate testcase with failures
2023/03/10 23:08:18 ----- mutateArg()
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 3765 symlinkat symlinkat
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 2753 read read
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/10 23:08:18 mutate testcase with failures
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/10 23:08:18 ----- mutateArg()
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/10 23:08:18 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:18 prog length: 5
2023/03/10 23:08:18 prog length: 3
2023/03/10 23:08:18 HasCrashFail:false HasNetFail:false
23:08:18 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2081, 0x40)
read(r0, &(0x7f0000000100)=""/48, 0x30)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x101, 0x0)
fcntl$setpipe(r1, 0x407, 0x3)
symlinkat(&(0x7f0000000000)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
---
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
lsetxattr$security_capability(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140)=@v3={0x3000000, [{0x7b6, 0x5}, {0x2, 0x401}], 0xffffffffffffffff}, 0x18, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x3}, 0x16, 0x1)
---

end of program
----- executor 4 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 720
remove dir: /root/orangefs-client/dfs-0-7992
time breakdown 1: 198, 108, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 4: prog_data_offset 2056, prog_size 968
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 189, 126, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 13, 37
current dir: executor 4: /root/orangefs-client/dfs-0-7993
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-7993 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7993
receive_execute: 44, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 16, 37
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7089, pid 22390, write pid:22391
----- executor 3 executes write_coverage_signal cov->size 7089, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22390, write pid:22391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7089, pid 22390, write pid:22391
----- executor 3 executes write_coverage_signal cov->size 7089, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22390, write pid:22391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
receive_execute: 18, 53
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22390, write pid:22391
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 0, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 12, 0
execute_one time: 0, 26
time breakdown 3: 84, 27, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 32765, pid 22416, write pid:22417
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2838
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 32765, pid 22416, write pid:22417
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 300
----- completed 2
execute_one loop: 0, 0, 42
cover_reset in execute_call
execute_one loop: 0, 0, 54
----- executor 4 write_call_output, size 32765, pid 22416, write pid:22417
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 104
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
executor 4, execute_one inner time: 164, 53, 0
execute_one time: 0, 217
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2015
----- executor 1 executes write_coverage_signal cov->size 31969, flag collect 0
time breakdown 4: 71, 218, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4472, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 4200, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 1080, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 48, 236, 0
before receive testcase: 0 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:18 wg wait finish
2023/03/10 23:08:18 ------ all executors finish execution
2023/03/10 23:08:18 exec time: 292
2023/03/10 23:08:18 ----- PS len: 5
2023/03/10 23:08:18 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:18 fuzzer receive 2838 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 300 signal and 0 cover from executor 4
2023/03/10 23:08:18 fuzzer receive 104 signal and 0 cover from executor 4
2023/03/10 23:08:18 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:18 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 2015 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 1187 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 310 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:18 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:18 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:18 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:18 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:18 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:18 mutate testcase with failures
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/10 23:08:18 mutate testcase with failures
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/10 23:08:18 ----- insertCall()
2023/03/10 23:08:18 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:18 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:18 prog length: 2
2023/03/10 23:08:18 prog length: 2
2023/03/10 23:08:18 HasCrashFail:false HasNetFail:false
23:08:18 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x62c10c9eb44b8a69)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)={'U-', 0x4}, 0x16, 0x3)
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000080)={'#! ', './file0/file0', [{0x20, 'btrfs.'}, {0x20, '\'/)\xc8$./)}*^[\x8b$\'\x00'}, {0x20, '{}-(-.+[*'}, {0x20, '\'/)\xc8$./)}*^[\x8b$\'\x00'}, {0x20, 'btrfs.'}, {0x20, '/!-,#'}, {}], 0xa, "6587ef315d11248044fd1f54eeec89abc4f0bc6b8917b8d075c73a8d3d62e077e38f98bc81c96872fbd266cfd4702bd9d09e08c3f9684dfcfcdc3771702ec0fa4e8e43d4f2bd77873047d8667163b1c00554f20cce57da231605212343bc1e01251c32df9f52f2bf35f3ed88bbbe44e54c16b38033140a8eb4"}, 0xcb)
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@random={'btrfs.', '\'/)\xc8$./)}*^[\x8b$\'\x00'})
---

end of program
----- executor 2 receive testcase
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2210, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 5223, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1450, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
time breakdown 0: 50, 253, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 signal number : 1187
----- executor 1 executes write_coverage_signal cov->size 9086, flag collect 0
----- executor 1 signal number : 310
----- executor 1 executes write_coverage_signal cov->size 5977, flag collect 0
----- executor 1 signal number : 81
executor 1 server cover_cnt 4 output_pos_value 3606
time breakdown 1: 59, 249, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 464
remove dir: /root/orangefs-client/dfs-0-7993
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1800, prog_size 1136
remove dir time 140
-----finish removing dir
mkdir time 51
executor 3 create dir /root/orangefs-client/dfs-0-7994 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7994
receive_execute: 6, 215
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 214
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-7994
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 13, 227
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 31, 227
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22419, write pid:22420
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7639, pid 22419, write pid:22420
----- executor 4 executes write_coverage_signal cov->size 7639, flag collect 0
----- executor 4 signal number : 2071
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 4, 0, 0
execute_one time: 0, 5
receive_execute: 245, 220
time breakdown 4: 260, 5, 0
before receive testcase: 0 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
2023/03/10 23:08:18 for select break: 1
----- executor 3 write_call_output, size 20363, pid 22394, write pid:22395
----- executor 3 executes write_coverage_signal cov->size 20363, flag collect 0
2023/03/10 23:08:18 --------- executor 4 receive reply, reply.done 1
----- executor 3 signal number : 3077
----- completed 1
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22394, write pid:22395
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 20
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 31, 20, 0
execute_one time: 10, 51
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2711
----- executor 2 executes write_coverage_signal cov->size 20042, flag collect 0
----- executor 2 signal number : 1037
----- executor 2 executes write_coverage_signal cov->size 4375, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 3510, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4181
time breakdown 3: 468, 62, 0
before receive testcase: 0 1
time breakdown 2: 240, 76, 0
before receive testcase: 0 1
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 2 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1470, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:18 for select break: 1
2023/03/10 23:08:18 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 11791, flag collect 0
----- executor 0 signal number : 2048
----- executor 0 executes write_coverage_signal cov->size 16264, flag collect 0
----- executor 0 signal number : 1227
----- executor 0 executes write_coverage_signal cov->size 2229, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1647, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 3653
time breakdown 1: 223, 94, 0
before receive testcase: 0 0
time breakdown 0: 221, 102, 0
before receive testcase: 0 1
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:19 wg wait finish
2023/03/10 23:08:19 ------ all executors finish execution
2023/03/10 23:08:19 exec time: 347
2023/03/10 23:08:19 ----- PS len: 5
2023/03/10 23:08:19 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:19 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 2048 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 1227 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 2711 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 1037 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:19 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:19 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:19 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 2462 openat openat
2023/03/10 23:08:19 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:19 prog length: 1
2023/03/10 23:08:19 prog length: 3
2023/03/10 23:08:19 HasCrashFail:false HasNetFail:false
23:08:19 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000040)='./file1/file0/file0\x00', 0x42, 0x100)
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
openat(r0, &(0x7f0000000000)='./file1\x00', 0x8080, 0x1)
unlink(&(0x7f00000000c0)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1496, prog_size 352
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 160
remove dir: /root/orangefs-client/dfs-0-7994
remove dir time 121
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-7995 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7995
receive_execute: 47, 157
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 36, 159
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
current dir: executor 4: /root/orangefs-client/dfs-0-7995
receive_execute: 31, 184
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 109, 193
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22421, write pid:22422
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22421, write pid:22422
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 48, 197
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 4 write_call_output, size 7727, pid 22421, write pid:22422
----- executor 4 executes write_coverage_signal cov->size 7727, flag collect 0
cover_reset in execute_call
----- executor 4 signal number : 2072
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
executor 4, execute_one inner time: 6, 16, 0
execute_one time: 0, 22
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 7080, pid 22396, write pid:22397
----- executor 3 executes write_coverage_signal cov->size 7080, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 21
time breakdown 4: 302, 23, 0
before receive testcase: 0 1
cover_reset in execute_call
execute_one loop: 0, 0, 18
executor 3, execute_one inner time: 21, 18, 0
execute_one time: 0, 40
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 245, 40, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 2630, flag collect 0
----- executor 0 signal number : 930
----- executor 0 executes write_coverage_signal cov->size 1610, flag collect 0
----- executor 0 signal number : 331
----- executor 0 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 0 signal number : 139
----- executor 0 executes write_coverage_signal cov->size 650, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 1495
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32256, flag collect 0
----- executor 1 signal number : 1945
----- executor 1 executes write_coverage_signal cov->size 13056, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 97, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 2 signal number : 46
executor 2 server cover_cnt 3 output_pos_value 211
----- executor 1 signal number : 336
----- executor 1 executes write_coverage_signal cov->size 4404, flag collect 0
----- executor 1 signal number : 301
----- executor 1 executes write_coverage_signal cov->size 3228, flag collect 0
----- executor 1 signal number : 78
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 2673
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:19 for select break: 1
time breakdown 0: 215, 65, 0
before receive testcase: 0 1
time breakdown 1: 195, 100, 0
before receive testcase: 0 1
2023/03/10 23:08:19 --------- executor 3 receive reply, reply.done 1
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:19 wg wait finish
2023/03/10 23:08:19 ------ all executors finish execution
2023/03/10 23:08:19 exec time: 260
2023/03/10 23:08:19 ----- PS len: 5
2023/03/10 23:08:19 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 2072 signal and 0 cover from executor 4
2023/03/10 23:08:19 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 930 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:19 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 331 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 1945 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 301 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:19 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:19 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 3970 unlink unlink
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 2814 rmdir rmdir
2023/03/10 23:08:19 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:19 prog length: 5
2023/03/10 23:08:19 prog length: 8
2023/03/10 23:08:19 HasCrashFail:false HasNetFail:false
23:08:19 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x8000, 0x108)
r1 = dup(0xffffffffffffffff)
fcntl$dupfd(r0, 0x0, r1)
write$binfmt_misc(r0, &(0x7f0000000040)={'syz1', "237aa6fafb48a4572f7dc3c68720796f367ea2d21fff29564245fd7eb51f1890f5e3e2a2f8236ab42acd3a3bb31ac7cb417ab04bbf2b1242f677a145376d2d07999842d2da8ba0c0930282340eecb98a2e776a01f1af19c53dca7364f3a87871c4fdca"}, 0x67)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f00000000c0), &(0x7f0000000100)='./file0\x00', 0x8, 0x2)
---
rmdir(&(0x7f0000000200)='./file0\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)='./file0\x00', 0x8, 0x0)
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)={'U-', 0x3}, 0x16, 0x2)
lsetxattr$security_selinux(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)='system_u:object_r:cpu_device_t:s0\x00', 0x22, 0x3)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
unlink(&(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_upper(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000240), &(0x7f0000000400)={0x0, 0xfb, 0x3d, 0x4, 0x81, "54ba689e4f25562c8c20f993b0ed7225", "965b2c1a2954b817d4ed5a4d8fe5621e2ecb8002fadc99000000097a6d982b8166bad5ebea40d327"}, 0x3d, 0x3)
---

end of program
time breakdown 2: 204, 89, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 904
remove dir: /root/orangefs-client/dfs-0-7995
----- executor 4 receive testcase
executor 4: prog_data_offset 2240, prog_size 1928
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 83
-----finish removing dir
receive_execute: 2, 124
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 28
executor 3 create dir /root/orangefs-client/dfs-0-7996 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7996
receive_execute: 11, 125
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7996
receive_execute: 26, 116
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 24, 133
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 45, 143
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7114, pid 22398, write pid:22399
----- executor 3 executes write_coverage_signal cov->size 7114, flag collect 0
----- executor 3 signal number : 2066
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22398, write pid:22399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22398, write pid:22399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22398, write pid:22399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22398, write pid:22399
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7348, pid 22424, write pid:22425
----- executor 4 executes write_coverage_signal cov->size 7348, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 7348, pid 22424, write pid:22425
----- executor 4 executes write_coverage_signal cov->size 7348, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 3, 0
execute_one time: 0, 8
time breakdown 3: 164, 10, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22424, write pid:22427
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
----- executor 4 write_call_output, size 32765, pid 22424, write pid:22425
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 975
----- completed 4
----- executor 4 write_call_output, size 0, pid 22424, write pid:22426
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22424, write pid:22425
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22424, write pid:22425
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22424, write pid:22425
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 23
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 156, 44, 0
execute_one time: 0, 200
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 0 receive reply, reply.done 1
time breakdown 4: 189, 204, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2324
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1178
----- executor 2 executes write_coverage_signal cov->size 6057, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 4334, flag collect 0
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 3897
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1968
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1115
----- executor 0 executes write_coverage_signal cov->size 10218, flag collect 0
----- executor 0 signal number : 371
----- executor 0 executes write_coverage_signal cov->size 7444, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3543
time breakdown 0: 142, 223, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 31130, flag collect 0
----- executor 1 signal number : 2267
----- executor 1 executes write_coverage_signal cov->size 29255, flag collect 0
----- executor 1 signal number : 1183
----- executor 1 executes write_coverage_signal cov->size 7159, flag collect 0
----- executor 1 signal number : 302
----- executor 1 executes write_coverage_signal cov->size 3982, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 3844
2023/03/10 23:08:19 for select break: 1
time breakdown 1: 126, 240, 0
before receive testcase: 0 1
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:19 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:19 wg wait finish
2023/03/10 23:08:19 ------ all executors finish execution
2023/03/10 23:08:19 exec time: 366
2023/03/10 23:08:19 ----- PS len: 5
2023/03/10 23:08:19 [CLIENT] executor 4 has 8 replies
2023/03/10 23:08:19 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 975 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:19 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:19 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 2267 signal and 0 cover from userspace component
2023/03/10 23:08:19 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:19 fuzzer receive 2066 signal and 0 cover from executor 3
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 1183 signal and 0 cover from userspace component
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 302 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 1968 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 1115 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 371 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 2324 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 1178 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:19 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/10 23:08:19 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:19 prog length: 3
2023/03/10 23:08:19 prog length: 1
2023/03/10 23:08:19 HasCrashFail:false HasNetFail:false
23:08:19 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file1\x00', 0x12540, 0x0)
unlink(&(0x7f0000000100)='./file1\x00')
setxattr$smack_xattr_label(0x0, 0x0, 0x0, 0x3, 0x0)
---
lsetxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'L-'}, 0x16, 0x3)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/orangefs-client/dfs-0-7996
time breakdown 2: 136, 235, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1712, prog_size 328
remove dir time 79
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-7997
receive_execute: 8, 105
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-7997 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7997
receive_execute: 3, 106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 14, 121
receive_execute: 217, 122
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 20335, pid 22401, write pid:22402
----- executor 3 executes write_coverage_signal cov->size 20335, flag collect 0
----- executor 3 signal number : 3078
----- completed 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 22991, pid 22401, write pid:22402
----- executor 3 executes write_coverage_signal cov->size 22991, flag collect 0
----- executor 3 signal number : 668
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22401, write pid:22402
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 44, 6, 0
execute_one time: 1, 50
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 339, 52, 0
before receive testcase: 0 1
receive_execute: 22, 194
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7308, pid 22428, write pid:22429
----- executor 4 executes write_coverage_signal cov->size 7308, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 10
executor 4, execute_one inner time: 4, 10, 0
execute_one time: 0, 14
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4493, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2102, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 0 signal number : 139
time breakdown 4: 216, 16, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 964, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 1990
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 4 receive reply, reply.done 1
----- executor 1 signal number : 2870
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 136, 92, 0
before receive testcase: 0 1
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2520, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 113, 123, 0
before receive testcase: 0 1
----- executor 1 signal number : 1410
----- executor 1 executes write_coverage_signal cov->size 7328, flag collect 0
----- executor 1 signal number : 319
----- executor 1 executes write_coverage_signal cov->size 7231, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 4691
time breakdown 1: 109, 119, 0
before receive testcase: 0 1
2023/03/10 23:08:19 for select break: 1
2023/03/10 23:08:19 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:19 wg wait finish
2023/03/10 23:08:19 ------ all executors finish execution
2023/03/10 23:08:19 exec time: 232
2023/03/10 23:08:19 ----- PS len: 5
2023/03/10 23:08:19 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:19 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:19 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 139 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 2870 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 1410 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 319 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:19 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:19 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:19 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:19 fuzzer receive 3078 signal and 0 cover from executor 3
2023/03/10 23:08:19 fuzzer receive 668 signal and 0 cover from executor 3
2023/03/10 23:08:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:19 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 2343 link link
2023/03/10 23:08:19 ----- mutateArg()
2023/03/10 23:08:19 mutate testcase with failures
2023/03/10 23:08:19 ----- insertCall()
2023/03/10 23:08:19 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/10 23:08:19 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:19 prog length: 5
2023/03/10 23:08:19 prog length: 1
2023/03/10 23:08:19 HasCrashFail:false HasNetFail:false
23:08:19 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file1\x00')
chmod(&(0x7f0000000180)='./file1\x00', 0x24)
link(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='./file1\x00')
---
lsetxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@sha1={0x1, "920ed6ee349087f9d7494607b8c84db908d28c7f"}, 0x15, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 760
remove dir: /root/orangefs-client/dfs-0-7997
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2096, prog_size 336
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 55
-----finish removing dir
receive_execute: 5, 154
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-7998
mkdir time 100
executor 3 create dir /root/orangefs-client/dfs-0-7998 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7998
receive_execute: 7, 155
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 15, 1
receive_execute: 18, 202
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 59, 207
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 24, 216
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7175, pid 22430, write pid:22431
----- executor 4 executes write_coverage_signal cov->size 7175, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 9
executor 4, execute_one inner time: 3, 9, 0
execute_one time: 1, 12
time breakdown 4: 240, 14, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 20829, pid 22404, write pid:22405
----- executor 3 executes write_coverage_signal cov->size 20829, flag collect 0
----- executor 3 signal number : 3088
----- completed 1
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22404, write pid:22405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12490, pid 22404, write pid:22405
----- executor 3 executes write_coverage_signal cov->size 12490, flag collect 0
----- executor 3 signal number : 414
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 22404, write pid:22405
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 26358, pid 22404, write pid:22405
----- executor 3 executes write_coverage_signal cov->size 26358, flag collect 0
----- executor 3 signal number : 453
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
executor 3, execute_one inner time: 58, 55, 0
execute_one time: 0, 113
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2253
time breakdown 3: 266, 115, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 31845, flag collect 0
----- executor 1 signal number : 1179
----- executor 1 executes write_coverage_signal cov->size 6656, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 5579, flag collect 0
----- executor 1 signal number : 80
executor 1 server cover_cnt 4 output_pos_value 3811
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 157, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 209
time breakdown 2: 159, 176, 0
before receive testcase: 0 0
time breakdown 1: 162, 174, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2753
----- executor 0 executes write_coverage_signal cov->size 19084, flag collect 0
----- executor 0 signal number : 1048
----- executor 0 executes write_coverage_signal cov->size 4997, flag collect 0
----- executor 0 signal number : 343
----- executor 0 executes write_coverage_signal cov->size 3748, flag collect 0
----- executor 0 signal number : 78
executor 0 server cover_cnt 4 output_pos_value 4235
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:20 wg wait finish
2023/03/10 23:08:20 ------ all executors finish execution
2023/03/10 23:08:20 exec time: 340
2023/03/10 23:08:20 ----- PS len: 5
2023/03/10 23:08:20 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:20 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:20 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 2753 signal and 0 cover from userspace component
2023/03/10 23:08:20 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 1048 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 343 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:20 fuzzer receive 3088 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 414 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 453 signal and 0 cover from executor 3
2023/03/10 23:08:20 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:20 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 2253 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 1179 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
time breakdown 0: 221, 137, 0
before receive testcase: 0 0
2023/03/10 23:08:20 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:20 mutate testcase with failures
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/10 23:08:20 mutate testcase with failures
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:20 prog length: 5
2023/03/10 23:08:20 prog length: 5
2023/03/10 23:08:20 HasCrashFail:false HasNetFail:false
23:08:20 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000000)='\x00', &(0x7f0000000040), &(0x7f0000000080)='./file1\x00', 0x8, 0x2)
setxattr$security_evm(0x0, 0x0, &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0xffffff9c, 0x0)
open$dir(&(0x7f0000000480)='./file1\x00', 0x103c03, 0x154)
ioctl(0xffffffffffffffff, 0x0, 0x0)
---
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000040)='./file1/file0\x00', 0x0, 0x0, 0x3, 0x1)
unlink(&(0x7f0000000000)='./file1/file0\x00')
readlink(0x0, 0x0, 0x0)
openat(0xffffffffffffffff, 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 912
remove dir: /root/orangefs-client/dfs-0-7998
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2248, prog_size 712
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 167
-----finish removing dir
receive_execute: 18, 291
current dir: executor 4: /root/orangefs-client/dfs-0-7999
mkdir time 124
executor 3 create dir /root/orangefs-client/dfs-0-7999 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-7999
receive_execute: 26, 291
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22407, write pid:22408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22407, write pid:22408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22407, write pid:22408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 20, 290
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 289
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7566, pid 22407, write pid:22408
----- executor 3 executes write_coverage_signal cov->size 7566, flag collect 0
----- executor 3 signal number : 2079
----- completed 4
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22407, write pid:22408
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 0, 0
execute_one time: 1, 24
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 317, 26, 0
before receive testcase: 0 0
receive_execute: 115, 334
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22432, write pid:22433
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7396, pid 22432, write pid:22433
----- executor 4 executes write_coverage_signal cov->size 7396, flag collect 0
----- executor 4 signal number : 2084
----- completed 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 4 write_call_output, size 7638, pid 22432, write pid:22433
----- executor 4 executes write_coverage_signal cov->size 7638, flag collect 0
----- executor 4 signal number : 15
----- completed 3
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22432, write pid:22433
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22432, write pid:22433
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 41, 13, 0
execute_one time: 1, 54
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 760, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 432, flag collect 0
----- executor 2 signal number : 44
time breakdown 4: 451, 55, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32439, flag collect 0
----- executor 0 signal number : 1965
----- executor 0 executes write_coverage_signal cov->size 12422, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 4001, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 3207, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 2689
time breakdown 0: 309, 94, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 server cover_cnt 4 output_pos_value 494
time breakdown 2: 309, 114, 0
before receive testcase: 0 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:20 wg wait finish
2023/03/10 23:08:20 ------ all executors finish execution
2023/03/10 23:08:20 exec time: 418
2023/03/10 23:08:20 ----- PS len: 5
2023/03/10 23:08:20 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:20 fuzzer receive 2084 signal and 0 cover from executor 4
2023/03/10 23:08:20 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:20 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:20 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 2079 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 324, 98, 0
before receive testcase: 0 1
2023/03/10 23:08:20 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 1965 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:20 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:20 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:20 mutate testcase with failures
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/10 23:08:20 mutate testcase with failures
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2344 linkat linkat
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:20 prog length: 3
2023/03/10 23:08:20 prog length: 4
2023/03/10 23:08:20 HasCrashFail:false HasNetFail:false
23:08:20 ---executing program 0:
---
---
---
write$binfmt_elf64(0xffffffffffffffff, &(0x7f00000004c0)={{0x7f, 0x45, 0x4c, 0x46, 0x80, 0x1f, 0x80, 0x80, 0x4, 0x0, 0x3e, 0x5, 0x2a8, 0x40, 0x191, 0xffffec5b, 0x0, 0x38, 0x1, 0x1, 0x400, 0x2}, [{0x7, 0x4, 0x1, 0x2, 0x3, 0x100000001, 0x0, 0x2}, {0x5, 0x7, 0x6, 0x9, 0x6a, 0x1, 0xd54f, 0x5}], "bc669cb7ffef915222c3069e11057100da49f8d4f8178dbe768bf1b3ed81f57871980a0225159332c9d13ff85b45f2056b4c6dc3a52f0e3a63674549e770cb6984309548e6a884a045d96a9732c0dbc8794aab9647c26001c2e7d111c9c365cbff0c12e2fffcd8f7f62b16f9fcb04b13eb8061a048359e7116c9ac54604b1ff80dd0586626b48ce351f0e6fd80821a95282a98d435c72a32089ecfe4a752951d83ab894bbb643906bbfabc67d5c976", ['\x00', '\x00', '\x00']}, 0x45f)
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000000)={'#! ', './file1/file0', [{0x20, '*-$,'}, {}, {0x20, '#!+@(-'}, {}, {}], 0xa, "a077a4a3f2df6eba989bd4c6a213be30ba9d840a83f31c08a0d55f29892dbe9c62c4f894a623181fc9915ba003f718039b9d57172f0ae3df31a01e7de75c0f7983310c0475897e6dbd76a4773b318d303b4a51a641e55f4af6f6406f39421c4498206852c0aff4f619baa144f065aab59f1c7f56aa765b7449c845ca6c244d76bb5a224c381d09e9f6625815c4570987b0647005f112e1dc02d0bf314eb808"}, 0xbf)
---
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x0)
setxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@known='security.apparmor\x00', &(0x7f0000000140)='trusted.overlay.redirect\x00', 0x19, 0x3)
lremovexattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=@known='trusted.overlay.upper\x00')
linkat(0xffffffffffffffff, &(0x7f0000000200)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00', 0x1c00)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 4864, prog_size 992
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3528
remove dir: /root/orangefs-client/dfs-0-7999
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 63
-----finish removing dir
mkdir time 29
executor 3 create dir /root/orangefs-client/dfs-0-8000 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8000
receive_execute: 16, 101
current dir: executor 4: /root/orangefs-client/dfs-0-8000
receive_execute: 102, 101
receive_execute: 14, 101
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22410, write pid:22411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
receive_execute: 31, 94
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 20351, pid 22410, write pid:22411
----- executor 3 executes write_coverage_signal cov->size 20351, flag collect 0
----- executor 3 signal number : 3072
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22410, write pid:22411
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
receive_execute: 29, 129
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 24, 8, 0
execute_one time: 1, 32
time breakdown 3: 203, 34, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 7317, pid 22435, write pid:22436
----- executor 4 executes write_coverage_signal cov->size 7317, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 7317, pid 22435, write pid:22436
----- executor 4 executes write_coverage_signal cov->size 7317, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 7317, pid 22435, write pid:22436
----- executor 4 executes write_coverage_signal cov->size 7317, flag collect 0
----- executor 4 signal number : 16
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22435, write pid:22436
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 17, 53, 0
execute_one time: 0, 70
2023/03/10 23:08:20 for select break: 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2757
----- executor 2 executes write_coverage_signal cov->size 27660, flag collect 0
----- executor 2 signal number : 1031
----- executor 2 executes write_coverage_signal cov->size 6340, flag collect 0
----- executor 2 signal number : 355
----- executor 2 executes write_coverage_signal cov->size 5613, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4232
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 11739, flag collect 0
----- executor 0 signal number : 2046
----- executor 0 executes write_coverage_signal cov->size 15892, flag collect 0
----- executor 0 signal number : 1227
----- executor 0 executes write_coverage_signal cov->size 3279, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1755, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 3651
time breakdown 2: 115, 125, 0
before receive testcase: 0 1
2023/03/10 23:08:20 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 125, 125, 0
before receive testcase: 0 1
time breakdown 4: 159, 88, 0
before receive testcase: 0 1
2023/03/10 23:08:20 for select break: 1
2023/03/10 23:08:20 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:20 wg wait finish
2023/03/10 23:08:20 ------ all executors finish execution
2023/03/10 23:08:20 exec time: 244
2023/03/10 23:08:20 ----- PS len: 5
2023/03/10 23:08:20 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:20 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:20 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:20 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:20 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:20 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:20 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 2757 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 1031 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 355 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 3072 signal and 0 cover from executor 3
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:20 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 2046 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 1227 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:20 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:20 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:20 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:20 mutate testcase with failures
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- mutateArg()
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2462 openat openat
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 241 fsetxattr$trusted_overlay_origin fsetxattr$trusted_overlay_origin
2023/03/10 23:08:20 mutate testcase with failures
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 3967 truncate truncate
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/10 23:08:20 ----- insertCall()
2023/03/10 23:08:20 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/10 23:08:20 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:20 prog length: 2
2023/03/10 23:08:20 prog length: 14
2023/03/10 23:08:20 HasCrashFail:false HasNetFail:false
23:08:20 ---executing program 0:
---
---
---
fsetxattr$trusted_overlay_origin(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x1)
openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x212083, 0x142)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
stat(&(0x7f0000000240)='\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f00000003c0)='.\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lsetxattr$security_selinux(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0), &(0x7f0000000800)='system_u:object_r:login_exec_t:s0\x00', 0x22, 0x3)
stat(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000005c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000640)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
setxattr$system_posix_acl(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200)='system.posix_acl_default\x00', &(0x7f0000000900)=ANY=[@ANYBLOB="02000000010004000000000002000400", @ANYRES32=r0, @ANYBLOB="02000600", @ANYRES32=r1, @ANYBLOB="02000200", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=r2, @ANYBLOB='\x00\x00\x00\x00\x00\x00\x00', @ANYRES32=r3, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="02000000", @ANYRES32=r4, @ANYBLOB="02000600", @ANYRES32=0x0, @ANYBLOB="02000400", @ANYRES32=0xee00, @ANYBLOB="02000000", @ANYRES32=0xee01, @ANYBLOB="040009000000000008000500", @ANYRES32=r5, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32, @ANYBLOB="08000500", @ANYRES32, @ANYBLOB="08000200", @ANYRES32=r6, @ANYBLOB="10000400000000002000050000000000"], 0xac, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0), 0x2, 0x1)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
truncate(&(0x7f0000000180)='./file0\x00', 0x1)
lsetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@known='system.advise\x00', &(0x7f0000000140)='&[\x00', 0x3, 0x1)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1744, prog_size 3992
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2520, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 117, 136, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 408
remove dir: /root/orangefs-client/dfs-0-8000
remove dir time 123
-----finish removing dir
receive_execute: 9, 204
mkdir time 67
executor 3 create dir /root/orangefs-client/dfs-0-8001 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8001
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 210
receive_execute: 111, 209
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22413, write pid:22414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22413, write pid:22414
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 2 before execute_one
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 3 receive reply, reply.done 1
execute_one time: 1, 1
time breakdown 3: 321, 2, 0
before receive testcase: 0 1
receive_execute: 20, 202
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-8001
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 26, 236
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22440
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 12040, pid 22438, write pid:22441
----- executor 4 executes write_coverage_signal cov->size 12040, flag collect 0
----- executor 4 signal number : 2618
----- completed 2
----- executor 4 write_call_output, size 32765, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 696
----- completed 3
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
----- executor 4 write_call_output, size 0, pid 22438, write pid:22440
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22438, write pid:22439
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 177, 33, 0
execute_one time: 1, 210
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2688
----- executor 2 executes write_coverage_signal cov->size 25753, flag collect 0
----- executor 2 signal number : 1043
time breakdown 4: 262, 215, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 9519, flag collect 0
----- executor 2 signal number : 350
----- executor 2 executes write_coverage_signal cov->size 5440, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 4171
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 779, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 301, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 4620, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 230, 248, 0
before receive testcase: 0 1
----- executor 0 signal number : 2602
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1208
----- executor 0 executes write_coverage_signal cov->size 9276, flag collect 0
----- executor 0 signal number : 331
----- executor 0 executes write_coverage_signal cov->size 8426, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4234
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1351, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 4 output_pos_value 498
time breakdown 1: 214, 268, 0
before receive testcase: 0 1
time breakdown 0: 232, 260, 0
before receive testcase: 0 1
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:21 wg wait finish
2023/03/10 23:08:21 ------ all executors finish execution
2023/03/10 23:08:21 exec time: 497
2023/03/10 23:08:21 ----- PS len: 5
2023/03/10 23:08:21 [CLIENT] executor 4 has 14 replies
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 2618 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 696 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 2602 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 1208 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 331 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:21 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:21 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 2688 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 1043 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 350 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:21 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:21 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:21 mutate testcase with failures
2023/03/10 23:08:21 ----- insertCall()
2023/03/10 23:08:21 ----- generateCall 120 chdir chdir
2023/03/10 23:08:21 ----- insertCall()
2023/03/10 23:08:21 ----- generateCall 2373 mkdir mkdir
2023/03/10 23:08:21 mutate testcase with failures
2023/03/10 23:08:21 ----- insertCall()
2023/03/10 23:08:21 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/10 23:08:21 ----- mutateArg()
2023/03/10 23:08:21 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:21 prog length: 5
2023/03/10 23:08:21 prog length: 3
2023/03/10 23:08:21 HasCrashFail:false HasNetFail:false
23:08:21 ---executing program 0:
---
---
---
chdir(&(0x7f0000000000)='./file0\x00')
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x0)
open(&(0x7f00000000c0)='./file0\x00', 0x40040, 0x0)
stat(0x0, 0x0)
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
---
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0xc, 0x6, 0x1000, ""}, 0x1009, 0x0)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lseek(r0, 0x100, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/orangefs-client/dfs-0-8001
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1848, prog_size 4784
remove dir time 162
-----finish removing dir
mkdir time 49
executor 3 create dir /root/orangefs-client/dfs-0-8002 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8002
receive_execute: 27, 220
receive_execute: 31, 215
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8002
receive_execute: 46, 225
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 287, 230
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 7569, pid 22415, write pid:22416
----- executor 3 executes write_coverage_signal cov->size 7569, flag collect 0
----- executor 3 signal number : 2081
----- completed 1
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22415, write pid:22416
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22415, write pid:22417
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 68, 323
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22443, write pid:22444
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21842, pid 22415, write pid:22416
----- executor 3 executes write_coverage_signal cov->size 21842, flag collect 0
----- executor 3 signal number : 1028
----- completed 4
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 13234, pid 22415, write pid:22417
----- executor 3 executes write_coverage_signal cov->size 13234, flag collect 0
----- executor 3 signal number : 415
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 151, 2, 0
execute_one time: 0, 153
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 520, 154, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22443, write pid:22445
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
----- executor 4 write_call_output, size 23582, pid 22443, write pid:22444
----- executor 4 executes write_coverage_signal cov->size 23582, flag collect 0
----- executor 4 signal number : 2852
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 85, 1, 0
execute_one time: 0, 86
2023/03/10 23:08:21 for select break: 1
time breakdown 4: 391, 86, 0
before receive testcase: 0 1
2023/03/10 23:08:21 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3780, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1080, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2763
----- executor 0 executes write_coverage_signal cov->size 22858, flag collect 0
----- executor 0 signal number : 1039
----- executor 0 executes write_coverage_signal cov->size 7449, flag collect 0
----- executor 0 signal number : 346
----- executor 0 executes write_coverage_signal cov->size 4221, flag collect 0
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4238
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 248, 214, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18226, flag collect 0
----- executor 2 signal number : 2299
----- executor 2 executes write_coverage_signal cov->size 18704, flag collect 0
----- executor 2 signal number : 1170
----- executor 2 executes write_coverage_signal cov->size 4932, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 2665, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3845
2023/03/10 23:08:21 for select break: 1
2023/03/10 23:08:21 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:21 wg wait finish
2023/03/10 23:08:21 ------ all executors finish execution
2023/03/10 23:08:21 exec time: 440
2023/03/10 23:08:21 ----- PS len: 5
2023/03/10 23:08:21 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:21 fuzzer receive 2852 signal and 0 cover from executor 4
2023/03/10 23:08:21 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 2763 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 1039 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 346 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:21 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:21 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 2299 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 1170 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:21 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
time breakdown 1: 254, 207, 0
before receive testcase: 0 0
2023/03/10 23:08:21 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:21 fuzzer receive 2081 signal and 0 cover from executor 3
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:21 fuzzer receive 1028 signal and 0 cover from executor 3
2023/03/10 23:08:21 fuzzer receive 415 signal and 0 cover from executor 3
2023/03/10 23:08:21 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:21 mutate testcase with failures
2023/03/10 23:08:21 ----- insertCall()
2023/03/10 23:08:21 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/10 23:08:21 mutate testcase with failures
2023/03/10 23:08:21 ----- mutateArg()
2023/03/10 23:08:21 ----- mutateArg()
2023/03/10 23:08:21 ----- insertCall()
2023/03/10 23:08:21 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/10 23:08:21 ----- mutateArg()
2023/03/10 23:08:21 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:21 prog length: 4
2023/03/10 23:08:21 prog length: 1
2023/03/10 23:08:21 HasCrashFail:false HasNetFail:false
23:08:21 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file0\x00', 0x12540, 0x0)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:default_t:s0\x00', 0x1f, 0x1)
unlink(&(0x7f0000000100)='./file0\x00')
setxattr$smack_xattr_label(0x0, 0x0, 0x0, 0x3, 0x0)
---
lsetxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000140)=@v2={0x5, 0x1, 0x11, 0x40, 0x106, "bb589e2b6396f787a99a166f3c33050f9a9ce99232b3938662bdab5b67cd06f26440323114942ceaeecd52b800edb2a140fcdc5cb788b3d10e77b15b86ab3df074c249e15d244e077a9704aa63744853c97878e32cb08db60045bdebd8b814f01bdf62f61841b96098a44588053514d4b6bd1daf44f80cee91e2e4d37fcf89ec123f69d9bd339104b159c64590a7a58939bfee9c6f66f59166b8e77fab772a0992cfe38f70f7b99d37a5430b45824e3844838a8a6bfc0a43d2f2fa05f3fc69e8bafd170357ae6b877994b4dbc944d448fab637c1eec449f99ec669d0376b6a3dc6461773b1b20d227bfd435631a793f4b66ce7f4b68c663fb161ce9b147d09cb6b46c68c662b"}, 0x10f, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 2016, prog_size 736
executor 3: prog_data_offset 1336, prog_size 680
time breakdown 2: 271, 209, 0
before receive testcase: 0 0
remove dir: /root/orangefs-client/dfs-0-8002
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 34
-----finish removing dir
receive_execute: 26, 154
mkdir time 131
executor 3 create dir /root/orangefs-client/dfs-0-8003 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8003
receive_execute: 15, 165
receive_execute: 63, 175
receive_execute: 10, 175
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
current dir: executor 4: /root/orangefs-client/dfs-0-8003
----- executor 3 write_call_output, size 20535, pid 22418, write pid:22419
----- executor 3 executes write_coverage_signal cov->size 20535, flag collect 0
----- executor 3 signal number : 3079
----- completed 1
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22418, write pid:22419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 20, 220
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7538, pid 22446, write pid:22447
----- executor 4 executes write_coverage_signal cov->size 7538, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 2, 3, 0
execute_one time: 1, 5
time breakdown 4: 240, 13, 0
before receive testcase: 0 1
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 23217, pid 22418, write pid:22419
----- executor 3 executes write_coverage_signal cov->size 23217, flag collect 0
----- executor 3 signal number : 663
----- completed 3
execute_one loop: 0, 0, 49
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22418, write pid:22419
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 40
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 78, 91, 0
execute_one time: 5, 169
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 18200, flag collect 0
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2395
----- executor 0 executes write_coverage_signal cov->size 23805, flag collect 0
----- executor 2 signal number : 2741
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1655
----- executor 0 executes write_coverage_signal cov->size 4485, flag collect 0
----- executor 0 signal number : 297
----- executor 0 executes write_coverage_signal cov->size 1889, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 4439
----- executor 2 signal number : 1125
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 180, 190, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 13846, flag collect 0
----- executor 1 signal number : 2102
----- executor 1 executes write_coverage_signal cov->size 21399, flag collect 0
time breakdown 3: 238, 177, 0
before receive testcase: 0 1
----- executor 1 signal number : 1552
----- executor 1 executes write_coverage_signal cov->size 4722, flag collect 0
----- executor 1 signal number : 293
----- executor 1 executes write_coverage_signal cov->size 1706, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 4037
----- executor 2 executes write_coverage_signal cov->size 9986, flag collect 0
----- executor 2 signal number : 363
----- executor 2 executes write_coverage_signal cov->size 7559, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4318
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 195, 183, 0
before receive testcase: 0 0
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:22 wg wait finish
2023/03/10 23:08:22 ------ all executors finish execution
2023/03/10 23:08:22 exec time: 363
2023/03/10 23:08:22 ----- PS len: 5
2023/03/10 23:08:22 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:22 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:22 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 2395 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 1655 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 297 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:22 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 2102 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 1552 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 293 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:22 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 2741 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 363 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:22 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:22 fuzzer receive 3079 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 663 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:22 mutate testcase with failures
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 3765 symlinkat symlinkat
2023/03/10 23:08:22 mutate testcase with failures
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:22 prog length: 8
2023/03/10 23:08:22 prog length: 4
2023/03/10 23:08:22 HasCrashFail:false HasNetFail:false
23:08:22 ---executing program 0:
---
---
---
setxattr$trusted_overlay_nlink(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_selinux(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_ima(0x0, 0x0, 0x0, 0x0, 0x0)
listxattr(0x0, 0x0, 0x0)
setxattr$security_evm(&(0x7f0000000080)='./file0\x00', &(0x7f0000000040), &(0x7f0000000180)=ANY=[@ANYBLOB="0504080000004f00c5bef1694752e62e86f1b43e0f1441c8046fdbc8be93a73c02dbd452b27f6e52290de805af9e80fd08e66538a455e49bc97100af0824b451136c4a308c4286d3a7ff74eb0004000000000000f0f9035087b2191c6c83f15db2ded90b2bb030f74bee8ca665a869364f6311ceb3e99a47203879a02e6f7512f73f87fa8301fa989dfd41cb00da5c667a9ede719849f4956fca47c6d5a7123542ea8538bcb84807e6161cbefab4ed8c630911c62a38fafe68a5d045467b68fac5f39c931ad31ead4b4fef4b6aa519217f1dd6aa43"], 0xce, 0x3)
readlinkat(0xffffffffffffffff, 0x0, 0x0, 0x0)
symlinkat(&(0x7f0000000000)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00')
lremovexattr(0x0, 0x0)
---
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000600)='./file0\x00', &(0x7f0000000000)=""/24, 0x18)
lsetxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x0)
stat(0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1392
remove dir: /root/orangefs-client/dfs-0-8003
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 185, 188, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2728, prog_size 512
remove dir time 48
-----finish removing dir
receive_execute: 4, 140
receive_execute: 12, 140
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-8004
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 92
executor 3 create dir /root/orangefs-client/dfs-0-8004 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8004
receive_execute: 7, 159
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 134, 173
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 15, 171
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7080, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 7080, flag collect 0
----- executor 3 signal number : 2065
----- completed 5
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 976
----- completed 7
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22422, write pid:22423
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 37
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 34, 51, 0
execute_one time: 0, 85
time breakdown 3: 191, 91, 0
before receive testcase: 0 1
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22448, write pid:22451
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22448, write pid:22451
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
----- executor 4 write_call_output, size 32761, pid 22448, write pid:22449
----- executor 4 executes write_coverage_signal cov->size 32761, flag collect 0
----- executor 4 signal number : 2867
----- completed 3
----- executor 4 write_call_output, size 26422, pid 22448, write pid:22450
----- executor 4 executes write_coverage_signal cov->size 26422, flag collect 0
----- executor 4 signal number : 600
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 111, 1, 0
execute_one time: 1, 112
cover_reset in execute_call
time breakdown 4: 307, 115, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 168, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2730, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 756, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
executor 2 server cover_cnt 3 output_pos_value 207
executor 1 write_server_output
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 4 receive reply, reply.done 1
time breakdown 2: 144, 149, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2264
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1192
----- executor 1 executes write_coverage_signal cov->size 8754, flag collect 0
----- executor 1 signal number : 323
----- executor 1 executes write_coverage_signal cov->size 6302, flag collect 0
----- executor 1 signal number : 81
executor 1 server cover_cnt 4 output_pos_value 3873
time breakdown 1: 166, 136, 0
before receive testcase: 0 1
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 15355, flag collect 0
----- executor 0 signal number : 2018
----- executor 0 executes write_coverage_signal cov->size 7799, flag collect 0
----- executor 0 signal number : 1129
----- executor 0 executes write_coverage_signal cov->size 3435, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1285, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 3526
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:22 wg wait finish
2023/03/10 23:08:22 ------ all executors finish execution
2023/03/10 23:08:22 exec time: 307
2023/03/10 23:08:22 ----- PS len: 5
2023/03/10 23:08:22 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 2867 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 600 signal and 0 cover from executor 4
2023/03/10 23:08:22 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:22 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 2018 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 1129 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:22 [CLIENT] executor 3 has 8 replies
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 976 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 2264 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 1192 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 323 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:22 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:22 mutate testcase with failures
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 541 ioctl ioctl
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/10 23:08:22 mutate testcase with failures
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 2347 llistxattr llistxattr
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 2343 link link
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 2459 open$dir open$dir
2023/03/10 23:08:22 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:22 prog length: 4
2023/03/10 23:08:22 prog length: 5
2023/03/10 23:08:22 HasCrashFail:false HasNetFail:false
23:08:22 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1/file0\x00', 0x200060, 0x100)
setxattr$incfs_id(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000140), &(0x7f0000000180)={'0000000000000000000000000000000', 0x32}, 0x20, 0x1)
fcntl$setflags(r0, 0x2, 0x0)
ioctl(r0, 0x10000, &(0x7f0000000040)="1b2feb55e7dd7078f665b373663fe9a320d289b721948e1d2c4d3cfdbece223c7d1b7ec0750fa95eb16f48a4ea1b7101f50f2e8096537b0b48715b4eaae210afdda005dd43a026a6f8849ebcb33260a73264177a53efd122306442ff866e4c662dfe9eaf0e6fcd7df7187fa459986b5d77e365e8d720f2d841940cc3d8ba0ab3fd1b0dc0f21e197f06df48b605c44e51717ab7f6c84d11f81da6e1")
---
unlink(&(0x7f00000000c0)='./file1\x00')
llistxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=""/41, 0x29)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='.\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x0)
link(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file1\x00')
open$dir(&(0x7f0000000200)='./file1\x00', 0x2c0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
remove dir: /root/orangefs-client/dfs-0-8004
----- executor 4 receive testcase
executor 4: prog_data_offset 2264, prog_size 800
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 152, 166, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 45
-----finish removing dir
mkdir time 77
executor 3 create dir /root/orangefs-client/dfs-0-8005 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8005
current dir: executor 4: /root/orangefs-client/dfs-0-8005
receive_execute: 43, 129
receive_execute: 26, 124
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 7075, pid 22426, write pid:22427
----- executor 3 executes write_coverage_signal cov->size 7075, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
receive_execute: 3, 124
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 124
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7075, pid 22426, write pid:22427
----- executor 3 executes write_coverage_signal cov->size 7075, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22426, write pid:22427
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22426, write pid:22427
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 3, 0
execute_one time: 1, 9
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 172, 12, 0
before receive testcase: 0 1
[E 03/10/2023 22:08:22] PINT_perm_check: could not retrieve parent/metafile handle from hint
receive_execute: 23, 165
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7843, pid 22452, write pid:22453
----- executor 4 executes write_coverage_signal cov->size 7843, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 7843, pid 22452, write pid:22453
----- executor 4 executes write_coverage_signal cov->size 7843, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22452, write pid:22453
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7843, pid 22452, write pid:22453
----- executor 4 executes write_coverage_signal cov->size 7843, flag collect 0
----- executor 4 signal number : 16
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 22655, pid 22452, write pid:22453
----- executor 4 executes write_coverage_signal cov->size 22655, flag collect 0
----- executor 4 signal number : 1033
----- completed 5
execute_one loop: 0, 0, 38
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 53
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
executor 4, execute_one inner time: 46, 154, 0
execute_one time: 0, 200
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3570, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 918, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 25471, flag collect 0
----- executor 0 signal number : 2404
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1712
----- executor 0 executes write_coverage_signal cov->size 6111, flag collect 0
----- executor 0 signal number : 300
----- executor 0 executes write_coverage_signal cov->size 2596, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4509
time breakdown 0: 137, 242, 0
before receive testcase: 0 1
time breakdown 4: 188, 206, 0
before receive testcase: 0 0
time breakdown 1: 147, 240, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1927
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1093
----- executor 2 executes write_coverage_signal cov->size 10786, flag collect 0
----- executor 2 signal number : 377
----- executor 2 executes write_coverage_signal cov->size 8479, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 3486
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:22 for select break: 1
2023/03/10 23:08:22 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:22 wg wait finish
2023/03/10 23:08:22 ------ all executors finish execution
2023/03/10 23:08:22 exec time: 392
2023/03/10 23:08:22 ----- PS len: 5
2023/03/10 23:08:22 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:22 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:22 fuzzer receive 1033 signal and 0 cover from executor 4
2023/03/10 23:08:22 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 2404 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 1712 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 300 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:22 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:22 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 1927 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 1093 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 377 signal and 0 cover from userspace component
2023/03/10 23:08:22 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:22 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:22 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:22 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:22 mutate testcase with failures
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 mutate testcase with failures
2023/03/10 23:08:22 ----- mutateArg()
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/10 23:08:22 ----- insertCall()
2023/03/10 23:08:22 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/10 23:08:22 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:22 prog length: 6
2023/03/10 23:08:22 prog length: 4
2023/03/10 23:08:22 HasCrashFail:false HasNetFail:false
23:08:22 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x48200, 0x12d)
r1 = dup(0xffffffffffffffff)
fcntl$dupfd(r0, 0x0, r1)
fsetxattr$security_capability(r1, &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x1000000, [{0x25, 0xcc4}]}, 0xc, 0x3)
r2 = dup(r0)
write$binfmt_script(r2, &(0x7f0000000040)={'#! ', './file0', [{0x20, '}+^}!}f'}, {0x20, '\\'}, {0x20, '(*!'}], 0xa, "3fd37a9b240092e54503d25739f6a193c1797d842b221ca6a4c632a69f250e6d8868b23f738b6b"}, 0x40)
---
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000140)='security.SMACK64EXEC\x00', &(0x7f0000000180), 0x1, 0x3)
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_upper(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f00000002c0)=ANY=[@ANYBLOB="00fbe00205ce77806167e826f5053f8940f3d935a15f7fa91ec7989abc36891ede57b2e0724fb5734b2f16909589c55a29799c805a6db2a349989a05005847fa79a1c900a0d2042c506a395a627cc9e316f354258de8a956edfc2187d0190b051c49c0f89825a9fc415c9fd9a87475f84f49de1c23fc88ef67b65492d310beda6ea781ec6ac01a5a85582698a80e550439616a51b74f4a806da698206c821d37cfe7aa8380e040891b069e1f7670e5d335879d422c61764bd27e76601d36ca38e93e746740d81abf840687eaefd72f8f6fcc4bdaec56729649333c8c71e8cb07f6ddad90e062bd2a10b67be8f7db4cd22efefeaa8bc0dd439ef1a9923c28a9799e738583e4bf742def979741ab5d4eafc8c3fbf9317feb2dec474de67871a7de5e9fe4e2aa55dd92ee97c7fbb282a4055ce9f421ae10a99ad821aec2dbaf9c73ea8a367f9646d8d4fc80d8e1628b7e847e"], 0xe0, 0x1)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1304
remove dir: /root/orangefs-client/dfs-0-8005
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 150, 260, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2640, prog_size 1128
remove dir time 92
-----finish removing dir
mkdir time 33
executor 3 create dir /root/orangefs-client/dfs-0-8006 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8006
receive_execute: 26, 119
receive_execute: 18, 125
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 135
receive_execute: 253, 135
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8006
cover_reset in execute_call
----- executor 3 write_call_output, size 7580, pid 22429, write pid:22430
----- executor 3 executes write_coverage_signal cov->size 7580, flag collect 0
----- executor 3 signal number : 2079
----- completed 1
execute_one loop: 0, 0, 36
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22429, write pid:22430
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22429, write pid:22430
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22429, write pid:22430
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22429, write pid:22430
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22429, write pid:22430
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 36, 15, 0
execute_one time: 1, 51
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 388, 54, 0
before receive testcase: 0 1
receive_execute: 40, 212
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22457, write pid:22458
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22457, write pid:22459
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
----- executor 4 write_call_output, size 32765, pid 22457, write pid:22458
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3019
----- completed 3
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 4 write_call_output, size 14741, pid 22457, write pid:22458
----- executor 4 executes write_coverage_signal cov->size 14741, flag collect 0
----- executor 4 signal number : 310
----- completed 4
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 118, 0, 0
execute_one time: 0, 118
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 241, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 4200, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1081, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
time breakdown 1: 145, 241, 0
before receive testcase: 0 1
time breakdown 4: 252, 135, 0
before receive testcase: 0 1
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4399, flag collect 0
----- executor 0 signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 2246, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 4383, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1612, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2133
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2398
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1202
----- executor 2 executes write_coverage_signal cov->size 9214, flag collect 0
----- executor 2 signal number : 322
----- executor 2 executes write_coverage_signal cov->size 7779, flag collect 0
----- executor 2 signal number : 81
executor 2 server cover_cnt 4 output_pos_value 4016
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:23 wg wait finish
2023/03/10 23:08:23 ------ all executors finish execution
2023/03/10 23:08:23 exec time: 384
2023/03/10 23:08:23 ----- PS len: 5
2023/03/10 23:08:23 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 3019 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 310 signal and 0 cover from executor 4
2023/03/10 23:08:23 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:23 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 1425 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:23 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 2398 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 1202 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 322 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:23 [CLIENT] executor 3 has 6 replies
2023/03/10 23:08:23 fuzzer receive 2079 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:23 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:23 mutate testcase with failures
2023/03/10 23:08:23 ----- mutateArg()
2023/03/10 23:08:23 ----- insertCall()
2023/03/10 23:08:23 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/10 23:08:23 mutate testcase with failures
2023/03/10 23:08:23 ----- insertCall()
2023/03/10 23:08:23 ----- generateCall 3766 sync sync
2023/03/10 23:08:23 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:23 prog length: 14
time breakdown 0: 143, 248, 0
before receive testcase: 0 1
2023/03/10 23:08:23 prog length: 20
2023/03/10 23:08:23 HasCrashFail:false HasNetFail:false
23:08:23 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='com.apple.system.Security\x00')
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@random={'system.', 'com.apple.system.Security\x00'}, &(0x7f0000000100)=""/121, 0x79)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'U+'}, 0x16, 0x3)
lsetxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=@random={'system.', 'system.'}, &(0x7f00000002c0)='U+', 0x2, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f0000000380)='./file2\x00', &(0x7f0000000400), &(0x7f0000000a40)={0x0, 0xfb, 0x94, 0x3, 0x9, "3689cc3cdf3b5e7d652f9a299943fc1e", "1cfe8cfb4b867539ea1d832436db716fe3798a88a4367a77c51763479704f169db544f078f2184378bb86894fe3bc8f21c26492462e25774f06c758740bfae1278aabe1e8d0172ed774e2421e6da09348578ab9e686cdd263a2f61e708ec554b1dce583dd9c82ee0799a54c7d25a44557f2550306a8b20b8df4d87ae8ff7a0"}, 0x94, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340), 0x1, 0x1)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500), &(0x7f0000000540)='system_u:object_r:tape_device_t:s0\x00', 0x23, 0x2)
lsetxattr$security_ima(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@md5={0x1, "9c5d58fc481f280f566ab202b428edfa"}, 0x11, 0x1)
listxattr(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680)=""/70, 0x46)
readlinkat(r0, 0x0, &(0x7f0000000740), 0x0)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0), &(0x7f0000000800)=@md5={0x1, "d9ec59b0fa31debfdea91896ff37018e"}, 0x11, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)=ANY=[@ANYBLOB="00fbbb0409110f4c464167969254ac0146c0cb1ce834a865b71ff9fbea4944f85c15b2ae3c0744ac1580720400542c40f79e0ec9a77c38d047f83906846d26d75ad03558e0d9d8e866600db2378dfa6a1bdc89e705d0d49e249b29f2c28b622f6fda2e04cba881a3fd69d7d24ce5f04cc9be849685acca7ec75c2d56cb07172495869be7132fd38b4dd2e5e4deb663e54c1e0be84d75185fdfdd27660a7dcecd5f69914ff99ce6042473d797c1ec241900"/187], 0xbb, 0x1)
ioctl(r0, 0x401, &(0x7f00000009c0)="21e8a5e1da4af499b325016805f67b97c8ec4cba6b468c041e1c42afe95421b7feefd36657b764ff43038bd3417d38356c354a51e89df1521707b88912286b787d61ba7a8d49f21f1ee5c62c55cc062abde8f19bbd252a2271f26206")
---
sync()
lsetxattr$security_capability(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x9, 0x4}, {0x3, 0x40}]}, 0x14, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x0)
rename(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)=0x3, 0x8, 0x2)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), &(0x7f0000000340)='\x00', 0x1, 0x2)
renameat(0xffffffffffffffff, &(0x7f0000000380)='./file1\x00', 0xffffffffffffff9c, &(0x7f00000003c0)='\x00')
readlink(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0)=""/81, 0x51)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
readlink(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)=""/8, 0x8)
rmdir(&(0x7f0000000680)='./file1\x00')
sync()
r0 = openat(0xffffffffffffffff, &(0x7f00000006c0)='./file2\x00', 0x220000, 0xd5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740), &(0x7f0000000780)='./file2\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f00000007c0)='./file1/file0\x00', &(0x7f0000000800), &(0x7f0000000840)={0x0, 0xfb, 0xc3, 0x4, 0x3, "282248737f704aae236a470f7797faa7", "b25ac77d7c511861ae19e54bca24ff5c090b8045cedbd8c2b7ebc3f2b8f2d5289402278fcad20ebf3345a605db3c4f67605b5e2aeb7d4e73306e6f717ebf15b33815bee07fc5f23ade31d84dbd6701bd8cdba3a385c2071164caa2423ddce3a1b3ef695f1b28545e0a40f4d1a6c0a44c8e0a87f1f7884c71d6a5cb380b6466c852533a4141f4bd3720541051217b0d8593d62024892c26c867183b87ef5a2f1172cb2543332ca9f607e2d037f9cd"}, 0xc3, 0x3)
stat(&(0x7f0000000980)='./file2\x00', &(0x7f00000009c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000a40)='./file0\x00', &(0x7f0000000a80)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000b00)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000940)='system.posix_acl_access\x00', &(0x7f0000000b80)={{}, {0x1, 0x6}, [{0x2, 0x7, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x4, r1}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x1, 0xee01}, {0x2, 0x4, 0xee01}, {0x2, 0x4, 0xee01}, {0x2, 0x4, r2}], {0x4, 0x2}, [{0x8, 0x1, 0xee00}, {}, {0x8, 0x2}, {}, {0x8, 0x2, r3}, {0x8, 0x1}, {0x8, 0x6, 0xee00}], {0x10, 0x1}, {0x20, 0x4}}, 0x9c, 0x7)
open$dir(&(0x7f0000000c40)='./file1\x00', 0x402000, 0xc0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4080
remove dir: /root/orangefs-client/dfs-0-8006
time breakdown 2: 140, 248, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 5416, prog_size 6680
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 212
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8007
mkdir time 84
executor 3 create dir /root/orangefs-client/dfs-0-8007 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8007
receive_execute: 11, 297
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 197, 296
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 35, 280
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 7082, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7082, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
receive_execute: 1, 297
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7082, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7082, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7082, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7082, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7082, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7082, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7089, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7089, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7082, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7082, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
receive_execute: 24, 316
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8362, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 4 signal number : 2071
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7075, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 7075, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 19039, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 19039, flag collect 0
----- executor 4 signal number : 783
----- completed 3
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 13519, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 13519, flag collect 0
----- executor 3 signal number : 1027
----- completed 13
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 14799, pid 22433, write pid:22434
----- executor 3 executes write_coverage_signal cov->size 14799, flag collect 0
----- executor 3 signal number : 401
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 8595, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8595, flag collect 0
----- executor 4 signal number : 38
----- completed 4
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 26133, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 26133, flag collect 0
----- executor 4 signal number : 475
----- completed 6
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 61, 39, 0
execute_one time: 0, 100
time breakdown 3: 493, 101, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 15914, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 15914, flag collect 0
----- executor 4 signal number : 189
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 8362, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 4 signal number : 26
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8362, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 4 signal number : 23
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8362, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 4 signal number : 23
----- completed 14
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 8362, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 4 signal number : 23
----- completed 15
execute_one loop: 0, 0, 5
cover_reset in execute_call
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 8362, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 4 signal number : 23
----- completed 16
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 8355, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 8355, flag collect 0
----- executor 4 signal number : 23
----- completed 17
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22460, write pid:22461
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 101, 32, 0
execute_one time: 0, 133
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 31431, flag collect 0
----- executor 2 signal number : 2340
----- executor 2 executes write_coverage_signal cov->size 23705, flag collect 0
time breakdown 4: 340, 133, 0
before receive testcase: 0 1
----- executor 2 signal number : 1172
----- executor 2 executes write_coverage_signal cov->size 5086, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1933
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1032
----- executor 1 executes write_coverage_signal cov->size 18320, flag collect 0
----- executor 1 signal number : 424
----- executor 1 executes write_coverage_signal cov->size 18511, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3478
----- executor 2 signal number : 286
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4469, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2174, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 3333, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1288, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 executes write_coverage_signal cov->size 3580, flag collect 0
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 3889
time breakdown 2: 307, 151, 0
before receive testcase: 0 1
time breakdown 1: 320, 154, 0
before receive testcase: 0 1
time breakdown 0: 308, 159, 0
before receive testcase: 0 1
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:23 for select break: 1
2023/03/10 23:08:23 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:23 wg wait finish
2023/03/10 23:08:23 ------ all executors finish execution
2023/03/10 23:08:23 exec time: 500
2023/03/10 23:08:23 ----- PS len: 5
2023/03/10 23:08:23 [CLIENT] executor 4 has 20 replies
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 783 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 38 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 475 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 189 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 26 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 23 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 23 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 23 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 23 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 23 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:23 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:23 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 1933 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 1032 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 424 signal and 0 cover from userspace component
2023/03/10 23:08:23 [CLIENT] executor 3 has 14 replies
2023/03/10 23:08:23 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 1027 signal and 0 cover from executor 3
2023/03/10 23:08:23 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/10 23:08:23 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:23 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 2340 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 1172 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:23 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:23 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:23 mutate testcase with failures
2023/03/10 23:08:23 ----- insertCall()
2023/03/10 23:08:23 ----- generateCall 171 dup2 dup2
2023/03/10 23:08:23 mutate testcase with failures
2023/03/10 23:08:23 ----- insertCall()
2023/03/10 23:08:23 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/10 23:08:23 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:23 prog length: 3
2023/03/10 23:08:23 prog length: 3
2023/03/10 23:08:23 HasCrashFail:false HasNetFail:false
23:08:23 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r1 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x200000, 0x80)
dup2(r0, r1)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
chdir(&(0x7f00000000c0)='./file0\x00')
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000100)=@v1={0x1000000, [{0x7ff, 0x6}]}, 0xc, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1720, prog_size 568
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 384
remove dir: /root/orangefs-client/dfs-0-8007
remove dir time 123
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8008
receive_execute: 43, 197
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-8008 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8008
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 44, 203
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 44, 197
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 153, 153
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22436, write pid:22437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22436, write pid:22437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22436, write pid:22437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 2, 0
execute_one time: 1, 2
time breakdown 3: 309, 4, 0
before receive testcase: 0 1
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 3 receive reply, reply.done 1
receive_execute: 51, 219
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22465, write pid:22466
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3013
----- completed 1
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 4 write_call_output, size 5043, pid 22465, write pid:22466
----- executor 4 executes write_coverage_signal cov->size 5043, flag collect 0
----- executor 4 signal number : 17
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 9652, pid 22465, write pid:22466
----- executor 4 executes write_coverage_signal cov->size 9652, flag collect 0
----- executor 4 signal number : 22
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 25
executor 4, execute_one inner time: 52, 76, 0
execute_one time: 2, 128
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4462, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2187, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 3333, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1343, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2502
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1212
----- executor 2 executes write_coverage_signal cov->size 7758, flag collect 0
----- executor 2 signal number : 317
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 0 receive reply, reply.done 1
time breakdown 4: 270, 131, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 6928, flag collect 0
----- executor 2 signal number : 80
executor 2 server cover_cnt 4 output_pos_value 4124
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 250, 154, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2709
----- executor 1 executes write_coverage_signal cov->size 17935, flag collect 0
----- executor 1 signal number : 1040
----- executor 1 executes write_coverage_signal cov->size 6057, flag collect 0
----- executor 1 signal number : 342
----- executor 1 executes write_coverage_signal cov->size 3705, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4180
time breakdown 0: 247, 152, 0
before receive testcase: 0 1
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:24 wg wait finish
2023/03/10 23:08:24 ------ all executors finish execution
2023/03/10 23:08:24 exec time: 380
2023/03/10 23:08:24 ----- PS len: 5
2023/03/10 23:08:24 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:24 fuzzer receive 3013 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 17 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 22 signal and 0 cover from executor 4
2023/03/10 23:08:24 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
time breakdown 1: 240, 183, 0
before receive testcase: 0 0
2023/03/10 23:08:24 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 2709 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 1040 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 342 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:24 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 2502 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 1212 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 317 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:24 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:24 mutate testcase with failures
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/10 23:08:24 mutate testcase with failures
2023/03/10 23:08:24 ----- mutateArg()
2023/03/10 23:08:24 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:24 prog length: 5
2023/03/10 23:08:24 prog length: 5
2023/03/10 23:08:24 HasCrashFail:false HasNetFail:false
23:08:24 ---executing program 0:
---
---
---
setxattr$security_evm(0x0, 0x0, &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
ioctl(0xffffffffffffffff, 0x0, 0x0)
setxattr$trusted_overlay_origin(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x1)
---
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', 0x0, 0x0, 0x3, 0x0)
unlink(&(0x7f00000000c0)='./file1\x00')
readlink(0x0, 0x0, 0x0)
openat(0xffffffffffffffff, 0x0, 0x0, 0x80)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 904
remove dir: /root/orangefs-client/dfs-0-8008
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2240, prog_size 704
remove dir time 197
-----finish removing dir
receive_execute: 26, 294
receive_execute: 21, 294
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 97
executor 3 create dir /root/orangefs-client/dfs-0-8009 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8009
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 171, 295
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22439, write pid:22440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22439, write pid:22440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 1, 294
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8009
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 20343, pid 22439, write pid:22440
----- executor 3 executes write_coverage_signal cov->size 20343, flag collect 0
----- executor 3 signal number : 3074
----- completed 3
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22439, write pid:22440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22439, write pid:22440
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 15, 4, 0
execute_one time: 0, 19
time breakdown 3: 466, 20, 0
before receive testcase: 0 1
receive_execute: 28, 326
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22469, write pid:22470
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 19593, pid 22469, write pid:22470
----- executor 4 executes write_coverage_signal cov->size 19593, flag collect 0
----- executor 4 signal number : 2814
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22469, write pid:22470
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 41
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22469, write pid:22470
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22469, write pid:22470
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 62, 18, 0
execute_one time: 7, 80
time breakdown 4: 354, 88, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3097
----- executor 0 executes write_coverage_signal cov->size 30756, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 315, 121, 0
before receive testcase: 0 1
----- executor 0 signal number : 1674
----- executor 0 executes write_coverage_signal cov->size 5217, flag collect 0
----- executor 0 signal number : 321
----- executor 0 executes write_coverage_signal cov->size 3628, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 5185
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 2731
----- executor 1 executes write_coverage_signal cov->size 29155, flag collect 0
----- executor 1 signal number : 1138
----- executor 1 executes write_coverage_signal cov->size 6369, flag collect 0
----- executor 1 signal number : 351
----- executor 1 executes write_coverage_signal cov->size 5189, flag collect 0
before receive testcase: 0 1
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4309
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:24 wg wait finish
2023/03/10 23:08:24 ------ all executors finish execution
2023/03/10 23:08:24 exec time: 421
2023/03/10 23:08:24 ----- PS len: 5
2023/03/10 23:08:24 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 2814 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:24 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 3097 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 1674 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 321 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
time breakdown 1: 295, 127, 0
before receive testcase: 0 0
2023/03/10 23:08:24 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 2731 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 1138 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 351 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:24 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:24 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:24 mutate testcase with failures
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 2781 readlinkat readlinkat
2023/03/10 23:08:24 mutate testcase with failures
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 3765 symlinkat symlinkat
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:24 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:24 prog length: 3
2023/03/10 23:08:24 prog length: 3
2023/03/10 23:08:24 HasCrashFail:false HasNetFail:false
23:08:24 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
readlinkat(r0, &(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=""/192, 0xc0)
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x3648cfcba82b6df3)
---
setxattr$incfs_size(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=0x7, 0x8, 0x3)
symlinkat(&(0x7f00000000c0)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000100)='./file0\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file0\x00', 0x8, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/orangefs-client/dfs-0-8009
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 320, 123, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1736, prog_size 744
remove dir time 62
-----finish removing dir
mkdir time 106
executor 3 create dir /root/orangefs-client/dfs-0-8010 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8010
receive_execute: 8, 168
receive_execute: 6, 168
current dir: executor 4: /root/orangefs-client/dfs-0-8010
receive_execute: 108, 170
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22442, write pid:22443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22442, write pid:22443
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 2, 169
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 20316, pid 22442, write pid:22443
----- executor 3 executes write_coverage_signal cov->size 20316, flag collect 0
----- executor 3 signal number : 3079
----- completed 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 10, 187
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7308, pid 22472, write pid:22473
----- executor 4 executes write_coverage_signal cov->size 7308, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 18, 8, 0
execute_one time: 0, 26
time breakdown 3: 278, 27, 0
before receive testcase: 0 1
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22472, write pid:22474
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 321
----- completed 2
----- executor 4 write_call_output, size 32765, pid 22472, write pid:22473
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 874
----- completed 3
execute_one loop: 0, 0, 31
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 33
executor 4, execute_one inner time: 87, 58, 0
execute_one time: 0, 145
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 864, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2793
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15429, flag collect 0
----- executor 0 signal number : 1330
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 2 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 6804, flag collect 0
----- executor 1 signal number : 1755
----- executor 1 executes write_coverage_signal cov->size 8582, flag collect 0
----- executor 1 signal number : 1097
----- executor 1 executes write_coverage_signal cov->size 4905, flag collect 0
----- executor 0 signal number : 361
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1696, flag collect 0
----- executor 1 signal number : 79
----- executor 0 executes write_coverage_signal cov->size 5966, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 3230
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4578
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 1 receive reply, reply.done 1
time breakdown 4: 197, 145, 0
before receive testcase: 0 0
time breakdown 1: 174, 165, 0
before receive testcase: 0 0
time breakdown 2: 190, 153, 0
before receive testcase: 0 0
2023/03/10 23:08:24 for select break: 1
2023/03/10 23:08:24 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:24 wg wait finish
2023/03/10 23:08:24 ------ all executors finish execution
2023/03/10 23:08:24 exec time: 348
2023/03/10 23:08:24 ----- PS len: 5
2023/03/10 23:08:24 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:24 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 321 signal and 0 cover from executor 4
2023/03/10 23:08:24 fuzzer receive 874 signal and 0 cover from executor 4
2023/03/10 23:08:24 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 2793 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 1330 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 361 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:24 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 1755 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 1097 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:24 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:24 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:24 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:24 fuzzer receive 3079 signal and 0 cover from executor 3
2023/03/10 23:08:24 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:24 mutate testcase with failures
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/10 23:08:24 ----- mutateArg()
2023/03/10 23:08:24 mutate testcase with failures
2023/03/10 23:08:24 ----- mutateArg()
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/10 23:08:24 ----- insertCall()
2023/03/10 23:08:24 ----- generateCall 2350 lseek lseek
2023/03/10 23:08:24 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:24 prog length: 4
2023/03/10 23:08:24 prog length: 2
2023/03/10 23:08:24 HasCrashFail:false HasNetFail:false
23:08:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
r1 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
write$binfmt_script(r1, &(0x7f0000000000)={'#! ', './file1', [{}, {}, {0x20, '/'}, {0x20, '$\''}, {0x20, '!\\,.'}, {0x20, '*'}, {0x20, '-./'}], 0xa, "7ce2fec8272583b933fb69a8f9f1d257b39dd77ae1d682751fd21024b78464a9e45e2f52bed01e513150b482935024c199f628ee8c020c0a2b14d1d9e09121bef129d556066403be476015a7239adaf5b2a6ea5b0aa68bc253c2137ad29e27f2acf40c85efad93e5b284784452d035150dd61f8565e3b640c6738bf480cb4f68c9341011c1d638011a1ddf2c9fe9f51b55c26d9452a3d57429aaba825200e98a300955ed0c1a8da4a00f39297270f8159a71233998e3fda6cfc81538a430d13b22c51a6667832db95e67ba1aaedb2dd6121729af1402"}, 0xf3)
lsetxattr$user(&(0x7f0000000140)='./file1/file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='#!\xc8IO/\x94c\xe2\xd8i\xd1s\xe5\x84\xae\xe0N\x86K\x8e\xc2y2\xc3\xe0\xee\xa0+\x15/\xc7\\\x84\x89\x95I\x1b\\y8\x85 \xece\xdcU\xcf\xcfH\t\x8d\x94@\xd1G\xad?\n\xd1jsf\xdb\xe6#\xa53;\xdbey\xdd\x00\xbe\xa7\x1f.\n\x14\b<\xe9*&R\xb6\xa3Y\x81\xb5!\x9e{8\v)\x8e<\xb6\xb04\a\xe3\x98\xa3q\x84\x92G0\xdd\'\xe3\xe1\x8dShE\"\x1d\"\xb2\x9dn\xc2\xd3dO\x19~i\xc0\n\x97\xa9Y:5\xb6\xae=\x83\xef[@\\\xd1\xf9\x8aF\x80\xb1 \a9\xcc\xa0\x80\xba\xa0K\x9d\x02\xa4Ik:<\x804%\xca\r8{\xdd2\x04\x13 +>7\xc8\"\xe6D\xd7\x93\x8f?\x92\x96\x9c\xeb(\x03)\xd6p9\x10TL\x92\"\x02n\xb0o\xf1\xc3\xa7\xf1\xc5\xb0\xd3E\x1an\x81\xfe\x13\xf2\x8bv\xc9=v\xee\xe9\x02ThT\x7f\x02\xf5\x9e\x13\x14c\xe2\x95\xa4', 0xf6, 0x3)
---
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000000)={{0x7f, 0x45, 0x4c, 0x46, 0x43, 0x3, 0x5, 0x1, 0x6, 0x2, 0x3e, 0x3f, 0x2c2, 0x40, 0xd, 0x81, 0x1ff, 0x38, 0x2, 0x94f, 0xff, 0x7}, [{0x6, 0x3, 0x3, 0x100000000, 0x2, 0x3ff, 0x9959}], "ce4f1d6391e7e10595b2afc025d4881b35304b9076d773325ebe418b1d8342b4249c0b08153bb6f8c15ae2969a94997dfa394005fa6e5442370319046890af63f056461fc5ca917699810adaeb7bc555885924cb294588df347f82ea993ed5d9f6ecc4a99ca4d7a9f67d3c50b7feb85ef5dfc50e9f75781de3a4e9ca380ce32e9a757bad73a876b92b", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x801)
lseek(0xffffffffffffffff, 0x4, 0x3)
---

end of program
----- executor 4 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 4: prog_data_offset 3088, prog_size 3592
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1752
remove dir: /root/orangefs-client/dfs-0-8010
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 175, 178, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 149
-----finish removing dir
receive_execute: 7, 163
current dir: executor 4: /root/orangefs-client/dfs-0-8011
receive_execute: 15, 167
receive_execute: 13, 168
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-8011 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8011
receive_execute: 153, 168
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 20607, pid 22445, write pid:22446
----- executor 3 executes write_coverage_signal cov->size 20607, flag collect 0
----- executor 3 signal number : 3090
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22445, write pid:22446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22445, write pid:22446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22445, write pid:22446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 17, 192
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 4, 0
execute_one time: 0, 24
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22475, write pid:22476
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22475, write pid:22476
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
time breakdown 4: 209, 1, 0
before receive testcase: 0 1
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4469, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2031, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 641, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
time breakdown 0: 171, 27, 0
before receive testcase: 0 0
time breakdown 3: 321, 25, 0
before receive testcase: 0 1
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 3 receive reply, reply.done 1
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2738
----- executor 1 executes write_coverage_signal cov->size 17847, flag collect 0
----- executor 1 signal number : 1029
----- executor 1 executes write_coverage_signal cov->size 3369, flag collect 0
----- executor 1 signal number : 340
----- executor 1 executes write_coverage_signal cov->size 2997, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4196
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:25 wg wait finish
2023/03/10 23:08:25 ------ all executors finish execution
2023/03/10 23:08:25 exec time: 209
2023/03/10 23:08:25 ----- PS len: 5
2023/03/10 23:08:25 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:25 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 2738 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 1029 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 340 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
time breakdown 1: 181, 40, 0
before receive testcase: 0 1
2023/03/10 23:08:25 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 1819 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 1136 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:25 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:25 fuzzer receive 3090 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:25 mutate testcase with failures
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 2724 preadv preadv
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 4200 writev writev
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/10 23:08:25 mutate testcase with failures
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 120 chdir chdir
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:25 prog length: 5
2023/03/10 23:08:25 prog length: 2
2023/03/10 23:08:25 HasCrashFail:false HasNetFail:false
23:08:25 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
preadv(r0, &(0x7f0000000100)=[{&(0x7f0000000040)=""/184, 0xb8}, {&(0x7f00000004c0)=""/4096, 0x1000}], 0x2, 0x735, 0x6)
lremovexattr(&(0x7f0000000300)='\x00', &(0x7f0000000340)=@random={'btrfs.', '/\x00'})
writev(r0, &(0x7f00000002c0)=[{&(0x7f0000000140)="9194c2c932775328b374f01c5ee9fdc59c605ac8d964", 0x16}, {&(0x7f0000000180)="e83f6252307ac52025fcd9", 0xb}, {&(0x7f00000001c0)="b358a85729cc7907fab547c744c84a3fde5d9d3c98ee71d52d2a3569223d69dc6ba8649783953c07d7401f55b3fe38e5769dd691070309eedd073b1fc6cf12b52b9af133b3817788ad5338bb8c91074bfaf40e51f534d3436530dd6656aa6226bee661d080894cc13e95805a0a5f1769d729ce13f23f52e080ac899681af2d48403f5ccc24f8155f043b61810b1952a7cd7a0c30e908871c478ddef551798464b5ef89c0be9f48877efd2af917ab884769d39be361c98da596e6fbeaa1e807b7bb8bc0b821e9bf8864ba", 0xca}], 0x3)
---
lsetxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0x0, 0x2)
chdir(&(0x7f0000000000)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2840, prog_size 240
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8024, flag collect 0
----- executor 2 signal number : 1819
----- executor 2 executes write_coverage_signal cov->size 15049, flag collect 0
----- executor 2 signal number : 1136
----- executor 2 executes write_coverage_signal cov->size 996, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 845, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 3329
time breakdown 2: 183, 37, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1504
remove dir: /root/orangefs-client/dfs-0-8011
remove dir time 93
-----finish removing dir
receive_execute: 18, 166
current dir: executor 4: /root/orangefs-client/dfs-0-8012
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 168
mkdir time 66
executor 3 create dir /root/orangefs-client/dfs-0-8012 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8012
receive_execute: 27, 160
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 168
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 18, 192
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22477, write pid:22478
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7578, pid 22477, write pid:22478
----- executor 4 executes write_coverage_signal cov->size 7578, flag collect 0
----- executor 4 signal number : 2073
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
time breakdown 4: 211, 8, 0
before receive testcase: 0 1
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 20829, pid 22448, write pid:22449
----- executor 3 executes write_coverage_signal cov->size 20829, flag collect 0
----- executor 3 signal number : 3090
----- completed 1
execute_one loop: 0, 0, 41
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22448, write pid:22450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22448, write pid:22450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22448, write pid:22450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 12806, pid 22448, write pid:22449
----- executor 3 executes write_coverage_signal cov->size 12806, flag collect 0
----- executor 3 signal number : 477
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 105, 30, 0
execute_one time: 0, 135
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 14989, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 2282
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4472, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2114, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2493, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1018, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 1 executes write_coverage_signal cov->size 15275, flag collect 0
----- executor 1 signal number : 1176
----- executor 1 executes write_coverage_signal cov->size 3672, flag collect 0
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 184, 139, 0
before receive testcase: 0 1
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1701, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3834
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 180, 132, 0
before receive testcase: 0 0
time breakdown 3: 187, 137, 0
before receive testcase: 0 1
----- executor 2 signal number : 2729
----- executor 2 executes write_coverage_signal cov->size 19809, flag collect 0
----- executor 2 signal number : 1039
----- executor 2 executes write_coverage_signal cov->size 4577, flag collect 0
----- executor 2 signal number : 343
----- executor 2 executes write_coverage_signal cov->size 3366, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4200
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:25 wg wait finish
2023/03/10 23:08:25 ------ all executors finish execution
2023/03/10 23:08:25 exec time: 319
2023/03/10 23:08:25 ----- PS len: 5
2023/03/10 23:08:25 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 2282 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 1176 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:25 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:25 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 2729 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 1039 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 343 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:25 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:25 fuzzer receive 3090 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/10 23:08:25 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:25 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:25 mutate testcase with failures
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 2781 readlinkat readlinkat
2023/03/10 23:08:25 mutate testcase with failures
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 2462 openat openat
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 196 fchown fchown
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 194 fchmod fchmod
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:25 prog length: 1
2023/03/10 23:08:25 prog length: 17
2023/03/10 23:08:25 HasCrashFail:false HasNetFail:false
23:08:25 ---executing program 0:
---
---
---
readlinkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/4096, 0x1000)
---
fcntl$lock(0xffffffffffffffff, 0x26, &(0x7f0000000080)={0x0, 0x3, 0x2, 0x400, 0xffffffffffffffff})
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000100)={0x0, <r0=>0x0})
fcntl$lock(0xffffffffffffffff, 0x5, &(0x7f0000000240)={0x2, 0x3, 0x4c61, 0xffffffff80000000, r0})
r1 = open(&(0x7f00000000c0)='./file0/file0\x00', 0x400, 0x18)
r2 = openat(r1, &(0x7f0000000200)='./file0/file0\x00', 0x200100, 0x22)
r3 = open(&(0x7f0000000180)='./file1\x00', 0x440000, 0xd)
fsetxattr$security_selinux(r3, &(0x7f0000000340), &(0x7f0000000380)='system_u:object_r:kmsg_device_t:s0\x00', 0x23, 0x3)
r4 = fcntl$dupfd(r2, 0x406, r3)
fchown(r4, 0xffffffffffffffff, 0xffffffffffffffff)
openat(r4, &(0x7f0000000040)='./file0\x00', 0x11c1, 0x164)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000000)='./file1\x00')
lchown(&(0x7f0000000140)='./file0\x00', 0x0, 0xee00)
r5 = open(&(0x7f00000001c0)='./file0\x00', 0x60200, 0xdb)
setxattr$trusted_overlay_redirect(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0), &(0x7f0000000300)='./file0\x00', 0x8, 0x0)
fchmod(r5, 0x2)
lsetxattr$trusted_overlay_redirect(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000440), &(0x7f0000000480)='./file0/file0\x00', 0xe, 0x1)
fcntl$setstatus(r5, 0x4, 0x42400)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 168
remove dir: /root/orangefs-client/dfs-0-8012
time breakdown 2: 175, 150, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1504, prog_size 3192
remove dir time 229
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-8013 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8013
receive_execute: 5, 246
current dir: executor 4: /root/orangefs-client/dfs-0-8013
receive_execute: 18, 258
receive_execute: 19, 256
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 14, 246
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 0, pid 22452, write pid:22453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 22
executor 3, execute_one inner time: 13, 22, 0
execute_one time: 1, 35
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 276, 38, 0
before receive testcase: 0 0
receive_execute: 128, 290
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7657, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 7657, flag collect 0
----- executor 4 signal number : 2071
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 7657, pid 22479, write pid:22481
----- executor 4 executes write_coverage_signal cov->size 7657, flag collect 0
----- executor 4 signal number : 15
----- completed 11
----- executor 4 write_call_output, size 7650, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 7650, flag collect 0
----- executor 4 signal number : 16
----- completed 12
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 5262, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 5262, flag collect 0
----- executor 4 signal number : 247
----- completed 14
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22479, write pid:22480
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 81, 14, 0
execute_one time: 1, 95
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19705, flag collect 0
----- executor 0 signal number : 2037
----- executor 0 executes write_coverage_signal cov->size 10349, flag collect 0
----- executor 0 signal number : 1133
----- executor 0 executes write_coverage_signal cov->size 4248, flag collect 0
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 1850, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 3549
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 418, 99, 0
before receive testcase: 0 1
----- executor 2 signal number : 1951
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 8517, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 372
----- executor 2 executes write_coverage_signal cov->size 7349, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3426
time breakdown 0: 275, 139, 0
before receive testcase: 0 1
time breakdown 2: 251, 160, 0
before receive testcase: 0 1
time breakdown 1: 275, 144, 0
before receive testcase: 0 0
2023/03/10 23:08:25 for select break: 1
2023/03/10 23:08:25 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:25 wg wait finish
2023/03/10 23:08:25 ------ all executors finish execution
2023/03/10 23:08:25 exec time: 422
2023/03/10 23:08:25 ----- PS len: 5
2023/03/10 23:08:25 [CLIENT] executor 4 has 17 replies
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 247 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:25 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:25 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 2037 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 1133 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:25 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 1951 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 372 signal and 0 cover from userspace component
2023/03/10 23:08:25 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:25 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:25 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:25 mutate testcase with failures
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 mutate testcase with failures
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 2458 open open
2023/03/10 23:08:25 ----- mutateArg()
2023/03/10 23:08:25 ----- insertCall()
2023/03/10 23:08:25 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/10 23:08:25 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:25 prog length: 5
2023/03/10 23:08:25 prog length: 4
2023/03/10 23:08:25 HasCrashFail:false HasNetFail:false
23:08:25 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x8000, 0x108)
r1 = dup(0xffffffffffffffff)
r2 = open(&(0x7f0000000040)='./file0\x00', 0x2800, 0x2c)
fcntl$addseals(r2, 0x409, 0x4)
fcntl$dupfd(r0, 0x0, r1)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
open(&(0x7f00000000c0)='./file0\x00', 0x0, 0x100)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180)={'U+', 0x2}, 0x16, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 592
remove dir: /root/orangefs-client/dfs-0-8013
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1928, prog_size 728
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 86
-----finish removing dir
receive_execute: 18, 129
mkdir time 38
executor 3 create dir /root/orangefs-client/dfs-0-8014 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8014
receive_execute: 132, 125
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
current dir: executor 4: /root/orangefs-client/dfs-0-8014
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 19, 129
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7068, pid 22454, write pid:22455
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22454, write pid:22455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7068, pid 22454, write pid:22455
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22454, write pid:22455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22454, write pid:22455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 26, 130
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 10, 18, 0
execute_one time: 1, 28
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 3 receive reply, reply.done 1
receive_execute: 28, 161
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
time breakdown 3: 257, 29, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 13556, pid 22484, write pid:22486
----- executor 4 executes write_coverage_signal cov->size 13556, flag collect 0
----- executor 4 signal number : 2620
----- completed 1
----- executor 4 write_call_output, size 8166, pid 22484, write pid:22485
----- executor 4 executes write_coverage_signal cov->size 8166, flag collect 0
----- executor 4 signal number : 166
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22484, write pid:22485
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22484, write pid:22485
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 80, 16, 0
execute_one time: 1, 96
executor 1 write_server_output
executor 2 write_server_output
time breakdown 4: 189, 129, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 3360, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 864, flag collect 0
----- executor 2 signal number : 44
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4483, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2175, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 2913, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1289, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1927
time breakdown 0: 168, 150, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1203
----- executor 1 executes write_coverage_signal cov->size 9879, flag collect 0
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 333
----- executor 1 executes write_coverage_signal cov->size 8678, flag collect 0
----- executor 1 signal number : 84
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:26 wg wait finish
2023/03/10 23:08:26 ------ all executors finish execution
2023/03/10 23:08:26 exec time: 296
2023/03/10 23:08:26 ----- PS len: 5
2023/03/10 23:08:26 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:26 fuzzer receive 2620 signal and 0 cover from executor 4
2023/03/10 23:08:26 fuzzer receive 166 signal and 0 cover from executor 4
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:26 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:26 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:26 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 1927 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 1203 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 333 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/10 23:08:26 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:26 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
executor 1 server cover_cnt 4 output_pos_value 3560
2023/03/10 23:08:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:26 mutate testcase with failures
2023/03/10 23:08:26 ----- insertCall()
2023/03/10 23:08:26 ----- generateCall 2814 rmdir rmdir
2023/03/10 23:08:26 mutate testcase with failures
2023/03/10 23:08:26 ----- mutateArg()
2023/03/10 23:08:26 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:26 prog length: 7
2023/03/10 23:08:26 prog length: 4
2023/03/10 23:08:26 HasCrashFail:false HasNetFail:false
23:08:26 ---executing program 0:
---
---
---
setxattr$trusted_overlay_nlink(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_selinux(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_ima(0x0, 0x0, 0x0, 0x0, 0x0)
listxattr(0x0, 0x0, 0x0)
readlinkat(0xffffffffffffffff, 0x0, 0x0, 0x0)
rmdir(&(0x7f0000000000)='./file0\x00')
lremovexattr(0x0, 0x0)
---
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000640)=""/8, 0x8)
lsetxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x0)
stat(0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
remove dir: /root/orangefs-client/dfs-0-8014
----- executor 4 receive testcase
executor 4: prog_data_offset 2152, prog_size 520
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 147, 162, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 154, 160, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 187
-----finish removing dir
mkdir time 157
executor 3 create dir /root/orangefs-client/dfs-0-8015 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8015
receive_execute: 8, 345
receive_execute: 4, 346
receive_execute: 141, 346
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-8015
receive_execute: 7, 345
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 13, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 7545, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 7545, flag collect 0
----- executor 3 signal number : 2076
----- completed 6
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22457, write pid:22458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 30, 1, 0
execute_one time: 0, 31
time breakdown 3: 487, 51, 0
before receive testcase: 0 1
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 3 receive reply, reply.done 1
receive_execute: 10, 463
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22487, write pid:22488
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2849
----- completed 1
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22487, write pid:22488
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 300
----- completed 2
execute_one loop: 0, 0, 75
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22487, write pid:22488
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22487, write pid:22488
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 120, 2, 0
execute_one time: 0, 123
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 276, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 4620, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4458, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1242, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 1428
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 executes write_coverage_signal cov->size 2246, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 5223, flag collect 0
----- executor 2 signal number : 2090
----- executor 2 executes write_coverage_signal cov->size 30276, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1612, flag collect 0
----- executor 0 signal number : 75
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 2 signal number : 1173
----- executor 2 executes write_coverage_signal cov->size 7409, flag collect 0
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 5311, flag collect 0
----- executor 2 signal number : 82
executor 2 server cover_cnt 4 output_pos_value 3670
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 361, 236, 0
before receive testcase: 0 0
time breakdown 4: 473, 124, 0
before receive testcase: 0 0
time breakdown 1: 363, 230, 0
before receive testcase: 0 0
2023/03/10 23:08:26 for select break: 1
2023/03/10 23:08:26 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:26 wg wait finish
2023/03/10 23:08:26 ------ all executors finish execution
2023/03/10 23:08:26 exec time: 603
2023/03/10 23:08:26 ----- PS len: 5
2023/03/10 23:08:26 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:26 fuzzer receive 2849 signal and 0 cover from executor 4
2023/03/10 23:08:26 fuzzer receive 300 signal and 0 cover from executor 4
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:26 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:26 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:26 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 2090 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 1173 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/10 23:08:26 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
2023/03/10 23:08:26 [CLIENT] executor 3 has 7 replies
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 2076 signal and 0 cover from executor 3
2023/03/10 23:08:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:26 mutate testcase with failures
2023/03/10 23:08:26 ----- insertCall()
2023/03/10 23:08:26 ----- generateCall 120 chdir chdir
2023/03/10 23:08:26 ----- insertCall()
2023/03/10 23:08:26 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/10 23:08:26 mutate testcase with failures
2023/03/10 23:08:26 ----- insertCall()
2023/03/10 23:08:26 ----- generateCall 2458 open open
2023/03/10 23:08:26 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:26 prog length: 5
2023/03/10 23:08:26 prog length: 3
2023/03/10 23:08:26 HasCrashFail:false HasNetFail:false
23:08:26 ---executing program 0:
---
---
---
chdir(&(0x7f0000000040)='./file0\x00')
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x8000, 0x108)
r1 = dup(0xffffffffffffffff)
fcntl$dupfd(r0, 0x0, r1)
write$binfmt_misc(r1, &(0x7f0000000080)={'syz0', "4a392484d44a3793d46802cdf429308274f2fbfd192aeeb6ac977175c9dde172250c32a3d1f04da2548a3b6c562f1dc36b1e69df719e9fb26173f04cafa89980dac0"}, 0x46)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
open(&(0x7f00000000c0)='./file0\x00', 0x408000, 0x8)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 353, 257, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2024, prog_size 408
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/orangefs-client/dfs-0-8015
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 126
-----finish removing dir
mkdir time 111
executor 3 create dir /root/orangefs-client/dfs-0-8016 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8016
receive_execute: 2, 251
receive_execute: 14, 252
receive_execute: 222, 237
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8016
receive_execute: 34, 233
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 7322, pid 22460, write pid:22461
----- executor 3 executes write_coverage_signal cov->size 7322, flag collect 0
----- executor 3 signal number : 2078
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7562, pid 22460, write pid:22461
----- executor 3 executes write_coverage_signal cov->size 7562, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22460, write pid:22461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22460, write pid:22461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22460, write pid:22461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 23, 294
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 43, 13, 0
execute_one time: 0, 56
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 459, 88, 0
before receive testcase: 0 0
----- executor 4 write_call_output, size 32765, pid 22490, write pid:22491
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3015
----- completed 1
execute_one loop: 0, 0, 41
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22490, write pid:22491
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 13958, pid 22490, write pid:22491
----- executor 4 executes write_coverage_signal cov->size 13958, flag collect 0
----- executor 4 signal number : 293
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 10
executor 4, execute_one inner time: 47, 15, 0
execute_one time: 1, 62
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 317, 64, 0
before receive testcase: 0 1
----- executor 1 signal number : 2008
----- executor 1 executes write_coverage_signal cov->size 24232, flag collect 0
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 4 receive reply, reply.done 1
----- executor 1 signal number : 1032
----- executor 1 executes write_coverage_signal cov->size 6016, flag collect 0
----- executor 1 signal number : 358
----- executor 1 executes write_coverage_signal cov->size 4816, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3487
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 281, 102, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4476, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2139, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 2493, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 266, 124, 0
before receive testcase: 0 0
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:27 wg wait finish
2023/03/10 23:08:27 ------ all executors finish execution
2023/03/10 23:08:27 exec time: 376
2023/03/10 23:08:27 ----- PS len: 5
2023/03/10 23:08:27 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:27 fuzzer receive 3015 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 293 signal and 0 cover from executor 4
2023/03/10 23:08:27 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:27 fuzzer receive 2078 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:27 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 2008 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 1032 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 2330 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 358 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 1178 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:27 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:27 mutate testcase with failures
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/10 23:08:27 mutate testcase with failures
2023/03/10 23:08:27 ----- mutateArg()
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/10 23:08:27 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:27 prog length: 3
2023/03/10 23:08:27 prog length: 1
2023/03/10 23:08:27 HasCrashFail:false HasNetFail:false
23:08:27 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x62c10c9eb44b8a69)
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000000), &(0x7f0000000040)={'U-', 0x1}, 0x16, 0x2)
write$binfmt_script(r0, &(0x7f0000000080)={'#! ', './file1', [{}, {0x20, '},\'+:^'}, {0x20, 'trusted.overlay.nlink\x00'}, {0x20, 'U-'}, {0x20, '\']]'}, {0x20, 'trusted.overlay.nlink\x00'}, {0x20, 'trusted.overlay.nlink\x00'}, {0x20, ')'}, {0x20, '$:+'}], 0xa, "1365d01dbaa73b666e4ac4c96b16f767da5c71445a9df5318a8d9f04a388f30e3f9cbf1500dba0f5cad088ec264d87d4acfe7f93e2051b2b5d47143c35f3e1c62ad5f8ea613e74bf8e9e9db4250e631aad420e0f30413f8f77ee8e890ab8d12ff2ea5abb8c4d12514341844529e6061409000b0d01dcec497eb6bed5f84208d0996ff89d1d4b19f8ff79afd9a256457aac80ac628f076cf297c26bb1b53cb34fb54565738c310deae0"}, 0x10e)
---
lsetxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2330
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1178
----- executor 2 executes write_coverage_signal cov->size 7565, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 5776, flag collect 0
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 3915
time breakdown 2: 268, 110, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1624
remove dir: /root/orangefs-client/dfs-0-8016
----- executor 4 receive testcase
executor 4: prog_data_offset 2960, prog_size 288
remove dir time 187
-----finish removing dir
mkdir time 83
executor 3 create dir /root/orangefs-client/dfs-0-8017 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8017
receive_execute: 4, 279
current dir: executor 4: /root/orangefs-client/dfs-0-8017
receive_execute: 12, 280
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 295
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 40, 313
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 27, 317
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20356, pid 22464, write pid:22465
----- executor 3 executes write_coverage_signal cov->size 20356, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22464, write pid:22465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22464, write pid:22465
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8574, pid 22493, write pid:22494
----- executor 4 executes write_coverage_signal cov->size 8574, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 4, execute_one inner time: 3, 2, 0
execute_one time: 0, 5
time breakdown 4: 344, 6, 0
before receive testcase: 0 1
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 13, 0
execute_one time: 0, 31
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 2600
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 1330
----- executor 0 executes write_coverage_signal cov->size 4926, flag collect 0
----- executor 0 signal number : 311
----- executor 0 executes write_coverage_signal cov->size 4991, flag collect 0
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4335
time breakdown 0: 299, 53, 0
before receive testcase: 0 1
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 353, 32, 0
before receive testcase: 0 0
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 302, 57, 0
before receive testcase: 0 0
2023/03/10 23:08:27 wg wait finish
2023/03/10 23:08:27 ------ all executors finish execution
2023/03/10 23:08:27 exec time: 359
2023/03/10 23:08:27 ----- PS len: 5
2023/03/10 23:08:27 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:27 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:27 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 2600 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 1330 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 311 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:27 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:27 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:27 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:27 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:27 mutate testcase with failures
2023/03/10 23:08:27 ----- mutateArg()
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 2750 pwritev pwritev
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/10 23:08:27 mutate testcase with failures
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 2814 rmdir rmdir
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/10 23:08:27 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:27 prog length: 7
2023/03/10 23:08:27 prog length: 7
2023/03/10 23:08:27 HasCrashFail:false HasNetFail:false
23:08:27 ---executing program 0:
---
---
---
setxattr$security_evm(0x0, 0x0, &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0x0, 0x0)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x2)
ioctl(0xffffffffffffffff, 0x0, 0x0)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000240), &(0x7f0000000280)='./file1\x00', 0x8, 0x6)
pwritev(0xffffffffffffffff, &(0x7f0000000200)=[{&(0x7f0000000000)="525ea9ebdcd6cff1cc1da3ed1aaad300901825cb0a5dae33c0504f64a3d5bf9e4f75d5c448fb1db5b1d963fde0830e84771749b7f15ad8a02de4a5b8cea8a81a170321d1497bbd8b65b761734ed91005225022775d64e195092dc8f71a4c71459f9ed93f2cede667af6013b3871dcf1b1282656ea6de97e14641a8abd9c4dc4383133fa121bb898790575ffa831f935b42389d33adec8ed94f15837a56b838ee6689be68cae02a6afc4cb6da3c69127f10ec49009a33b5b2272b57cbee91fce70ff123395eaad686523f8ff224c72d941731430eb3565019476749ea84bdd6e569faa9cb2ba369b90c5e36f7", 0xec}, {&(0x7f0000000100)="a2b7da376252507d9122f726c938b587aa6ef9a13b402040f9a96a6e4ae0b3ed5ed69daeeb33e97ff4442f96ed8b070d2efb340f7d42a853b5bc4e6f6d48a6129fab4169e9afdcfbf7051487c92e202b75dccb58ff110e5fd4333d55f9d7ffa61010f1c480541d24d1f135d41b1a8a407e50e71a8d8d55ccbcf17a722295107efbd33fa27dc71ffc25036e76148f28139aeb9b6e8cbc2db344dfc5d58bb1f5f03a8a975074940381b35d8942c138f8df21fae0edc24211073b1c5e25b4bb9647afdcf513c8219c0f1d55570843284fba56c1953273e7a147bfb3323858a7dbda7b9dcec61c7c677b6ff54adcac3e3e", 0xef}], 0x2, 0x2, 0x84f)
fcntl$getown(r0, 0x9)
---
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
rmdir(&(0x7f0000000000)='./file1/file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', 0x0, 0x0, 0x3, 0x0)
unlink(&(0x7f00000000c0)='./file1\x00')
setxattr$incfs_metadata(&(0x7f0000000040)='./file1/file0\x00', &(0x7f0000000080), &(0x7f0000000140)="53ccf8649db8ddcc8b0e34100886c5601e3fcc0c94abb1969b4fecf86ebadda057230ff1ee9423efc5ee8bd09675b224eb3c898d0d41de15f854aecd71a903eb78e4d4aefe676c57979dad8bb2355260e695cde029857ea4345910073eac6999f0528ee66bbefc909b49fd01721d574b2723a61068e55540002cdce74db6343fb60703bf7e680a9061f86acdd82704d8517f828e005cde121d841e5d8edd6fe8d705ee0bc7554460ccd2990265abfab8d2f3d321121d6e20912ae016f7663c763f3249ef6ab54c0d2b3cda8dbc03153fad7f154b4a054c7f19", 0xd9, 0x2)
readlink(0x0, 0x0, 0x0)
openat(0xffffffffffffffff, 0x0, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1260, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 298, 64, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 3176, prog_size 1304
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1840
remove dir: /root/orangefs-client/dfs-0-8017
remove dir time 148
-----finish removing dir
receive_execute: 13, 246
receive_execute: 2, 246
receive_execute: 14, 244
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
current dir: executor 4: /root/orangefs-client/dfs-0-8018
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 87
executor 3 create dir /root/orangefs-client/dfs-0-8018 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8018
receive_execute: 26, 237
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20590, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 20590, flag collect 0
receive_execute: 41, 263
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 signal number : 3084
----- completed 3
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22467, write pid:22468
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 19523, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 19523, flag collect 0
----- executor 4 signal number : 2801
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 47
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 33, 48, 0
execute_one time: 0, 81
----- executor 4 write_call_output, size 0, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 46
cover_reset in execute_call
----- executor 4 write_call_output, size 17736, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 17736, flag collect 0
----- executor 4 signal number : 399
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22495, write pid:22496
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
time breakdown 3: 263, 81, 0
before receive testcase: 0 1
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 53, 30, 0
execute_one time: 0, 84
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28019, flag collect 0
time breakdown 4: 304, 93, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2802
----- executor 0 executes write_coverage_signal cov->size 27018, flag collect 0
----- executor 1 signal number : 2792
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1678
----- executor 0 executes write_coverage_signal cov->size 4868, flag collect 0
----- executor 0 signal number : 309
----- executor 0 executes write_coverage_signal cov->size 2899, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4882
----- executor 1 signal number : 1152
----- executor 1 executes write_coverage_signal cov->size 6943, flag collect 0
----- executor 1 signal number : 356
----- executor 1 executes write_coverage_signal cov->size 6220, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 4390
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 259, 128, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 156, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2730, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 702, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 0: 258, 128, 0
before receive testcase: 0 1
time breakdown 2: 248, 133, 0
before receive testcase: 0 1
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:27 for select break: 1
2023/03/10 23:08:27 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:27 wg wait finish
2023/03/10 23:08:27 ------ all executors finish execution
2023/03/10 23:08:27 exec time: 399
2023/03/10 23:08:27 ----- PS len: 5
2023/03/10 23:08:27 [CLIENT] executor 4 has 7 replies
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 2801 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 399 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:27 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 2802 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 1678 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 309 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:27 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 2792 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 1152 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 356 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:27 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:27 [CLIENT] executor 3 has 7 replies
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 3084 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:27 mutate testcase with failures
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/10 23:08:27 ----- mutateArg()
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 3967 truncate truncate
2023/03/10 23:08:27 mutate testcase with failures
2023/03/10 23:08:27 ----- insertCall()
2023/03/10 23:08:27 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/10 23:08:27 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:27 prog length: 2
2023/03/10 23:08:27 prog length: 12
2023/03/10 23:08:27 HasCrashFail:false HasNetFail:false
23:08:27 ---executing program 0:
---
---
---
setxattr$trusted_overlay_origin(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x1)
truncate(&(0x7f0000000000)='./file0\x00', 0x9)
---
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000000)='./file0\x00')
lchown(&(0x7f0000000140)='./file0\x00', 0x0, 0xee00)
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000100)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000380)='./file0/../file0\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
stat(&(0x7f00000005c0)='./file0\x00', &(0x7f0000000600)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
stat(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r8=>0x0})
setxattr$system_posix_acl(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000740)={{}, {0x1, 0x6}, [{0x2, 0x4, 0xee00}, {0x2, 0x1}, {0x2, 0x6, r0}, {0x2, 0x2, r1}, {0x2, 0x1, r2}, {0x2, 0x1, r3}, {0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x2, r4}, {0x2, 0x2, r5}, {0x2, 0x2, 0xee01}], {0x4, 0x6}, [{0x8, 0x0, 0xee01}, {0x8, 0x2, r6}, {0x8, 0x2, r7}, {0x8, 0x5, r8}], {0x10, 0x4}, {0x20, 0x4}}, 0x94, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1736, prog_size 4152
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/orangefs-client/dfs-0-8018
remove dir time 78
-----finish removing dir
receive_execute: 26, 294
current dir: executor 4: /root/orangefs-client/dfs-0-8019
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 195
executor 3 create dir /root/orangefs-client/dfs-0-8019 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8019
receive_execute: 27, 322
receive_execute: 72, 322
receive_execute: 22, 294
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7332, pid 22470, write pid:22471
----- executor 3 executes write_coverage_signal cov->size 7332, flag collect 0
----- executor 3 signal number : 2080
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 8300, pid 22470, write pid:22471
----- executor 3 executes write_coverage_signal cov->size 8300, flag collect 0
----- executor 3 signal number : 15
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 28
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 79, 28, 0
execute_one time: 0, 107
2023/03/10 23:08:28 for select break: 1
2023/03/10 23:08:28 --------- executor 3 receive reply, reply.done 1
receive_execute: 30, 451
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
time breakdown 3: 414, 108, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 4 write_call_output, size 8966, pid 22498, write pid:22499
----- executor 4 executes write_coverage_signal cov->size 8966, flag collect 0
----- executor 4 signal number : 2075
----- completed 1
execute_one loop: 0, 0, 54
cover_reset in execute_call
execute_one loop: 0, 0, 53
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22500
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 314
----- completed 2
execute_one loop: 0, 0, 60
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22498, write pid:22500
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22498, write pid:22500
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22499
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 88
----- completed 5
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22501
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 80
----- completed 6
execute_one loop: 0, 0, 53
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22498, write pid:22499
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22500
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 80
----- completed 8
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22502
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 80
----- completed 9
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22499
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 80
----- completed 10
execute_one loop: 0, 0, 56
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22500
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 80
----- completed 11
execute_one loop: 0, 0, 52
----- executor 4 write_call_output, size 32765, pid 22498, write pid:22499
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 80
----- completed 12
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 524, 156, 0
execute_one time: 1, 680
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4479, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 15404, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2858, flag collect 0
----- executor 1 signal number : 1757
----- executor 1 executes write_coverage_signal cov->size 9130, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 15303, flag collect 0
----- executor 1 signal number : 1097
----- executor 1 executes write_coverage_signal cov->size 14145, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 4366, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1980
----- executor 2 executes write_coverage_signal cov->size 23716, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 15888, flag collect 0
----- executor 2 signal number : 356
----- executor 2 executes write_coverage_signal cov->size 7574, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 3439
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 0 receive reply, reply.done 1
time breakdown 4: 481, 684, 0
before receive testcase: 0 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 3964, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 3232
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:29 wg wait finish
2023/03/10 23:08:29 ------ all executors finish execution
2023/03/10 23:08:29 exec time: 1146
2023/03/10 23:08:29 ----- PS len: 5
2023/03/10 23:08:29 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 1757 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 1097 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:29 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:29 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 1980 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:29 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:29 fuzzer receive 2080 signal and 0 cover from executor 3
2023/03/10 23:08:29 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:29 [CLIENT] executor 4 has 12 replies
2023/03/10 23:08:29 fuzzer receive 2075 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 314 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 88 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:29 mutate testcase with failures
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 2343 link link
2023/03/10 23:08:29 mutate testcase with failures
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 2347 llistxattr llistxattr
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/10 23:08:29 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:29 prog length: 3
2023/03/10 23:08:29 prog length: 4
2023/03/10 23:08:29 HasCrashFail:false HasNetFail:false
23:08:29 ---executing program 0:
---
---
---
link(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file1\x00')
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=ANY=[@ANYBLOB="00fbfb02fb69a15ed7757afe37605caad67102c64e7c1ba422730680c4e783964a49993911e86b66ceb544b8a76d35ae7bb5f5b6f8095be3e110447758a4a1af0aca3b48e524f5aba063c140184c17ddb99d3d5a26c709e299f861deb7dddc343d14b6d4d0614edec5d222edb3dbb2c900a2615ea3535268f580e72d5cf91a279796ef2572232cb205b68f7ed6136f5d698890ac0b34595b74ecdda421be0e23b1a034c4d84af05650c02015e0bfd4046b67281ef653390e00831c30577af95c64e2a9b68d8fa495f25c203e893f087471dcbfc8527f42e619a73caa99921d3cc284eabcce001e1db077e7ccce41c6d9150cec9e89372100000000"], 0xfb, 0x2)
---
r0 = open(&(0x7f0000000040)='./file1\x00', 0x0, 0x0)
unlink(0x0)
llistxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080)=""/111, 0x6f)
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000100), &(0x7f0000000140)={'U-', 0x200}, 0x16, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 4 receive testcase
executor 3: prog_data_offset 1336, prog_size 824
executor 4: prog_data_offset 2160, prog_size 632
remove dir: /root/orangefs-client/dfs-0-8019
time breakdown 0: 349, 816, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 331, 828, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 321, 851, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 138
-----finish removing dir
mkdir time 60
executor 3 create dir /root/orangefs-client/dfs-0-8020 successfully
receive_execute: 3, 200
current dir: executor 3: /root/orangefs-client/dfs-0-8020
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8020
receive_execute: 3, 199
receive_execute: 699, 208
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 11, 208
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 7830, pid 22472, write pid:22473
----- executor 3 executes write_coverage_signal cov->size 7830, flag collect 0
----- executor 3 signal number : 2083
----- completed 1
execute_one loop: 0, 0, 42
cover_reset in execute_call
receive_execute: 14, 292
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20886, pid 22472, write pid:22473
----- executor 3 executes write_coverage_signal cov->size 20886, flag collect 0
----- executor 3 signal number : 1019
----- completed 2
execute_one loop: 0, 0, 43
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22472, write pid:22473
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 85, 18, 0
execute_one time: 0, 104
time breakdown 3: 907, 107, 0
before receive testcase: 0 1
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 22558, pid 22507, write pid:22508
----- executor 4 executes write_coverage_signal cov->size 22558, flag collect 0
----- executor 4 signal number : 2850
----- completed 1
execute_one loop: 0, 0, 46
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22507, write pid:22508
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22507, write pid:22508
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22507, write pid:22508
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 46, 1, 0
execute_one time: 0, 47
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 168, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2520, flag collect 0
time breakdown 4: 306, 48, 0
before receive testcase: 0 1
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 756, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 22452, flag collect 0
----- executor 0 signal number : 2517
----- executor 0 executes write_coverage_signal cov->size 19377, flag collect 0
----- executor 0 signal number : 1244
----- executor 0 executes write_coverage_signal cov->size 4090, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2927, flag collect 0
----- executor 0 signal number : 79
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 203, 154, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2769
----- executor 1 executes write_coverage_signal cov->size 21027, flag collect 0
----- executor 1 signal number : 1064
----- executor 1 executes write_coverage_signal cov->size 5213, flag collect 0
----- executor 1 signal number : 341
----- executor 1 executes write_coverage_signal cov->size 3772, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4263
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 4 output_pos_value 4139
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:29 wg wait finish
2023/03/10 23:08:29 ------ all executors finish execution
2023/03/10 23:08:29 exec time: 369
2023/03/10 23:08:29 ----- PS len: 5
2023/03/10 23:08:29 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 2769 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 1064 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 341 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:29 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:29 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 2517 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 1244 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:29 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:29 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:29 fuzzer receive 2083 signal and 0 cover from executor 3
2023/03/10 23:08:29 fuzzer receive 1019 signal and 0 cover from executor 3
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:29 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:29 fuzzer receive 2850 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:29 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:29 mutate testcase with failures
2023/03/10 23:08:29 ----- mutateArg()
2023/03/10 23:08:29 mutate testcase with failures
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 2459 open$dir open$dir
2023/03/10 23:08:29 ----- mutateArg()
2023/03/10 23:08:29 ----- mutateArg()
2023/03/10 23:08:29 ----- mutateArg()
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 2373 mkdir mkdir
2023/03/10 23:08:29 ----- insertCall()
2023/03/10 23:08:29 ----- generateCall 120 chdir chdir
2023/03/10 23:08:29 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:29 prog length: 4
2023/03/10 23:08:29 prog length: 8
2023/03/10 23:08:29 HasCrashFail:false HasNetFail:false
23:08:29 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000040)='./file0\x00', 0xc894ac9a76af64db, 0x0)
unlink(&(0x7f0000000100)='./file0\x00')
rmdir(0x0)
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)='security.SMACK64MMAP\x00', 0x0, 0x3, 0x3)
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000000)='./file0\x00')
lsetxattr$trusted_overlay_origin(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000180), 0x2, 0x0)
chdir(&(0x7f0000000280)='./file0\x00')
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000040)={'#! ', './file0', [{}, {0x20, '\x14'}, {0x20, '-.'}], 0xa, "4cdf1e55c828e2bea0680336ce127f2dbb7375180cf940410eb067b8adc3305f01c8"}, 0x33)
lchown(&(0x7f0000000140)='./file0\x00', 0x0, 0xee00)
mkdir(&(0x7f0000000080)='./file0\x00', 0x9e5ce98a19852d89)
mkdir(&(0x7f0000000200)='./file0\x00', 0x10)
open$dir(&(0x7f00000001c0)='./file0\x00', 0x680040, 0x180)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1856, prog_size 1512
time breakdown 1: 210, 155, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
remove dir: /root/orangefs-client/dfs-0-8020
time breakdown 0: 219, 161, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 141
-----finish removing dir
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-8021 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8021
receive_execute: 3, 170
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8021
receive_execute: 18, 175
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 189
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 32, 192
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 67, 187
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7073, pid 22475, write pid:22476
----- executor 3 executes write_coverage_signal cov->size 7073, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2856
----- completed 1
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 25339, pid 22475, write pid:22476
----- executor 3 executes write_coverage_signal cov->size 25339, flag collect 0
----- executor 3 signal number : 979
----- completed 2
execute_one loop: 0, 0, 46
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22475, write pid:22476
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7073, pid 22475, write pid:22476
----- executor 3 executes write_coverage_signal cov->size 7073, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 55, 2, 0
execute_one time: 1, 57
time breakdown 3: 255, 60, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 32765, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 318
----- completed 3
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
2023/03/10 23:08:29 for select break: 1
2023/03/10 23:08:29 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 5239, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 5239, flag collect 0
----- executor 4 signal number : 55
----- completed 5
execute_one loop: 0, 0, 49
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 4 write_call_output, size 5239, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 5239, flag collect 0
----- executor 4 signal number : 22
----- completed 7
execute_one loop: 0, 0, 18
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 4 write_call_output, size 32765, pid 22510, write pid:22511
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 126
----- completed 8
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 52
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 266, 158, 0
execute_one time: 0, 425
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 9870, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 140
----- executor 0 signal number : 2352
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1282
----- executor 0 executes write_coverage_signal cov->size 16776, flag collect 0
----- executor 0 signal number : 322
----- executor 0 executes write_coverage_signal cov->size 8633, flag collect 0
----- executor 0 signal number : 84
executor 0 server cover_cnt 4 output_pos_value 4053
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 0 receive reply, reply.done 1
time breakdown 4: 224, 536, 0
before receive testcase: 0 1
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 4 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 2539, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 174, 561, 0
before receive testcase: 0 1
time breakdown 1: 199, 552, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 636, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 11130, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 2646, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:30 wg wait finish
2023/03/10 23:08:30 ------ all executors finish execution
2023/03/10 23:08:30 exec time: 755
2023/03/10 23:08:30 ----- PS len: 5
2023/03/10 23:08:30 [CLIENT] executor 4 has 8 replies
2023/03/10 23:08:30 fuzzer receive 2856 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 318 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 55 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 22 signal and 0 cover from executor 4
2023/03/10 23:08:30 fuzzer receive 126 signal and 0 cover from executor 4
2023/03/10 23:08:30 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 2352 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 1282 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 322 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/10 23:08:30 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:30 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:30 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:30 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:30 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:30 fuzzer receive 979 signal and 0 cover from executor 3
2023/03/10 23:08:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:30 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/10 23:08:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:30 mutate testcase with failures
2023/03/10 23:08:30 ----- mutateArg()
2023/03/10 23:08:30 mutate testcase with failures
2023/03/10 23:08:30 ----- insertCall()
2023/03/10 23:08:30 ----- generateCall 2780 readlink readlink
2023/03/10 23:08:30 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:30 prog length: 1
2023/03/10 23:08:30 prog length: 1
2023/03/10 23:08:30 HasCrashFail:false HasNetFail:false
23:08:30 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x104c0, 0x0)
---
readlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/38, 0x26)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-8021
time breakdown 2: 193, 580, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 144
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 51
-----finish removing dir
receive_execute: 1, 231
current dir: executor 4: /root/orangefs-client/dfs-0-8022
mkdir time 179
executor 3 create dir /root/orangefs-client/dfs-0-8022 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8022
receive_execute: 32, 223
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 241
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 13, 0
receive_execute: 498, 265
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20605, pid 22478, write pid:22479
----- executor 3 executes write_coverage_signal cov->size 20605, flag collect 0
----- executor 3 signal number : 3082
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
receive_execute: 28, 298
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 23, 11, 0
execute_one time: 5, 34
2023/03/10 23:08:30 for select break: 1
time breakdown 3: 763, 39, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 7703, pid 22516, write pid:22517
----- executor 4 executes write_coverage_signal cov->size 7703, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 29
executor 4, execute_one inner time: 11, 29, 0
execute_one time: 0, 40
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19445, flag collect 0
time breakdown 4: 326, 40, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2734
----- executor 1 executes write_coverage_signal cov->size 20686, flag collect 0
----- executor 1 signal number : 1049
----- executor 1 executes write_coverage_signal cov->size 4987, flag collect 0
----- executor 1 signal number : 344
----- executor 1 executes write_coverage_signal cov->size 3963, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4216
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:30 --------- executor 3 receive reply, reply.done 1
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 2544
----- executor 0 executes write_coverage_signal cov->size 19364, flag collect 0
----- executor 0 signal number : 1265
----- executor 0 executes write_coverage_signal cov->size 3250, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 2166, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4200
time breakdown 0: 264, 101, 0
before receive testcase: 0 1
2023/03/10 23:08:30 for select break: 1
2023/03/10 23:08:30 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:30 wg wait finish
2023/03/10 23:08:30 ------ all executors finish execution
2023/03/10 23:08:30 exec time: 357
2023/03/10 23:08:30 ----- PS len: 5
2023/03/10 23:08:30 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:30 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:30 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 2544 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 1265 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/10 23:08:30 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 2734 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 1049 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 344 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:30 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:30 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:30 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:30 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:30 fuzzer receive 3082 signal and 0 cover from executor 3
2023/03/10 23:08:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:30 mutate testcase with failures
2023/03/10 23:08:30 ----- insertCall()
2023/03/10 23:08:30 ----- generateCall 248 fstat fstat
2023/03/10 23:08:30 ----- insertCall()
2023/03/10 23:08:30 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/10 23:08:30 mutate testcase with failures
2023/03/10 23:08:30 ----- insertCall()
2023/03/10 23:08:30 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/10 23:08:30 ----- mutateArg()
2023/03/10 23:08:30 ----- mutateArg()
2023/03/10 23:08:30 ----- insertCall()
2023/03/10 23:08:30 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/10 23:08:30 ----- insertCall()
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 233, 120, 0
before receive testcase: 0 0
2023/03/10 23:08:30 ----- generateCall 3970 unlink unlink
2023/03/10 23:08:30 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:30 prog length: 3
2023/03/10 23:08:30 prog length: 4
2023/03/10 23:08:30 HasCrashFail:false HasNetFail:false
23:08:30 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
fstat(r0, &(0x7f0000000000))
write$binfmt_misc(r0, &(0x7f0000000080)={'syz1', "83fc425390983b4faa403332e4b0e84bf84a4c068a39412d75b67ad82d3fbe8b2bd495a9c89f03fcbd2235df252100312194ccd164f7118523a48cb7f4d389"}, 0x43)
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x3)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x0, 0xc, 0x1000, 0x97, "d5c0600b011c0ae3f0cf53075f5e5dce4b3702d2a38eeadf4261f0748d5ff52967cfaaa1ad65d23d270448bb27eb06ae9de58370d3c2416d6214658d43cc47d440e3617c71bf1f2392dbfccf83268a5b55199ca698f3dd9b693e504afa7570c07311e74bb63919b5700e1a6b74a2f31544a547d49ddfd5008379f849e5c13de0cd19d68fff66a8b74aeed68d500635007b0ee3333122ba"}, 0xa0, 0x0)
unlink(&(0x7f0000000000)='./file1\x00')
unlink(&(0x7f0000000140)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 264, 108, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1832, prog_size 856
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/orangefs-client/dfs-0-8022
remove dir time 70
-----finish removing dir
mkdir time 226
executor 3 create dir /root/orangefs-client/dfs-0-8023 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8023
receive_execute: 7, 322
receive_execute: 2, 323
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8023
receive_execute: 18, 350
receive_execute: 81, 324
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 29, 348
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22518, write pid:22519
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22518, write pid:22519
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22480, write pid:22482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22480, write pid:22482
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 7096, pid 22480, write pid:22481
----- executor 3 executes write_coverage_signal cov->size 7096, flag collect 0
----- executor 3 signal number : 2068
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 53, 4, 0
execute_one time: 0, 57
time breakdown 3: 405, 58, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 52
cover_reset in execute_call
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 51
----- executor 4 write_call_output, size 18913, pid 22518, write pid:22519
----- executor 4 executes write_coverage_signal cov->size 18913, flag collect 0
----- executor 4 signal number : 2813
----- completed 3
----- executor 4 write_call_output, size 7922, pid 22518, write pid:22520
----- executor 4 executes write_coverage_signal cov->size 7922, flag collect 0
----- executor 4 signal number : 72
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 157, 2, 0
execute_one time: 0, 159
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 4: 377, 160, 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28712, flag collect 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 228, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3990, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1026, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 2804
----- executor 0 executes write_coverage_signal cov->size 27604, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 1675
----- executor 0 executes write_coverage_signal cov->size 4221, flag collect 0
----- executor 0 signal number : 314
----- executor 0 executes write_coverage_signal cov->size 2923, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4886
----- executor 2 signal number : 2757
----- executor 2 executes write_coverage_signal cov->size 30081, flag collect 0
----- executor 2 signal number : 1170
----- executor 2 executes write_coverage_signal cov->size 7453, flag collect 0
----- executor 2 signal number : 348
----- executor 2 executes write_coverage_signal cov->size 5441, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4364
time breakdown 1: 325, 195, 0
before receive testcase: 0 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 330, 205, 0
before receive testcase: 0 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:31 wg wait finish
2023/03/10 23:08:31 ------ all executors finish execution
2023/03/10 23:08:31 exec time: 542
2023/03/10 23:08:31 ----- PS len: 5
2023/03/10 23:08:31 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:31 fuzzer receive 2813 signal and 0 cover from executor 4
2023/03/10 23:08:31 fuzzer receive 72 signal and 0 cover from executor 4
2023/03/10 23:08:31 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:31 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 2804 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 1675 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 314 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:31 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:31 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/10 23:08:31 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 2757 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 1170 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 348 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
time breakdown 0: 368, 183, 0
before receive testcase: 0 1
2023/03/10 23:08:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:31 mutate testcase with failures
2023/03/10 23:08:31 ----- insertCall()
2023/03/10 23:08:31 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/10 23:08:31 mutate testcase with failures
2023/03/10 23:08:31 ----- insertCall()
2023/03/10 23:08:31 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/10 23:08:31 ----- insertCall()
2023/03/10 23:08:31 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/10 23:08:31 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:31 prog length: 2
2023/03/10 23:08:31 prog length: 2
2023/03/10 23:08:31 HasCrashFail:false HasNetFail:false
23:08:31 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
setxattr$user(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)='{\'\'#}-:\x00', 0x8, 0x2)
---
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f00000000c0)='system.posix_acl_access\x00', &(0x7f0000000100)={{}, {0x1, 0x9028f808a62fb4fb}, [{0x2, 0x2, 0xee01}, {0x2, 0x5}, {0x2, 0x3, 0xee01}, {0x2, 0x1}], {0x4, 0x1}, [{0x8, 0x4, 0xee01}, {0x8, 0x3, 0xffffffffffffffff}], {0x10, 0x3}}, 0x54, 0x2)
setxattr$incfs_id(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'0000000000000000000000000000000', 0x32}, 0x20, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/orangefs-client/dfs-0-8023
----- executor 4 receive testcase
executor 4: prog_data_offset 1752, prog_size 1784
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 84
-----finish removing dir
mkdir time 82
executor 3 create dir /root/orangefs-client/dfs-0-8024 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8024
receive_execute: 34, 172
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 173, 173
receive_execute: 47, 178
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-8024
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 57, 173
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 12504, pid 22483, write pid:22485
----- executor 3 executes write_coverage_signal cov->size 12504, flag collect 0
----- executor 3 signal number : 2676
----- completed 1
----- executor 3 write_call_output, size 21104, pid 22483, write pid:22484
----- executor 3 executes write_coverage_signal cov->size 21104, flag collect 0
----- executor 3 signal number : 836
----- completed 2
execute_one loop: 0, 0, 22
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 72, 1, 0
execute_one time: 0, 73
receive_execute: 59, 253
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22521, write pid:22522
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
time breakdown 3: 346, 74, 0
before receive testcase: 0 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 8392, pid 22521, write pid:22522
----- executor 4 executes write_coverage_signal cov->size 8392, flag collect 0
----- executor 4 signal number : 2086
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 19, 0, 0
execute_one time: 0, 19
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4469, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2090, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1653, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 898, flag collect 0
----- executor 0 signal number : 76
time breakdown 4: 312, 20, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2761
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1319
----- executor 1 executes write_coverage_signal cov->size 3754, flag collect 0
----- executor 1 signal number : 303
----- executor 1 executes write_coverage_signal cov->size 3875, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 4475
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 233, 99, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 2135
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:31 wg wait finish
2023/03/10 23:08:31 ------ all executors finish execution
2023/03/10 23:08:31 exec time: 283
2023/03/10 23:08:31 ----- PS len: 5
2023/03/10 23:08:31 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:31 fuzzer receive 2086 signal and 0 cover from executor 4
2023/03/10 23:08:31 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 2761 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 1319 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 303 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
time breakdown 0: 206, 111, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 235, 94, 0
before receive testcase: 0 1
2023/03/10 23:08:31 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:31 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:31 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:31 fuzzer receive 2676 signal and 0 cover from executor 3
2023/03/10 23:08:31 fuzzer receive 836 signal and 0 cover from executor 3
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:31 mutate testcase with failures
2023/03/10 23:08:31 ----- mutateArg()
2023/03/10 23:08:31 ----- insertCall()
2023/03/10 23:08:31 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/10 23:08:31 mutate testcase with failures
2023/03/10 23:08:31 ----- mutateArg()
2023/03/10 23:08:31 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:31 prog length: 2
2023/03/10 23:08:31 prog length: 2
2023/03/10 23:08:31 HasCrashFail:false HasNetFail:false
23:08:31 ---executing program 0:
---
---
---
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f0000000000)='system.posix_acl_default\x00', &(0x7f0000000100)={{}, {0x1, 0x5}, [{0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x6, 0xee01}, {0x2, 0x4}, {0x2, 0x4, 0xee00}, {}], {0x4, 0x4}, [{0x8, 0x5, r0}, {0x8, 0x3, 0xee01}, {0x8, 0x6, 0xffffffffffffffff}], {0x10, 0x1}, {0x20, 0x4}}, 0x64, 0x0)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x41, 0x0)
write$binfmt_elf32(r0, &(0x7f0000000040)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x38, 0x208, 0x0, 0x0, 0x20, 0x0, 0x0, 0x94}, [{}]}, 0x58)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 3200, prog_size 1464
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1864
remove dir: /root/orangefs-client/dfs-0-8024
remove dir time 48
-----finish removing dir
receive_execute: 14, 113
mkdir time 49
executor 3 create dir /root/orangefs-client/dfs-0-8025 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8025
receive_execute: 7, 113
current dir: executor 4: /root/orangefs-client/dfs-0-8025
receive_execute: 37, 114
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 7096, pid 22486, write pid:22487
----- executor 3 executes write_coverage_signal cov->size 7096, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22486, write pid:22487
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 7, 114
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 18, 0
execute_one time: 1, 28
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 151, 29, 0
before receive testcase: 0 1
receive_execute: 16, 140
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 22919, pid 22523, write pid:22524
----- executor 4 executes write_coverage_signal cov->size 22919, flag collect 0
----- executor 4 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
-----executor 2 collect shmids 84
----- directly resend shmid 84
----- executor 4 write_call_output, size 10815, pid 22523, write pid:22524
----- executor 4 executes write_coverage_signal cov->size 10815, flag collect 0
----- executor 4 signal number : 968
----- completed 2
execute_one loop: 0, 0, 40
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 72, 25, 0
execute_one time: 1, 97
2023/03/10 23:08:31 for select break: 1
time breakdown 4: 156, 99, 0
2023/03/10 23:08:31 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16449, flag collect 0
----- executor 2 signal number : 2719
----- executor 2 executes write_coverage_signal cov->size 16655, flag collect 0
----- executor 2 signal number : 1191
----- executor 2 executes write_coverage_signal cov->size 3252, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1725, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 2241, flag collect 0
----- executor 2 signal number : 123
executor 2 server cover_cnt 5 output_pos_value 4416
time breakdown 2: 136, 116, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2742
----- executor 0 executes write_coverage_signal cov->size 19335, flag collect 0
----- executor 0 signal number : 1046
----- executor 0 executes write_coverage_signal cov->size 4409, flag collect 0
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 3750, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4219
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2730, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 127, 136, 0
before receive testcase: 0 1
time breakdown 0: 120, 138, 0
before receive testcase: 0 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:31 for select break: 1
2023/03/10 23:08:31 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:31 wg wait finish
2023/03/10 23:08:31 ------ all executors finish execution
2023/03/10 23:08:31 exec time: 258
2023/03/10 23:08:31 ----- PS len: 5
2023/03/10 23:08:31 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:31 fuzzer receive 3086 signal and 0 cover from executor 4
2023/03/10 23:08:31 fuzzer receive 968 signal and 0 cover from executor 4
2023/03/10 23:08:31 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:31 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 2742 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 1046 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:31 [SERVER] executor 2 has 5 replies
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 2719 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 1191 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:31 ------- fuzzer executor 2 receive 123 signal and 0 cover from userspace component
2023/03/10 23:08:31 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:31 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:31 mutate testcase with failures
2023/03/10 23:08:31 ----- insertCall()
2023/03/10 23:08:31 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/10 23:08:31 mutate testcase with failures
2023/03/10 23:08:31 ----- insertCall()
2023/03/10 23:08:31 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/10 23:08:31 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:31 prog length: 9
2023/03/10 23:08:31 prog length: 1
2023/03/10 23:08:31 HasCrashFail:false HasNetFail:false
23:08:31 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
stat(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000340)='./file1\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(r0, &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_access\x00', &(0x7f00000004c0)={{}, {0x1, 0x7}, [{0x2, 0x3, r1}, {0x2, 0x1, 0xffffffffffffffff}, {}, {0x2, 0x2, r2}, {0x2, 0x0, 0xee00}, {0x2, 0x1, r3}], {}, [{0x8, 0x2, r4}, {0x8, 0x1, r5}, {0x8, 0x0, r6}, {0x8, 0x4, 0xffffffffffffffff}], {0x10, 0x8}, {0x20, 0x4}}, 0x74, 0x2)
fsync(r0)
---
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000000))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 4488, prog_size 104
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3152
remove dir: /root/orangefs-client/dfs-0-8025
remove dir time 187
-----finish removing dir
mkdir time 33
executor 3 create dir /root/orangefs-client/dfs-0-8026 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8026
receive_execute: 14, 229
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8026
receive_execute: 11, 241
receive_execute: 17, 252
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
receive_execute: 116, 261
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 22, 294
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22525, write pid:22526
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 316, 1, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 4852, pid 22488, write pid:22491
----- executor 3 executes write_coverage_signal cov->size 4852, flag collect 0
----- executor 3 signal number : 1187
----- completed 1
----- executor 3 write_call_output, size 22069, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 22069, flag collect 0
----- executor 3 signal number : 1918
----- completed 2
----- executor 3 write_call_output, size 17356, pid 22488, write pid:22490
----- executor 3 executes write_coverage_signal cov->size 17356, flag collect 0
----- executor 3 signal number : 418
----- completed 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 4852, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 4852, flag collect 0
----- executor 3 signal number : 12
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4852, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 4852, flag collect 0
----- executor 3 signal number : 12
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4852, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 4852, flag collect 0
----- executor 3 signal number : 12
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4852, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 4852, flag collect 0
----- executor 3 signal number : 12
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7121, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 7121, flag collect 0
----- executor 3 signal number : 31
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 22488, write pid:22489
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
executor 3, execute_one inner time: 119, 19, 0
execute_one time: 0, 138
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 382, 139, 0
before receive testcase: 0 1
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7260, flag collect 0
----- executor 2 signal number : 1723
----- executor 2 executes write_coverage_signal cov->size 15136, flag collect 0
----- executor 2 signal number : 1132
----- executor 2 executes write_coverage_signal cov->size 2886, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1331, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 3229
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 269, 167, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2753
----- executor 0 executes write_coverage_signal cov->size 19330, flag collect 0
----- executor 0 signal number : 1045
----- executor 0 executes write_coverage_signal cov->size 4997, flag collect 0
----- executor 0 signal number : 342
----- executor 0 executes write_coverage_signal cov->size 3801, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4229
time breakdown 0: 243, 176, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 253, 179, 0
before receive testcase: 0 1
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:32 wg wait finish
2023/03/10 23:08:32 ------ all executors finish execution
2023/03/10 23:08:32 exec time: 434
2023/03/10 23:08:32 ----- PS len: 5
2023/03/10 23:08:32 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:32 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 2753 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 1045 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 342 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:32 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:32 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 1723 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 1132 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:32 [CLIENT] executor 3 has 9 replies
2023/03/10 23:08:32 fuzzer receive 1187 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 1918 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 418 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/10 23:08:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/10 23:08:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:32 mutate testcase with failures
2023/03/10 23:08:32 ----- insertCall()
2023/03/10 23:08:32 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/10 23:08:32 mutate testcase with failures
2023/03/10 23:08:32 ----- insertCall()
2023/03/10 23:08:32 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/10 23:08:32 ----- mutateArg()
2023/03/10 23:08:32 ----- mutateArg()
2023/03/10 23:08:32 ----- insertCall()
2023/03/10 23:08:32 ----- generateCall 231 fsetxattr fsetxattr
2023/03/10 23:08:32 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:32 prog length: 1
2023/03/10 23:08:32 prog length: 4
2023/03/10 23:08:32 HasCrashFail:false HasNetFail:false
23:08:32 ---executing program 0:
---
---
---
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x3, 0x0, 0x0, 0x1, 0x18, "c3793a804e83ce1a625620c7c6ed963cd687a3f6cd1f7ffe"}, 0x21, 0x0)
---
r0 = dup(0xffffffffffffffff)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000080), &(0x7f0000000040), 0x4, 0x0)
fsetxattr(r0, &(0x7f0000000000)=@known='trusted.overlay.origin\x00', &(0x7f00000000c0)='\x00', 0x1, 0x3)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/orangefs-client/dfs-0-8026
----- executor 4 receive testcase
executor 4: prog_data_offset 1832, prog_size 744
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 211
-----finish removing dir
mkdir time 67
executor 3 create dir /root/orangefs-client/dfs-0-8027 successfully
receive_execute: 13, 278
current dir: executor 3: /root/orangefs-client/dfs-0-8027
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 30, 285
receive_execute: 15, 285
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-8027
receive_execute: 24, 278
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7329, pid 22492, write pid:22493
----- executor 3 executes write_coverage_signal cov->size 7329, flag collect 0
----- executor 3 signal number : 2081
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
execute_one loop: 0, 0, 24
executor 3, execute_one inner time: 16, 24, 0
execute_one time: 2, 40
time breakdown 3: 315, 43, 0
before receive testcase: 0 1
receive_execute: 139, 337
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22527, write pid:22528
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 3 receive reply, reply.done 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22527, write pid:22528
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22527, write pid:22528
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 4 write_call_output, size 8950, pid 22527, write pid:22528
----- executor 4 executes write_coverage_signal cov->size 8950, flag collect 0
----- executor 4 signal number : 2086
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 137, 0, 0
execute_one time: 0, 137
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15749, flag collect 0
----- executor 2 signal number : 1848
----- executor 2 executes write_coverage_signal cov->size 8649, flag collect 0
----- executor 2 signal number : 1080
----- executor 2 executes write_coverage_signal cov->size 5325, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1804, flag collect 0
----- executor 2 signal number : 79
time breakdown 4: 481, 138, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 3306
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 762, flag collect 0
----- executor 1 signal number : 287
----- executor 1 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 1 signal number : 11
----- executor 1 executes write_coverage_signal cov->size 4200, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1080, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 4 output_pos_value 495
time breakdown 1: 291, 216, 0
before receive testcase: 0 1
time breakdown 2: 300, 208, 0
before receive testcase: 0 1
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 2746
----- executor 0 executes write_coverage_signal cov->size 19186, flag collect 0
----- executor 0 signal number : 1046
----- executor 0 executes write_coverage_signal cov->size 4594, flag collect 0
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 3783, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4222
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:32 wg wait finish
2023/03/10 23:08:32 ------ all executors finish execution
2023/03/10 23:08:32 exec time: 518
2023/03/10 23:08:32 ----- PS len: 5
2023/03/10 23:08:32 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:32 fuzzer receive 2086 signal and 0 cover from executor 4
2023/03/10 23:08:32 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 2746 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 1046 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:32 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 287 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:32 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 1848 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 1080 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:32 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:32 [CLIENT] executor 3 has 1 replies
2023/03/10 23:08:32 fuzzer receive 2081 signal and 0 cover from executor 3
2023/03/10 23:08:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:32 mutate testcase with failures
2023/03/10 23:08:32 ----- insertCall()
2023/03/10 23:08:32 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/10 23:08:32 mutate testcase with failures
2023/03/10 23:08:32 ----- splice()
2023/03/10 23:08:32 ----- mutateArg()
2023/03/10 23:08:32 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:32 prog length: 2
2023/03/10 23:08:32 prog length: 5
2023/03/10 23:08:32 HasCrashFail:false HasNetFail:false
23:08:32 ---executing program 0:
---
---
---
setxattr$incfs_metadata(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)="cd604d1c9dd995e85656849bc4124cda4970f04197621d4b2dc6f7b64e29e1e4c61dbdb07cc6a0ed9828a097a8b23a157a4c440fdb535366bcfd1c2c955a4dda78a411a41f51f5e3d37760758325f01df5da12c9277676d842ee0c11a7dd0693311986329e16eb6225203354a1c8800538bc7e990eb0d9841fd7a08fc0d54973ecb3367639a428cba7b333c78161f54b88b40ab119e6a8461101f9228cc20f9bb34e4fe87682", 0xa6, 0x1)
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x52902, 0x54)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000300)='./file1/file0\x00', &(0x7f0000000340), &(0x7f0000000380)={'U+', 0x7fff}, 0x16, 0x3)
truncate(&(0x7f00000000c0)='./file1\x00', 0x33f442c6)
open(&(0x7f0000000040)='./file1\x00', 0x0, 0x0)
unlink(0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 584
remove dir: /root/orangefs-client/dfs-0-8027
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 313, 228, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1920, prog_size 768
remove dir time 145
-----finish removing dir
mkdir time 92
executor 3 create dir /root/orangefs-client/dfs-0-8028 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8028
receive_execute: 0, 237
receive_execute: 27, 236
current dir: executor 4: /root/orangefs-client/dfs-0-8028
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
receive_execute: 25, 271
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 66, 261
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 191, 292
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8960, pid 22530, write pid:22531
----- executor 4 executes write_coverage_signal cov->size 8960, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 8960, pid 22530, write pid:22531
----- executor 4 executes write_coverage_signal cov->size 8960, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 8960, pid 22530, write pid:22531
----- executor 4 executes write_coverage_signal cov->size 8960, flag collect 0
----- executor 4 signal number : 16
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 8960, pid 22530, write pid:22531
----- executor 4 executes write_coverage_signal cov->size 8960, flag collect 0
----- executor 4 signal number : 16
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22530, write pid:22531
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7075, pid 22494, write pid:22495
----- executor 3 executes write_coverage_signal cov->size 7075, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 13, 7, 0
execute_one time: 1, 20
2023/03/10 23:08:32 for select break: 1
2023/03/10 23:08:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 327, 23, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 21289, pid 22494, write pid:22495
----- executor 3 executes write_coverage_signal cov->size 21289, flag collect 0
----- executor 3 signal number : 1032
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 69, 0, 0
execute_one time: 0, 69
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1929
----- executor 1 executes write_coverage_signal cov->size 26588, flag collect 0
----- executor 1 signal number : 1019
----- executor 1 executes write_coverage_signal cov->size 6965, flag collect 0
----- executor 1 signal number : 363
----- executor 1 executes write_coverage_signal cov->size 5814, flag collect 0
----- executor 1 signal number : 75
executor 1 server cover_cnt 4 output_pos_value 3399
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 296, 95, 0
before receive testcase: 0 0
time breakdown 3: 483, 71, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 11746, flag collect 0
----- executor 0 signal number : 2046
----- executor 0 executes write_coverage_signal cov->size 15981, flag collect 0
----- executor 0 signal number : 1227
----- executor 0 executes write_coverage_signal cov->size 2439, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1647, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 3651
time breakdown 0: 237, 135, 0
before receive testcase: 0 1
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2520, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 263, 142, 0
before receive testcase: 0 0
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:33 wg wait finish
2023/03/10 23:08:33 ------ all executors finish execution
2023/03/10 23:08:33 exec time: 408
2023/03/10 23:08:33 ----- PS len: 5
2023/03/10 23:08:33 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:33 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:33 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:33 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 1929 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 2046 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 1019 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 1227 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:33 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 363 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:33 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 1032 signal and 0 cover from executor 3
2023/03/10 23:08:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:33 mutate testcase with failures
2023/03/10 23:08:33 mutate testcase with failures
2023/03/10 23:08:33 ----- splice()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 2780 readlink readlink
2023/03/10 23:08:33 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:33 prog length: 16
2023/03/10 23:08:33 prog length: 20
2023/03/10 23:08:33 HasCrashFail:false HasNetFail:false
23:08:33 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='com.apple.system.Security\x00')
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@random={'system.', 'com.apple.system.Security\x00'}, &(0x7f0000000100)=""/121, 0x79)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'U+', 0x3ff}, 0x16, 0x3)
setxattr$security_evm(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x2, 0x0)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file1\x00', 0x0, &(0x7f0000000540)='system_u:object_r:tape_device_t:s0\x00', 0x23, 0x0)
lsetxattr$security_ima(0x0, 0x0, &(0x7f0000000600)=@md5={0x1, "9c5d58fc481f280f566ab202b428edfa"}, 0x11, 0x1)
readlinkat(r0, &(0x7f0000000700)='./file0\x00', &(0x7f0000000740), 0x0)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', 0x0, 0x0, 0x0, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)=ANY=[@ANYBLOB="00fb150009110f4c464167969265ac0104c0cb1ce8"], 0x15, 0x1)
ioctl(0xffffffffffffffff, 0x401, &(0x7f00000009c0))
lremovexattr(0x0, &(0x7f0000000a80)=@known='user.syz\x00')
listxattr(&(0x7f0000000ac0)='./file1\x00', &(0x7f0000000b00)=""/198, 0xc6)
removexattr(&(0x7f0000000cc0)='./file0\x00', &(0x7f0000000d00)=@random={'system.', 'com.apple.system.Security\x00'})
dup(0xffffffffffffffff)
---
readlink(&(0x7f0000000000)='./file2\x00', &(0x7f0000000980)=""/199, 0xc7)
fstat(0xffffffffffffffff, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$security_capability(&(0x7f0000000080)='./file1/file0\x00', &(0x7f0000000040), &(0x7f00000000c0)=@v3={0x3000000, [{0x4a, 0x6}, {0xb447, 0x6}], r0}, 0x18, 0x0)
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
rename(0x0, &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(0x0, 0x0, &(0x7f0000000280)=0x80000000, 0x8, 0x3)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', 0x0, &(0x7f0000000340)='\x00', 0x1, 0x0)
renameat(0xffffffffffffffff, 0x0, 0xffffffffffffff9c, 0x0)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000480)='./file1\x00', 0x0, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000600)='./file0\x00', 0x0, 0x0)
sync()
r1 = openat(0xffffffffffffffff, 0x0, 0x0, 0xd5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740), &(0x7f0000000780)='./file2\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f00000007c0)='./file1/file0\x00', &(0x7f0000000800), &(0x7f0000000840)=ANY=[@ANYBLOB="00fb155c20fc7797faa7000000000000000000"], 0x15, 0x3)
stat(0x0, 0x0)
fstat(r1, &(0x7f0000000b00))
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f0000000940)='system.posix_acl_access\x00', 0x0, 0x0, 0x7)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3280
remove dir: /root/orangefs-client/dfs-0-8028
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 4616, prog_size 3608
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 153
-----finish removing dir
mkdir time 51
executor 3 create dir /root/orangefs-client/dfs-0-8029 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8029
receive_execute: 33, 205
receive_execute: 47, 205
receive_execute: 41, 204
receive_execute: 50, 205
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7068, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-8029
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
----- executor 3 write_call_output, size 7068, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7068, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 7068, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7068, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 7068, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
receive_execute: 102, 255
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 9111, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 9111, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 9104, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 9104, flag collect 0
----- executor 4 signal number : 15
----- completed 7
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 12487, pid 22496, write pid:22498
----- executor 3 executes write_coverage_signal cov->size 12487, flag collect 0
----- executor 3 signal number : 761
----- completed 6
----- executor 3 write_call_output, size 7075, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 7075, flag collect 0
----- executor 3 signal number : 29
----- completed 7
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 55
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22536
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 145
----- completed 15
execute_one loop: 0, 0, 19
----- executor 4 write_call_output, size 19893, pid 22534, write pid:22536
----- executor 4 executes write_coverage_signal cov->size 19893, flag collect 0
----- executor 4 signal number : 794
----- completed 10
----- executor 4 write_call_output, size 9118, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 9118, flag collect 0
----- executor 4 signal number : 28
----- completed 11
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22534, write pid:22535
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 4 receive reply, reply.done 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 106, 4, 0
execute_one time: 0, 110
time breakdown 4: 357, 111, 0
before receive testcase: 0 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22496, write pid:22497
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 26
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 47
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 171, 115, 1
execute_one time: 4, 287
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12196, flag collect 0
----- executor 0 signal number : 1919
----- executor 0 executes write_coverage_signal cov->size 5782, flag collect 0
----- executor 0 signal number : 358
----- executor 0 executes write_coverage_signal cov->size 7269, flag collect 0
----- executor 0 signal number : 291
----- executor 0 executes write_coverage_signal cov->size 2749, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 2657
time breakdown 3: 255, 299, 0
before receive testcase: 0 1
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 245, 303, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1949
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1024
----- executor 1 executes write_coverage_signal cov->size 12798, flag collect 0
----- executor 1 signal number : 380
----- executor 1 executes write_coverage_signal cov->size 9977, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3442
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 261, 304, 0
before receive testcase: 0 1
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2449
----- executor 2 executes write_coverage_signal cov->size 28127, flag collect 0
----- executor 2 signal number : 1244
----- executor 2 executes write_coverage_signal cov->size 8357, flag collect 0
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 4135, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 4070
2023/03/10 23:08:33 for select break: 1
2023/03/10 23:08:33 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:33 wg wait finish
2023/03/10 23:08:33 ------ all executors finish execution
2023/03/10 23:08:33 exec time: 526
2023/03/10 23:08:33 ----- PS len: 5
2023/03/10 23:08:33 [CLIENT] executor 4 has 20 replies
2023/03/10 23:08:33 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 794 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 28 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:33 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 1919 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 358 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:33 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 1949 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 1024 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 380 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
time breakdown 2: 238, 321, 0
before receive testcase: 0 0
2023/03/10 23:08:33 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 2449 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 1244 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/10 23:08:33 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:33 [CLIENT] executor 3 has 16 replies
2023/03/10 23:08:33 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 761 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 145 signal and 0 cover from executor 3
2023/03/10 23:08:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:33 mutate testcase with failures
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 3765 symlinkat symlinkat
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 171 dup2 dup2
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/10 23:08:33 mutate testcase with failures
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:33 ----- insertCall()
2023/03/10 23:08:33 ----- generateCall 2373 mkdir mkdir
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 ----- mutateArg()
2023/03/10 23:08:33 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:33 prog length: 16
2023/03/10 23:08:33 prog length: 4
2023/03/10 23:08:33 HasCrashFail:false HasNetFail:false
23:08:33 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000500)='./file0\x00', 0x80000, 0x100)
symlinkat(&(0x7f00000004c0)='./file0\x00', r0, &(0x7f0000000540)='./file0\x00')
r1 = open$dir(&(0x7f0000000000)='./file0\x00', 0x8000, 0x108)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
setxattr$security_ima(&(0x7f0000000700)='./file0\x00', &(0x7f0000000740), &(0x7f0000000780)=@ng={0x4, 0x0, "bbd5753bd8b2d999cdf914c1a6f6679900"}, 0x13, 0x3)
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
lsetxattr$system_posix_acl(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='system.posix_acl_access\x00', &(0x7f0000000440)={{}, {0x1, 0x2}, [{0x2, 0x0, r2}, {0x2, 0x1, 0xee00}, {0x2, 0x5, r3}, {0x2, 0x1, 0xee01}, {0x2, 0x7, 0xffffffffffffffff}, {0x2, 0x0, r4}, {0x2, 0x4, r5}], {0x4, 0x7}, [{0x8, 0x4, 0xffffffffffffffff}], {}, {0x20, 0x2}}, 0x64, 0x3)
setxattr$incfs_metadata(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)="cf04d613894f04a05f4b4a2b1f5519d30e7567998304790cd6f2b07139b7a1fd607f93a038a390dfa371ded1da97454295663e44206c0395f93e8cd3ad3b776f85a0f0b68957abe3301ee286e64968b1ad5913b52946fb6015076d14c13b59f366adf7eebf5a5676f517e03adef8f045f31d5ff0536cae2d05749535b45c90fc0b922375ba120e35fe4e9855eaf7729206ae9b6c2439537ce1abb01c02ff260d154391fea431e7dc68df4a422ddb013cd0e855efa3d409b300e2b2c9", 0xbc, 0x2)
r6 = dup(0xffffffffffffffff)
fcntl$dupfd(r1, 0x0, r6)
r7 = dup2(0xffffffffffffffff, r6)
r8 = openat(r6, &(0x7f00000006c0)='./file0\x00', 0x101041, 0x198)
dup2(r7, r8)
fsetxattr$trusted_overlay_redirect(r6, &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x1)
---
mkdir(&(0x7f0000000140)='./file0\x00', 0x30)
lchown(&(0x7f0000000000)='./file0\x00', 0x0, 0xee01)
link(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000040)='./file0\x00')
mkdir(&(0x7f0000000100)='./file0\x00', 0xfa)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4568
remove dir: /root/orangefs-client/dfs-0-8029
----- executor 4 receive testcase
executor 4: prog_data_offset 5904, prog_size 520
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 214
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8030
receive_execute: 23, 233
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-8030 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8030
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 34, 233
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 20, 0
receive_execute: 14, 249
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 37, 248
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7298, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7298, flag collect 0
----- executor 3 signal number : 2076
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7058, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7058, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
receive_execute: 175, 298
----- executor 3 write_call_output, size 7298, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7298, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 7058, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_one loop: 0, 0, 6
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 7058, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7538, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 7538, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_one loop: 0, 0, 28
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 24600, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 24600, flag collect 0
----- executor 3 signal number : 824
----- completed 9
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22501, write pid:22502
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22539, write pid:22540
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3019
----- completed 1
execute_one loop: 0, 0, 52
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22539, write pid:22540
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
----- executor 4 write_call_output, size 0, pid 22539, write pid:22541
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22539, write pid:22540
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 122, 14, 0
execute_one time: 6, 136
execute_one loop: 0, 0, 30
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 96, 89, 0
execute_one time: 0, 185
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 298, 192, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1983
----- executor 0 executes write_coverage_signal cov->size 28958, flag collect 0
time breakdown 4: 473, 177, 0
before receive testcase: 0 1
----- executor 0 signal number : 1032
----- executor 0 executes write_coverage_signal cov->size 7564, flag collect 0
----- executor 0 signal number : 364
----- executor 0 executes write_coverage_signal cov->size 6506, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 3469
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 267, 247, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2500
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1197
----- executor 1 executes write_coverage_signal cov->size 16885, flag collect 0
----- executor 1 signal number : 404
----- executor 1 executes write_coverage_signal cov->size 12306, flag collect 0
----- executor 1 signal number : 78
executor 1 server cover_cnt 4 output_pos_value 4192
time breakdown 1: 256, 246, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15065, flag collect 0
----- executor 2 signal number : 1755
----- executor 2 executes write_coverage_signal cov->size 8718, flag collect 0
----- executor 2 signal number : 1090
----- executor 2 executes write_coverage_signal cov->size 5325, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1696, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 3223
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:34 wg wait finish
2023/03/10 23:08:34 ------ all executors finish execution
2023/03/10 23:08:34 exec time: 490
2023/03/10 23:08:34 ----- PS len: 5
2023/03/10 23:08:34 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 1983 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 1032 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 364 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:34 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:34 fuzzer receive 3019 signal and 0 cover from executor 4
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:34 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 2500 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 1197 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 404 signal and 0 cover from userspace component
2023/03/10 23:08:34 [CLIENT] executor 3 has 16 replies
2023/03/10 23:08:34 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 1755 signal and 0 cover from userspace component
2023/03/10 23:08:34 fuzzer receive 2076 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 824 signal and 0 cover from executor 3
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 1090 signal and 0 cover from userspace component
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/10 23:08:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:34 mutate testcase with failures
2023/03/10 23:08:34 ----- insertCall()
2023/03/10 23:08:34 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:34 mutate testcase with failures
2023/03/10 23:08:34 ----- insertCall()
2023/03/10 23:08:34 ----- generateCall 2343 link link
2023/03/10 23:08:34 ----- mutateArg()
2023/03/10 23:08:34 ----- insertCall()
2023/03/10 23:08:34 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/10 23:08:34 ----- insertCall()
2023/03/10 23:08:34 ----- generateCall 2781 readlinkat readlinkat
2023/03/10 23:08:34 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:34 prog length: 3
2023/03/10 23:08:34 prog length: 3
2023/03/10 23:08:34 HasCrashFail:false HasNetFail:false
23:08:34 ---executing program 0:
---
---
---
stat(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, r0)
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x3648cfcba82b6df3)
---
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:auditd_var_run_t:s0\x00', 0x26, 0x1)
readlinkat(0xffffffffffffffff, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/2, 0x2)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)='./file0\x00')
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
remove dir: /root/orangefs-client/dfs-0-8030
time breakdown 2: 275, 230, 0
before receive testcase: 0 0
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1784, prog_size 632
remove dir time 257
-----finish removing dir
receive_execute: 12, 300
mkdir time 39
executor 3 create dir /root/orangefs-client/dfs-0-8031 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8031
receive_execute: 12, 301
executor 1 before execute_one
receive_execute: 2, 301
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 44, 297
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-8031
----- executor 3 write_call_output, size 7086, pid 22508, write pid:22509
----- executor 3 executes write_coverage_signal cov->size 7086, flag collect 0
----- executor 3 signal number : 2066
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7806, pid 22508, write pid:22509
----- executor 3 executes write_coverage_signal cov->size 7806, flag collect 0
----- executor 3 signal number : 28
----- completed 2
execute_one loop: 0, 0, 36
cover_reset in execute_call
receive_execute: 21, 339
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7765, pid 22542, write pid:22543
----- executor 4 executes write_coverage_signal cov->size 7765, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22542, write pid:22543
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7765, pid 22542, write pid:22543
----- executor 4 executes write_coverage_signal cov->size 7765, flag collect 0
----- executor 4 signal number : 15
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 20391, pid 22508, write pid:22509
----- executor 3 executes write_coverage_signal cov->size 20391, flag collect 0
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 12, 6, 0
execute_one time: 0, 18
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 360, 19, 0
before receive testcase: 0 0
----- executor 3 signal number : 1036
----- completed 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 58, 35, 0
execute_one time: 0, 93
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 486, flag collect 0
----- executor 2 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 303, 100, 0
before receive testcase: 0 0
time breakdown 3: 341, 94, 0
before receive testcase: 0 1
----- executor 0 signal number : 1997
----- executor 0 executes write_coverage_signal cov->size 26509, flag collect 0
----- executor 0 signal number : 1020
----- executor 0 executes write_coverage_signal cov->size 5753, flag collect 0
----- executor 0 signal number : 356
----- executor 0 executes write_coverage_signal cov->size 5166, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3462
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7328, flag collect 0
----- executor 1 signal number : 1729
----- executor 1 executes write_coverage_signal cov->size 13686, flag collect 0
----- executor 1 signal number : 1139
----- executor 1 executes write_coverage_signal cov->size 2256, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1061, flag collect 0
----- executor 1 signal number : 75
executor 1 server cover_cnt 4 output_pos_value 3242
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:34 wg wait finish
2023/03/10 23:08:34 ------ all executors finish execution
2023/03/10 23:08:34 exec time: 425
2023/03/10 23:08:34 ----- PS len: 5
2023/03/10 23:08:34 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:34 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:34 fuzzer receive 15 signal and 0 cover from executor 4
time breakdown 0: 314, 105, 0
before receive testcase: 0 1
2023/03/10 23:08:34 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 1729 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 1139 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:34 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 1997 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 1020 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 356 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:34 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:34 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:34 [CLIENT] executor 3 has 3 replies
2023/03/10 23:08:34 fuzzer receive 2066 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/10 23:08:34 fuzzer receive 1036 signal and 0 cover from executor 3
2023/03/10 23:08:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:34 mutate testcase with failures
2023/03/10 23:08:34 ----- insertCall()
2023/03/10 23:08:34 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/10 23:08:34 mutate testcase with failures
2023/03/10 23:08:34 ----- insertCall()
2023/03/10 23:08:34 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/10 23:08:34 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:34 prog length: 7
2023/03/10 23:08:34 prog length: 5
2023/03/10 23:08:34 HasCrashFail:false HasNetFail:false
23:08:34 ---executing program 0:
---
---
---
setxattr$trusted_overlay_nlink(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_selinux(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$security_ima(0x0, 0x0, 0x0, 0x0, 0x0)
listxattr(0x0, 0x0, 0x0)
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x2, 0x13, 0x1, 0x8f, "020e6986526e049528412252b925a425a6123d80eb7d54b8e4fae95aacb4c85f0ffeca078352e11a40319be7d48d3e107c9a74a68ced151cc198bf247f1bd4e64a373de11e106794e8d525abc632739055b3350e32f98af87d5dbad93aef2beaf7f59ad62ab1da9ea4f283427b43ad65f9dfc1e610a3cd790012cdea06bc1c85a9728694aa986546a354d41b57f813"}, 0x98, 0x2)
readlinkat(0xffffffffffffffff, 0x0, 0x0, 0x0)
lremovexattr(0x0, 0x0)
---
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)=""/8, 0x8)
lsetxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x0)
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v1={0x2, "b3550343a389cd0763a75269"}, 0xd, 0x0)
stat(0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 313, 124, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2672, prog_size 832
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1336
remove dir: /root/orangefs-client/dfs-0-8031
remove dir time 179
-----finish removing dir
mkdir time 86
executor 3 create dir /root/orangefs-client/dfs-0-8032 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8032
current dir: executor 4: /root/orangefs-client/dfs-0-8032
receive_execute: 1, 312
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 325
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 2
receive_execute: 31, 315
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 68, 299
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 74, 332
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7322, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 7322, flag collect 0
----- executor 3 signal number : 2078
----- completed 5
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22511, write pid:22512
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 22, 17, 0
execute_one time: 0, 39
2023/03/10 23:08:34 for select break: 1
2023/03/10 23:08:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 367, 40, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22545, write pid:22548
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22545, write pid:22546
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2919
----- completed 2
----- executor 4 write_call_output, size 5521, pid 22545, write pid:22547
----- executor 4 executes write_coverage_signal cov->size 5521, flag collect 0
----- executor 4 signal number : 213
----- completed 3
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22545, write pid:22546
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
----- executor 4 write_call_output, size 32765, pid 22545, write pid:22548
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 115
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 159, 4, 0
execute_one time: 0, 163
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19639, flag collect 0
----- executor 0 signal number : 2033
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 4: 407, 164, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 10409, flag collect 0
----- executor 0 signal number : 1133
----- executor 0 executes write_coverage_signal cov->size 4248, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2120, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 3544
time breakdown 2: 346, 187, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 346, 190, 0
before receive testcase: 0 1
----- executor 1 signal number : 2678
----- executor 1 executes write_coverage_signal cov->size 20729, flag collect 0
----- executor 1 signal number : 1046
----- executor 1 executes write_coverage_signal cov->size 7266, flag collect 0
----- executor 1 signal number : 344
----- executor 1 executes write_coverage_signal cov->size 4305, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4157
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:35 wg wait finish
2023/03/10 23:08:35 ------ all executors finish execution
2023/03/10 23:08:35 exec time: 528
2023/03/10 23:08:35 ----- PS len: 5
2023/03/10 23:08:35 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 fuzzer receive 2919 signal and 0 cover from executor 4
2023/03/10 23:08:35 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:35 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:35 fuzzer receive 213 signal and 0 cover from executor 4
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 [CLIENT] executor 3 has 7 replies
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 2033 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 1133 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 2678 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 1046 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 344 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:35 fuzzer receive 2078 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 115 signal and 0 cover from executor 4
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:35 mutate testcase with failures
2023/03/10 23:08:35 ----- mutateArg()
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/10 23:08:35 ----- mutateArg()
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2858 sendfile sendfile
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/10 23:08:35 mutate testcase with failures
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2346 listxattr listxattr
2023/03/10 23:08:35 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:35 prog length: 8
2023/03/10 23:08:35 prog length: 1
2023/03/10 23:08:35 HasCrashFail:false HasNetFail:false
23:08:35 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
sendfile(r0, r1, 0x0, 0x3)
r2 = open$dir(&(0x7f0000000000)='./file1\x00', 0x8000, 0xa2)
fcntl$notify(r2, 0x402, 0x9)
lsetxattr$user(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)='\x00', 0x1, 0x1)
fsetxattr$trusted_overlay_nlink(r2, &(0x7f0000000140), &(0x7f0000000180)={'U+', 0x7}, 0x16, 0x2)
chmod(&(0x7f0000000100)='./file1\x00', 0x0)
---
listxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/59, 0x3b)
---

end of program
----- executor 0 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 2736, prog_size 144
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 313, 215, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1400
remove dir: /root/orangefs-client/dfs-0-8032
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 70
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8033
receive_execute: 2, 207
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 23, 208
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 122
executor 3 create dir /root/orangefs-client/dfs-0-8033 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8033
receive_execute: 14, 218
receive_execute: 169, 204
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21164, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 21164, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 49
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11500, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 11500, flag collect 0
----- executor 3 signal number : 402
----- completed 4
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 25, 286
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8197, pid 22549, write pid:22550
----- executor 4 executes write_coverage_signal cov->size 8197, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 3, 3, 0
execute_one time: 1, 6
time breakdown 4: 311, 8, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 0, pid 22514, write pid:22515
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 174, 1, 0
execute_one time: 0, 175
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 228, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 3990, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1026, flag collect 0
time breakdown 3: 373, 176, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2759
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 30842, flag collect 0
----- executor 0 signal number : 2585
----- executor 0 executes write_coverage_signal cov->size 23063, flag collect 0
----- executor 0 signal number : 1251
----- executor 0 executes write_coverage_signal cov->size 2818, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 3082, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 4214
----- executor 2 executes write_coverage_signal cov->size 21404, flag collect 0
----- executor 2 signal number : 1020
----- executor 2 executes write_coverage_signal cov->size 6440, flag collect 0
----- executor 2 signal number : 345
----- executor 2 executes write_coverage_signal cov->size 3735, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 4214
time breakdown 1: 209, 199, 0
before receive testcase: 0 0
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:35 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:35 wg wait finish
2023/03/10 23:08:35 ------ all executors finish execution
2023/03/10 23:08:35 exec time: 415
2023/03/10 23:08:35 ----- PS len: 5
2023/03/10 23:08:35 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:35 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:35 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:35 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 2759 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 1020 signal and 0 cover from userspace component
2023/03/10 23:08:35 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 2585 signal and 0 cover from userspace component
2023/03/10 23:08:35 [CLIENT] executor 3 has 8 replies
2023/03/10 23:08:35 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 1251 signal and 0 cover from userspace component
2023/03/10 23:08:35 fuzzer receive 402 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 345 signal and 0 cover from userspace component
time breakdown 0: 232, 191, 0
before receive testcase: 0 1
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:35 mutate testcase with failures
2023/03/10 23:08:35 ----- mutateArg()
2023/03/10 23:08:35 ----- splice()
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/10 23:08:35 mutate testcase with failures
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 541 ioctl ioctl
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 231 fsetxattr fsetxattr
2023/03/10 23:08:35 ----- mutateArg()
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/10 23:08:35 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:35 prog length: 7
2023/03/10 23:08:35 prog length: 7
2023/03/10 23:08:35 HasCrashFail:false HasNetFail:false
23:08:35 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
fcntl$F_GET_RW_HINT(r0, 0x40b, &(0x7f0000000000))
open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000300)='./file1/file0\x00', &(0x7f0000000340), &(0x7f0000000380)={'U+', 0x7fff}, 0x16, 0x3)
truncate(&(0x7f00000000c0)='./file1\x00', 0x33f442c6)
open$dir(&(0x7f0000000040)='./file1\x00', 0x670000, 0x62c10c9eb44b8a68)
lsetxattr$security_ima(&(0x7f0000000080)='./file1\x00', &(0x7f0000000100), &(0x7f0000000140)=@v1={0x2, "01bfcdcf6b147eee123cb05a7c6aed"}, 0x10, 0x2)
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r1 = dup(r0)
fsetxattr$smack_xattr_label(r1, &(0x7f0000000280)='security.SMACK64MMAP\x00', &(0x7f00000002c0)={'U+'}, 0x3, 0x0)
r2 = open$dir(&(0x7f0000000240)='./file0\x00', 0x440100, 0x90)
ioctl(r2, 0x80000002, &(0x7f00000000c0)="bde7de039594ef01ef3d3823133247d97a25dfb5a2734e85d6e873f99e5cb4215d277d77415ba49f689788af54cd12049f1cc8c924c20e5a9815c63cbfde0bb258f543bade5fc06b63f20a011e61b0615bc64c41583e703dc69c0e4d4b1faf430b7f11ac9499d2ae402e232a2041a7101f5535daf8de7f895d22cfa407e523114e9c0367d4fd336c7f4e50d4f5ea6ac33917a8bee4753063395840cf859ec82ead6982cc4128e81a68f0219c708d68886406f12d179b8b2bc0dc8a5e6f9a83079c49738b9c5711cad69e41130a743d1143b2bdcbb78d0138336e94ff9f32dad9a123b6")
fsetxattr(0xffffffffffffffff, &(0x7f00000001c0)=@random={'osx.', '\x00'}, &(0x7f0000000200)='V[,\x00', 0x4, 0x2)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'U+', 0xffffffffffffffe0}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 231, 205, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2544, prog_size 1584
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1208
remove dir: /root/orangefs-client/dfs-0-8033
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 150
-----finish removing dir
receive_execute: 11, 216
mkdir time 59
executor 3 create dir /root/orangefs-client/dfs-0-8034 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8034
receive_execute: 9, 215
current dir: executor 4: /root/orangefs-client/dfs-0-8034
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 218
receive_execute: 30, 212
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22518, write pid:22519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22518, write pid:22519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
receive_execute: 129, 331
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8393, pid 22551, write pid:22552
----- executor 4 executes write_coverage_signal cov->size 8393, flag collect 0
----- executor 4 signal number : 2073
----- completed 7
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 9, 4, 0
execute_one time: 0, 13
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 460, 13, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 22517, pid 22518, write pid:22519
----- executor 3 executes write_coverage_signal cov->size 22517, flag collect 0
----- executor 3 signal number : 3081
----- completed 3
----- executor 3 write_call_output, size 12500, pid 22518, write pid:22520
----- executor 3 executes write_coverage_signal cov->size 12500, flag collect 0
----- executor 3 signal number : 415
----- completed 4
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22518, write pid:22519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22518, write pid:22519
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 35
----- executor 3 write_call_output, size 32765, pid 22518, write pid:22521
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 550
----- completed 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 34
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 191, 34, 0
execute_one time: 0, 225
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:35 for select break: 1
----- executor 1 signal number : 2751
----- executor 1 executes write_coverage_signal cov->size 25621, flag collect 0
----- executor 1 signal number : 1177
----- executor 1 executes write_coverage_signal cov->size 8222, flag collect 0
----- executor 1 signal number : 355
----- executor 1 executes write_coverage_signal cov->size 4608, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4372
time breakdown 3: 242, 227, 0
before receive testcase: 0 1
2023/03/10 23:08:35 --------- executor 3 receive reply, reply.done 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 227, 232, 0
before receive testcase: 0 1
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2844
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1669
----- executor 0 executes write_coverage_signal cov->size 7604, flag collect 0
----- executor 0 signal number : 369
----- executor 0 executes write_coverage_signal cov->size 6069, flag collect 0
----- executor 0 signal number : 99
executor 0 server cover_cnt 4 output_pos_value 4994
2023/03/10 23:08:35 for select break: 1
2023/03/10 23:08:35 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:35 wg wait finish
2023/03/10 23:08:35 ------ all executors finish execution
2023/03/10 23:08:35 exec time: 469
2023/03/10 23:08:35 ----- PS len: 5
2023/03/10 23:08:35 [CLIENT] executor 4 has 7 replies
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 2751 signal and 0 cover from userspace component
2023/03/10 23:08:35 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 1546 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 1177 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 355 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 944 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:35 [CLIENT] executor 3 has 7 replies
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 3081 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 415 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 550 signal and 0 cover from executor 3
2023/03/10 23:08:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:35 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:35 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 2844 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 1669 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 369 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 0 receive 99 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/10 23:08:35 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11591, flag collect 0
----- executor 2 signal number : 1546
----- executor 2 executes write_coverage_signal cov->size 4808, flag collect 0
----- executor 2 signal number : 944
----- executor 2 executes write_coverage_signal cov->size 4932, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 1425, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2872
time breakdown 2: 222, 248, 0
before receive testcase: 0 1
2023/03/10 23:08:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:35 mutate testcase with failures
2023/03/10 23:08:35 ----- mutateArg()
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/10 23:08:35 mutate testcase with failures
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/10 23:08:35 ----- insertCall()
2023/03/10 23:08:35 ----- generateCall 2462 openat openat
2023/03/10 23:08:35 ----- mutateArg()
2023/03/10 23:08:35 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:35 prog length: 2
2023/03/10 23:08:35 prog length: 5
2023/03/10 23:08:35 HasCrashFail:false HasNetFail:false
23:08:35 ---executing program 0:
---
---
---
lsetxattr$security_selinux(0x0, 0x0, 0x0, 0x0, 0x1)
lsetxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x5, 0x3, 0xd, 0xa59, 0xf5, "f97d9820bc0e445c413b159c82b8f1fffed57188954eb755c50ba05a498e735a0ec5ddbdd157afa9ab3a3d98bb794b2ce94b9a9e6eff2202e786b5a947f9f5210b29d6e9de26857c05a1a83a536aa65308b771150a238cff03e165ddc72326d6c4f2581c7f94ae84cca764da96ec582d4c8e65ac3eab19498026dce94a4cd6f56702805ec7ce1e85b95274260341144a5dfde6cd32312c8f4c0de4e1f692aece4440b480f559a9e594936cbc77e2347ac50be1ddae931597686762e804ce3276931f2d5b156e1219c0938ece7b5004d2c2ae225147c609a08cba801a1a38caf87da57f39ff87d730b751ca99af416499aef7f55e6d"}, 0xfe, 0x2)
---
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
openat(r0, &(0x7f00000000c0)='./file0\x00', 0x169040, 0x104)
stat(&(0x7f0000000a40)='./file0\x00', 0x0)
lsetxattr$security_ima(&(0x7f0000000100)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@sha1={0x1, "c0e14639935bf8e0270f5813b74b0800"}, 0x15, 0x1dcaacf2ee3407e4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 233, 244, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2200, prog_size 880
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 864
remove dir: /root/orangefs-client/dfs-0-8034
remove dir time 181
-----finish removing dir
receive_execute: 25, 249
receive_execute: 16, 241
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 43
executor 3 create dir /root/orangefs-client/dfs-0-8035 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8035
current dir: executor 4: /root/orangefs-client/dfs-0-8035
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
receive_execute: 4, 265
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 40, 264
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22522, write pid:22523
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7704, pid 22522, write pid:22523
----- executor 3 executes write_coverage_signal cov->size 7704, flag collect 0
----- executor 3 signal number : 2159
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 0, 0
execute_one time: 0, 20
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 307, 21, 0
before receive testcase: 0 1
receive_execute: 125, 329
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22555, write pid:22556
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2844
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22555, write pid:22556
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22555, write pid:22556
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22555, write pid:22557
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
----- executor 4 write_call_output, size 32765, pid 22555, write pid:22556
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 298
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 90, 2, 0
execute_one time: 0, 92
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2431
----- executor 0 executes write_coverage_signal cov->size 21341, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 864, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 1 receive reply, reply.done 1
time breakdown 4: 454, 94, 0
before receive testcase: 0 1
----- executor 0 signal number : 1046
----- executor 0 executes write_coverage_signal cov->size 6263, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15944, flag collect 0
time breakdown 1: 274, 177, 0
----- executor 2 signal number : 1850
----- executor 2 executes write_coverage_signal cov->size 8258, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1097
----- executor 2 executes write_coverage_signal cov->size 5115, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1750, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 3325
time breakdown 2: 257, 184, 0
before receive testcase: 0 1
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 346
----- executor 0 executes write_coverage_signal cov->size 4341, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3911
time breakdown 0: 269, 177, 0
before receive testcase: 0 1
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:36 wg wait finish
2023/03/10 23:08:36 ------ all executors finish execution
2023/03/10 23:08:36 exec time: 443
2023/03/10 23:08:36 ----- PS len: 5
2023/03/10 23:08:36 [CLIENT] executor 4 has 5 replies
2023/03/10 23:08:36 fuzzer receive 2844 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 298 signal and 0 cover from executor 4
2023/03/10 23:08:36 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 2431 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 1046 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 346 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:36 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 1850 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 1097 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:36 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:36 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:36 fuzzer receive 2159 signal and 0 cover from executor 3
2023/03/10 23:08:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:36 mutate testcase with failures
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 3764 symlink symlink
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 mutate testcase with failures
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 231 fsetxattr fsetxattr
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/10 23:08:36 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:36 prog length: 5
2023/03/10 23:08:36 prog length: 8
2023/03/10 23:08:36 HasCrashFail:false HasNetFail:false
23:08:36 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file0\x00', 0x12540, 0x0)
unlink(&(0x7f0000000100)='./file0\x00')
setxattr$smack_xattr_label(0x0, 0x0, 0x0, 0x3, 0x0)
symlink(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='./file1\x00', 0x8, 0x0)
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x10000, 0x4)
setxattr$incfs_size(&(0x7f0000000280)='./file0/file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x8, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x2, 0x1)
setxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='security.apparmor\x00', &(0x7f00000000c0)='l\x00', 0x2, 0x0)
fcntl$setstatus(r0, 0x4, 0x90b10b8a2f43b15e)
fsetxattr(r0, &(0x7f0000000340)=ANY=[@ANYBLOB="6141726d6f72d8b87deae60a3dbc0b000000000000009bcdf1bd08f44ad7b635bd34b2ed07d038435b056487f46bb674e255990e2a6b59c4fd5e4e61e1c11d47034b512736000000000000000000b0adde8571910f7e346340a0042fadffef32350c5e9f3edd09235537b7f497674713f8c9a3cbda84f502adc6f6c864531960832df53faa3ae48ece6b0a72ff88f85d2f6b09f1ca61f3e641ad2a"], &(0x7f0000000140)='\x00', 0x1, 0x2)
r1 = openat(r0, &(0x7f0000000180)='./file0/file0\x00', 0xa640, 0x0)
fcntl$notify(r1, 0x402, 0x80000001)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
remove dir: /root/orangefs-client/dfs-0-8035
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2152, prog_size 1832
remove dir time 86
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8036
mkdir time 76
executor 3 create dir /root/orangefs-client/dfs-0-8036 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8036
receive_execute: 18, 169
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 175
receive_execute: 24, 182
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 150, 189
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20581, pid 22524, write pid:22525
----- executor 3 executes write_coverage_signal cov->size 20581, flag collect 0
----- executor 3 signal number : 3090
----- completed 1
execute_one loop: 0, 0, 36
cover_reset in execute_call
receive_execute: 38, 236
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22559, write pid:22560
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
time breakdown 4: 274, 10, 0
before receive testcase: 0 1
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22524, write pid:22526
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23714, pid 22524, write pid:22525
----- executor 3 executes write_coverage_signal cov->size 23714, flag collect 0
----- executor 3 signal number : 662
----- completed 3
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22524, write pid:22526
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 446
----- completed 4
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 32765, pid 22524, write pid:22525
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 189
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 52
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
executor 3, execute_one inner time: 232, 105, 0
execute_one time: 1, 337
time breakdown 3: 339, 347, 0
before receive testcase: 0 1
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2859
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1674
----- executor 1 executes write_coverage_signal cov->size 10176, flag collect 0
----- executor 1 signal number : 334
----- executor 1 executes write_coverage_signal cov->size 4544, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 4957
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5227, flag collect 0
----- executor 0 signal number : 1486
----- executor 0 executes write_coverage_signal cov->size 2402, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 7323, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2368, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2194
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 206, 368, 0
before receive testcase: 0 0
----- executor 2 signal number : 2760
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1137
----- executor 2 executes write_coverage_signal cov->size 11108, flag collect 0
----- executor 2 signal number : 356
----- executor 2 executes write_coverage_signal cov->size 7266, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4342
time breakdown 2: 187, 381, 0
before receive testcase: 0 1
2023/03/10 23:08:36 for select break: 1
2023/03/10 23:08:36 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:36 wg wait finish
2023/03/10 23:08:36 ------ all executors finish execution
2023/03/10 23:08:36 exec time: 557
2023/03/10 23:08:36 ----- PS len: 5
2023/03/10 23:08:36 [CLIENT] executor 4 has 8 replies
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:36 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 1486 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:36 [SERVER] executor 1 has 4 replies
time breakdown 0: 184, 381, 0
before receive testcase: 0 1
2023/03/10 23:08:36 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 2760 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 1137 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 2859 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 1674 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:36 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:36 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:36 fuzzer receive 3090 signal and 0 cover from executor 3
2023/03/10 23:08:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:36 fuzzer receive 662 signal and 0 cover from executor 3
2023/03/10 23:08:36 fuzzer receive 446 signal and 0 cover from executor 3
2023/03/10 23:08:36 fuzzer receive 189 signal and 0 cover from executor 3
2023/03/10 23:08:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:36 mutate testcase with failures
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/10 23:08:36 ----- insertCall()
2023/03/10 23:08:36 ----- generateCall 248 fstat fstat
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 mutate testcase with failures
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 ----- mutateArg()
2023/03/10 23:08:36 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:36 prog length: 5
2023/03/10 23:08:36 prog length: 2
2023/03/10 23:08:36 HasCrashFail:false HasNetFail:false
23:08:36 ---executing program 0:
---
---
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x81)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x40040, 0x0)
fcntl$setstatus(r0, 0x4, 0x2c00)
fstat(0xffffffffffffffff, &(0x7f0000000100))
stat(0x0, 0x0)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lseek(r0, 0x401, 0x4)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1840, prog_size 264
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 504
remove dir: /root/orangefs-client/dfs-0-8036
remove dir time 17
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-8037 successfully
receive_execute: 18, 55
current dir: executor 3: /root/orangefs-client/dfs-0-8037
receive_execute: 26, 53
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 61, 48
receive_execute: 30, 66
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 15, 0
executor 1 before execute_one
current dir: executor 4: /root/orangefs-client/dfs-0-8037
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 4
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22529, write pid:22530
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22529, write pid:22531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22529, write pid:22531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22529, write pid:22531
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
receive_execute: 322, 172
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21786, pid 22529, write pid:22530
----- executor 3 executes write_coverage_signal cov->size 21786, flag collect 0
----- executor 3 signal number : 3086
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 99, 1, 0
execute_one time: 10, 100
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 109, 147, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22562, write pid:22564
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
----- executor 4 write_call_output, size 26031, pid 22562, write pid:22563
----- executor 4 executes write_coverage_signal cov->size 26031, flag collect 0
----- executor 4 signal number : 2852
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 55, 0, 0
execute_one time: 0, 55
time breakdown 4: 494, 56, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2750
----- executor 2 executes write_coverage_signal cov->size 20646, flag collect 0
----- executor 2 signal number : 1051
----- executor 2 executes write_coverage_signal cov->size 3770, flag collect 0
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 3433, flag collect 0
----- executor 2 signal number : 77
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 21020, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 865, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 2464
----- executor 0 executes write_coverage_signal cov->size 19391, flag collect 0
----- executor 0 signal number : 1243
----- executor 0 executes write_coverage_signal cov->size 4695, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2927, flag collect 0
----- executor 0 signal number : 79
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:37 wg wait finish
2023/03/10 23:08:37 ------ all executors finish execution
2023/03/10 23:08:37 exec time: 252
2023/03/10 23:08:37 ----- PS len: 5
2023/03/10 23:08:37 [CLIENT] executor 4 has 2 replies
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 2852 signal and 0 cover from executor 4
2023/03/10 23:08:37 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 2464 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 1243 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:37 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 2750 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 1051 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:37 [CLIENT] executor 3 has 5 replies
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/10 23:08:37 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:37 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
time breakdown 1: 99, 173, 0
before receive testcase: 0 1
2023/03/10 23:08:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:37 mutate testcase with failures
2023/03/10 23:08:37 ----- insertCall()
2023/03/10 23:08:37 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/10 23:08:37 mutate testcase with failures
2023/03/10 23:08:37 ----- insertCall()
2023/03/10 23:08:37 ----- generateCall 2809 rename rename
2023/03/10 23:08:37 ----- insertCall()
2023/03/10 23:08:37 ----- generateCall 2346 listxattr listxattr
2023/03/10 23:08:37 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:37 prog length: 8
2023/03/10 23:08:37 prog length: 13
2023/03/10 23:08:37 HasCrashFail:false HasNetFail:false
23:08:37 ---executing program 0:
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x2, 0x2)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
listxattr(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680)=""/70, 0x46)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0), &(0x7f0000000800)=@md5={0x1, "d9ec59b0fa31debfdea91896ff37018e"}, 0x11, 0x2)
lsetxattr$user(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)='y\x00', 0x2, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)={0x0, 0xfb, 0xf2, 0x4, 0x9, "110f4c464167969254ac0146c0cb1ce8", "34a865b71ff9fbea4944f85c15b2ae3c0744ac1580720400542c40f79e0ec9a77c38d047f83906846d26d75ad03558e0d9d8e866600db2378dfa6a1bdc89e705d0d49e249b29f2c28b622f6fda2e04cba881d64078bc74a6e78c7a3b38a3fd69d7d24ce5f04cc9be849685acca7ec75c2d56cb07172495869be7132fd38b4dd2e5e4deb663e54c1e0be84d75185fdfdd27660a7dcecd5f69914ff99ce6042473d797c1ec2419812055a252dc716e8c2c10181206995df65d11e886fb1ad4d8fffff3408d336c15fcf7a167efd32e38960111a1c4834044bffec19134cc"}, 0xf2, 0x1)
ioctl(r0, 0x401, &(0x7f00000009c0)="21e8a5e1da4af499b325016805f67b97c8ec4cba6b468c041e1c42afe95421b7feefd36657b764ff43038bd3417d")
listxattr(&(0x7f0000000ac0)='./file1\x00', &(0x7f0000000b00)=""/198, 0xc6)
---
lsetxattr$security_capability(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x9, 0x4}, {0x0, 0x40}]}, 0x14, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file1\x00', 0x0, &(0x7f0000000140), 0x2, 0x1)
rename(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)=0x3, 0x8, 0x2)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), &(0x7f0000000340)='\x00', 0x1, 0x2)
renameat(0xffffffffffffffff, &(0x7f0000000380)='./file1\x00', 0xffffffffffffff9c, &(0x7f00000003c0)='\x00')
readlink(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0)=""/81, 0x51)
listxattr(&(0x7f0000000440)='./file1/file0\x00', &(0x7f0000000600)=""/63, 0x3f)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
sync()
stat(&(0x7f0000000a40)='./file0\x00', 0x0)
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f0000000940)='system.posix_acl_access\x00', &(0x7f0000000b80)={{}, {0x1, 0x6}, [{0x2, 0x7, 0xee00}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x4}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x1, 0xee01}, {0x2, 0x4, 0xee01}], {0x4, 0x2}, [{0x8, 0x1, 0xee00}, {}, {0x8, 0x2}, {0x8, 0x2}, {0x8, 0x1}, {0x8, 0x6, 0xee00}], {}, {0x20, 0x4}}, 0x84, 0x7)
rename(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000400)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2 server cover_cnt 4 output_pos_value 4231
time breakdown 2: 80, 184, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0 server cover_cnt 4 output_pos_value 4085
time breakdown 0: 74, 196, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2232
remove dir: /root/orangefs-client/dfs-0-8037
----- executor 4 receive testcase
executor 4: prog_data_offset 3568, prog_size 4632
remove dir time 49
-----finish removing dir
receive_execute: 15, 150
receive_execute: 7, 151
current dir: executor 4: /root/orangefs-client/dfs-0-8038
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 91
executor 3 create dir /root/orangefs-client/dfs-0-8038 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8038
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 1
receive_execute: 2, 177
receive_execute: 31, 177
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 45, 180
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7103, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 7103, flag collect 0
----- executor 3 signal number : 2068
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 9010, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 9010, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 20375, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 20375, flag collect 0
----- executor 3 signal number : 1032
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 14587, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 14587, flag collect 0
----- executor 3 signal number : 400
----- completed 6
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22533, write pid:22534
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 7, 0
execute_one time: 0, 27
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 225, 29, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 23721, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 23721, flag collect 0
----- executor 4 signal number : 743
----- completed 3
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 27256, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 27256, flag collect 0
----- executor 4 signal number : 481
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 9010, pid 22565, write pid:22566
----- executor 4 executes write_coverage_signal cov->size 9010, flag collect 0
----- executor 4 signal number : 28
----- completed 13
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 36
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 4, execute_one inner time: 150, 148, 0
execute_one time: 3, 298
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 208, 302, 0
before receive testcase: 0 0
2023/03/10 23:08:37 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2452
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1267
----- executor 2 executes write_coverage_signal cov->size 16814, flag collect 0
----- executor 2 signal number : 362
----- executor 2 executes write_coverage_signal cov->size 17244, flag collect 0
----- executor 2 signal number : 80
executor 2 server cover_cnt 4 output_pos_value 4174
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 7140, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1890, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 158, 350, 0
before receive testcase: 0 1
time breakdown 2: 165, 355, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4486, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2378, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 6928, flag collect 0
----- executor 0 signal number : 285
----- executor 0 executes write_coverage_signal cov->size 2140, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2135
time breakdown 0: 180, 327, 0
before receive testcase: 0 1
2023/03/10 23:08:37 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 for select break: 1
2023/03/10 23:08:37 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:37 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:37 wg wait finish
2023/03/10 23:08:37 ------ all executors finish execution
2023/03/10 23:08:37 exec time: 521
2023/03/10 23:08:37 ----- PS len: 5
2023/03/10 23:08:37 [CLIENT] executor 4 has 13 replies
2023/03/10 23:08:37 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 743 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 481 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:37 fuzzer receive 28 signal and 0 cover from executor 4
2023/03/10 23:08:37 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 285 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:37 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:37 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:37 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 2452 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 1267 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 362 signal and 0 cover from userspace component
2023/03/10 23:08:37 ------- fuzzer executor 2 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:37 [CLIENT] executor 3 has 8 replies
2023/03/10 23:08:37 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 1032 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:37 mutate testcase with failures
2023/03/10 23:08:37 ----- insertCall()
2023/03/10 23:08:37 ----- generateCall 2458 open open
2023/03/10 23:08:37 mutate testcase with failures
2023/03/10 23:08:37 ----- insertCall()
2023/03/10 23:08:37 ----- generateCall 251 ftruncate ftruncate
2023/03/10 23:08:37 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:37 prog length: 4
2023/03/10 23:08:37 prog length: 1
2023/03/10 23:08:37 HasCrashFail:false HasNetFail:false
23:08:37 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file0\x00', 0x12540, 0x0)
unlink(&(0x7f0000000100)='./file0\x00')
setxattr$smack_xattr_label(0x0, 0x0, 0x0, 0x3, 0x0)
open(&(0x7f0000000000)='./file0\x00', 0x20500, 0xc)
---
ftruncate(0xffffffffffffffff, 0xce)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1848, prog_size 80
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/orangefs-client/dfs-0-8038
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 116
-----finish removing dir
receive_execute: 27, 193
current dir: executor 4: /root/orangefs-client/dfs-0-8039
receive_execute: 17, 198
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 72
executor 3 create dir /root/orangefs-client/dfs-0-8039 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8039
receive_execute: 23, 207
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 305, 216
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 33, 264
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22569, write pid:22570
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
time breakdown 4: 297, 1, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 20670, pid 22536, write pid:22537
----- executor 3 executes write_coverage_signal cov->size 20670, flag collect 0
----- executor 3 signal number : 3093
----- completed 1
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22536, write pid:22537
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22536, write pid:22538
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 687
----- completed 3
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 7790, pid 22536, write pid:22537
----- executor 3 executes write_coverage_signal cov->size 7790, flag collect 0
----- executor 3 signal number : 44
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 199, 51, 0
execute_one time: 1, 250
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 521, 304, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24259, flag collect 0
----- executor 2 signal number : 2111
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1571
----- executor 2 executes write_coverage_signal cov->size 8631, flag collect 0
----- executor 2 signal number : 299
----- executor 2 executes write_coverage_signal cov->size 3228, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 4071
time breakdown 2: 221, 326, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2772
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1139
----- executor 0 executes write_coverage_signal cov->size 10805, flag collect 0
----- executor 0 signal number : 366
----- executor 0 executes write_coverage_signal cov->size 8749, flag collect 0
----- executor 0 signal number : 79
executor 0 server cover_cnt 4 output_pos_value 4369
----- executor 1 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 6090, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1459, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
time breakdown 0: 230, 325, 0
before receive testcase: 0 1
time breakdown 1: 236, 329, 0
before receive testcase: 0 1
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:38 wg wait finish
2023/03/10 23:08:38 ------ all executors finish execution
2023/03/10 23:08:38 exec time: 551
2023/03/10 23:08:38 ----- PS len: 5
2023/03/10 23:08:38 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:38 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:38 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 2772 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 1139 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 366 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:38 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:38 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 2111 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 1571 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 299 signal and 0 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:38 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:38 fuzzer receive 3093 signal and 0 cover from executor 3
2023/03/10 23:08:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:38 fuzzer receive 687 signal and 0 cover from executor 3
2023/03/10 23:08:38 fuzzer receive 44 signal and 0 cover from executor 3
2023/03/10 23:08:38 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:38 prog length: 4
2023/03/10 23:08:38 prog length: 1
2023/03/10 23:08:38 HasCrashFail:false HasNetFail:false
23:08:38 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file0\x00', 0x12540, 0x0)
unlink(&(0x7f0000000100)='./file0\x00')
setxattr$smack_xattr_label(0x0, 0x0, 0x0, 0x3, 0x0)
open(&(0x7f0000000000)='./file0\x00', 0x20500, 0xc)
---
ftruncate(0xffffffffffffffff, 0xce)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1848, prog_size 80
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/orangefs-client/dfs-0-8039
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 222
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8040
receive_execute: 17, 286
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 63
executor 3 create dir /root/orangefs-client/dfs-0-8040 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8040
receive_execute: 36, 286
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 15, 282
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 24, 287
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
----- executor 3 write_call_output, size 20337, pid 22540, write pid:22541
----- executor 3 executes write_coverage_signal cov->size 20337, flag collect 1
----- executor 3 cover number : 2539, signal number : 3072
----- completed 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
receive_execute: 289, 329
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22571, write pid:22572
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 4 cover number : 0, signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 618, 2, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 23245, pid 22540, write pid:22541
----- executor 3 executes write_coverage_signal cov->size 23245, flag collect 1
----- executor 3 cover number : 2283, signal number : 671
----- completed 2
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22540, write pid:22541
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7072, pid 22540, write pid:22541
----- executor 3 executes write_coverage_signal cov->size 7072, flag collect 1
----- executor 3 cover number : 1750, signal number : 35
----- completed 4
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 77, 0
execute_one time: 0, 77
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
time breakdown 3: 322, 78, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 17320, flag collect 1
----- executor 0 cover number : 1933, signal number : 2376
----- executor 0 executes write_coverage_signal cov->size 23778, flag collect 1
----- executor 0 cover number : 1347, signal number : 1655
----- executor 0 executes write_coverage_signal cov->size 2007, flag collect 1
----- executor 0 cover number : 282, signal number : 294
----- executor 0 executes write_coverage_signal cov->size 1565, flag collect 1
----- executor 0 cover number : 102, signal number : 80
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 1
----- executor 2 cover number : 12, signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1470, flag collect 1
----- executor 2 cover number : 114, signal number : 140
----- executor 2 executes write_coverage_signal cov->size 486, flag collect 1
----- executor 2 cover number : 41, signal number : 44
executor 2 server cover_cnt 3 output_pos_value 374
2023/03/10 23:08:38 for select break: 1
----- executor 1 cover number : 2258, signal number : 2848
----- executor 1 executes write_coverage_signal cov->size 25559, flag collect 1
time breakdown 2: 311, 90, 0
before receive testcase: 0 1
executor 0 server cover_cnt 4 output_pos_value 8082
time breakdown 0: 303, 91, 0
before receive testcase: 0 1
----- executor 1 cover number : 956, signal number : 1129
----- executor 1 executes write_coverage_signal cov->size 5390, flag collect 1
2023/03/10 23:08:38 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:38 for select break: 1
2023/03/10 23:08:38 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:38 wg wait finish
2023/03/10 23:08:38 ------ all executors finish execution
2023/03/10 23:08:38 exec time: 388
2023/03/10 23:08:38 ----- PS len: 5
2023/03/10 23:08:38 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:38 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:38 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 2376 signal and 1933 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 1655 signal and 1347 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 294 signal and 282 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 0 receive 80 signal and 102 cover from userspace component
2023/03/10 23:08:38 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 2848 signal and 2258 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 1129 signal and 956 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 344 signal and 315 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 1 receive 76 signal and 100 cover from userspace component
----- executor 1 cover number : 315, signal number : 344
----- executor 1 executes write_coverage_signal cov->size 4018, flag collect 1
----- executor 1 cover number : 100, signal number : 76
executor 1 server cover_cnt 4 output_pos_value 8039
time breakdown 1: 297, 101, 0
before receive testcase: 0 1
2023/03/10 23:08:38 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 13 signal and 12 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 140 signal and 114 cover from userspace component
2023/03/10 23:08:38 ------- fuzzer executor 2 receive 44 signal and 41 cover from userspace component
2023/03/10 23:08:38 [CLIENT] executor 3 has 4 replies
2023/03/10 23:08:38 fuzzer receive 3072 signal and 2539 cover from executor 3
2023/03/10 23:08:38 fuzzer receive 671 signal and 2283 cover from executor 3
2023/03/10 23:08:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:38 fuzzer receive 35 signal and 1750 cover from executor 3
2023/03/10 23:08:38 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:38 ----- triage return due to empty signal call #3 open
2023/03/10 23:08:38 mutate testcase with failures
2023/03/10 23:08:38 ----- insertCall()
2023/03/10 23:08:38 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:38 ----- insertCall()
2023/03/10 23:08:38 ----- generateCall 2458 open open
2023/03/10 23:08:38 mutate testcase with failures
2023/03/10 23:08:38 ----- insertCall()
2023/03/10 23:08:38 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/10 23:08:38 ----- insertCall()
2023/03/10 23:08:38 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/10 23:08:38 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:38 prog length: 6
2023/03/10 23:08:38 prog length: 3
2023/03/10 23:08:38 HasCrashFail:false HasNetFail:false
23:08:38 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
setxattr(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="747275737465642e74d9cab202cbbda7d0a2326e7187726f726967696e00"], &(0x7f0000000180)='\x00', 0x1, 0x3)
open(&(0x7f00000001c0)='./file1\x00', 0x511000, 0x1a9)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file1\x00')
chmod(&(0x7f0000000000)='./file1\x00', 0x14)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x2100, 0x4)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000000040), &(0x7f0000000240)=ANY=[@ANYBLOB="00fbe004003a4477bd34197712ec9bdc9881440eae2cc55572e79b652460c77115b4fc7e0bf5bec1a959f8e6751b01017993ca6b564df80faac0c8f1a867dffd2e34391dc7cc62ce0bab4589799b0c02004cd70ded6e0b6fe54df37eb44616bf0cac923e791df0ea4ce1d3194e782ba0d44df2788378e2b483a775bd31ff11a26755ffa565738d8905748cb8516aea2806de054d0e00e1561a33b55a3094db7779f99321fbe903b69c66c69ffcc2dca97538d8aff1763be7c160f4ccdd98437f866449209efccef172dcbd4b813c2fac1f79a832486a0f694ef4365a6a728c7396234de31e962ff345c3282b430b3082cd422842ec8ccc5314f84e5cf2e5a5b973e078522a2f6950443a3107fd07f6a2ebb071c962ad303dc510f80f38376e4567a8ddc4cb6112d29c91accdca6c611cd833c565007e2d92ffde0e8beefad52743ac30dbf46a38a38b0f74b14b0fc0726599a4e0933892"], 0xe0, 0x0)
setxattr$security_selinux(&(0x7f0000000180)='./file0/file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='system_u:object_r:dhcpd_initrc_exec_t:s0\x00', 0x29, 0x3)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 4: prog_data_offset 2368, prog_size 1072
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1032
remove dir: /root/orangefs-client/dfs-0-8040
remove dir time 76
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-8041
receive_execute: 13, 264
mkdir time 180
executor 3 create dir /root/orangefs-client/dfs-0-8041 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8041
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 263
receive_execute: 13, 273
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 28, 270
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 60, 305
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7985, pid 22573, write pid:22574
----- executor 4 executes write_coverage_signal cov->size 7985, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22573, write pid:22574
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 4 receive reply, reply.done 1
----- executor 4 write_call_output, size 7985, pid 22573, write pid:22574
----- executor 4 executes write_coverage_signal cov->size 7985, flag collect 0
----- executor 4 signal number : 15
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 4, execute_one inner time: 5, 3, 0
execute_one time: 1, 8
time breakdown 4: 365, 9, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22542, write pid:22544
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12733, pid 22542, write pid:22544
----- executor 3 executes write_coverage_signal cov->size 12733, flag collect 0
----- executor 3 signal number : 2688
----- completed 2
----- executor 3 write_call_output, size 20842, pid 22542, write pid:22543
----- executor 3 executes write_coverage_signal cov->size 20842, flag collect 0
----- executor 3 signal number : 821
----- completed 3
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22542, write pid:22543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4834, pid 22542, write pid:22543
----- executor 3 executes write_coverage_signal cov->size 4834, flag collect 0
----- executor 3 signal number : 35
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22542, write pid:22543
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 25
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 106, 2, 0
execute_one time: 1, 108
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 305, 110, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 156, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2730, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 702, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2555
----- executor 0 executes write_coverage_signal cov->size 22156, flag collect 0
----- executor 0 signal number : 1057
----- executor 0 executes write_coverage_signal cov->size 5363, flag collect 0
----- executor 0 signal number : 347
----- executor 0 executes write_coverage_signal cov->size 4653, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4048
time breakdown 0: 286, 129, 0
before receive testcase: 0 0
time breakdown 2: 277, 140, 0
before receive testcase: 0 0
2023/03/10 23:08:39 for select break: 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 31919, flag collect 0
----- executor 1 signal number : 2345
----- executor 1 executes write_coverage_signal cov->size 22110, flag collect 0
----- executor 1 signal number : 1179
----- executor 1 executes write_coverage_signal cov->size 4221, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 3376, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3900
2023/03/10 23:08:39 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:39 wg wait finish
2023/03/10 23:08:39 ------ all executors finish execution
2023/03/10 23:08:39 exec time: 419
2023/03/10 23:08:39 ----- PS len: 5
2023/03/10 23:08:39 [CLIENT] executor 4 has 3 replies
2023/03/10 23:08:39 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:39 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 2555 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 1057 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 347 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/10 23:08:39 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 2345 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 1179 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:39 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:39 [CLIENT] executor 3 has 6 replies
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 2688 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 821 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:39 mutate testcase with failures
2023/03/10 23:08:39 ----- insertCall()
2023/03/10 23:08:39 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/10 23:08:39 mutate testcase with failures
2023/03/10 23:08:39 ----- insertCall()
2023/03/10 23:08:39 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/10 23:08:39 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:39 prog length: 17
2023/03/10 23:08:39 prog length: 18
2023/03/10 23:08:39 HasCrashFail:false HasNetFail:false
23:08:39 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='com.apple.system.Security\x00')
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@random={'system.', 'com.apple.system.Security\x00'}, &(0x7f0000000100)=""/121, 0x79)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'U+', 0x3ff}, 0x16, 0x3)
setxattr$security_evm(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x2, 0x0)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file1\x00', 0x0, &(0x7f0000000540)='system_u:object_r:tape_device_t:s0\x00', 0x23, 0x0)
lsetxattr$security_ima(0x0, 0x0, &(0x7f0000000600)=@md5={0x1, "9c5d58fc481f280f566ab202b428edfa"}, 0x11, 0x1)
readlinkat(r0, &(0x7f0000000700)='./file0\x00', &(0x7f0000000740), 0x0)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', 0x0, 0x0, 0x0, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)={0x0, 0xfb, 0x15, 0x0, 0x9, "110f4c464167969254ac0146c0cb1ce8"}, 0x15, 0x1)
ioctl(0xffffffffffffffff, 0x401, &(0x7f00000009c0))
setxattr$trusted_overlay_opaque(0xfffffffffffffffe, &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
lremovexattr(0x0, &(0x7f0000000a80)=@known='user.syz\x00')
listxattr(&(0x7f0000000ac0)='./file1\x00', &(0x7f0000000b00)=""/198, 0xc6)
removexattr(&(0x7f0000000cc0)='./file0\x00', &(0x7f0000000d00)=@random={'system.', 'com.apple.system.Security\x00'})
dup(0xffffffffffffffff)
---
lsetxattr$security_capability(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x0, 0x4}, {0x3, 0x40}]}, 0x14, 0x0)
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
rename(0x0, &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(0x0, 0x0, &(0x7f0000000280), 0x8, 0x2)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', 0x0, &(0x7f0000000340)='\x00', 0x1, 0x0)
renameat(0xffffffffffffffff, 0x0, 0xffffffffffffff9c, 0x0)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000480)='./file1\x00', 0x0, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
readlink(&(0x7f0000000600)='./file0\x00', 0x0, 0x0)
sync()
r0 = openat(0xffffffffffffffff, 0x0, 0x0, 0xd5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740), &(0x7f0000000780)='./file2\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f00000007c0)='./file1/file0\x00', &(0x7f0000000800), &(0x7f0000000840)={0x0, 0xfb, 0x15, 0x4, 0x0, "282248737f704aae236a470f7797faa7"}, 0x15, 0x3)
stat(0x0, 0x0)
fstat(r0, &(0x7f0000000b00))
fcntl$setpipe(r0, 0x407, 0x7)
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f0000000940)='system.posix_acl_access\x00', 0x0, 0x0, 0x7)
---

end of program
----- executor 0 receive testcase
----- executor 4 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3712
remove dir: /root/orangefs-client/dfs-0-8041
executor 0: prog_data_offset 1312, prog_size 8
executor 4: prog_data_offset 5048, prog_size 3456
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 276, 146, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 120
-----finish removing dir
mkdir time 141
executor 3 create dir /root/orangefs-client/dfs-0-8042 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8042
current dir: executor 4: /root/orangefs-client/dfs-0-8042
receive_execute: 26, 253
receive_execute: 31, 261
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 261
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7058, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 2063
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
----- executor 3 write_call_output, size 7058, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 7058, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7058, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 3
receive_execute: 19, 261
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7058, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 7058, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 20550, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 20550, flag collect 0
----- executor 3 signal number : 1034
----- completed 6
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 14535, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 14535, flag collect 0
----- executor 3 signal number : 400
----- completed 11
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22545, write pid:22546
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 107, 340
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 21
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 55, 36, 0
execute_one time: 0, 92
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 292, 97, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22578
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22578
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22578
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22578
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
----- executor 4 write_call_output, size 19891, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 19891, flag collect 0
----- executor 4 signal number : 2815
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8133, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 8133, flag collect 0
----- executor 4 signal number : 72
----- completed 7
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 676
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22576, write pid:22577
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 73, 5, 0
execute_one time: 1, 78
time breakdown 4: 447, 80, 0
before receive testcase: 0 1
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 2 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2263
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1042
----- executor 1 executes write_coverage_signal cov->size 13292, flag collect 0
----- executor 1 signal number : 382
----- executor 1 executes write_coverage_signal cov->size 11741, flag collect 0
----- executor 1 signal number : 80
executor 1 server cover_cnt 4 output_pos_value 3780
time breakdown 1: 270, 164, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 762, flag collect 0
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 3150, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 4 output_pos_value 495
time breakdown 2: 279, 167, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 29400, flag collect 0
----- executor 0 signal number : 2779
----- executor 0 executes write_coverage_signal cov->size 22615, flag collect 0
----- executor 0 signal number : 1272
----- executor 0 executes write_coverage_signal cov->size 4431, flag collect 0
----- executor 0 signal number : 301
----- executor 0 executes write_coverage_signal cov->size 3326, flag collect 0
----- executor 0 signal number : 82
executor 0 server cover_cnt 4 output_pos_value 4447
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:39 for select break: 1
2023/03/10 23:08:39 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:39 wg wait finish
2023/03/10 23:08:39 ------ all executors finish execution
2023/03/10 23:08:39 exec time: 441
time breakdown 0: 291, 168, 0
before receive testcase: 0 1
2023/03/10 23:08:39 ----- PS len: 5
2023/03/10 23:08:39 [CLIENT] executor 4 has 18 replies
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 2815 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 72 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 676 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:39 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 2779 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 1272 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 301 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/10 23:08:39 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:39 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 2263 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 1042 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 382 signal and 0 cover from userspace component
2023/03/10 23:08:39 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:39 [CLIENT] executor 3 has 17 replies
2023/03/10 23:08:39 fuzzer receive 2063 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 1034 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:39 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:39 mutate testcase with failures
2023/03/10 23:08:39 ----- insertCall()
2023/03/10 23:08:39 ----- generateCall 2341 lchown lchown
2023/03/10 23:08:39 ----- mutateArg()
2023/03/10 23:08:39 mutate testcase with failures
2023/03/10 23:08:39 ----- mutateArg()
2023/03/10 23:08:39 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:39 prog length: 18
2023/03/10 23:08:39 prog length: 17
2023/03/10 23:08:39 HasCrashFail:false HasNetFail:false
23:08:39 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000580)=@random={'system.', '\v\xc5\xc9\xe3\x17\xf3\x83\xdc\x9c\xf9\xe7\xbf;\xf8\x94\xa6F\x0fi9~\xe1\xf7\x88\x1a\v\xbfH\x95\n\xff\xe7w\x0e\xcdn\xc7\xe2\xfb]h\x97\fY\xa6\xa0 \xfe&sv\xb2\x05\xf4}\xd2\x8bH\xb0\xdbT\xb39\x93J\xbd\xda\xc32\aj;\xf2\xad\xf4\xf37\x9c-p\xc1[Lf^\x7f\xf3i\x88rj\xe9 \xc5\x98\x01\xa1W\x8c\xd9t\t>nt4\xd6\xd6#'})
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@random={'system.', 'com.apple.system.Security\x00'}, &(0x7f0000000100)=""/121, 0x79)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'U+', 0x3ff}, 0x16, 0x3)
setxattr$security_evm(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)=@sha1={0x1, "0f3db484809efb554de122c87c1057b95ebd8775"}, 0x15, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x2, 0x0)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x100)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file1\x00', 0x0, &(0x7f0000000540)='system_u:object_r:tape_device_t:s0\x00', 0x23, 0x0)
lsetxattr$security_ima(0x0, 0x0, &(0x7f0000000600)=@md5={0x1, "9c5d58fc481f280f566ab202b428edfa"}, 0x11, 0x1)
readlinkat(r0, &(0x7f0000000700)='./file0\x00', &(0x7f0000000740), 0x0)
setxattr$security_ima(&(0x7f0000000780)='./file1\x00', 0x0, 0x0, 0x0, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880), &(0x7f00000008c0)=ANY=[@ANYBLOB="00fb150009110f4c464167969254ac011ce8"], 0x15, 0x1)
ioctl(0xffffffffffffffff, 0x401, &(0x7f00000009c0))
lremovexattr(0x0, &(0x7f0000000a80)=@known='user.syz\x00')
listxattr(&(0x7f0000000ac0)='./file1\x00', &(0x7f0000000b00)=""/198, 0xc6)
fstat(r0, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000240)='./file1/file0\x00', r1, 0xffffffffffffffff)
removexattr(&(0x7f0000000cc0)='./file0\x00', &(0x7f0000000d00)=@random={'system.', 'com.apple.system.Security\x00'})
dup(0xffffffffffffffff)
---
lsetxattr$security_capability(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x0, 0x4}, {0x3, 0x40}]}, 0x14, 0x0)
lsetxattr$trusted_overlay_opaque(0x0, &(0x7f0000000100), 0x0, 0x0, 0x0)
rename(0x0, &(0x7f00000001c0)='./file0\x00')
setxattr$incfs_size(0x0, 0x0, &(0x7f0000000280), 0x8, 0x2)
lsetxattr$user(&(0x7f00000002c0)='./file1\x00', 0x0, &(0x7f0000000340)='\x00', 0x1, 0x0)
renameat(0xffffffffffffffff, 0x0, 0xffffffffffffff9c, 0x0)
symlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='./file0\x00')
readlink(&(0x7f0000000480)='./file1\x00', 0x0, 0x0)
setxattr$smack_xattr_label(&(0x7f00000000c0)='./file1/file0\x00', &(0x7f0000000580)='security.SMACK64IPOUT\x00', &(0x7f00000005c0)={'%!'}, 0x3, 0x1)
readlink(&(0x7f0000000600)='./file0\x00', 0x0, 0x0)
sync()
r0 = openat(0xffffffffffffffff, 0x0, 0x0, 0xd5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740), &(0x7f0000000780)='./file2\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f00000007c0)='./file1/file0\x00', &(0x7f0000000800), &(0x7f0000000840)={0x0, 0xfb, 0x15, 0x4, 0x0, "282248737f704aae236a470f7797faa7"}, 0x15, 0x3)
stat(0x0, 0x0)
fstat(r0, &(0x7f0000000b00))
fsetxattr$system_posix_acl(0xffffffffffffffff, &(0x7f0000000940)='system.posix_acl_access\x00', 0x0, 0x0, 0x7)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3696
remove dir: /root/orangefs-client/dfs-0-8042
----- executor 4 receive testcase
executor 4: prog_data_offset 5032, prog_size 3336
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 215
-----finish removing dir
mkdir time 115
executor 3 create dir /root/orangefs-client/dfs-0-8043 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8043
receive_execute: 14, 332
current dir: executor 4: /root/orangefs-client/dfs-0-8043
receive_execute: 10, 333
receive_execute: 86, 334
receive_execute: 2, 336
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
----- executor 3 write_call_output, size 7110, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 7110, flag collect 0
----- executor 3 signal number : 2068
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 7350, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 7350, flag collect 0
----- executor 3 signal number : 28
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7110, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 7110, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
receive_execute: 25, 386
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7590, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 7590, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 7110, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 7110, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 8453, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 8453, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 8453, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 8453, flag collect 0
----- executor 4 signal number : 15
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22581
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22582
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22582
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22582
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22553
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
----- executor 3 write_call_output, size 22311, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 22311, flag collect 0
----- executor 3 signal number : 1030
----- completed 9
----- executor 3 write_call_output, size 13228, pid 22550, write pid:22552
----- executor 3 executes write_coverage_signal cov->size 13228, flag collect 0
----- executor 3 signal number : 415
----- completed 10
execute_one loop: 0, 0, 47
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 778
----- completed 11
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 13188, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 13188, flag collect 0
----- executor 3 signal number : 196
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
----- executor 4 write_call_output, size 0, pid 22579, write pid:22581
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 13
----- executor 4 write_call_output, size 0, pid 22579, write pid:22582
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 14
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22579, write pid:22580
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 184, 2, 0
execute_one time: 1, 186
time breakdown 4: 411, 188, 0
before receive testcase: 0 1
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 32765, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 149
----- completed 17
execute_one loop: 0, 0, 49
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22550, write pid:22551
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 60
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 52
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 55
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 274, 184, 0
execute_one time: 0, 458
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23116, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 18005, flag collect 0
----- executor 0 signal number : 2039
----- executor 0 executes write_coverage_signal cov->size 11341, flag collect 0
----- executor 1 signal number : 2298
----- executor 1 executes write_coverage_signal cov->size 17304, flag collect 0
----- executor 0 signal number : 1135
----- executor 0 executes write_coverage_signal cov->size 11571, flag collect 0
----- executor 1 signal number : 1179
----- executor 1 executes write_coverage_signal cov->size 8922, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 3954, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 3638, flag collect 0
----- executor 0 signal number : 81
----- executor 1 signal number : 79
time breakdown 3: 420, 460, 0
before receive testcase: 0 1
executor 1 server cover_cnt 4 output_pos_value 3855
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 343, 467, 0
before receive testcase: 0 1
executor 0 server cover_cnt 4 output_pos_value 3554
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:40 wg wait finish
2023/03/10 23:08:40 ------ all executors finish execution
2023/03/10 23:08:40 exec time: 808
2023/03/10 23:08:40 ----- PS len: 5
2023/03/10 23:08:40 [CLIENT] executor 4 has 17 replies
2023/03/10 23:08:40 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 778 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:40 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 2039 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 1135 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
time breakdown 0: 338, 468, 0
before receive testcase: 0 1
2023/03/10 23:08:40 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 2298 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 1179 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:40 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 1956 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 1010 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 368 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:40 [CLIENT] executor 3 has 18 replies
2023/03/10 23:08:40 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 1030 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 415 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 196 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:40 mutate testcase with failures
2023/03/10 23:08:40 ----- splice()
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 516 getxattr getxattr
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 2373 mkdir mkdir
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 2808 removexattr removexattr
2023/03/10 23:08:40 ----- mutateArg()
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/10 23:08:40 mutate testcase with failures
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 2780 readlink readlink
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3761 stat stat
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/10 23:08:40 ----- mutateArg()
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/10 23:08:40 ----- mutateArg()
2023/03/10 23:08:40 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:40 prog length: 6
2023/03/10 23:08:40 prog length: 7
2023/03/10 23:08:40 HasCrashFail:false HasNetFail:false
23:08:40 ---executing program 0:
---
---
---
removexattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=@known='com.apple.system.Security\x00')
getxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@random={'btrfs.', '#@!#\x00'}, &(0x7f0000000080)=""/142, 0x8e)
setxattr$security_smack_transmute(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400), 0x4, 0x1)
setxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="00000088189d12000000"], &(0x7f0000000200)='#@!#\x00', 0x5, 0x0)
mkdir(&(0x7f0000000140)='./file0\x00', 0x48)
setxattr$trusted_overlay_upper(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)={0x0, 0xfb, 0x3c, 0x0, 0x80, "6aa5a289fd7d1234c1212d61e0fbd6d2", "d26a0fac9d88d1c402ccc5799cb9d265c5a5f49cf91575a8d83577e055073bdc46d1c2608cec64"}, 0x3c, 0x2)
---
setxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000100)=@v2={0x2000000, [{0x45, 0x10001}, {0x5e, 0x8000}]}, 0x14, 0x2)
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
chdir(&(0x7f00000000c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000440)="c1b8a1ff5eb12938c99029fdf12c2a37158ca0a9eaabc419fb5686", 0x1b, 0x3)
setxattr$trusted_overlay_redirect(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x1)
stat(&(0x7f0000000240)='./file0\x00', &(0x7f00000003c0))
readlink(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/132, 0x84)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1656
remove dir: /root/orangefs-client/dfs-0-8043
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1956
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1010
----- executor 2 executes write_coverage_signal cov->size 13180, flag collect 0
----- executor 2 signal number : 368
----- executor 2 executes write_coverage_signal cov->size 9270, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 3426
time breakdown 2: 346, 476, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2992, prog_size 1488
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 89
-----finish removing dir
mkdir time 123
executor 3 create dir /root/orangefs-client/dfs-0-8044 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8044
receive_execute: 3, 213
receive_execute: 24, 196
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 16, 213
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 12, 213
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8044
----- executor 3 write_call_output, size 7333, pid 22555, write pid:22556
----- executor 3 executes write_coverage_signal cov->size 7333, flag collect 0
----- executor 3 signal number : 2076
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 7093, pid 22555, write pid:22556
----- executor 3 executes write_coverage_signal cov->size 7093, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7333, pid 22555, write pid:22556
----- executor 3 executes write_coverage_signal cov->size 7333, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 7093, pid 22555, write pid:22556
----- executor 3 executes write_coverage_signal cov->size 7093, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 251, 245
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8882, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 8882, flag collect 0
----- executor 4 signal number : 2086
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 4 write_call_output, size 24973, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 24973, flag collect 0
----- executor 4 signal number : 538
----- completed 2
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 22555, write pid:22556
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 968
----- completed 5
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22555, write pid:22556
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 96, 5, 0
execute_one time: 1, 101
time breakdown 3: 229, 103, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 32765, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 774
----- completed 3
execute_one loop: 0, 0, 41
cover_reset in execute_call
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 9657, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 9657, flag collect 0
----- executor 4 signal number : 29
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 9657, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 9657, flag collect 0
----- executor 4 signal number : 22
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 9657, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 9657, flag collect 0
----- executor 4 signal number : 22
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 9657, pid 22584, write pid:22585
----- executor 4 executes write_coverage_signal cov->size 9657, flag collect 0
----- executor 4 signal number : 22
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 4, execute_one inner time: 85, 64, 0
execute_one time: 0, 149
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1958
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1176
----- executor 1 executes write_coverage_signal cov->size 9782, flag collect 0
time breakdown 4: 496, 149, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2353
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1180
----- executor 2 executes write_coverage_signal cov->size 5847, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 3879, flag collect 0
----- executor 2 signal number : 79
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 2 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 3929
time breakdown 2: 216, 203, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2523
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1208
----- executor 1 signal number : 372
----- executor 1 executes write_coverage_signal cov->size 8759, flag collect 0
----- executor 1 signal number : 80
executor 1 server cover_cnt 4 output_pos_value 3599
----- executor 0 executes write_coverage_signal cov->size 11173, flag collect 0
----- executor 0 signal number : 377
----- executor 0 executes write_coverage_signal cov->size 9188, flag collect 0
----- executor 0 signal number : 80
executor 0 server cover_cnt 4 output_pos_value 4201
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 221, 216, 0
before receive testcase: 0 1
time breakdown 1: 225, 215, 0
before receive testcase: 0 1
2023/03/10 23:08:40 for select break: 1
2023/03/10 23:08:40 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:40 wg wait finish
2023/03/10 23:08:40 ------ all executors finish execution
2023/03/10 23:08:40 exec time: 447
2023/03/10 23:08:40 ----- PS len: 5
2023/03/10 23:08:40 [CLIENT] executor 4 has 7 replies
2023/03/10 23:08:40 fuzzer receive 2086 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 538 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 774 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 29 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 22 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 22 signal and 0 cover from executor 4
2023/03/10 23:08:40 fuzzer receive 22 signal and 0 cover from executor 4
2023/03/10 23:08:40 [SERVER] executor 1 has 4 replies
2023/03/10 23:08:40 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 1958 signal and 0 cover from userspace component
2023/03/10 23:08:40 [CLIENT] executor 3 has 6 replies
2023/03/10 23:08:40 fuzzer receive 2076 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 1176 signal and 0 cover from userspace component
2023/03/10 23:08:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 968 signal and 0 cover from executor 3
2023/03/10 23:08:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:40 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 372 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 2523 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 1208 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 377 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 2353 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 1180 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/10 23:08:40 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:40 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:40 mutate testcase with failures
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/10 23:08:40 mutate testcase with failures
2023/03/10 23:08:40 ----- insertCall()
2023/03/10 23:08:40 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/10 23:08:40 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:40 prog length: 2
2023/03/10 23:08:40 prog length: 1
2023/03/10 23:08:40 HasCrashFail:false HasNetFail:false
23:08:40 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x3648cfcba82b6df3)
lsetxattr$security_smack_transmute(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x1)
---
lsetxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='*}\x1e*@(&!\x00', 0x9, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 1768, prog_size 288
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/orangefs-client/dfs-0-8044
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 184
-----finish removing dir
receive_execute: 19, 203
current dir: executor 4: /root/orangefs-client/dfs-0-8045
receive_execute: 33, 203
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-8045 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8045
receive_execute: 136, 199
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20364, pid 22559, write pid:22560
----- executor 3 executes write_coverage_signal cov->size 20364, flag collect 0
----- executor 3 signal number : 3078
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22559, write pid:22560
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 18, 0
receive_execute: 26, 197
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 13, 0
execute_one loop: 0, 0, 21
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 21, 0
execute_one time: 1, 29
time breakdown 3: 335, 31, 0
before receive testcase: 0 1
receive_execute: 38, 238
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8771, pid 22589, write pid:22590
----- executor 4 executes write_coverage_signal cov->size 8771, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 4, execute_one inner time: 2, 2, 0
execute_one time: 0, 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
executor 1 server cover_cnt 3 output_pos_value 206
----- executor 0 signal number : 2759
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1325
----- executor 0 executes write_coverage_signal cov->size 4140, flag collect 0
----- executor 0 signal number : 308
----- executor 0 executes write_coverage_signal cov->size 4286, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4486
time breakdown 4: 276, 5, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 3 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:41 wg wait finish
2023/03/10 23:08:41 ------ all executors finish execution
2023/03/10 23:08:41 exec time: 250
2023/03/10 23:08:41 ----- PS len: 5
2023/03/10 23:08:41 [CLIENT] executor 4 has 1 replies
2023/03/10 23:08:41 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/10 23:08:41 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 2759 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 1325 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 308 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:41 [SERVER] executor 2 has 3 replies
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:41 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/10 23:08:41 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:41 fuzzer receive 3078 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 234, 30, 0
before receive testcase: 0 0
time breakdown 0: 222, 44, 0
before receive testcase: 0 0
2023/03/10 23:08:41 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:41 mutate testcase with failures
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 251 ftruncate ftruncate
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 2809 rename rename
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 3662 setxattr setxattr
2023/03/10 23:08:41 mutate testcase with failures
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 198 fcntl$F_GET_FILE_RW_HINT fcntl$F_GET_FILE_RW_HINT
2023/03/10 23:08:41 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:41 prog length: 9
2023/03/10 23:08:41 prog length: 4
2023/03/10 23:08:41 HasCrashFail:false HasNetFail:false
23:08:41 ---executing program 0:
---
---
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x0)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x40040, 0x0)
stat(0x0, 0x0)
r1 = open$dir(&(0x7f0000000080)='./file0\x00', 0x301401, 0x2)
ftruncate(r1, 0x8)
rename(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='./file0\x00')
fsetxattr$security_capability(r0, &(0x7f0000000000), &(0x7f0000000040)=@v3={0x3000000, [{0xf8000000, 0x6}, {0x2, 0x2}], 0xee01}, 0x18, 0x1)
lsetxattr$security_smack_transmute(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x4, 0x1)
setxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=@known='trusted.overlay.upper\x00', &(0x7f00000002c0)='.\\)\x00', 0x4, 0x0)
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x8080, 0x8)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000080))
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lseek(r1, 0x0, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1728
remove dir: /root/orangefs-client/dfs-0-8045
----- executor 4 receive testcase
executor 4: prog_data_offset 3064, prog_size 520
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 236, 47, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 98
-----finish removing dir
mkdir time 26
executor 3 create dir /root/orangefs-client/dfs-0-8046 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8046
receive_execute: 17, 125
receive_execute: 3, 125
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 1, 124
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 124
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 20381, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 20381, flag collect 0
----- executor 3 signal number : 3076
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22561, write pid:22562
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 0, 0
execute_one time: 0, 29
time breakdown 3: 142, 30, 0
before receive testcase: 0 1
current dir: executor 4: /root/orangefs-client/dfs-0-8046
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 3 receive reply, reply.done 1
receive_execute: 10, 194
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8914, pid 22591, write pid:22592
----- executor 4 executes write_coverage_signal cov->size 8914, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22591, write pid:22592
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 20029, pid 22591, write pid:22592
----- executor 4 executes write_coverage_signal cov->size 20029, flag collect 0
----- executor 4 signal number : 751
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 5792, pid 22591, write pid:22592
----- executor 4 executes write_coverage_signal cov->size 5792, flag collect 0
----- executor 4 signal number : 91
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 10, 4, 0
execute_one time: 0, 14
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 97, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 1 signal number : 13
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 2 signal number : 46
----- executor 1 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 432, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 211
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 132, 81, 0
before receive testcase: 0 0
time breakdown 1: 135, 79, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2734
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1327
----- executor 0 executes write_coverage_signal cov->size 5163, flag collect 0
----- executor 0 signal number : 308
----- executor 0 executes write_coverage_signal cov->size 5314, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 4463
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:41 wg wait finish
2023/03/10 23:08:41 ------ all executors finish execution
2023/03/10 23:08:41 exec time: 214
2023/03/10 23:08:41 ----- PS len: 5
2023/03/10 23:08:41 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:41 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:41 fuzzer receive 751 signal and 0 cover from executor 4
2023/03/10 23:08:41 fuzzer receive 91 signal and 0 cover from executor 4
2023/03/10 23:08:41 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 2734 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 1327 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 308 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
time breakdown 0: 128, 89, 0
before receive testcase: 0 0
2023/03/10 23:08:41 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:41 [SERVER] executor 2 has 3 replies
time breakdown 4: 204, 15, 0
before receive testcase: 0 0
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 46 signal and 0 cover from userspace component
2023/03/10 23:08:41 [CLIENT] executor 3 has 9 replies
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:41 mutate testcase with failures
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 2723 pread64 pread64
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/10 23:08:41 mutate testcase with failures
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 187 faccessat faccessat
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/10 23:08:41 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:41 prog length: 2
2023/03/10 23:08:41 prog length: 4
2023/03/10 23:08:41 HasCrashFail:false HasNetFail:false
23:08:41 ---executing program 0:
---
---
---
pread64(0xffffffffffffffff, &(0x7f0000000000)=""/38, 0x26, 0x401)
fcntl$setstatus(0xffffffffffffffff, 0x4, 0x800)
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_origin(&(0x7f0000000040)='./file1\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x1)
chdir(&(0x7f00000000c0)='./file0\x00')
faccessat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 224
remove dir: /root/orangefs-client/dfs-0-8046
----- executor 4 receive testcase
executor 4: prog_data_offset 1560, prog_size 624
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 129
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-8047 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8047
receive_execute: 23, 139
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 12, 151
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8047
receive_execute: 12, 168
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 69, 172
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22565, write pid:22566
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22565, write pid:22566
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 249, 2, 0
before receive testcase: 0 0
receive_execute: 20, 239
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22594, write pid:22598
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
----- executor 4 write_call_output, size 32765, pid 22594, write pid:22595
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 2829
----- completed 2
----- executor 4 write_call_output, size 0, pid 22594, write pid:22596
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
----- executor 4 write_call_output, size 5523, pid 22594, write pid:22597
----- executor 4 executes write_coverage_signal cov->size 5523, flag collect 0
----- executor 4 signal number : 17
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 27
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 201, 31, 0
execute_one time: 3, 232
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4465, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2354, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 6903, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 1 signal number : 13
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2206, flag collect 0
----- executor 0 signal number : 75
----- executor 1 executes write_coverage_signal cov->size 6930, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1782, flag collect 0
----- executor 1 signal number : 44
executor 0 server cover_cnt 4 output_pos_value 2136
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 0: 162, 342, 0
before receive testcase: 0 1
time breakdown 4: 270, 236, 0
before receive testcase: 0 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2749
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1280
time breakdown 1: 180, 328, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 10112, flag collect 0
----- executor 2 signal number : 335
----- executor 2 executes write_coverage_signal cov->size 10814, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 4456
time breakdown 2: 171, 356, 0
before receive testcase: 0 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 1 receive reply, reply.done 1
2023/03/10 23:08:41 for select break: 1
2023/03/10 23:08:41 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:41 wg wait finish
2023/03/10 23:08:41 ------ all executors finish execution
2023/03/10 23:08:41 exec time: 524
2023/03/10 23:08:41 ----- PS len: 5
2023/03/10 23:08:41 [CLIENT] executor 4 has 4 replies
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:41 fuzzer receive 2829 signal and 0 cover from executor 4
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:41 fuzzer receive 17 signal and 0 cover from executor 4
2023/03/10 23:08:41 [CLIENT] executor 3 has 2 replies
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:41 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:41 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/10 23:08:41 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 2749 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 335 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:41 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:41 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:41 mutate testcase with failures
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/10 23:08:41 ----- mutateArg()
2023/03/10 23:08:41 mutate testcase with failures
2023/03/10 23:08:41 ----- mutateArg()
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 2810 renameat renameat
2023/03/10 23:08:41 ----- mutateArg()
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 259 getdents64 getdents64
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 2374 mkdirat mkdirat
2023/03/10 23:08:41 ----- insertCall()
2023/03/10 23:08:41 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/10 23:08:41 ----- removeCall()
2023/03/10 23:08:41 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:41 prog length: 9
2023/03/10 23:08:41 prog length: 6
2023/03/10 23:08:41 HasCrashFail:false HasNetFail:false
23:08:41 ---executing program 0:
---
---
---
fsetxattr$security_capability(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)=@v3={0x3000000, [{0x1a, 0x3984}, {0x9, 0x9}], 0xee01}, 0x18, 0x1)
r0 = open$dir(&(0x7f0000000480)='./file1\x00', 0x40, 0x0)
r1 = dup(r0)
write$binfmt_elf32(r1, &(0x7f00000004c0)={{0x7f, 0x45, 0x4c, 0x46, 0x7f, 0x2c, 0x0, 0x8, 0x1, 0x2, 0x3e, 0xb46, 0x28a, 0x38, 0x277, 0x7, 0x1, 0x20, 0x1, 0x100, 0x7, 0x2}, [{0x1, 0x7, 0xa3fa, 0x101, 0x6a, 0x2, 0x10000, 0x3}, {0x3, 0x80, 0x20, 0x6, 0x5, 0x9, 0x3, 0x8000}], "40f322ba74104e6957df61ec061f07cb28eb037f15ab8001bf5fb8e994343575ada6d2ad1960fd8b5bdf5ec04d14feb92f3a59c343d67b5c343a0f5af806062a36704a1c0fd78020bb8269a9c2a04bf3de02e4db9d6e1515e06c1ad15074282ff519f3117343e10c41ae2c06a1ba2e1bb366fedf82c4a8d75673bae6eb8eea49c7d8ffbee54d21", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x7ff)
fsetxattr$security_selinux(r1, &(0x7f0000000140), &(0x7f0000000180)='system_u:object_r:adjtime_t:s0\x00', 0x1f, 0x1)
lsetxattr$security_selinux(0x0, 0x0, 0x0, 0x0, 0x0)
lsetxattr$trusted_overlay_upper(0x0, 0x0, 0x0, 0x0, 0x0)
lremovexattr(0x0, 0x0)
setxattr$security_selinux(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:crack_db_t:s0\x00', 0x20, 0x1)
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x10000, 0x0)
mkdirat(r0, &(0x7f0000000200)='./file1\x00', 0x2)
unlink(&(0x7f00000000c0)='./file1\x00')
lsetxattr$security_smack_transmute(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x4, 0x2)
getdents64(r0, &(0x7f0000000100)=""/234, 0xea)
stat(0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5432
remove dir: /root/orangefs-client/dfs-0-8047
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 6768, prog_size 872
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 298
-----finish removing dir
receive_execute: 33, 405
mkdir time 108
executor 3 create dir /root/orangefs-client/dfs-0-8048 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8048
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 29, 414
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 44, 396
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-8048
receive_execute: 345, 433
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22568
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12546, pid 22567, write pid:22569
----- executor 3 executes write_coverage_signal cov->size 12546, flag collect 0
----- executor 3 signal number : 2682
----- completed 8
----- executor 3 write_call_output, size 21882, pid 22567, write pid:22568
----- executor 3 executes write_coverage_signal cov->size 21882, flag collect 0
----- executor 3 signal number : 826
----- completed 9
execute_one loop: 0, 0, 38
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 89, 0, 0
execute_one time: 1, 89
2023/03/10 23:08:42 for select break: 1
2023/03/10 23:08:42 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 780, 91, 0
before receive testcase: 0 0
receive_execute: 32, 549
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 19784, pid 22599, write pid:22600
----- executor 4 executes write_coverage_signal cov->size 19784, flag collect 0
----- executor 4 signal number : 2801
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22599, write pid:22600
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 4 write_call_output, size 9311, pid 22599, write pid:22601
----- executor 4 executes write_coverage_signal cov->size 9311, flag collect 0
----- executor 4 signal number : 80
----- completed 3
----- executor 4 write_call_output, size 18006, pid 22599, write pid:22600
----- executor 4 executes write_coverage_signal cov->size 18006, flag collect 0
----- executor 4 signal number : 384
----- completed 4
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22599, write pid:22600
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22599, write pid:22600
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 83, 15, 0
execute_one time: 0, 98
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3093
----- executor 0 executes write_coverage_signal cov->size 30114, flag collect 0
----- executor 0 signal number : 1717
----- executor 0 executes write_coverage_signal cov->size 7367, flag collect 0
----- executor 0 signal number : 321
----- executor 0 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 0 signal number : 81
executor 0 server cover_cnt 4 output_pos_value 5225
time breakdown 0: 438, 257, 0
before receive testcase: 0 1
time breakdown 4: 581, 112, 0
before receive testcase: 0 1
2023/03/10 23:08:42 for select break: 1
2023/03/10 23:08:42 --------- executor 0 receive reply, reply.done 1
2023/03/10 23:08:42 for select break: 1
2023/03/10 23:08:42 --------- executor 4 receive reply, reply.done 1
2023/03/10 23:08:42 for select break: 1
----- executor 1 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 5040, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1188, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 443, 257, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/10 23:08:42 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2768
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1135
----- executor 2 executes write_coverage_signal cov->size 7801, flag collect 0
----- executor 2 signal number : 352
----- executor 2 executes write_coverage_signal cov->size 5637, flag collect 0
----- executor 2 signal number : 77
executor 2 server cover_cnt 4 output_pos_value 4345
2023/03/10 23:08:42 for select break: 1
2023/03/10 23:08:42 --------- executor 2 receive reply, reply.done 1
2023/03/10 23:08:42 wg wait finish
2023/03/10 23:08:42 ------ all executors finish execution
2023/03/10 23:08:42 exec time: 707
2023/03/10 23:08:42 ----- PS len: 5
2023/03/10 23:08:42 [CLIENT] executor 4 has 6 replies
2023/03/10 23:08:42 fuzzer receive 2801 signal and 0 cover from executor 4
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:42 [SERVER] executor 1 has 3 replies
2023/03/10 23:08:42 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/10 23:08:42 [SERVER] executor 2 has 4 replies
2023/03/10 23:08:42 ------- fuzzer executor 2 receive 2768 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 2 receive 1135 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 2 receive 352 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/10 23:08:42 [SERVER] executor 0 has 4 replies
2023/03/10 23:08:42 ------- fuzzer executor 0 receive 3093 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 0 receive 1717 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 0 receive 321 signal and 0 cover from userspace component
2023/03/10 23:08:42 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/10 23:08:42 fuzzer receive 80 signal and 0 cover from executor 4
2023/03/10 23:08:42 fuzzer receive 384 signal and 0 cover from executor 4
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/10 23:08:42 [CLIENT] executor 3 has 9 replies
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 2682 signal and 0 cover from executor 3
2023/03/10 23:08:42 fuzzer receive 826 signal and 0 cover from executor 3
2023/03/10 23:08:42 fsMds: [map[] map[] map[] map[] map[]]
2023/03/10 23:08:42 mutate testcase with failures
2023/03/10 23:08:42 ----- mutateArg()
2023/03/10 23:08:42 ----- insertCall()
2023/03/10 23:08:42 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/10 23:08:42 mutate testcase with failures
2023/03/10 23:08:42 ----- insertCall()
2023/03/10 23:08:42 ----- generateCall 2749 pwrite64 pwrite64
2023/03/10 23:08:42 ----- splice()
2023/03/10 23:08:42 ----- insertCall()
2023/03/10 23:08:42 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/10 23:08:42 HasCrashFail: false, .HasNetFail: false
2023/03/10 23:08:42 prog length: 5
2023/03/10 23:08:42 prog length: 6
2023/03/10 23:08:42 HasCrashFail:false HasNetFail:false
23:08:42 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f00000000c0)='./file1\x00')
setxattr$incfs_size(&(0x7f0000000080)='./file1\x00', &(0x7f0000000100), &(0x7f0000000180)=0xc771, 0x8, 0x3)
chmod(&(0x7f0000000000)='./file1\x00', 0x14)
---
open$dir(&(0x7f0000000480)='./file1\x00', 0x52942, 0x0)
lsetxattr$trusted_overlay_origin(0x0, &(0x7f0000000140), 0x0, 0x0, 0x0)
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file1\x00')
chmod(&(0x7f0000000000)='./file1\x00', 0x14)
pwrite64(0xffffffffffffffff, &(0x7f0000000000)="", 0x1000, 0x8)
lsetxattr$security_selinux(&(0x7f0000001000)='./file1\x00', &(0x7f0000001040), &(0x7f0000001080)='system_u:object_r:dhcpd_exec_t:s0\x00', 0x22, 0x3)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 440, 277, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2216, prog_size 5168
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 880
remove dir: /root/orangefs-client/dfs-0-8048
remove dir time 107
-----finish removing dir
receive_execute: 4, 252
receive_execute: 41, 251
receive_execute: 47, 251
mkdir time 135
executor 3 create dir /root/orangefs-client/dfs-0-8049 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-8049
current dir: executor 4: /root/orangefs-client/dfs-0-8049
receive_execute: 187, 249
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22571, write pid:22573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22571, write pid:22573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
----- executor 3 write_call_output, size 21798, pid 22571, write pid:22572
----- executor 3 executes write_coverage_signal cov->size 21798, flag collect 0
receive_execute: 69, 314
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 signal number : 3082
----- completed 3
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 22571, write pid:22572
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 19559, pid 22602, write pid:22603
----- executor 4 executes write_coverage_signal cov->size 19559, flag collect 0
----- executor 4 signal number : 2801
----- completed 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22602, write pid:22603
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22602, write pid:22603
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 4 write_call_output, size 11533, pid 22602, write pid:22603
----- executor 4 executes write_coverage_signal cov->size 11533, flag collect 0
----- executor 4 signal number : 87
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22602, write pid:22603
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 22602, write pid:22603
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 26399, pid 22571, write pid:22572
----- executor 3 executes write_coverage_signal cov->size 26399, flag collect 0
----- executor 3 signal number : 605
----- completed 5
execute_one loop: 0, 0, 36
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 40, 7, 0
execute_one time: 0, 47
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 121, 16, 0
execute_one time: 0, 137
time breakdown 3: 436, 138, 0
before receive testcase: 0 1
2023/03/10 23:08:42 for select break: 1
2023/03/10 23:08:42 --------- executor 3 receive reply, reply.done 1
Node-2:/root/daemon-log.385
daemon log read: 249
must wait is true
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 340
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 0
daemon log read: 2972
=================================================================
==385==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffff20beca0 at pc 0x7ffff762e57d bp 0x7ffff20bead0 sp 0x7ffff20be278
WRITE of size 266 at 0x7ffff20beca0 thread T2
    #0 0x7ffff762e57c  (/lib/x86_64-linux-gnu/libasan.so.5+0x9b57c)
    #1 0x55555590f6a8 in dbpf_keyval_read_op_svc (/opt/orangefs/sbin/pvfs2-server+0x3bb6a8)
    #2 0x555555937042 in dbpf_do_one_work_cycle (/opt/orangefs/sbin/pvfs2-server+0x3e3042)
    #3 0x55555593660e in dbpf_thread_function (/opt/orangefs/sbin/pvfs2-server+0x3e260e)
    #4 0x7ffff7143608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477
    #5 0x7ffff705f102 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)

Address 0x7ffff20beca0 is located in stack of thread T2 at offset 416 in frame
    #0 0x55555590f34e in dbpf_keyval_read_op_svc (/opt/orangefs/sbin/pvfs2-server+0x3bb34e)

  This frame has 4 object(s):
    [48, 64) 'ref' (line 192)
    [80, 96) 'key' (line 194)
    [112, 128) 'data' (line 194)
    [144, 416) 'key_entry' (line 193) <== Memory access at offset 416 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
Thread T2 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x555555935f80 in dbpf_thread_initialize (/opt/orangefs/sbin/pvfs2-server+0x3e1f80)
    #2 0x55555593a07e in dbpf_initialize (/opt/orangefs/sbin/pvfs2-server+0x3e607e)
    #3 0x55555588fd30 in trove_initialize (/opt/orangefs/sbin/pvfs2-server+0x33bd30)
    #4 0x5555556d07f7 in server_initialize_subsystems (/opt/orangefs/sbin/pvfs2-server+0x17c7f7)
    #5 0x5555556cfb2a in server_initialize (/opt/orangefs/sbin/pvfs2-server+0x17bb2a)
    #6 0x5555556cec75 in main (/opt/orangefs/sbin/pvfs2-server+0x17ac75)
    #7 0x7ffff6f640b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

SUMMARY: AddressSanitizer: stack-buffer-overflow (/lib/x86_64-linux-gnu/libasan.so.5+0x9b57c) 
Shadow bytes around the buggy address:
  0x10007e40fd40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e40fd50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e40fd60: f1 f1 f1 f1 f1 f1 00 00 f2 f2 00 00 f2 f2 00 00
  0x10007e40fd70: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e40fd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007e40fd90: 00 00 00 00[f3]f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10007e40fda0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e40fdb0: 00 00 00 00 f1 f1 f1 f1 f1 f1 04 f2 00 00 f2 f2
  0x10007e40fdc0: 00 00 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e40fdd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e40fde0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==385==ABORTING

VM DIAGNOSIS:
23:08:43  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e2d0 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff730335c RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=000061100c570000 CR3=0000000108f8c004 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=0000000000001f710000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=ffffffff915939b0 RBX=0000000000000001 RCX=0000000000000000 RDX=ff1100026572e7e0
RSI=ff110001002afe78 RDI=00000000005eb0a2 RBP=ff11000100299680 RSP=ff110001002afee8
R8 =00000000005eb0a1 R9 =000000000000003b R10=ff1100026572da40 R11=0000000000000000
R12=ff11000100299680 R13=ff11000100299680 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff915939bb RFL=00000202 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00000000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00000000
FS =0000 0000000000000000 ffffffff 00000000
GS =0000 ff11000265700000 ffffffff 00000000
LDT=0000 0000000000000000 ffffffff 00000000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=000061100c57304a CR3=00000001126c8003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=0000000000000000ffffffffff00ff00 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffffffffffffffff0000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
