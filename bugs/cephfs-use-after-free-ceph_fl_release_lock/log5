execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 5, 6, 0
execute_one time: 1, 11
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 14, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 12349, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 23670, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 1014
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 6688
----- executor 2 executes write_coverage_signal cov->size 11732, flag collect 0
----- executor 2 signal number : 440
----- executor 2 executes write_coverage_signal cov->size 28492, flag collect 0
----- executor 2 signal number : 1583
----- executor 2 executes write_coverage_signal cov->size 18638, flag collect 0
----- executor 2 signal number : 3766
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 14969
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:31 wg wait finish
2023/03/28 10:35:31 ------ all executors finish execution
2023/03/28 10:35:31 exec time: 34
2023/03/28 10:35:31 ----- PS len: 4
2023/03/28 10:35:31 [CLIENT] executor 3 has 9 replies
2023/03/28 10:35:31 [SERVER] executor 1 has 0 replies
time breakdown 2: 16, 21, 0
2023/03/28 10:35:31 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:31 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 1014 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 6688 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 440 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 1583 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 3766 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:31 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:35:31 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:31 ----- no new client coverage: false, true
2023/03/28 10:35:31 mutate testcase with failures
2023/03/28 10:35:31 ----- mutateArg()
2023/03/28 10:35:31 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:31 prog length: 4
2023/03/28 10:35:31 HasCrashFail:false HasNetFail:false
10:35:31 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x38041, 0x0)
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x8002, 0x0)
write$binfmt_aout(r0, &(0x7f0000000140)={{0x0, 0x0, 0x0, 0xfc}, "5184ee1967a3c0d4e956c70800000000000000201e1d253cb187ca23003eff4794990094a7899890de673f8d9e645e5093d282762057"}, 0x56)
fcntl$lock(r0, 0x26, &(0x7f0000000100))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1208
remove dir: /root/cephfs-client/dfs-0-128
remove dir time 6
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-129 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-129
receive_execute: 21, 9
receive_execute: 8, 20
receive_execute: 4, 19
receive_execute: 9, 20
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 621, pid 996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 3 signal number : 232
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1186, pid 996, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1186, flag collect 0
----- executor 3 signal number : 358
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 996, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 39
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 9943, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 20700, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1024
----- executor 2 executes write_coverage_signal cov->size 31634, flag collect 0
time breakdown 1: 29, 9, 0
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7609
----- executor 2 executes write_coverage_signal cov->size 17115, flag collect 0
----- executor 2 signal number : 1683
----- executor 2 executes write_coverage_signal cov->size 11311, flag collect 0
time breakdown 3: 30, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 2815
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 7 output_pos_value 14607
before receive testcase: 0 0
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 23, 12, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:31 for select break: 1
2023/03/28 10:35:31 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:31 wg wait finish
2023/03/28 10:35:31 ------ all executors finish execution
2023/03/28 10:35:31 exec time: 35
2023/03/28 10:35:31 ----- PS len: 4
2023/03/28 10:35:31 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:31 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:31 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:31 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/28 10:35:31 fuzzer receive 39 signal and 0 cover from executor 3
time breakdown 0: 28, 16, 0
2023/03/28 10:35:31 [SERVER] executor 2 has 7 replies
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 1024 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 7609 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 1683 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 2815 signal and 0 cover from userspace component
2023/03/28 10:35:31 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:31 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:31 ----- no new client coverage: false, true
2023/03/28 10:35:31 mutate testcase with failures
2023/03/28 10:35:31 ----- insertCall()
2023/03/28 10:35:31 ----- generateCall 3967 truncate truncate
2023/03/28 10:35:31 ----- mutateArg()
2023/03/28 10:35:31 ----- mutateArg()
2023/03/28 10:35:31 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:31 prog length: 4
2023/03/28 10:35:31 HasCrashFail:false HasNetFail:false
10:35:31 ---executing program 0:
---
---
---
symlink(&(0x7f0000000140)='.\x00', &(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_upper(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000040)=ANY=[], 0x44, 0x3)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000580))
truncate(&(0x7f0000000000)='./file0\x00', 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/cephfs-client/dfs-0-129
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-130 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-130
receive_execute: 13, 22
receive_execute: 9, 22
receive_execute: 9, 22
receive_execute: 5, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 594, pid 999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 3 signal number : 208
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 160, pid 999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 3 signal number : 23
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10770, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1297
----- executor 2 executes write_coverage_signal cov->size 21749, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 6, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 5628
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
----- executor 2 signal number : 533
executor 2 server cover_cnt 4 output_pos_value 7531
time breakdown 3: 35, 5, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 34
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 4 replies
time breakdown 2: 31, 11, 0
before receive testcase: 0 1
2023/03/28 10:35:32 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 208 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 4 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1297 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5628 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2753 read read
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 4
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
link(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
write$binfmt_misc(r0, &(0x7f00000015c0)=ANY=[@ANYBLOB], 0x4)
read(r0, &(0x7f0000000100)=""/4096, 0x1000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-130
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-131 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-131
receive_execute: 9, 11
receive_execute: 2, 11
receive_execute: 8, 10
receive_execute: 8, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 571, pid 1002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
----- executor 3 write_call_output, size 1587, pid 1002, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1587, flag collect 0
----- executor 3 signal number : 1011
----- completed 3
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1002, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 1, 0
execute_one time: 0, 16
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 11794, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 11469, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 964
----- executor 2 executes write_coverage_signal cov->size 25453, flag collect 0
time breakdown 1: 18, 19, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 6806
----- executor 2 executes write_coverage_signal cov->size 3496, flag collect 0
----- executor 2 signal number : 363
----- executor 2 executes write_coverage_signal cov->size 28672, flag collect 0
before receive testcase: 0 0
time breakdown 3: 20, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 1798
----- executor 2 executes write_coverage_signal cov->size 14412, flag collect 0
----- executor 2 signal number : 3714
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 15123
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 34
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:32 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 964 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6806 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 363 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1798 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3714 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 13, 23, 0
2023/03/28 10:35:32 fuzzer receive 1011 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 5
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f0000000000)='./file1/../file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000080)='./file1/../file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 784
remove dir: /root/cephfs-client/dfs-0-131
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-132 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-132
receive_execute: 8, 11
receive_execute: 2, 11
receive_execute: 6, 10
receive_execute: 7, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 1005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 850, pid 1005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 850, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 208, pid 1005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 208, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 4, 0
execute_one time: 0, 16
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 720, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 18572, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 300, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 1327, flag collect 0
----- executor 0 signal number : 604
----- executor 0 executes write_coverage_signal cov->size 1478, flag collect 0
----- executor 0 signal number : 607
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 0 server cover_cnt 4 output_pos_value 1303
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 17704, flag collect 0
----- executor 2 signal number : 922
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 20, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 0: 17, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 6989
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 19, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 1597
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5917
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 16921
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 36
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 5 replies
2023/03/28 10:35:32 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 4 replies
2023/03/28 10:35:32 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 0 receive 604 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 0 receive 607 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
time breakdown 2: 13, 25, 0
before receive testcase: 0 0
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 922 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6989 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1597 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5917 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2458 open open
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 4
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x1000, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x9ffbe5a7178b4258, 0x0)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x468180, 0x199)
fstat(r0, &(0x7f00000001c0))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/cephfs-client/dfs-0-132
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-133 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-133
receive_execute: 11, 19
receive_execute: 3, 19
receive_execute: 9, 18
receive_execute: 9, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 423, pid 1008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 656, pid 1008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 656, flag collect 0
----- executor 3 signal number : 256
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 0, 14
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 326, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 7912, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 19156, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 5687
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 255
----- executor 2 executes write_coverage_signal cov->size 992, flag collect 0
----- executor 2 signal number : 257
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 587
executor 2 server cover_cnt 6 output_pos_value 8154
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 18, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 37
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:32 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 256 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 22, 18, 0
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 6 replies
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
time breakdown 3: 30, 15, 0
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5687 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 255 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 587 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 20
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x70001, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f00000003c0)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x100000001, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3656
remove dir: /root/cephfs-client/dfs-0-133
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-134 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-134
receive_execute: 5, 13
receive_execute: 3, 13
receive_execute: 5, 13
receive_execute: 4, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 1011, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 1011, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 502, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 49
----- completed 14
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 233, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 233, flag collect 0
----- executor 3 signal number : 62
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 1011, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 344, pid 1011, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 3 signal number : 27
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 1, 1
execute_one time: 0, 12
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 806, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 13862, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 23862, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 7299
----- executor 2 executes write_coverage_signal cov->size 6421, flag collect 0
----- executor 2 signal number : 465
----- executor 2 executes write_coverage_signal cov->size 27698, flag collect 0
time breakdown 3: 18, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 1966
----- executor 2 executes write_coverage_signal cov->size 16760, flag collect 0
time breakdown 0: 18, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 4046
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 16302
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 29
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 20 replies
time breakdown 2: 16, 16, 0
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1035 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 7299 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 465 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1966 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4046 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2462 openat openat
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2462 openat openat
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2462 openat openat
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3764 symlink symlink
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2753 read read
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 11
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x103040, 0x51)
r1 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x24840, 0x15)
symlink(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380)='./file1\x00')
chown(&(0x7f0000000080)='./file0\x00', 0x0, 0x0)
openat(r0, &(0x7f0000000280)='./file1\x00', 0x161040, 0x2)
openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x2, 0x140)
setxattr$security_evm(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200), &(0x7f0000000240)=@sha1={0x1, "00bd92528d0fbc3380c013be2b235fa7b4c4ae54"}, 0x15, 0x3)
read(r1, &(0x7f00000003c0)=""/1, 0x1)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x200040, 0x48)
open$dir(&(0x7f00000002c0)='./file1\x00', 0x200, 0x10)
lsetxattr$security_ima(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180)=@v1={0x2, "e5d53edf644bf7"}, 0x8, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2000
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-134
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-135 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-135
receive_execute: 7, 8
receive_execute: 3, 7
receive_execute: 6, 7
receive_execute: 6, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 45
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 1016, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 92
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 14, 1, 0
execute_one time: 0, 15
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10740, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1290
----- executor 2 executes write_coverage_signal cov->size 29243, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6440
----- executor 2 executes write_coverage_signal cov->size 1026, flag collect 0
----- executor 2 signal number : 291
----- executor 2 executes write_coverage_signal cov->size 24890, flag collect 0
----- executor 2 signal number : 669
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 8766
time breakdown 1: 13, 19, 0
before receive testcase: 0 0
time breakdown 3: 15, 16, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 28
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 11 replies
2023/03/28 10:35:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 92 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1290 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6440 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 291 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 669 signal and 0 cover from userspace component
time breakdown 2: 10, 21, 0
before receive testcase: 0 0
time breakdown 0: 13, 17, 0
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 8
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
stat(&(0x7f0000000400)='./file1\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
open(&(0x7f0000000000)='./file1\x00', 0x200, 0x0)
lsetxattr$security_evm(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), 0x0, 0x0, 0x2)
lsetxattr$smack_xattr_label(&(0x7f0000000340)='./file1\x00', &(0x7f0000000380)='security.SMACK64\x00', &(0x7f00000003c0)={'security.evm\x00'}, 0xe, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x2, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file1\x00', &(0x7f0000000240), &(0x7f0000000280)='./file1\x00', 0x8, 0x3)
lchown(&(0x7f0000000000)='./file1\x00', r0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1712
remove dir: /root/cephfs-client/dfs-0-135
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-136 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-136
receive_execute: 6, 15
receive_execute: 2, 15
receive_execute: 5, 15
receive_execute: 4, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 619, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 48
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 172
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 101
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 421, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 421, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 565, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 3 signal number : 22
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 843, pid 1019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 843, flag collect 0
----- executor 3 signal number : 52
----- completed 8
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 19, 3, 0
execute_one time: 1, 22
2023/03/28 10:35:32 for select break: 1
executor 1 write_server_output
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1226, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 19508, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1397
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 26, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 1082
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 21, 25, 0
before receive testcase: 0 1
----- executor 2 signal number : 7371
----- executor 2 executes write_coverage_signal cov->size 4483, flag collect 0
----- executor 2 signal number : 391
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1806
----- executor 2 executes write_coverage_signal cov->size 29775, flag collect 0
----- executor 2 signal number : 5470
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 17607
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 49
2023/03/28 10:35:32 ----- PS len: 4
time breakdown 2: 17, 34, 0
2023/03/28 10:35:32 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 477 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1397 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1082 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 7371 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1806 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5470 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3967 truncate truncate
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 3
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
open(&(0x7f0000000100)='./file0\x00', 0x12040, 0x0)
listxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0xc47a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 392
remove dir: /root/cephfs-client/dfs-0-136
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-137 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-137
receive_execute: 10, 19
receive_execute: 13, 18
receive_execute: 4, 18
receive_execute: 11, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1022, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 429, pid 1022, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 429, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 781, pid 1022, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 781, flag collect 0
----- executor 3 signal number : 103
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 11991, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 29490, flag collect 0
time breakdown 1: 29, 6, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 6552
----- executor 2 executes write_coverage_signal cov->size 18528, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 625
executor 2 server cover_cnt 4 output_pos_value 8542
time breakdown 3: 31, 5, 0
before receive testcase: 0 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 26
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 3 replies
2023/03/28 10:35:32 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 4 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1292 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6552 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 625 signal and 0 cover from userspace component
before receive testcase: 0 1
time breakdown 2: 22, 8, 0
before receive testcase: 0 1
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 251 ftruncate ftruncate
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 258 getdents getdents
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 258 getdents getdents
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 5
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
ftruncate(0xffffffffffffffff, 0x7)
r0 = open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
getdents(r0, &(0x7f0000000000)=""/85, 0x55)
getdents(0xffffffffffffff9c, &(0x7f0000000080)=""/32, 0x20)
fsetxattr$system_posix_acl(r0, &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f00000003c0), 0x24, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 3: prog_data_offset 1336, prog_size 1176
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-137
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-138 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-138
receive_execute: 6, 14
receive_execute: 6, 14
receive_execute: 5, 14
receive_execute: 3, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1025, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1025, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1025, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1025, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 200, pid 1025, write pid:-2126518517
----- executor 3 executes write_coverage_signal cov->size 200, flag collect 0
----- executor 3 signal number : 139
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4292, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11916, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5027
time breakdown 1: 20, 4, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6237, flag collect 0
----- executor 2 signal number : 549
executor 2 server cover_cnt 5 output_pos_value 7164
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 20, 4, 0
before receive testcase: 0 1
time breakdown 2: 17, 6, 0
before receive testcase: 0 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 19, 7, 0
before receive testcase: 0 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 25
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [CLIENT] executor 3 has 5 replies
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5027 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 549 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2724 preadv preadv
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 171 dup2 dup2
2023/03/28 10:35:32 ----- splice()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3985 write write
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 17
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
fstat(0xffffffffffffffff, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f00000002c0)={{}, {0x1, 0x3}, [{0x2, 0xf, 0xee01}, {0x2, 0x4, 0xffffffffffffffff}, {0x2, 0x0, 0xee00}, {0x2, 0x6, 0xee01}, {0x2, 0x0, 0xee00}, {0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x4, 0xee01}, {0x2, 0x6, r0}, {0x2, 0x6, r1}, {}], {0x4, 0x4}, [{0x8, 0x2, r2}, {}, {0x8, 0x1, 0xee00}, {0x8, 0x0, 0xee01}], {0x10, 0x1}, {0x20, 0x2}}, 0x94, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0/file0\x00')
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000440), &(0x7f0000000480)={'L-', 0x3fffffffc00}, 0x16, 0x3)
r3 = open(&(0x7f0000000380)='./file0/file0\x00', 0x2c1, 0xc0)
read(r3, &(0x7f00000003c0)=""/80, 0x50)
preadv(0xffffffffffffffff, &(0x7f0000002640)=[{&(0x7f0000000100)=""/183, 0xb7}, {&(0x7f00000002c0)=""/229, 0xe5}, {&(0x7f00000003c0)=""/4096, 0x1000}, {&(0x7f00000013c0)=""/225, 0xe1}, {&(0x7f00000001c0)=""/53, 0x35}, {&(0x7f0000000200)=""/61, 0x3d}, {&(0x7f00000014c0)=""/109, 0x6d}, {&(0x7f0000001540)=""/226, 0xe2}, {&(0x7f0000001640)=""/4096, 0x1000}, {&(0x7f0000000240)=""/49, 0x31}], 0xa, 0xf9e2, 0x2)
r4 = open(&(0x7f0000000280)='./file0\x00', 0x9ffbe5a7178a6658, 0x0)
fcntl$lock(r4, 0x24, &(0x7f0000000040)={0x0, 0x0, 0x0, 0x5})
r5 = dup(r4)
dup2(r4, r5)
r6 = dup(r3)
write(r6, &(0x7f0000002700)="10290b3e52f6472a", 0x8)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:syslogd_exec_t:s0\x00', 0x24, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5800
remove dir: /root/cephfs-client/dfs-0-138
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-139 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-139
receive_execute: 11, 10
receive_execute: 8, 10
receive_execute: 11, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 507, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 400
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 32
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 279, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 279, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 725, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 725, flag collect 0
----- executor 3 signal number : 118
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 418, pid 1028, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 3 signal number : 346
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 466, pid 1028, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 466, flag collect 0
----- executor 3 signal number : 89
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 7, 2, 0
execute_one time: 0, 9
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 60
time breakdown 3: 22, 10, 0
----- executor 2 executes write_coverage_signal cov->size 25674, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 13296, flag collect 0
----- executor 2 signal number : 920
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 12, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7348
----- executor 2 executes write_coverage_signal cov->size 377, flag collect 0
----- executor 2 signal number : 250
----- executor 2 executes write_coverage_signal cov->size 25682, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 736
----- executor 2 executes write_coverage_signal cov->size 2530, flag collect 0
----- executor 2 signal number : 1153
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 11905
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 26
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 17 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
time breakdown 2: 19, 16, 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 920 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 7348 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 250 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 736 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1153 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 118 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3970 unlink unlink
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 10
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
setxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000100)='unconfined\x00', 0xb, 0x2)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x240, 0x0)
lsetxattr$security_evm(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@v1={0x2, "b5"}, 0x2, 0x1)
unlink(&(0x7f0000000240)='./file1\x00')
lremovexattr(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)=@random={'osx.', '+^(\\\x00'})
r2 = fcntl$dupfd(r0, 0x0, r0)
getdents64(r2, &(0x7f0000001540)=""/78, 0x4e)
fsync(r1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1680
remove dir: /root/cephfs-client/dfs-0-139
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-140 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-140
receive_execute: 7, 18
receive_execute: 2, 18
receive_execute: 6, 17
receive_execute: 6, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 168
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 75
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 470, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 470, flag collect 0
----- executor 3 signal number : 69
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1031, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 1031, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 68
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 12, pid 1031, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 3 signal number : 12
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 17, 3, 0
execute_one time: 4, 20
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 738, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 18707, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 26620, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 27, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 24, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 1051
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8244
----- executor 2 executes write_coverage_signal cov->size 2474, flag collect 0
----- executor 2 signal number : 341
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1227
----- executor 2 executes write_coverage_signal cov->size 24320, flag collect 0
----- executor 2 signal number : 5053
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 17407
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 51
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 10 replies
2023/03/28 10:35:32 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 69 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
time breakdown 2: 20, 33, 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1051 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 8244 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 341 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1227 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5053 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
time breakdown 3: 25, 26, 0
before receive testcase: 0 1
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2344 linkat linkat
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 12
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f00000002c0)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r1, &(0x7f0000000240)='./file1\x00')
r2 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r3 = dup2(r2, r2)
mkdirat(r3, &(0x7f0000000280)='./file0\x00', 0x0)
getdents(r0, &(0x7f0000000180)=""/173, 0xad)
r4 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(r4, &(0x7f0000000140)=""/48, 0x30)
linkat(r4, &(0x7f0000000100)='./file1\x00', r1, &(0x7f0000000380)='./file0\x00', 0x1400)
getdents(r4, &(0x7f0000000300)=""/98, 0x62)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1776
remove dir: /root/cephfs-client/dfs-0-140
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-141 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-141
receive_execute: 10, 22
receive_execute: 3, 22
receive_execute: 9, 21
receive_execute: 9, 21
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 433, pid 1035, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 3 signal number : 173
----- completed 8
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 95, pid 1035, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 3 signal number : 52
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3796, pid 1035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3796, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 248, pid 1035, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 248, flag collect 0
----- executor 3 signal number : 42
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 1, 14
time breakdown 3: 32, 17, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 11627, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 15371, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 923
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 18, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6779
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 25501, flag collect 0
----- executor 2 signal number : 1333
----- executor 2 executes write_coverage_signal cov->size 21426, flag collect 0
----- executor 2 signal number : 3961
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 14482
time breakdown 1: 30, 20, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 47
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 12 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 173 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 923 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6779 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1333 signal and 0 cover from userspace component
time breakdown 2: 25, 25, 0
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3961 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 131 close close
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 4
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
close(r0)
open$dir(&(0x7f0000000040)='./file1\x00', 0x8841, 0x0)
truncate(&(0x7f0000000340)='./file1\x00', 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 424
remove dir: /root/cephfs-client/dfs-0-141
remove dir time 21
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-142 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-142
receive_execute: 12, 23
receive_execute: 4, 22
receive_execute: 11, 22
receive_execute: 9, 23
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1038, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1038, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 1038, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 477
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 284, pid 1038, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 284, flag collect 0
----- executor 3 signal number : 155
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 0, 4
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11950, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 33, 6, 0
before receive testcase: 0 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5024
----- executor 2 executes write_coverage_signal cov->size 6237, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 545
executor 2 server cover_cnt 4 output_pos_value 6913
2023/03/28 10:35:32 for select break: 1
time breakdown 1: 32, 7, 0
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 3: 35, 5, 0
before receive testcase: 0 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 30
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 155 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
time breakdown 2: 26, 8, 0
2023/03/28 10:35:32 [SERVER] executor 2 has 4 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5024 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 248 fstat fstat
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2462 openat openat
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 4
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x48840, 0x0)
truncate(&(0x7f0000000340)='./file1\x00', 0x1000000000000)
fstat(r0, &(0x7f0000000080))
openat(r0, &(0x7f0000000000)='./file1\x00', 0x151280, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-142
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-143 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-143
receive_execute: 5, 12
receive_execute: 3, 12
receive_execute: 5, 12
receive_execute: 4, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 619, pid 1041, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 214, pid 1041, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 3 signal number : 95
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 1041, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1041, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11613, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4909
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 280
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 6, 0
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7067
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 7, 0
before receive testcase: 0 0
time breakdown 3: 17, 5, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 21
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 fuzzer receive 19 signal and 0 cover from executor 3
time breakdown 2: 15, 8, 0
before receive testcase: 0 1
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4909 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2341 lchown lchown
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3761 stat stat
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3967 truncate truncate
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 18
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
chmod(&(0x7f00000003c0)='.\x00', 0x0)
symlink(&(0x7f0000000440)='./file1\x00', &(0x7f0000000400)='./file2\x00')
lsetxattr$security_evm(&(0x7f0000000940)='./file1/../file0\x00', &(0x7f00000001c0), &(0x7f0000000980)=@v2={0x5, 0x0, 0x8, 0x2, 0xcc, "68a726c275bfabeccd92f93ef8a31be0073b145e5cbfd59aba14a9812175ddc5e57c77d5f565dce374690a04466ebccd1efd1bf0fad1b6d6359e907b157bad2ae1288eb957c4b5811622cb7b225439dd5dec2bc302295129477e3884cae6d007f5d464c53a49aeae710c84e1a2782d36bb28f95dfd5a824c134ae1dd7b0f1b6db3cf29fc09ed21f394f5665abf4af7f468b0b1a96505056f1d9d603d76bda7fa8d45f192e5d3b372cfc46614ec4f2b6405da452b92f120f43e9731529b7756bc31403e3d182a49afa74e2914"}, 0xd5, 0x1)
fstat(0xffffffffffffffff, &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000700)='./file1/file0\x00', &(0x7f0000000800)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000140)='./file1/file0\x00', r0, r1)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000200), &(0x7f0000001500)="", 0x1001, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file1/../file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
truncate(&(0x7f0000000600)='./file2/file0\x00', 0x0)
stat(&(0x7f0000000880)='./file1/../file0\x00', &(0x7f00000008c0))
lsetxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@md5={0x1, "e9e03c30b521232cdf8a108cc8ffa4b8"}, 0x11, 0x1)
setxattr$security_ima(&(0x7f0000000480)='./file0\x00', &(0x7f0000000500), &(0x7f0000000540)=@ng={0x4, 0x2, "1aad"}, 0x4, 0x2)
setxattr$security_evm(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680), &(0x7f00000006c0)=@md5={0x1, "b5f589b734b0d46144bca905a39eb5d7"}, 0x11, 0x1)
lsetxattr$smack_xattr_label(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0)='security.SMACK64EXEC\x00', &(0x7f00000002c0)=ANY=[@ANYBLOB='\\\x00\n\x00\x00\x00+\x00'], 0x7, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 8160
remove dir: /root/cephfs-client/dfs-0-143
remove dir time 12
-----finish removing dir
mkdir time 10
executor 3 create dir /root/cephfs-client/dfs-0-144 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-144
receive_execute: 6, 22
receive_execute: 6, 21
receive_execute: 5, 22
receive_execute: 4, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 507, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 400
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 3
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 327, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 327, flag collect 0
----- executor 3 signal number : 90
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 388, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 3 signal number : 154
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 836, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 836, flag collect 0
----- executor 3 signal number : 66
----- completed 9
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 758, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 758, flag collect 0
----- executor 3 signal number : 15
----- completed 10
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 496, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 496, flag collect 0
----- executor 3 signal number : 36
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 583, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 583, flag collect 0
----- executor 3 signal number : 3
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 228, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 228, flag collect 0
----- executor 3 signal number : 23
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 569, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 569, flag collect 0
----- executor 3 signal number : 81
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 262, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 262, flag collect 0
----- executor 3 signal number : 12
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 242, pid 1044, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 242, flag collect 0
----- executor 3 signal number : 3
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 19, 0
execute_one time: 0, 43
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7878, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1480
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 48, 0
before receive testcase: 0 0
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 49, 0
before receive testcase: 0 0
----- executor 2 signal number : 6972
----- executor 2 executes write_coverage_signal cov->size 4608, flag collect 0
time breakdown 3: 28, 46, 0
before receive testcase: 0 0
----- executor 2 signal number : 383
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1690
----- executor 2 executes write_coverage_signal cov->size 745, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2247
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5308
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1586
executor 2 server cover_cnt 11 output_pos_value 20799
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 77
2023/03/28 10:35:32 ----- PS len: 4
time breakdown 2: 26, 55, 0
2023/03/28 10:35:32 [CLIENT] executor 3 has 18 replies
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 11 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1480 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 154 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 66 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6972 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 383 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1690 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 2247 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 5308 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1586 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3662 setxattr setxattr
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 3
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000100)='./file0\x00', 0x0)
lgetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000140)=@random={'btrfs.', '-\x00'}, 0x0, 0x0)
setxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', 'btrfs.'}, &(0x7f00000000c0)='-\x00', 0x2, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 664
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-144
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-145 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-145
receive_execute: 12, 28
receive_execute: 4, 28
receive_execute: 11, 28
receive_execute: 13, 26
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 511, pid 1048, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 1048, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 37
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 1048, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 39, 6, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11356, flag collect 0
----- executor 2 signal number : 4696
----- executor 2 executes write_coverage_signal cov->size 1438, flag collect 0
----- executor 2 signal number : 291
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
----- executor 2 signal number : 524
executor 2 server cover_cnt 5 output_pos_value 6851
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 32, 7, 0
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 35
before receive testcase: 0 0
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [CLIENT] executor 3 has 3 replies
2023/03/28 10:35:32 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4696 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 291 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 524 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 3 signal and 0 cover from executor 3
time breakdown 3: 40, 5, 0
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 171 dup2 dup2
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 3
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x139240, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x242, 0x0)
dup2(r0, r0)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/cephfs-client/dfs-0-145
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 34
-----finish removing dir
mkdir time 11
receive_execute: 3, 56
receive_execute: 3, 56
receive_execute: 3, 56
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 create dir /root/cephfs-client/dfs-0-146 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-146
receive_execute: 5, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 618, pid 1051, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1318, pid 1051, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1318, flag collect 0
----- executor 3 signal number : 354
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1051, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 1, 14
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 540, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1384
----- executor 2 executes write_coverage_signal cov->size 20482, flag collect 0
----- executor 2 signal number : 1049
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 59, 18, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7809
----- executor 2 executes write_coverage_signal cov->size 1762, flag collect 0
time breakdown 3: 61, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 318
----- executor 2 executes write_coverage_signal cov->size 27412, flag collect 0
time breakdown 1: 59, 20, 0
before receive testcase: 0 0
----- executor 2 signal number : 2018
----- executor 2 executes write_coverage_signal cov->size 9500, flag collect 0
----- executor 2 signal number : 2353
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28729, flag collect 0
----- executor 2 signal number : 1224
executor 2 server cover_cnt 9 output_pos_value 16246
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 79
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 3 replies
2023/03/28 10:35:32 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 354 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1384 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1049 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 7809 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 318 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 2018 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 2353 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1224 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 ----- enqueue testcases with server coveraged
time breakdown 2: 59, 23, 0
before receive testcase: 0 0
2023/03/28 10:35:32 prog length: 3
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x139240, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x242, 0x0)
dup2(r0, r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/cephfs-client/dfs-0-146
remove dir time 20
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-147 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-147
receive_execute: 12, 22
receive_execute: 6, 22
receive_execute: 11, 22
receive_execute: 9, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 622, pid 1054, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 1
----- executor 3 cover number : 473, signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1326, pid 1054, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1326, flag collect 1
----- executor 3 cover number : 565, signal number : 353
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1054, write pid:-2127113840
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 21, 0
execute_one time: 1, 21
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 1
----- executor 2 cover number : 58, signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 34, 23, 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 33, 24, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 30, 26, 0
before receive testcase: 0 0
----- executor 2 cover number : 1118, signal number : 1342
----- executor 2 executes write_coverage_signal cov->size 18024, flag collect 1
----- executor 2 cover number : 1092, signal number : 1034
----- executor 2 executes write_coverage_signal cov->size 28137, flag collect 1
----- executor 2 cover number : 5251, signal number : 7149
----- executor 2 executes write_coverage_signal cov->size 2422, flag collect 1
----- executor 2 cover number : 266, signal number : 334
----- executor 2 executes write_coverage_signal cov->size 25261, flag collect 1
----- executor 2 cover number : 1497, signal number : 1945
----- executor 2 executes write_coverage_signal cov->size 17095, flag collect 1
----- executor 2 cover number : 4288, signal number : 4225
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 671, signal number : 1267
executor 2 server cover_cnt 9 output_pos_value 31631
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 76
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 3 replies
2023/03/28 10:35:32 fuzzer receive 500 signal and 473 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 353 signal and 565 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 58 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1342 signal and 1118 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1034 signal and 1092 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 7149 signal and 5251 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 334 signal and 266 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1945 signal and 1497 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4225 signal and 4288 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1267 signal and 671 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 28, 54, 0
before receive testcase: 0 1
2023/03/28 10:35:32 ----- triage return due to empty signal extra
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 3967 truncate truncate
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 8
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
fdatasync(0xffffffffffffffff)
open(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
truncate(&(0x7f0000000240)='./file0\x00', 0x3)
r0 = open$dir(&(0x7f0000000780)='./file0\x00', 0x212403, 0x1f6)
lsetxattr$security_evm(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)=@md5={0x1, "400c44b8f5e6c148e6d62dacc2c9d2df"}, 0x11, 0x0)
truncate(&(0x7f0000000080)='./file0\x00', 0xfffffffffffff656)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000000040), 0x0, 0x0, 0x3)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@known='system.posix_acl_default\x00', &(0x7f00000001c0)=""/74, 0x4a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1320
----- executor 0 receive testcase
remove dir: /root/cephfs-client/dfs-0-147
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-148 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-148
receive_execute: 4, 25
receive_execute: 33, 25
receive_execute: 33, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 33, 25
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1056, write pid:-2127113840
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 457, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 3 signal number : 52
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 231, pid 1056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 231, flag collect 0
----- executor 3 signal number : 26
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 5, 5
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 58, 12, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 before execute_one
----- executor 2 signal number : 1322
----- executor 2 executes write_coverage_signal cov->size 12115, flag collect 0
----- executor 2 signal number : 987
----- executor 2 executes write_coverage_signal cov->size 30463, flag collect 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 12, 1
executor 1 write_server_output
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 58, 13, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6910
----- executor 2 executes write_coverage_signal cov->size 705, flag collect 0
----- executor 2 signal number : 280
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 58, 17, 0
----- executor 2 signal number : 1772
----- executor 2 executes write_coverage_signal cov->size 11464, flag collect 0
----- executor 2 signal number : 2958
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1278
executor 2 server cover_cnt 9 output_pos_value 15598
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 46
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:32 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1322 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
time breakdown 2: 29, 21, 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6910 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1772 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 2958 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1278 signal and 0 cover from userspace component
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2458 open open
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 4
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
fremovexattr(r0, &(0x7f00000000c0)=@known='security.selinux\x00')
llistxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=""/56, 0x38)
open(&(0x7f0000000000)='./file0\x00', 0x800, 0x8a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 568
remove dir: /root/cephfs-client/dfs-0-148
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-149 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-149
receive_execute: 12, 27
receive_execute: 3, 27
receive_execute: 11, 27
receive_execute: 7, 26
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 1059, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 476
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 1059, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 120, pid 1059, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 3 signal number : 39
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1059, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 before execute_one
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4420, flag collect 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1274
----- executor 2 executes write_coverage_signal cov->size 11535, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4907
----- executor 2 executes write_coverage_signal cov->size 1080, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 38, 8, 0
before receive testcase: 0 0
time breakdown 1: 33, 9, 0
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 6157, flag collect 0
----- executor 2 signal number : 538
----- executor 2 executes write_coverage_signal cov->size 15619, flag collect 0
----- executor 2 signal number : 997
executor 2 server cover_cnt 6 output_pos_value 8080
time breakdown 3: 39, 6, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 38
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:32 fuzzer receive 476 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 6 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1274 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4907 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 997 signal and 0 cover from userspace component
time breakdown 2: 30, 11, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 6
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000380)=ANY=[@ANYBLOB="0301050000ee06006ac47ac6b2caa61287855212f4b323268ed7ab7c069fcc3ec7fe2547cbec0cc2788c03bd322e6a4f6d4f8fd8f760bdabf0538fa99843958ecf56c621840aa9cd331f03cbe872f28e0d0617b9aec0a09f77834a9ff78145cda6b1240b90dacbff9b5607f911f0a6cb695eb7387d5b2a4dd532bade79d2858c6efd3ce817793d4c5ced2e87e8e4df67a59d2479a67eb896a4aa57d7e1816faa6f8d5cb70c70bf47011e167e0a8f49a89f7b338838c73c09432f1b36c9ae89113a26506a48c89c2d36b352d86f9f3c4d0759a8efb9588a4026f39b037dbd3bbee8cb6ade749e44c8e2aa"], 0x73, 0x0)
setxattr$smack_xattr_label(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='security.SMACK64IPOUT\x00', &(0x7f0000000340)={'0000000000000000000000000000000'}, 0x20, 0x0)
open$dir(&(0x7f0000000140)='./file0\x00', 0x8a00, 0x94)
setxattr$incfs_id(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)={'0000000000000000000000000000000', 0x31}, 0x20, 0x43f7c30a215035e0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=@known='security.selinux\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1672
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-149
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-150 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-150
receive_execute: 6, 19
receive_execute: 3, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 24
receive_execute: 8, 26
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1062, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 1062, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 0
----- executor 3 signal number : 130
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 494, pid 1062, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 494, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 1062, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 1062, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 1
----- executor 3 write_call_output, size 473, pid 1062, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 473, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 1, 8
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 720, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 167
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 1 output_pos_value 171
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1376
----- executor 2 executes write_coverage_signal cov->size 16017, flag collect 0
----- executor 2 signal number : 939
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 34, 10, 0
before receive testcase: 0 0
time breakdown 0: 26, 17, 0
before receive testcase: 0 0
time breakdown 1: 31, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 6433
----- executor 2 executes write_coverage_signal cov->size 705, flag collect 0
----- executor 2 signal number : 275
----- executor 2 executes write_coverage_signal cov->size 32217, flag collect 0
----- executor 2 signal number : 772
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1544
executor 2 server cover_cnt 7 output_pos_value 11421
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 43
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [CLIENT] executor 3 has 6 replies
2023/03/28 10:35:32 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 0 has 1 replies
2023/03/28 10:35:32 ------- fuzzer executor 0 receive 167 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 2 has 7 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1376 signal and 0 cover from userspace component
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 939 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 6433 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 275 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 772 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1544 signal and 0 cover from userspace component
time breakdown 2: 23, 23, 0
before receive testcase: 0 0
2023/03/28 10:35:32 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 2341 lchown lchown
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 ----- mutateArg()
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 17
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x7, &(0x7f0000000a00)={0x0, 0x0, 0x0, 0x7})
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$lock(r1, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x62482, 0x60)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x1, 0x2, 0xff, 0x40})
r3 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
fstat(r3, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
r5 = dup2(r2, r2)
fcntl$dupfd(r5, 0x406, r3)
lchown(&(0x7f0000000140)='./file0\x00', r4, 0xffffffffffffffff)
fcntl$getown(r0, 0x9)
r6 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r6, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x2})
fcntl$lock(r6, 0x6, &(0x7f0000000080)={0x0, 0x2, 0x7f14, 0x9})
flock(r3, 0x6)
dup2(r0, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3136
remove dir: /root/cephfs-client/dfs-0-150
remove dir time 24
-----finish removing dir
mkdir time 13
executor 3 create dir /root/cephfs-client/dfs-0-151 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-151
receive_execute: 3, 37
receive_execute: 9, 36
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
receive_execute: 10, 38
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 9, 37
----- executor 3 write_call_output, size 616, pid 1065, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 1065, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 124
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1065, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1065, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1065, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 1065, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1065, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 1065, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1065, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1065, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1065, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1065, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1065, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 1065, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 1065, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 1065, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 13
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1065, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 7, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 9, 2, 1
execute_one time: 1, 12
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 1192, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 45, 18, 0
before receive testcase: 0 0
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 50, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 1470
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 48, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1070
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7088
----- executor 2 executes write_coverage_signal cov->size 14271, flag collect 0
----- executor 2 signal number : 1449
----- executor 2 executes write_coverage_signal cov->size 5917, flag collect 0
----- executor 2 signal number : 1441
----- executor 2 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2537
executor 2 server cover_cnt 8 output_pos_value 15146
2023/03/28 10:35:32 for select break: 1
2023/03/28 10:35:32 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:32 wg wait finish
2023/03/28 10:35:32 ------ all executors finish execution
2023/03/28 10:35:32 exec time: 62
2023/03/28 10:35:32 ----- PS len: 4
2023/03/28 10:35:32 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:32 [CLIENT] executor 3 has 17 replies
2023/03/28 10:35:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:32 fuzzer receive 124 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1470 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1070 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 7088 signal and 0 cover from userspace component
2023/03/28 10:35:32 fuzzer receive 1 signal and 0 cover from executor 3
time breakdown 2: 40, 25, 0
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 10:35:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1449 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 1441 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:32 ------- fuzzer executor 2 receive 2537 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:32 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:32 ----- no new client coverage: false, true
2023/03/28 10:35:32 mutate testcase with failures
2023/03/28 10:35:32 ----- insertCall()
2023/03/28 10:35:32 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/28 10:35:32 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:32 prog length: 4
2023/03/28 10:35:32 HasCrashFail:false HasNetFail:false
10:35:32 ---executing program 0:
---
---
---
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000000)={0x0, <r0=>0x0})
fcntl$setown(0xffffffffffffffff, 0x8, r0)
r1 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x145241, 0x0)
writev(r1, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x400000}], 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 656
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-151
remove dir time 12
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-152 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-152
receive_execute: 12, 14
receive_execute: 10, 15
receive_execute: 10, 15
receive_execute: 2, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- executor 3 write_call_output, size 0, pid 1070, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1070, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1070, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 5, 0, 6
execute_one time: 0, 11
----- executor 3 write_call_output, size 8733, pid 1070, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 8733, flag collect 0
----- executor 3 signal number : 987
----- completed 4
execute_one loop: 0, 0, 49
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 51, 11, 0
execute_one time: 1, 62
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 540, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 1246, flag collect 0
----- executor 0 signal number : 734
----- executor 0 executes write_coverage_signal cov->size 684, flag collect 0
----- executor 0 signal number : 367
executor 0 server cover_cnt 3 output_pos_value 1172
----- executor 2 signal number : 1373
----- executor 2 executes write_coverage_signal cov->size 15367, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 24244, flag collect 0
----- executor 2 signal number : 6734
----- executor 2 executes write_coverage_signal cov->size 350, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 25, 66, 0
time breakdown 1: 25, 66, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 1974
----- executor 2 executes write_coverage_signal cov->size 17358, flag collect 0
time breakdown 3: 26, 64, 0
before receive testcase: 0 0
----- executor 2 signal number : 4156
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1207
executor 2 server cover_cnt 9 output_pos_value 16796
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 83
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1373 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 987 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 6734 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 0 has 3 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1974 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4156 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1207 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 734 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 367 signal and 0 cover from userspace component
time breakdown 2: 17, 69, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 ----- enqueue testcases with server coveraged
2023/03/28 10:35:33 prog length: 4
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000000)={0x0, <r0=>0x0})
fcntl$setown(0xffffffffffffffff, 0x8, r0)
r1 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x145241, 0x0)
writev(r1, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x400000}], 0x1)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 656
remove dir: /root/cephfs-client/dfs-0-152
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-153 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-153
receive_execute: 10, 18
receive_execute: 5, 18
receive_execute: 8, 18
receive_execute: 8, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1073, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1073, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 1
----- executor 3 cover number : 454, signal number : 478
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
----- executor 3 write_call_output, size 8732, pid 1073, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 8732, flag collect 1
----- executor 3 cover number : 1009, signal number : 986
----- completed 4
execute_one loop: 0, 0, 34
executor 3, execute_one inner time: 0, 36, 0
execute_one time: 1, 36
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 26, 39, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 26, 40, 0
before receive testcase: 0 1
time breakdown 3: 28, 38, 0
before receive testcase: 0 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 446, flag collect 1
----- executor 2 cover number : 58, signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1149, signal number : 1376
----- executor 2 executes write_coverage_signal cov->size 10590, flag collect 1
----- executor 2 cover number : 1091, signal number : 954
----- executor 2 executes write_coverage_signal cov->size 17961, flag collect 1
----- executor 2 cover number : 4724, signal number : 5825
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 1
----- executor 2 cover number : 266, signal number : 255
----- executor 2 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 2 cover number : 7, signal number : 8
----- executor 2 executes write_coverage_signal cov->size 27828, flag collect 1
----- executor 2 cover number : 1474, signal number : 1913
----- executor 2 executes write_coverage_signal cov->size 12477, flag collect 1
----- executor 2 cover number : 2900, signal number : 3179
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 671, signal number : 1199
executor 2 server cover_cnt 10 output_pos_value 27148
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 82
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 478 signal and 454 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 10 replies
2023/03/28 10:35:33 fuzzer receive 986 signal and 1009 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 62 signal and 58 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1376 signal and 1149 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 954 signal and 1091 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5825 signal and 4724 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 255 signal and 266 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 8 signal and 7 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1913 signal and 1474 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3179 signal and 2900 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1199 signal and 671 cover from userspace component
time breakdown 2: 23, 63, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- triage return due to empty signal extra
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3764 symlink symlink
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 6
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlink(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0)='./file1\x00')
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open(&(0x7f0000000040)='./file1\x00', 0x0, 0x0)
r1 = dup2(r0, r0)
r2 = dup(r1)
lseek(r2, 0x0, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 720
remove dir: /root/cephfs-client/dfs-0-153
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-154 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-154
receive_execute: 4, 17
receive_execute: 28, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 29, 19
receive_execute: 27, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1075, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1075, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 1075, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1075, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1075, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1075, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
cover_reset in execute_call
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 25658, flag collect 0
----- executor 2 signal number : 1391
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
----- executor 2 signal number : 876
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 10121, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4435
----- executor 2 executes write_coverage_signal cov->size 2084, flag collect 0
----- executor 2 signal number : 302
----- executor 2 executes write_coverage_signal cov->size 6191, flag collect 0
----- executor 2 signal number : 548
----- executor 2 executes write_coverage_signal cov->size 8313, flag collect 0
time breakdown 1: 46, 6, 0
before receive testcase: 0 1
----- executor 2 signal number : 825
executor 2 server cover_cnt 7 output_pos_value 8459
time breakdown 0: 45, 8, 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 for select break: 1
before receive testcase: 0 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 26
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 6 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 2 has 7 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1391 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 876 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4435 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 302 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 548 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 825 signal and 0 cover from userspace component
time breakdown 2: 21, 9, 0
before receive testcase: 0 0
time breakdown 3: 49, 3, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2458 open open
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2781 readlinkat readlinkat
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 8
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file1\x00', 0x3, 0x20)
open(&(0x7f0000000340)='./file0\x00', 0x8040, 0x0)
open(&(0x7f00000000c0)='./file0\x00', 0x20000, 0x2)
readlinkat(0xffffffffffffffff, &(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)=""/154, 0x9a)
lsetxattr$security_selinux(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), 0x0, 0x0, 0x1)
r0 = open(&(0x7f0000000400)='./file0\x00', 0x428400, 0x3)
ioctl(r0, 0x0, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), 0xfffffffffffffffd, 0x0, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1312
remove dir: /root/cephfs-client/dfs-0-154
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-155 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-155
receive_execute: 5, 27
receive_execute: 2, 26
receive_execute: 3, 26
receive_execute: 3, 26
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 418, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 3 signal number : 362
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 4
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1078, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 0, 5
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 7, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 30881, flag collect 0
time breakdown 0: 29, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 1421
----- executor 2 executes write_coverage_signal cov->size 6861, flag collect 0
time breakdown 3: 32, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 896
----- executor 2 executes write_coverage_signal cov->size 15633, flag collect 0
----- executor 2 signal number : 5442
----- executor 2 executes write_coverage_signal cov->size 1083, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 6157, flag collect 0
----- executor 2 signal number : 552
----- executor 2 executes write_coverage_signal cov->size 2568, flag collect 0
----- executor 2 signal number : 979
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 8616, flag collect 0
----- executor 2 signal number : 848
executor 2 server cover_cnt 9 output_pos_value 10524
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 39
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 fuzzer receive 362 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1421 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 896 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5442 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 552 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 979 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 28, 13, 0
before receive testcase: 0 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 848 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 20
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000140)='./file0\x00', 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000080)='./file0\x00', &(0x7f0000000180), &(0x7f0000000300)=ANY=[], 0x26, 0x0)
lremovexattr(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000200)=@known='user.incfs.metadata\x00')
symlink(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000240)='./file0/file0\x00')
setxattr$user(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), 0x0, 0x0, 0x0)
readlink(&(0x7f0000000380)='./file0/file0\x00', &(0x7f0000000580)=""/176, 0xb0)
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0)=@v1={0x1000000, [{0x2, 0x9dc7}]}, 0xc, 0x1)
openat(0xffffffffffffff9c, &(0x7f0000000800)='./file0\x00', 0x70043, 0x0)
setxattr$security_smack_transmute(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440), 0x4, 0x1)
setxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
setxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=':\x00', 0x2, 0x3)
rename(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file0\x00')
getxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=@known='security.apparmor\x00', &(0x7f0000000200)=""/165, 0xa5)
getxattr(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)=@known='user.incfs.size\x00', &(0x7f0000000500)=""/98, 0x62)
mkdir(&(0x7f0000000780)='./file1\x00', 0xb)
open(&(0x7f0000000580)='./file1\x00', 0x40001, 0x20)
setxattr$trusted_overlay_origin(&(0x7f0000000140)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x2, 0x2)
setxattr(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)=@known='security.apparmor\x00', &(0x7f0000000300)='%}\x00', 0x3, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000340)='./file1\x00', &(0x7f00000003c0), &(0x7f0000000840)=ANY=[@ANYBLOB="00fbc2033f52f7ebb6a350f67d992d1b8af5aaedd80116ec22edfaadbc2f2c200b977c1f5b5721de386c8bd0880f9ca0da0bb98fb317ce6c250f4b661d9fbc7b7893cd9617ba3b934132227d8d23ab7724c8847faabfa83c0891879475b2bca5e8e67929f2fc2c73a496d7ef7ecf5e7bdfa8579cd23dc8eb08f78fa158ead5266b91d17779f0d15061ab68a61c766a0af04c119c0a682a693422a45d723b05293d492decc6d405daee4ff5c0cf72cdc8259be48ae672437bcb2d5f05bfa3fced5b4a53d1cf689d0a12"], 0xc2, 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000500)='./file0\x00', &(0x7f0000000540), &(0x7f00000006c0)={0x0, 0xfb, 0xad, 0x2, 0x1, "c55ba5bbf68aa4dad02af37612a99de3", "55e31fbcf01c0c475adb749094a3b0f1d88bc7d1d7ff4d9cbf1c6e71618a95ed07d4c8d061ab165f490cce200ca0346df6d8724b00ba62b9f61944d6774b5b71b23e51a38a11f55aa8c59760bd159aaf618a47aca9400f30775efc0649b1e6c27dcc617a75c731b41db4df115c6f8bfb802b00fc8bbc6f1ea136db6cb68c06cb2824304e378f8972da5bc2582e94d58fd1e438c0896a454f"}, 0xad, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4928
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-155
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-156 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-156
receive_execute: 2, 30
receive_execute: 7, 30
receive_execute: 8, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 30
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 166
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 553, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 553, flag collect 0
----- executor 3 signal number : 36
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 64
----- completed 5
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 184, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 184, flag collect 0
----- executor 3 signal number : 14
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 462, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 462, flag collect 0
----- executor 3 signal number : 8
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 595, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 595, flag collect 0
----- executor 3 signal number : 81
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 618, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 3 signal number : 54
----- completed 13
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 216, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 3 signal number : 3
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 6
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 566, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 566, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 265, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 265, flag collect 0
----- executor 3 signal number : 7
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 5
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 464, pid 1082, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 464, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 36, 12, 0
execute_one time: 0, 49
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1413
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1050
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 37, 53, 0
before receive testcase: 0 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 39, 51, 0
before receive testcase: 0 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 38, 55, 0
before receive testcase: 0 0
----- executor 2 signal number : 7105
----- executor 2 executes write_coverage_signal cov->size 4183, flag collect 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1774
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5487
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1415
executor 2 server cover_cnt 9 output_pos_value 18695
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 90
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 20 replies
2023/03/28 10:35:33 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 166 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1413 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1050 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 7105 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1774 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5487 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1415 signal and 0 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
time breakdown 2: 32, 60, 0
before receive testcase: 0 0
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 241 fsetxattr$trusted_overlay_origin fsetxattr$trusted_overlay_origin
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 5
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$getown(r0, 0x9)
open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
fsetxattr$trusted_overlay_origin(0xffffffffffffffff, &(0x7f0000000040), &(0x7f00000000c0), 0x2, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x40002, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/cephfs-client/dfs-0-156
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 34
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-157 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-157
receive_execute: 4, 36
receive_execute: 11, 36
receive_execute: 12, 36
receive_execute: 9, 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1087, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1087, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 1087, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1087, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 1087, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 3 signal number : 232
----- completed 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 4, 13
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1371
----- executor 2 executes write_coverage_signal cov->size 10638, flag collect 0
----- executor 2 signal number : 937
----- executor 2 executes write_coverage_signal cov->size 20889, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 47, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 6438
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 12086, flag collect 0
----- executor 2 signal number : 1437
----- executor 2 executes write_coverage_signal cov->size 16603, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 580
time breakdown 3: 48, 18, 0
before receive testcase: 0 0
time breakdown 1: 45, 21, 0
before receive testcase: 0 0
executor 2 server cover_cnt 7 output_pos_value 10853
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 59
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 5 replies
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 7 replies
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1371 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 937 signal and 0 cover from userspace component
time breakdown 2: 40, 23, 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 6438 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1437 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 580 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2458 open open
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2458 open open
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 16
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f00000002c0)='./file2\x00', 0x8, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
setxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x2)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
open(&(0x7f0000000040)='./file2\x00', 0x2c00, 0x100)
open$dir(&(0x7f0000000380)='./file3\x00', 0x0, 0x8)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f00000000c0)='./file1\x00')
open(&(0x7f0000000000)='./file1\x00', 0x6300e2, 0x26)
r2 = open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
dup2(r2, 0xffffffffffffffff)
readlinkat(r1, 0xfffffffffffffffc, 0x0, 0x0)
rename(&(0x7f0000000700)='./file4\x00', &(0x7f0000000740)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2272
remove dir: /root/cephfs-client/dfs-0-157
remove dir time 16
-----finish removing dir
mkdir time 11
executor 3 create dir /root/cephfs-client/dfs-0-158 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-158
receive_execute: 7, 27
receive_execute: 6, 27
receive_execute: 2, 27
receive_execute: 4, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 655, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 655, flag collect 0
----- executor 3 signal number : 493
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 848, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 848, flag collect 0
----- executor 3 signal number : 151
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
----- executor 3 write_call_output, size 582, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 582, flag collect 0
----- executor 3 signal number : 27
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 32
----- completed 8
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 24
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 1090, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 14, 0
execute_one time: 1, 30
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1140, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1421
----- executor 2 executes write_coverage_signal cov->size 27975, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1101
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 33, 34, 0
before receive testcase: 0 0
----- executor 2 signal number : 7673
----- executor 2 executes write_coverage_signal cov->size 2776, flag collect 0
time breakdown 1: 31, 36, 0
before receive testcase: 0 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 357
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 839
----- executor 2 executes write_coverage_signal cov->size 25918, flag collect 0
time breakdown 3: 34, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 4431
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2238
executor 2 server cover_cnt 9 output_pos_value 18151
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 69
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 16 replies
2023/03/28 10:35:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 493 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 fuzzer receive 151 signal and 0 cover from executor 3
time breakdown 2: 29, 42, 0
2023/03/28 10:35:33 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1421 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1101 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 7673 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 357 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 839 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4431 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 2238 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 196 fchown fchown
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 8
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x24, &(0x7f00000000c0)={0x1, 0x3, 0x7, 0x0, 0xffffffffffffffff})
open$dir(&(0x7f0000000700)='./file0\x00', 0x111040, 0x0)
open$dir(&(0x7f0000000080)='./file1\x00', 0x302, 0x0)
r0 = open(&(0x7f0000000040)='./file0\x00', 0x40202, 0x0)
fchmod(r0, 0x8707983954862d20)
r1 = openat(r0, &(0x7f0000000000)='./file0\x00', 0x400142, 0x8)
fchown(r1, 0xffffffffffffffff, 0xee01)
lchown(&(0x7f0000000200)='./file0\x00', 0x0, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-158
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-159 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-159
receive_execute: 4, 30
receive_execute: 14, 30
receive_execute: 9, 31
receive_execute: 12, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1094, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1094, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 1094, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 90
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1326, pid 1094, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1326, flag collect 0
----- executor 3 signal number : 295
----- completed 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 1094, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 67
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1094, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1094, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 237, pid 1094, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 237, flag collect 0
----- executor 3 signal number : 11
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 0, 0
execute_one time: 1, 14
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 44, 17, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 566, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 42, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 1409
----- executor 2 executes write_coverage_signal cov->size 23165, flag collect 0
----- executor 2 signal number : 1043
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7644
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2202
----- executor 2 executes write_coverage_signal cov->size 15220, flag collect 0
----- executor 2 signal number : 3826
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 17035, flag collect 0
----- executor 2 signal number : 835
executor 2 server cover_cnt 8 output_pos_value 17049
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 54
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1409 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1043 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 7644 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 2202 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3826 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 835 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
time breakdown 2: 34, 24, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 295 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 11 signal and 0 cover from executor 3
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 40, 19, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 3
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x0)
open$dir(&(0x7f0000000240)='./file0\x00', 0x2202, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/cephfs-client/dfs-0-159
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-160 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-160
receive_execute: 10, 25
receive_execute: 9, 25
receive_execute: 8, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 1098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 858, pid 1098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 858, flag collect 0
----- executor 3 signal number : 246
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 2, 8
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 11, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 600, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 17233, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 13945, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 33, 12, 0
time breakdown 0: 34, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 990
----- executor 2 executes write_coverage_signal cov->size 28167, flag collect 0
----- executor 2 signal number : 6888
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 284
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 2019
----- executor 2 executes write_coverage_signal cov->size 14860, flag collect 0
----- executor 2 signal number : 3892
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 2 signal number : 29
executor 2 server cover_cnt 9 output_pos_value 15593
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 43
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 3 replies
time breakdown 2: 28, 18, 0
2023/03/28 10:35:33 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 159 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:35:33 fuzzer receive 246 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 990 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 6888 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 2019 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3892 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 29 signal and 0 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3970 unlink unlink
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2373 mkdir mkdir
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3761 stat stat
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 187 faccessat faccessat
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2458 open open
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 15
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
open(&(0x7f0000000100)='./file0\x00', 0x1a2c0, 0x0)
open(&(0x7f0000000780)='./file0\x00', 0x430400, 0x0)
lremovexattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='trusted.overlay.nlink\x00')
lgetxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000540)=@random={'os2.', '\x00'}, &(0x7f0000000580)=""/59, 0x3b)
mkdir(&(0x7f0000000640)='./file0\x00', 0x72)
faccessat(0xffffffffffffffff, &(0x7f0000000740)='./file0\x00', 0xc1)
r0 = open(&(0x7f0000001940)='./file0\x00', 0x240000, 0x100)
unlink(&(0x7f0000000600)='./file0\x00')
stat(&(0x7f0000000500)='./file0\x00', &(0x7f0000000280))
faccessat(r0, &(0x7f00000005c0)='./file0\x00', 0xc0)
listxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000140)=""/70, 0xfffffffffffffcd8)
listxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
setxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000200)=@random={'system.', '\x00'}, &(0x7f0000000240)='trusted.overlay.nlink\x00', 0x16, 0x2)
setxattr$trusted_overlay_upper(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)={0x0, 0xfb, 0x105, 0x4, 0x8, "250ba2f13fc435cef6c495bc52be1f0d", "df2032dbedb4d941a5ffd50c7e41406bec126a7cb5174f5ff613c678ae3d8bc422c54ebcca7f6129ecb6525410d63e9f81818266d082aab11b828c3d573dd14f28fccc79315d7f0e2c77aa55c30d40c6fab809fdb596ff9beae1df49cbbbd95563ee2998198571b960b069cd3f3ec09c13b7800fddf918b4472ae7fbeacf171bfafb1589cb5e5c25420b30c9c1868ea2a70e901222cbb52f54765b416a4eec79657aefa65a226f72faebd206757e796ac2ddbc10be0397852d938fd2975749d13b8632dc3c20b0acca1d12b62af55e638a51308a4cbdd7eba1ee6068513b76f14dc84a66a3e2eee5d651acfc9eb9cdc7"}, 0x105, 0x0)
stat(&(0x7f0000000680)='./file1\x00', &(0x7f00000006c0))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2896
remove dir: /root/cephfs-client/dfs-0-160
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-161 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-161
receive_execute: 12, 7
receive_execute: 5, 7
receive_execute: 11, 7
receive_execute: 11, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 0
----- executor 3 signal number : 186
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 475, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 475, flag collect 0
----- executor 3 signal number : 35
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 4, 0
execute_one time: 1, 12
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 720, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 19611, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1313
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 16, 0
before receive testcase: 0 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 16, 0
----- executor 2 signal number : 7496
----- executor 2 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 2 signal number : 250
----- executor 2 executes write_coverage_signal cov->size 31594, flag collect 0
----- executor 2 signal number : 714
executor 2 server cover_cnt 5 output_pos_value 9849
time breakdown 3: 19, 15, 0
before receive testcase: 0 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 26
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 15 replies
2023/03/28 10:35:33 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 186 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
time breakdown 2: 12, 19, 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1313 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 7496 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 250 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 714 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 516 getxattr getxattr
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3761 stat stat
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 7
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f00000003c0))
symlink(&(0x7f0000000140)='.\x00', &(0x7f0000000180)='./file0\x00')
r0 = open$dir(&(0x7f0000000500)='./file0\x00', 0x4a440, 0x0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x101440, 0x86)
getdents64(r0, &(0x7f00000000c0)=""/76, 0x4c)
llistxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
getxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000380)=@random={'osx.', 'system.advise\x00'}, &(0x7f00000001c0)=""/216, 0xd8)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/cephfs-client/dfs-0-161
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-162 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-162
receive_execute: 7, 16
receive_execute: 3, 16
receive_execute: 4, 17
receive_execute: 5, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 39
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 149, pid 1105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 149, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4162, flag collect 0
----- executor 2 signal number : 1263
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 10200, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 23, 5, 0
before receive testcase: 0 1
----- executor 2 signal number : 4463
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 532
time breakdown 0: 22, 6, 0
time breakdown 1: 21, 5, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6331
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 23
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 7 replies
2023/03/28 10:35:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 4 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
time breakdown 2: 19, 7, 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1263 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4463 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 532 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2343 link link
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 19
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
sync()
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0xc1)
open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
chown(&(0x7f0000000340)='./file0\x00', 0xee01, 0xee01)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000000240)='system_u:object_r:var_log_t:s0\x00', 0x1f, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400)='./file0\x00', 0x8, 0x2)
r0 = open(&(0x7f0000000480)='./file0\x00', 0x2, 0x40)
chown(&(0x7f00000006c0)='./file0/file0\x00', 0xee00, 0xee00)
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000000)='./file0\x00', r1, 0xffffffffffffffff)
sync()
lsetxattr$security_smack_transmute(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x4, 0x2)
link(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780)='./file0\x00')
lgetxattr(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0)=@known='system.posix_acl_access\x00', &(0x7f0000000600)=""/152, 0x98)
write(r0, &(0x7f00000004c0)="81bd7077a66e1e220a9aba9492e9302592bda6606db4840db590b40df633365d4ad5c176047e62c4b4605fb807db8d3c30c0139893011dc65e5b841f36e3bba3d4fff9b554e0e85b4b9be61bf21732eddeb1d4529615425ba5eba0f12a0c61c2cc05100b65dda9005b5973788b0caccb50706fdb09b819d159cca5229135fc984e8c6c83d6f05265a8104a72baf075090e1c8cd6d466892afcede34e1ab4b0318ad22b960cd8ee9f033dafe4e3430093f73c1a495381cd253cf7f5d82c161759", 0xc0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3024
remove dir: /root/cephfs-client/dfs-0-162
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-163 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-163
receive_execute: 5, 16
receive_execute: 4, 16
receive_execute: 2, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
receive_execute: 3, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1448, pid 1108, write pid:-2126838430
----- executor 3 executes write_coverage_signal cov->size 1448, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 1108, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 45
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 651, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 651, flag collect 0
----- executor 3 signal number : 411
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 138
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 494, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 494, flag collect 0
----- executor 3 signal number : 88
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 224, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 53
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 557, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 557, flag collect 0
----- executor 3 signal number : 13
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 27
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 36
----- completed 13
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 280, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 280, flag collect 0
----- executor 3 signal number : 2
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 1108, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 14
----- completed 15
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 40
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1108, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 392, pid 1108, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 392, flag collect 0
----- executor 3 signal number : 209
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 25, 22, 0
execute_one time: 0, 47
2023/03/28 10:35:33 for select break: 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1620, flag collect 0
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 59
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1425
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 50, 0
----- executor 2 signal number : 1053
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 875
----- executor 2 signal number : 2652
----- executor 2 executes write_coverage_signal cov->size 3147, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1395
----- executor 2 signal number : 292
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 21, 48, 0
before receive testcase: 0 1
----- executor 2 signal number : 793
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 52, 0
before receive testcase: 0 0
----- executor 2 signal number : 5629
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 11933
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 70
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 19 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 411 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 138 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 209 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 3 replies
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 875 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1425 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1053 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 2652 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 292 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 793 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5629 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
time breakdown 2: 18, 54, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 8
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='security.SMACK64MMAP\x00', &(0x7f0000000380)={'%[-^'}, 0x5, 0x1)
lsetxattr$security_evm(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000002240)=@v2={0x0, 0x0, 0x0, 0xfffffffe, 0x10af, ""}, 0x10b8, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)='security.SMACK64IPIN\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="2c25293761350fb00c55070e6b476c2b82fde02ac571f85a2fe4b9403320"], 0x7, 0x1)
lsetxattr$smack_xattr_label(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='security.SMACK64\x00', &(0x7f0000000440)={',+[{'}, 0x5, 0x0)
lremovexattr(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)=@known='trusted.syz\x00')
lremovexattr(&(0x7f0000000200)='./file0\x00', &(0x7f00000002c0)=@known='user.incfs.metadata\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000100)='./file0\x00', &(0x7f0000000280)='security.SMACK64IPOUT\x00', &(0x7f0000000240)={'security.evm\x00'}, 0xe, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6520
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-163
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-164 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-164
receive_execute: 10, 6
receive_execute: 4, 7
receive_execute: 8, 7
receive_execute: 6, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 137
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 516, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 516, flag collect 0
----- executor 3 signal number : 86
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 421, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 421, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 488, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 488, flag collect 0
----- executor 3 signal number : 11
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 523, pid 1112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 523, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 2, 0
execute_one time: 1, 12
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1046, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 16144, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 13, 15, 0
before receive testcase: 0 0
time breakdown 1: 15, 15, 0
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 27830, flag collect 0
time breakdown 3: 16, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1059
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7405
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 21485, flag collect 0
----- executor 2 signal number : 4066
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 15032
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 30
2023/03/28 10:35:33 ----- PS len: 4
time breakdown 2: 11, 22, 0
2023/03/28 10:35:33 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/28 10:35:33 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 7 replies
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1059 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 7405 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4066 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3967 truncate truncate
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 3
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x0)
lchown(&(0x7f0000000040)='./file0\x00', 0x0, 0xffffffffffffffff)
truncate(&(0x7f0000000080)='./file0\x00', 0x7)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 368
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-164
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-165 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-165
receive_execute: 2, 17
receive_execute: 8, 17
receive_execute: 9, 17
receive_execute: 10, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1115, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 1115, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 117
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1115, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11291, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4693
----- executor 2 executes write_coverage_signal cov->size 7760, flag collect 0
----- executor 2 signal number : 425
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
----- executor 2 signal number : 522
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 26, 5, 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 28, 2, 0
before receive testcase: 0 0
time breakdown 1: 25, 5, 0
executor 2 server cover_cnt 5 output_pos_value 6978
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 23
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 3 replies
time breakdown 2: 19, 6, 0
2023/03/28 10:35:33 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4693 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 425 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 522 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/28 10:35:33 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 4
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000740)='./file0\x00', 0x40, 0x0)
r0 = open(&(0x7f00000009c0)='./file0\x00', 0x582, 0x0)
write$binfmt_elf32(r0, &(0x7f0000000b00)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38}, [{0x0, 0x0, 0x0, 0x6}]}, 0x58)
ftruncate(r0, 0x80)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1696
remove dir: /root/cephfs-client/dfs-0-165
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-166 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-166
receive_execute: 6, 22
receive_execute: 2, 22
receive_execute: 2, 22
receive_execute: 5, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 1118, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1118, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 1118, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 346
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 147, pid 1118, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 147, flag collect 0
----- executor 3 signal number : 60
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 0, 7
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8631, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 8106, flag collect 0
----- executor 2 signal number : 895
----- executor 2 executes write_coverage_signal cov->size 14472, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 5360
----- executor 2 executes write_coverage_signal cov->size 1411, flag collect 0
----- executor 2 signal number : 303
----- executor 2 executes write_coverage_signal cov->size 19816, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1639
----- executor 2 executes write_coverage_signal cov->size 11027, flag collect 0
time breakdown 3: 28, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 3012
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 12685
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 38
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 895 signal and 0 cover from userspace component
time breakdown 2: 24, 16, 0
before receive testcase: 0 0
2023/03/28 10:35:33 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5360 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 303 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1639 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3012 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2724 preadv preadv
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3761 stat stat
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2809 rename rename
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 8
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180))
rename(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='./file0\x00')
open(&(0x7f00000000c0)='./file0\x00', 0x202, 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x11)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x101801, 0x70)
open$dir(&(0x7f0000000080)='./file0\x00', 0x600040, 0x95)
preadv(r0, &(0x7f0000000040), 0x0, 0x800, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x103)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1120
remove dir: /root/cephfs-client/dfs-0-166
time breakdown 1: 24, 13, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-167 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-167
receive_execute: 10, 12
receive_execute: 4, 12
receive_execute: 7, 12
receive_execute: 9, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 85, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1121, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 329, flag collect 0
----- executor 2 signal number : 250
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 1 output_pos_value 254
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 4, 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 16
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 1 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 250 signal and 0 cover from userspace component
2023/03/28 10:35:33 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2814 rmdir rmdir
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 9
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
rmdir(&(0x7f0000000040)='./file0\x00')
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
flock(r0, 0x1)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
flock(r1, 0x6)
dup2(r1, r1)
r2 = dup(r1)
dup2(r0, r2)
---

end of program
time breakdown 2: 16, 4, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 22, 3, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1192
remove dir: /root/cephfs-client/dfs-0-167
remove dir time 2
-----finish removing dir
receive_execute: 1, 3
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 0, 4
time breakdown 1: 19, 4, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 0, 4
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-168 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-168
receive_execute: 2, 3
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1125, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 662, pid 1125, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 3 signal number : 471
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 1125, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 113
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 322, pid 1125, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 22
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1125, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 11
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 1125, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 4
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1125, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1125, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 1125, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 8
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 2, 1
execute_one time: 1, 8
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 746, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 20489, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1328
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4, 11, 0
before receive testcase: 0 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6434
----- executor 2 executes write_coverage_signal cov->size 3299, flag collect 0
time breakdown 3: 5, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 6143, flag collect 0
----- executor 2 signal number : 538
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 6 output_pos_value 8697
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 18
2023/03/28 10:35:33 ----- PS len: 4
time breakdown 2: 4, 15, 0
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [CLIENT] executor 3 has 9 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 6 replies
2023/03/28 10:35:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1328 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 6434 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 5
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000300)=ANY=[], 0x73, 0x0)
r0 = fcntl$getown(0xffffffffffffffff, 0x9)
fcntl$lock(0xffffffffffffffff, 0x26, &(0x7f0000000080)={0x1, 0x3, 0xfffffffffffffff9, 0xb5b, r0})
chmod(&(0x7f0000000140)='./file0\x00', 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 920
remove dir: /root/cephfs-client/dfs-0-168
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 4, 12, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-169 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-169
receive_execute: 7, 13
receive_execute: 7, 12
receive_execute: 5, 12
receive_execute: 3, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1130, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 1130, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 0
----- executor 3 signal number : 130
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1130, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1130, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 582, pid 1130, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 582, flag collect 0
----- executor 3 signal number : 115
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 0, 4
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10777, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 25701, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
time breakdown 0: 17, 6, 0
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 5665
----- executor 2 executes write_coverage_signal cov->size 2782, flag collect 0
----- executor 2 signal number : 310
----- executor 2 executes write_coverage_signal cov->size 21737, flag collect 0
time breakdown 3: 20, 5, 0
before receive testcase: 0 1
----- executor 2 signal number : 648
executor 2 server cover_cnt 5 output_pos_value 7984
before receive testcase: 0 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 22
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 5 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 115 signal and 0 cover from executor 3
time breakdown 2: 16, 9, 0
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5665 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 648 signal and 0 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2462 openat openat
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2373 mkdir mkdir
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3761 stat stat
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 3967 truncate truncate
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 9
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000780)='./file0\x00', 0x0, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
truncate(&(0x7f0000000380)='./file0\x00', 0x1)
llistxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000240)=""/161, 0xa1)
lsetxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
r1 = openat(r0, &(0x7f0000000000)='./file0\x00', 0x40300, 0x1)
mkdir(&(0x7f0000000200)='./file0\x00', 0x0)
fcntl$dupfd(r0, 0x406, r1)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000300))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
remove dir: /root/cephfs-client/dfs-0-169
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-170 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-170
receive_execute: 3, 16
receive_execute: 7, 16
receive_execute: 7, 16
receive_execute: 7, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 1, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 136
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 1134, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 29
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 1775, flag collect 0
----- executor 2 signal number : 942
----- executor 2 executes write_coverage_signal cov->size 8722, flag collect 0
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 19446, flag collect 0
----- executor 2 signal number : 5477
----- executor 2 executes write_coverage_signal cov->size 1063, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 7136, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 546
----- executor 2 executes write_coverage_signal cov->size 2530, flag collect 0
time breakdown 1: 23, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 931
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 9295
time breakdown 0: 23, 7, 0
before receive testcase: 0 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 24
time breakdown 2: 19, 8, 0
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 9 replies
2023/03/28 10:35:33 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 942 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5477 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 546 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 931 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 3: 23, 6, 0
before receive testcase: 0 1
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2458 open open
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2343 link link
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 7
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlink(&(0x7f0000000100)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)="5edd6f969f30bb1c220ebb13bc9f6414ca3bc8be1011a88a6e3569a3f6be29735833c782e3fc83b0c4392da83bf63b6de5064bbf3677c092c3d711c3c58c934cbf3eba0ad0992a7084f8b2d3b72a39cd7540ac0e997665e89263d12e480ad628232f328ef97994902c363080b4754300746e8d8db2c4ee66984ddd72bc224e4e6bbfaa2d3103c0f98e58715e16131bd5c19de25dee7f730a815edea696425d6d6984e875230cd48b3dbf3b37822d8498aab1aaca82526be63863ab7f6f", 0xbd, 0x0)
link(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)='./file1\x00')
open$dir(&(0x7f0000000500)='./file0\x00', 0x0, 0x14)
open(&(0x7f0000000340)='./file0\x00', 0x220002, 0x10)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x3)
llistxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/90, 0x5a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
remove dir: /root/cephfs-client/dfs-0-170
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-171 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-171
receive_execute: 5, 14
receive_execute: 3, 14
receive_execute: 4, 13
receive_execute: 4, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 477, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 536, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 536, flag collect 0
----- executor 3 signal number : 39
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 174
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 445, pid 1138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 445, flag collect 0
----- executor 3 signal number : 65
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 11822, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1295
----- executor 2 executes write_coverage_signal cov->size 31577, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 17, 7, 0
time breakdown 0: 18, 7, 0
----- executor 2 signal number : 6710
----- executor 2 executes write_coverage_signal cov->size 2375, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 14800, flag collect 0
----- executor 2 signal number : 653
time breakdown 3: 19, 6, 0
before receive testcase: 0 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 24
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 7 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1295 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 6710 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 653 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 174 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 65 signal and 0 cover from executor 3
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 9050
time breakdown 2: 17, 9, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 mutate testcase with failures
2023/03/28 10:35:33 ----- mutateArg()
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/28 10:35:33 ----- insertCall()
2023/03/28 10:35:33 ----- generateCall 2458 open open
2023/03/28 10:35:33 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:33 prog length: 4
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000000)=""/137, 0x89)
open(&(0x7f0000000280)='./file0\x00', 0x42000, 0x30)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
remove dir: /root/cephfs-client/dfs-0-171
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-172 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-172
receive_execute: 7, 17
receive_execute: 4, 16
receive_execute: 6, 17
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 5, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 1142, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 1142, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 139
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 1142, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 0
----- executor 3 signal number : 140
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 209, pid 1142, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 3 signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 2, 0
execute_one time: 0, 5
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 412, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 287
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 12133, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 141, flag collect 0
----- executor 0 signal number : 66
----- executor 0 executes write_coverage_signal cov->size 1216, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 627
----- executor 0 executes write_coverage_signal cov->size 15976, flag collect 0
----- executor 2 signal number : 1299
----- executor 2 executes write_coverage_signal cov->size 28262, flag collect 0
----- executor 0 signal number : 1941
executor 0 server cover_cnt 4 output_pos_value 2934
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 6037
----- executor 2 executes write_coverage_signal cov->size 655, flag collect 0
----- executor 2 signal number : 238
----- executor 2 executes write_coverage_signal cov->size 18758, flag collect 0
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 24, 6, 0
before receive testcase: 0 1
2023/03/28 10:35:33 for select break: 1
----- executor 2 signal number : 597
executor 2 server cover_cnt 5 output_pos_value 8249
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
time breakdown 2: 20, 10, 0
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 26
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 [SERVER] executor 0 has 4 replies
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1299 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 6037 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 238 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 597 signal and 0 cover from userspace component
2023/03/28 10:35:33 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 66 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 627 signal and 0 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 0 receive 1941 signal and 0 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 ----- no new client coverage: false, true
2023/03/28 10:35:33 ----- enqueue testcases with server coveraged
time breakdown 0: 22, 9, 0
before receive testcase: 0 0
2023/03/28 10:35:33 prog length: 4
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000000)=""/137, 0x89)
open(&(0x7f0000000280)='./file0\x00', 0x42000, 0x30)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 816
remove dir: /root/cephfs-client/dfs-0-172
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-173 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-173
receive_execute: 7, 14
receive_execute: 4, 13
receive_execute: 6, 13
receive_execute: 5, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 477, pid 1145, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 1
----- executor 3 cover number : 373, signal number : 388
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 1145, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 1
----- executor 3 cover number : 361, signal number : 139
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 1145, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 1
----- executor 3 cover number : 370, signal number : 140
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 209, pid 1145, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 3 cover number : 106, signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4, 0
execute_one time: 0, 4
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 1
----- executor 2 cover number : 58, signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8169, flag collect 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 6, 0
----- executor 2 cover number : 1044, signal number : 1284
----- executor 2 executes write_coverage_signal cov->size 19469, flag collect 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 7, 0
before receive testcase: 0 0
time breakdown 3: 21, 4, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 cover number : 4494, signal number : 5543
----- executor 2 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 2 cover number : 235, signal number : 246
----- executor 2 executes write_coverage_signal cov->size 12470, flag collect 1
----- executor 2 cover number : 582, signal number : 568
executor 2 server cover_cnt 5 output_pos_value 14130
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 28
2023/03/28 10:35:33 ----- PS len: 4
time breakdown 2: 17, 15, 0
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 373 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 139 signal and 361 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 140 signal and 370 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 48 signal and 106 cover from executor 3
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 58 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1284 signal and 1044 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5543 signal and 4494 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 246 signal and 235 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 568 signal and 582 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 prog length: 4
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000000)=""/137, 0x89)
open(&(0x7f0000000280)='./file0\x00', 0x42000, 0x30)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-173
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-174 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-174
receive_execute: 13, 12
receive_execute: 3, 12
receive_execute: 11, 12
receive_execute: 9, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1147, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 1
----- executor 3 cover number : 373, signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 1147, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 1
----- executor 3 cover number : 361, signal number : 139
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 1147, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 1
----- executor 3 cover number : 370, signal number : 140
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 209, pid 1147, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 3 cover number : 106, signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4, 0
execute_one time: 1, 4
executor 1 write_server_output
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 1
----- executor 2 cover number : 58, signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8172, flag collect 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 23, 7, 0
before receive testcase: 0 1
----- executor 2 cover number : 1044, signal number : 1284
----- executor 2 executes write_coverage_signal cov->size 19457, flag collect 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 21, 7, 0
time breakdown 3: 25, 6, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 cover number : 4504, signal number : 5570
----- executor 2 executes write_coverage_signal cov->size 660, flag collect 1
----- executor 2 cover number : 235, signal number : 246
----- executor 2 executes write_coverage_signal cov->size 12470, flag collect 1
----- executor 2 cover number : 582, signal number : 568
executor 2 server cover_cnt 5 output_pos_value 14167
2023/03/28 10:35:33 for select break: 1
2023/03/28 10:35:33 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:33 wg wait finish
2023/03/28 10:35:33 ------ all executors finish execution
2023/03/28 10:35:33 exec time: 27
2023/03/28 10:35:33 ----- PS len: 4
2023/03/28 10:35:33 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:33 fuzzer receive 388 signal and 373 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 139 signal and 361 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 140 signal and 370 cover from executor 3
2023/03/28 10:35:33 fuzzer receive 48 signal and 106 cover from executor 3
2023/03/28 10:35:33 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:33 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 60 signal and 58 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 1284 signal and 1044 cover from userspace component
time breakdown 2: 15, 15, 0
before receive testcase: 0 0
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 5570 signal and 4504 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 246 signal and 235 cover from userspace component
2023/03/28 10:35:33 ------- fuzzer executor 2 receive 568 signal and 582 cover from userspace component
2023/03/28 10:35:33 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:33 prog length: 4
2023/03/28 10:35:33 HasCrashFail:false HasNetFail:false
10:35:33 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000000)=""/137, 0x89)
open(&(0x7f0000000280)='./file0\x00', 0x42000, 0x30)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
remove dir: /root/cephfs-client/dfs-0-174
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-175 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-175
receive_execute: 12, 15
receive_execute: 2, 16
receive_execute: 10, 16
receive_execute: 6, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 477, pid 1149, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 1
----- executor 3 cover number : 373, signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 1149, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 1
----- executor 3 cover number : 361, signal number : 139
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 1149, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 1
----- executor 3 cover number : 370, signal number : 140
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 209, pid 1149, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 3 cover number : 106, signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4, 0
execute_one time: 0, 5
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 1
executor 0 write_server_output
----- executor 2 cover number : 58, signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8278, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 cover number : 125, signal number : 127
executor 0 server cover_cnt 1 output_pos_value 256
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 7, 0
----- executor 2 cover number : 1049, signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 19531, flag collect 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 8, 0
before receive testcase: 0 0
time breakdown 3: 27, 6, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 cover number : 4497, signal number : 5559
----- executor 2 executes write_coverage_signal cov->size 1036, flag collect 1
----- executor 2 cover number : 259, signal number : 282
----- executor 2 executes write_coverage_signal cov->size 12470, flag collect 1
----- executor 2 cover number : 582, signal number : 568
executor 2 server cover_cnt 5 output_pos_value 14222
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 31
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [SERVER] executor 0 has 1 replies
2023/03/28 10:35:34 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:34 ------- fuzzer executor 0 receive 127 signal and 125 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 388 signal and 373 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 5 replies
time breakdown 2: 18, 16, 0
2023/03/28 10:35:34 fuzzer receive 139 signal and 361 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 58 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 140 signal and 370 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 48 signal and 106 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1292 signal and 1049 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5559 signal and 4497 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 282 signal and 259 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 568 signal and 582 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- triage return due to empty signal extra
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 12
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
setxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f00000011c0)=ANY=[@ANYBLOB="00fb4a054392bc189763f2072b047bcfeb46b8c58453f4f1567241b2ad0aaedd53d318a6348b422a93e4d76ebca3c4f6d0d59b8f9dfaceee8ca539cf86e36305e397f7c95b3544b549d596503bfc289b7b1af045a034c0c693a31fb1744d9cc3e9fde4bbbcbe94052a4ae8234414e467ff80056bd71b6294a1408b8bf13b0748c96700cfd3197990441279e962d1cd58e120d3ba6e7bb3cf39794c1529ca0450162b12d874a5ba8a99e44896ead3"], 0x4a, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000001140), &(0x7f0000001180), 0x2, 0x3)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
write$binfmt_aout(r0, &(0x7f0000000700)={{0xcc, 0x0, 0x8, 0x3cd, 0x3c0, 0xfa, 0x107, 0x2}, "d285", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0xa22)
lsetxattr$system_posix_acl(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f0000000600)={{}, {0x1, 0x7}, [{0x2, 0x2, 0xee00}, {0x2, 0x5, 0xee01}, {0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x0, r1}, {0x2, 0x4, r2}], {0x4, 0x2}, [{0x8, 0x4, 0xee01}, {0x8, 0x1, 0xee01}, {0x8, 0x1, 0xffffffffffffffff}, {0x8, 0x5, r3}, {0x8, 0x3, r4}, {0x8, 0x1, r5}, {0x8, 0x1, 0xee01}, {0x8, 0x1, 0xee00}], {0x10, 0x6}, {0x20, 0x4}}, 0x8c, 0x0)
chmod(&(0x7f0000000140)='./file0\x00', 0x82)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7808
remove dir: /root/cephfs-client/dfs-0-175
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-176 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-176
receive_execute: 13, 14
receive_execute: 11, 15
receive_execute: 11, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 3, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 399, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 528, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 528, flag collect 0
----- executor 3 signal number : 93
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 546, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 546, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 436, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 436, flag collect 0
----- executor 3 signal number : 36
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 545, pid 1151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 3 signal number : 117
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 18, 0
execute_one time: 1, 29
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 900, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 15082, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 1327, flag collect 0
----- executor 0 signal number : 604
----- executor 0 executes write_coverage_signal cov->size 1478, flag collect 0
----- executor 0 signal number : 607
executor 0 server cover_cnt 3 output_pos_value 1281
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 24268, flag collect 0
2023/03/28 10:35:34 for select break: 1
time breakdown 3: 27, 33, 0
before receive testcase: 0 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 34, 0
----- executor 2 signal number : 8126
----- executor 2 executes write_coverage_signal cov->size 2738, flag collect 0
----- executor 2 signal number : 365
----- executor 2 executes write_coverage_signal cov->size 29778, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1135
----- executor 2 executes write_coverage_signal cov->size 22991, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 26, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 4079
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 16225
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 53
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 12 replies
2023/03/28 10:35:34 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 0 has 3 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:34 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 0 receive 604 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1038 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 8126 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 365 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1135 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 4079 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 0 receive 607 signal and 0 cover from userspace component
time breakdown 2: 17, 39, 0
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3761 stat stat
2023/03/28 10:35:34 ----- removeCall()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2343 link link
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 4
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
stat(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080))
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
link(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140)='./file1/file0\x00')
lsetxattr$security_ima(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/cephfs-client/dfs-0-176
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-177 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-177
receive_execute: 9, 12
receive_execute: 2, 13
receive_execute: 8, 13
receive_execute: 6, 13
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 356
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 1154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 144
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 1, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11356, flag collect 0
time breakdown 3: 21, 4, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4699
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 521
time breakdown 0: 19, 5, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 6565
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 19
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 356 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 144 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 5 replies
time breakdown 1: 21, 7, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 4699 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
before receive testcase: 0 1
time breakdown 2: 15, 7, 0
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2781 readlinkat readlinkat
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2344 linkat linkat
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 222 fremovexattr fremovexattr
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 8
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="75736589993f7848"], &(0x7f00000000c0)=""/79, 0x4f)
readlinkat(0xffffffffffffffff, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/226, 0xe2)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x159b80, 0x160)
r1 = open(&(0x7f0000000400)='./file0\x00', 0x0, 0x0)
r2 = openat(r0, &(0x7f00000002c0)='./file0\x00', 0x2040, 0x182)
linkat(r1, &(0x7f0000000280)='./file0\x00', r2, &(0x7f0000000300)='./file0\x00', 0x1000)
r3 = open$dir(&(0x7f0000000340)='./file0\x00', 0x101800, 0xa0)
fremovexattr(r3, &(0x7f0000000380)=@known='trusted.overlay.origin\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1384
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-177
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-178 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-178
receive_execute: 5, 12
receive_execute: 2, 12
receive_execute: 2, 11
receive_execute: 4, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 85, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 61
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 305
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 3 output_pos_value 384
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 14, 5, 0
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 6, 0
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 18
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 8 replies
2023/03/28 10:35:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 3 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 61 signal and 0 cover from userspace component
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 305 signal and 0 cover from userspace component
time breakdown 0: 16, 6, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2458 open open
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 7
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
symlink(&(0x7f0000000040)='./file1\x00', &(0x7f00000000c0)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000240), 0x0, 0xfffffffffffffe52, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), 0x0, 0x0, 0x3)
setxattr$user(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180)='\\.\x00', 0x3, 0x1)
setxattr$security_smack_transmute(&(0x7f0000000200)='./file0/file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x4, 0x2)
open(&(0x7f0000000340)='./file0/file0\x00', 0x200100, 0x2c0)
lgetxattr(&(0x7f0000000500)='./file0\x00', &(0x7f0000000280)=@random={'osx.', 'trusted.overlay.uVper\x00'}, 0x0, 0xff87)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 17, 4, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1608
remove dir: /root/cephfs-client/dfs-0-178
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
mkdir time 11
executor 3 create dir /root/cephfs-client/dfs-0-179 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-179
receive_execute: 3, 17
receive_execute: 1, 18
receive_execute: 0, 17
receive_execute: 0, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 190
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 1160, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 11, 0
execute_one time: 1, 14
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 17, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 7613, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 17963, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 17, 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 18, 0
----- executor 2 signal number : 5364
----- executor 2 executes write_coverage_signal cov->size 20837, flag collect 0
----- executor 2 signal number : 642
executor 2 server cover_cnt 4 output_pos_value 7359
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 38
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 7 replies
2023/03/28 10:35:34 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 190 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 4 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5364 signal and 0 cover from userspace component
time breakdown 2: 18, 21, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 642 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 122 chown chown
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 13
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f00000001c0)='./file0\x00')
setxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=ANY=[@ANYBLOB="00fb784005f45c8bb2ed706863187839b7317893d96a337c4a0dea219d130f5b7535db11604bef286e2b729427a7a23737f0e87c92e2aed0b13f91c19beca35557030e5a41d8bc697d564027621949a3d5855b00750e2f4b079bc57493683d558788c4762b1bd2af2de8a913bb22b4a23b3bfe6ffcdfbe77"], 0x78, 0x2)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
setxattr$incfs_metadata(&(0x7f0000000200)='.\x00', &(0x7f0000000280), &(0x7f0000000340)="3dcd5080746ca54a7f64c6fc077ba15ebe67349c6c13d791f8db36b16fee7480763997ff9a30fdb504643f769b400f80843695b2a8cb8da1a5f4281d6dedfb572d7437", 0x43, 0x2)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000240)=@v2={0x2000000, [{0x9, 0xf18a}, {0x874, 0x80000000}]}, 0x14, 0x1)
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x3)
lsetxattr$security_capability(&(0x7f0000000440)='./file1\x00', &(0x7f00000004c0), &(0x7f00000005c0)=@v3={0x3000000, [{0x1, 0x8000}, {0x0, 0x4}]}, 0x18, 0x3)
stat(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340))
stat(&(0x7f0000000140)='./file1\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000600)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
chown(&(0x7f0000000100)='./file1\x00', r1, r2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3152
remove dir: /root/cephfs-client/dfs-0-179
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-180 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-180
receive_execute: 7, 13
receive_execute: 2, 14
receive_execute: 6, 14
receive_execute: 4, 14
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
----- executor 3 write_call_output, size 477, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 405, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 405, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 531, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 531, flag collect 0
----- executor 3 signal number : 101
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 536, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 536, flag collect 0
----- executor 3 signal number : 25
----- completed 6
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 464, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 464, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 523, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 523, flag collect 0
----- executor 3 signal number : 15
----- completed 9
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 3818, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3818, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3818, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3818, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3818, pid 1163, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3818, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 14, 0
execute_one time: 1, 33
time breakdown 3: 20, 35, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1020, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 19334, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 27640, flag collect 0
time breakdown 1: 20, 36, 0
before receive testcase: 0 1
----- executor 2 signal number : 1050
time breakdown 0: 18, 36, 0
before receive testcase: 0 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 8000
----- executor 2 executes write_coverage_signal cov->size 6842, flag collect 0
----- executor 2 signal number : 416
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1157
----- executor 2 executes write_coverage_signal cov->size 30468, flag collect 0
----- executor 2 signal number : 5315
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 17436
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
time breakdown 2: 16, 40, 0
2023/03/28 10:35:34 exec time: 54
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 13 replies
2023/03/28 10:35:34 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 25 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1050 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 8000 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 416 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1157 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5315 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 1
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000500)='./file1\x00', 0x101840, 0x10)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/cephfs-client/dfs-0-180
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 4, 15
receive_execute: 8, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-181 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-181
receive_execute: 10, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1166, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 8, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4251, flag collect 0
time breakdown 3: 24, 3, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1263
----- executor 2 executes write_coverage_signal cov->size 11630, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 3, 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 4, 0
----- executor 2 signal number : 4894
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 526
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6756
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 21
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 1 replies
2023/03/28 10:35:34 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 4 replies
time breakdown 2: 19, 6, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1263 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 4894 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 526 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 5
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x200c1, 0x5)
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0x0)
chown(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x400000, 0x60)
fsetxattr$security_evm(r0, &(0x7f00000000c0), &(0x7f0000000100)=@sha1={0x1, "332d5b19f3d189df8dd01e695906454077607cbf"}, 0x15, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 888
remove dir: /root/cephfs-client/dfs-0-181
remove dir time 12
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-182 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-182
receive_execute: 4, 16
receive_execute: 4, 16
receive_execute: 6, 15
receive_execute: 2, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 171
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 1168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 8
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 5, 0
executor 0 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 1775, flag collect 0
----- executor 2 signal number : 942
----- executor 2 executes write_coverage_signal cov->size 4900, flag collect 0
----- executor 2 signal number : 998
----- executor 2 executes write_coverage_signal cov->size 11890, flag collect 0
----- executor 2 signal number : 5018
----- executor 2 executes write_coverage_signal cov->size 1066, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 6254, flag collect 0
----- executor 2 signal number : 562
----- executor 2 executes write_coverage_signal cov->size 2550, flag collect 0
----- executor 2 signal number : 1142
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 9046
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 23
2023/03/28 10:35:34 ----- PS len: 4
time breakdown 2: 18, 7, 0
2023/03/28 10:35:34 [CLIENT] executor 3 has 5 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 171 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 942 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 998 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5018 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 562 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1142 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 20, 6, 0
before receive testcase: 0 1
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 131 close close
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 3
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x92242, 0x2c21070bcbc9b60c)
close(r0)
lchown(&(0x7f0000000200)='./file0\x00', 0x0, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 352
remove dir: /root/cephfs-client/dfs-0-182
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-183 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-183
receive_execute: 4, 9
receive_execute: 3, 9
receive_execute: 5, 9
receive_execute: 3, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 1171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 805, pid 1171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 805, flag collect 0
----- executor 3 signal number : 257
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
time breakdown 3: 14, 13, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 9993, flag collect 0
before receive testcase: 0 1
executor 1 write_server_output
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1294
----- executor 2 executes write_coverage_signal cov->size 25020, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6198
----- executor 2 executes write_coverage_signal cov->size 1696, flag collect 0
----- executor 2 signal number : 310
----- executor 2 executes write_coverage_signal cov->size 18431, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 605
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 14, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 8483
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 24
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 3 replies
2023/03/28 10:35:34 fuzzer receive 499 signal and 0 cover from executor 3
time breakdown 2: 12, 15, 0
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 257 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1294 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 6198 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 605 signal and 0 cover from userspace component
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 3
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000140)='./file0\x00', 0x225c2, 0x0)
write$binfmt_script(r0, &(0x7f0000000280)=ANY=[@ANYBLOB="2321202e2f26690765312027255b7d23cd5d2c200ab41604afecfb85b939c0e52804b086b6f20bafaca776bb503c89000000005722d423071a52f6f8d5059b6a14107f3ff40140a2e1eb67b70c601de33d195b1eb8eae7beadf2972bb30e00c90e23881341776055b231de58cf7aba26a5ef27f3ab437b0884cc6f3733519b04f339c7b4ca014e00999ee14ca90e3753831a8270ad8203036c467f893271e82739d4b468aebfcf8de3fb1f3fdd4716fb24eb5712ae3bf55efe393c11b05386f25d459e9669eb965f103ca39c84fe9445df12bc350ef31ee24fda00a76624fb06133a735ffcc071dd28192a8569eaab0cb0ef3e8b740e27783463a1a3186eb7c7ff41ce66a9dbd0e88577c0b41de707dc5919a819eb65703da0dcea504b3c024266e09cc7036a84f3ea3cacdac0500c863298dcc0c8455a6b8f860ec655439dc22ab0f7feac2065f259846be585f17b8a70f4e0a63695758860022c53174cfe7dbf876e33f4ae16c9ae7dd56cb58a49793f841f3e2216289cd51ce86c03325fc0b202e99adb5a3c9fa507eb4e4c783f48c4dcfcea6e5375"], 0x15)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 952
remove dir: /root/cephfs-client/dfs-0-183
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-184 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-184
receive_execute: 5, 13
receive_execute: 3, 14
receive_execute: 3, 13
receive_execute: 4, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 1174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 1174, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 351
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1174, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 4901, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 874
----- executor 2 executes write_coverage_signal cov->size 11901, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 5, 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 17, 6, 0
----- executor 2 signal number : 5016
----- executor 2 executes write_coverage_signal cov->size 3455, flag collect 0
----- executor 2 signal number : 356
----- executor 2 executes write_coverage_signal cov->size 6248, flag collect 0
----- executor 2 signal number : 560
----- executor 2 executes write_coverage_signal cov->size 2555, flag collect 0
----- executor 2 signal number : 1147
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 9427
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 20
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 3 replies
2023/03/28 10:35:34 fuzzer receive 480 signal and 0 cover from executor 3
time breakdown 2: 16, 7, 0
2023/03/28 10:35:34 fuzzer receive 351 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/28 10:35:34 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 874 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5016 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 560 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1147 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 3: 18, 5, 0
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3766 sync sync
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 14
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x180)
open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
sync()
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000000240)='system_u:object_r:var_log_t:s0\x00', 0x1f, 0x0)
r0 = open(&(0x7f0000000480)='./file0\x00', 0x2, 0x40)
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000000)='./file0\x00', r1, 0xffffffffffffffff)
sync()
lsetxattr$security_smack_transmute(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x4, 0x2)
write(r0, &(0x7f00000004c0)="81bd7077a66e1e220a9aba9492e9302592bda6606db4840db590b40df633365d4ad5c176047e62c4b4605fb807db8d3c30c0139893011dc65e5b841f36e3bba3d4fff9b554e0e85b4b9be61bf21732eddeb1d4529615425ba5eba0f12a0c61c2cc05100b65dda9005b5973788b0caccb50706fdb09b819d159cca5229135fc984e8c6c83d6f05265a8104a72baf075090e1c8cd6d466892afcede34e1ab4b0318ad22b960cd8ee9f033dafe4e3430093f73c1a495381cd253cf7f5d82c161759", 0xc0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2088
remove dir: /root/cephfs-client/dfs-0-184
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-185 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-185
receive_execute: 5, 12
receive_execute: 4, 11
receive_execute: 4, 12
receive_execute: 3, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 548, pid 1177, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 548, flag collect 0
----- executor 3 signal number : 358
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 45
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 651, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 651, flag collect 0
----- executor 3 signal number : 412
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 138
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 1177, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 18
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 491, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 491, flag collect 0
----- executor 3 signal number : 76
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 449, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 3 signal number : 60
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 21
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 280, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 280, flag collect 0
----- executor 3 signal number : 6
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 1177, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 14
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 1177, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 40
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 747, pid 1177, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 747, flag collect 0
----- executor 3 signal number : 259
----- completed 14
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 25, 10, 0
execute_one time: 1, 35
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 40, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 16, 41, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 15, 42, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1192, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1434
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1030
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6623
----- executor 2 executes write_coverage_signal cov->size 3140, flag collect 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1805
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6156
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 17497
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 58
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 14 replies
2023/03/28 10:35:34 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 8 replies
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
time breakdown 2: 15, 46, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1434 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1030 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 6623 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1805 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 6156 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 412 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 138 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 76 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 259 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 2
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
removexattr(&(0x7f0000000100)='./file0\x00', 0x0)
open$dir(&(0x7f00000003c0)='./file0\x00', 0x2000c3, 0x1cd)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 256
remove dir: /root/cephfs-client/dfs-0-185
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-186 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-186
receive_execute: 11, 11
receive_execute: 4, 11
receive_execute: 9, 11
receive_execute: 9, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1182, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 47
output_pos: 1, output_pos_value 1
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 93, pid 1182, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
execute_one time: 1, 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 22, 2, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 15, 4, 0
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 4, 0
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 16
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 2 replies
2023/03/28 10:35:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
time breakdown 1: 20, 5, 0
before receive testcase: 0 0
2023/03/28 10:35:34 ----- generateCall 3970 unlink unlink
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 5
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
setxattr$security_selinux(&(0x7f0000000000)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
setxattr$smack_xattr_label(&(0x7f00000000c0)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
symlink(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x3)
unlink(&(0x7f0000000040)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/cephfs-client/dfs-0-186
remove dir time 2
-----finish removing dir
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-187 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-187
receive_execute: 1, 3
receive_execute: 2, 3
receive_execute: 3, 3
receive_execute: 2, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 489, pid 1184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 346
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 1184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 192
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
time breakdown 3: 6, 6, 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 7838, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1281
----- executor 2 executes write_coverage_signal cov->size 17980, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 5, 6, 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 5348
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 6194, flag collect 0
----- executor 2 signal number : 543
executor 2 server cover_cnt 5 output_pos_value 7488
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 12
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 5 replies
time breakdown 2: 5, 9, 0
2023/03/28 10:35:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 fuzzer receive 27 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:35:34 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 192 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1281 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5348 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 1
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x9ffbe5a7179e5edb, 0xc8)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/cephfs-client/dfs-0-187
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-188 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-188
receive_execute: 6, 10
receive_execute: 6, 10
receive_execute: 4, 10
receive_execute: 4, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 1187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 16, 3, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4252, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11984, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5014
----- executor 2 executes write_coverage_signal cov->size 6237, flag collect 0
----- executor 2 signal number : 544
time breakdown 1: 16, 3, 0
time breakdown 0: 14, 4, 0
before receive testcase: 0 1
executor 2 server cover_cnt 4 output_pos_value 6893
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 15
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 1 replies
2023/03/28 10:35:34 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 4 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
time breakdown 2: 14, 5, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5014 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 248 fstat fstat
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 19
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000001300)='./file0\x00', 0x30043, 0x5)
fcntl$setflags(r0, 0x2, 0x1)
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)='\x00', 0x1, 0x0)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$setsig(r1, 0xa, 0x22)
r2 = dup2(0xffffffffffffffff, r1)
fsetxattr$security_capability(r2, &(0x7f0000000080), &(0x7f00000000c0)=@v3={0x3000000, [{0x2099, 0xffff8000}, {0x7fffffff, 0x8}], 0xee01}, 0x18, 0x3)
writev(r2, &(0x7f0000000680)=[{&(0x7f0000000100)="27aee67c8115c2f07c927385019bedf503124a56ee4ceb0f07a3cb1d247211c943102c415c3c931723824dbbc4fa134c53ebbf99ba334c203777c53d226af0050bec116c22fa3093f5cee652163be0ebf63a19a859ca16c8fc155d4a06f8de905a4e4672e52536017dfc724d85df66a02a8144636175ba6be7887105afb5dc55cbd7988c67ce606ad2d0f63b070b2901f33201e0afd3919c5b8e74fa6aa15f8f0907edaa60f7a7a8982751f364481eb524e0ee4f8086f562816d365414f1f25c1fdb910292272d03f463b4e07ca6fdd6f08044f0acf796fa5b2ffc8f7010a925f50d8a116ff9b841b91b9d3d82e8249992d4", 0xf2}, {&(0x7f0000000200)="8ef713298963c6c417e3685dacd901c93df718cafb86e05487a4bb5984ce389f06e352f737db4e5578ba5ec50761173d9bff8979e6f5d1126d7999a369ecc9527d3cb9edd583cd45e12c2169ecf72f450db4666b653f55ea7843b393a055a2cfac9c760f9e1815e2025cd4029fd8433d868bbb6f6f3534e0ef382dec79d3346a589264686a858d30045cd32d0086728cc17ab97bcad821933fce3877000cd7bce8e45e77a35cb28c4b5e809b5be0780101f94e3fcf9b37939fa68fd140a1988e3a9308d3cc273c24ebe7e447cf005787359804bbc2a4970170d03b27447f2e6b9a60837dbd8fb4627e6a3022719a382a120e7518", 0xf4}, {&(0x7f0000000300)="18f5b2e754b9e8d505ba479ca9c4035aafb10e631c03100852045e1d7b0bdbcf0586ed6fe3b474504b3ff7ba9267700a51cdb8acafc4023008775c9ce997aeb3b13a8af7d58fec79d3c774189a2f73424d80a534af68586c7c921e8ce7b726311a442635db00cd82580620b1d7c54b4be9226a6b627a1cd7b7919c180983231ab1cff85fe64df5c7902896925e", 0x8d}, {&(0x7f00000003c0)="a7f1b87b3e18ba3071fd6fb5e6b62649884350afbfec9940a6d8e2b2304007fa8b8345d925896d2ed2ec7cd92c5df572ed6d3654bbb4043a4318c9f6649d19a12f712f00dd17b387bec53c10054619ac1b8b8c11668c3262cd", 0x59}, {&(0x7f0000000440)="8d2dc7544cddc59c13bfd0e7fdcc05335373f996c08c805e622452490bbbae6a048da2322e7784bbef416349cdac63dfc3fbb867a3cd6732430b53908f4767e08ab25fefc0f8e20d4b74b606777842eb1e4647edb04ea4a92cf3b4af279e71b8cce5271fc35b5f800560a05b738b082d33386df52b711a3709dc894cfa73a6", 0x7f}, {&(0x7f00000004c0)="7eeb48fdad83e1b40296bf501feaad5da5a0d28ddec4f030b3bcdd9be49350e5d178926c2ebd67486433638fb20f79530c9ec7208a5be52ae20daeadb65c8b6a846c2bb465ba9cb61bde4e", 0x4b}, {&(0x7f0000000540)="177096f272cf36d87a7a2c3cdb6e638c774573d7754a4239f493f842c1cfd3386599d1f990679f1b7ab14c1ddf512aa47a8ad34ab0785fb911edffbf2447fb1c4a654e5a931a153d9d1f978cd0", 0x4d}, {&(0x7f00000005c0)="d6b02686e11e0c1bba439c534b0509ee399fc436d1d50756fc90daf28360b537acea37dd538ab2af024363dbc5274c22a32f49615f91330951cba322a1d8fcbfa9adfbaa6b1b7ec71ac72bdfc136148a6094723f147542b439ed35a616ba27b1f236931da73ad4363b19e5db5159912253f11a8371366d903855044d", 0x7c}, {&(0x7f0000000640)="b1511d67f66d8b3a8d88", 0xa}], 0x9)
r3 = open$dir(&(0x7f0000000740)='./file0\x00', 0x40, 0x0)
fcntl$setown(r3, 0x8, 0x0)
fcntl$notify(r2, 0x402, 0x8000001c)
fsetxattr$user(r1, &(0x7f0000000780), &(0x7f00000007c0)='\x86,^{\xeb$\\N\x00', 0x9, 0x1)
fcntl$notify(r2, 0x402, 0x23)
fcntl$setstatus(r1, 0x4, 0x0)
fstat(r1, &(0x7f0000000800))
close(0xffffffffffffffff)
fsetxattr$security_evm(r3, &(0x7f0000000880), &(0x7f00000008c0)=ANY=[@ANYBLOB="0301138000000100efa60c5033a244bb36eb7ae1eb6c10379a70a0181703c6a1b7993132f59d36038f32dbe63f6b16a2109d52799aebadaa9e36eb0f6d18428faa7423b83a1bd4b3e1db7b5443b805ef5c7cc617a228f8990a1845113466813da2885aa5f205b2531d5bde129d6864eeaf35c30305db86ace1c2cb39a45e174e8a91d3461650e9929ee59d5ed5cbf5bcfff7c40459b973b8038e0df3a12bca06532f80b20cd752e114f391d52b1171ea1dbe181d66db858091ba9976a5c8071742906bd1ab927cde0dff10f2bbc4d4c2897d21d854119bf344d2aa14b06eb5f4462ad8dbd9339d4ea4985e3651675bc8003eaf3f4e60065e"], 0xf8, 0x0)
fstat(r1, &(0x7f00000009c0))
write$binfmt_elf32(0xffffffffffffffff, &(0x7f00000015c0)=ANY=[@ANYBLOB="7f454c4680890607020300000000000000003e00ffff00000700000038000000210300000200000005002000010000042f76050000000000030000000200000001000000f343000000000000080000000100010005000000b87f37d6ea64c710f5d9786533221895c06ba6c71cdab026eeb169069d76e25ea570c045187ebe50fb33752e0d366fec0bed677457735aafe5ae030508d814a25f48e9cefd744c0685324f87f089ab44a76dcf4ee45d085fd851b6516b951170c153f9d7391a3f2450867977e946f1f3be8c18ad9d48f3efe86b7598de1a4851209f7138a2bcbef00ab88a49360053ae1bf6af03f8dca14148c50a2ad5a4e3439ceeaf223d736e027b01c53f9f8db22d26fa26abec1f5b2e958ffaac191c13298bb2c3a4515e80a731bd26dda995a7a965bda108da2c12320dc212ac5a1bfc8c0363b73c5932a0ed552874c610bbffcf26c33e1e6796c94580ab407847584ff8fdb8121056ac137d6ee70eaae422bf0b7529e6367ceafdffb8d1a3a37fb1ed035213"], 0x8c2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7768
remove dir: /root/cephfs-client/dfs-0-188
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 13
executor 3 create dir /root/cephfs-client/dfs-0-189 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-189
receive_execute: 5, 22
receive_execute: 3, 22
receive_execute: 4, 22
receive_execute: 5, 22
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 326, pid 1189, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 326, flag collect 0
----- executor 3 signal number : 73
----- completed 17
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1189, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10236, flag collect 0
----- executor 2 signal number : 1291
----- executor 2 executes write_coverage_signal cov->size 25270, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6230
----- executor 2 executes write_coverage_signal cov->size 652, flag collect 0
----- executor 2 signal number : 253
----- executor 2 executes write_coverage_signal cov->size 19192, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 690
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 26, 13, 0
executor 2 server cover_cnt 5 output_pos_value 8540
before receive testcase: 0 0
time breakdown 3: 27, 11, 0
before receive testcase: 0 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 37
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 [CLIENT] executor 3 has 19 replies
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1291 signal and 0 cover from userspace component
time breakdown 2: 25, 15, 0
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 6230 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:35:34 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 253 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 690 signal and 0 cover from userspace component
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 9
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x9ffbe5a7179b56d8, 0x0)
chown(&(0x7f0000000280)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
setxattr$trusted_overlay_opaque(&(0x7f0000000240)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000440), 0x2, 0x2)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), 0x0, 0x0, 0x0)
fstat(r0, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='system.posix_acl_default\x00', &(0x7f00000003c0)={{}, {0x1, 0x1}, [{0x2, 0x2, 0xffffffffffffffff}], {0x4, 0x2}, [{0x8, 0x3, r1}, {0x8, 0x1, r2}, {0x8, 0x1, 0xee00}, {0x8, 0x3, 0xffffffffffffffff}, {0x8, 0x0, r3}], {0x10, 0x2}, {0x20, 0x3}}, 0x54, 0x4)
llistxattr(&(0x7f0000000300)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2896
remove dir: /root/cephfs-client/dfs-0-189
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-190 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-190
receive_execute: 7, 18
receive_execute: 2, 19
receive_execute: 5, 18
receive_execute: 3, 19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 622, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 721, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 721, flag collect 0
----- executor 3 signal number : 233
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 553, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 553, flag collect 0
----- executor 3 signal number : 94
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 402, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 402, flag collect 0
----- executor 3 signal number : 9
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 20
----- completed 6
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 471, pid 1192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 3 signal number : 22
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 3, 1
execute_one time: 1, 27
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 29, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1200, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 27986, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1338
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6986
----- executor 2 executes write_coverage_signal cov->size 695, flag collect 0
----- executor 2 signal number : 268
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 30, 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 741
executor 2 server cover_cnt 6 output_pos_value 9544
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 52
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 9 replies
2023/03/28 10:35:34 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 233 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 6 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1338 signal and 0 cover from userspace component
time breakdown 2: 21, 32, 0
2023/03/28 10:35:34 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 6986 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 268 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 741 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 22 signal and 0 cover from executor 3
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 13
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
chmod(&(0x7f00000003c0)='.\x00', 0x0)
setxattr$security_ima(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000680), &(0x7f00000006c0)=@sha1={0x1, "0c59457cc085ccbf7ab3dd5600293704ee99259f"}, 0x15, 0x3)
lsetxattr$security_evm(&(0x7f0000000140)='.\x00', &(0x7f00000001c0), &(0x7f00000002c0)=@md5={0x1, "fb49347478028623477c27bdf55acd29"}, 0x11, 0x1)
rename(&(0x7f0000000180)='./file3\x00', &(0x7f0000000640)='./file1/file0\x00')
setxattr$security_evm(&(0x7f0000000400)='.\x00', &(0x7f0000000440), &(0x7f0000000480)=ANY=[@ANYBLOB="041505e6b31bfc93d2d2ef0000000076fddf"], 0x12, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000000500)='./file1/../file0\x00', &(0x7f0000000540), &(0x7f0000000580), 0x2, 0x0)
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000200), &(0x7f0000001500)="", 0x1001, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file1/../file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@md5={0x1, "e9e03c30b521232cdf8a108cc8ffa4b8"}, 0x11, 0x1)
link(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000600)='./file2\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7056
remove dir: /root/cephfs-client/dfs-0-190
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-191 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-191
receive_execute: 6, 15
receive_execute: 2, 15
receive_execute: 4, 14
receive_execute: 4, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 507, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 400
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 3
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 327, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 327, flag collect 0
----- executor 3 signal number : 90
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 357, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 357, flag collect 0
----- executor 3 signal number : 127
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 398, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 398, flag collect 0
----- executor 3 signal number : 35
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 402, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 402, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 330, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 330, flag collect 0
----- executor 3 signal number : 38
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 291, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 291, flag collect 0
----- executor 3 signal number : 13
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 357, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 357, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 1197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 16, 0
execute_one time: 1, 28
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 30, 0
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 4844, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 31, 0
----- executor 2 signal number : 1535
----- executor 2 executes write_coverage_signal cov->size 20584, flag collect 0
----- executor 2 signal number : 959
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 7038
----- executor 2 executes write_coverage_signal cov->size 6555, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 35, 0
----- executor 2 signal number : 403
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1769
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2731
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2072
executor 2 server cover_cnt 9 output_pos_value 16601
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 57
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 13 replies
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 9 replies
2023/03/28 10:35:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1535 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 959 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 7038 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 403 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1769 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 2731 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 2072 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 2: 17, 42, 0
before receive testcase: 0 0
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:35:34 ----- no new client coverage: false, true
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 4
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
rename(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)='./file1\x00')
setxattr$security_smack_transmute(&(0x7f0000000380)='.\x00', &(0x7f00000003c0), 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0xa043, 0x90)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
remove dir: /root/cephfs-client/dfs-0-191
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-192 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-192
receive_execute: 5, 22
receive_execute: 15, 22
receive_execute: 18, 21
receive_execute: 6, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 1200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 377, pid 1200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 377, flag collect 0
----- executor 3 signal number : 98
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 1200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
time breakdown 3: 39, 14, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8423, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1286
----- executor 2 executes write_coverage_signal cov->size 22447, flag collect 0
----- executor 2 signal number : 5954
----- executor 2 executes write_coverage_signal cov->size 1430, flag collect 0
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 310
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 27, 15, 0
----- executor 2 executes write_coverage_signal cov->size 17765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 650
executor 2 server cover_cnt 5 output_pos_value 8276
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 27, 17, 0
before receive testcase: 0 1
2023/03/28 10:35:34 for select break: 1
2023/03/28 10:35:34 --------- executor 3 receive reply, reply.done 1
2023/03/28 10:35:34 wg wait finish
2023/03/28 10:35:34 ------ all executors finish execution
2023/03/28 10:35:34 exec time: 44
2023/03/28 10:35:34 ----- PS len: 4
2023/03/28 10:35:34 [CLIENT] executor 3 has 4 replies
2023/03/28 10:35:34 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/28 10:35:34 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 1 has 0 replies
2023/03/28 10:35:34 [SERVER] executor 2 has 5 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:35:34 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:35:34 [SERVER] executor 0 has 0 replies
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 1286 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 5954 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/28 10:35:34 ------- fuzzer executor 2 receive 650 signal and 0 cover from userspace component
2023/03/28 10:35:34 fsMds: [map[] map[] map[] map[]]
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 37, 15, 0
2023/03/28 10:35:34 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/28 10:35:34 mutate testcase with failures
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2810 renameat renameat
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- mutateArg()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 ----- insertCall()
2023/03/28 10:35:34 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:35:34 prog length: 20
2023/03/28 10:35:34 HasCrashFail:false HasNetFail:false
10:35:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000180)='./file0\x00', 0x2000, 0x10a)
writev(r0, &(0x7f0000000340)=[{&(0x7f00000001c0)="dc4fe1b57d44c94e84e1d520337fe9783bb8470de4833320febacdc111f438e4721f03219c1d", 0x26}, {&(0x7f0000000600)="9e388c6e8e695de468c18949228590471db08d2eaff3c67a6a946f89ae7721bb1a69190b9a3b8d7aec298c686b62518dbb54f824a89053389ba77be40e1bb5e2de21407db4d541559b849f74f90ec97ff5751a272e522c745fcb0d23f358f23940e8504f3a7244bd50ff5de9ecea8b45efb0813494b63302ca1e8003b679ce2bbbd9ee60ac0245a98e19a8668bcb121359cabf961dedb6f9c0317ffed179c0cf7defbfa417a44535e451d406c3ef5950a3b05e1744894841f22b9f959f6fef35d56782b2abbc81080546e2bd0783d9bccdfa8f0bc5b0df406ff668d53e81d5c122a44f2a6dad4fa6c2fbb6ace9fae636d8078efae043f1204ce5655b904ee506", 0x100}, {&(0x7f0000000300)="db0292ab453bffcd9d60ba00608c7cc296362ae736fbc40cc06e71e644556d35c5673b4c", 0x24}], 0x3)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x121040, 0x0)
fchmod(0xffffffffffffffff, 0x84)
r2 = open(&(0x7f0000000040)='./file0\x00', 0x100, 0x8)
fsetxattr$security_capability(r2, &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x1000000, [{0x6, 0x5}]}, 0xc, 0x3)
write$binfmt_elf32(0xffffffffffffffff, &(0x7f00000004c0)=ANY=[@ANYBLOB="7f454c4680e3091f05000000000000000300060037d6ffdf6e000000380000009b020000000000007305200001000700050002000000000000000070ff0700000000000000000800000002000000030000f2ff0001000300000000000080060000005400000001010000224f66607204aeb7756c8902c5bcb5549a70e0d5f2877813c5aa12679a34e7266e6838d298a12ef00b5b17aea647e6ff6475d19142a0d2b4f12d51d4ed6b5bae3caf3e5c631bccc2b46f76423400"/197], 0xc5)
r3 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r4 = openat(r2, &(0x7f0000000440)='./file0\x00', 0x101000, 0x101)
renameat(r3, &(0x7f0000000400)='./file0\x00', r4, &(0x7f0000000480)='./file0\x00')
r5 = fcntl$dupfd(r1, 0x406, r3)
open$dir(&(0x7f00000005c0)='./file0\x00', 0x212881, 0x31)
flock(r5, 0x1)
write(r3, &(0x7f0000000380)="b4da6ffe19d0e1912bbea9646888a35001d435dc73360aafeb750de15f769096e56751b3a890d99bd0c04b01612afca3e6e38ee8b87dfaf7ecb83afc3cb8fd0e0710eadaa2b9f8f7e89737c06c39d7c98d56b57e7805b1297adc6cd320d47aff75a5", 0x62)
flock(r3, 0x1)
flock(r3, 0x2)
r6 = dup2(r3, r5)
r7 = fcntl$dupfd(0xffffffffffffffff, 0x0, r6)
fcntl$getownex(r1, 0x10, &(0x7f0000000100))
fcntl$notify(r7, 0x402, 0x26)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3824
remove dir: /root/cephfs-client/dfs-0-192
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-193 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-193
receive_execute: 11, 9
receive_execute: 7, 10
receive_execute: 9, 10
receive_execute: 7, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 654, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 228
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 8
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 1203, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 67
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 1203, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 220, pid 1203, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 2
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83335, 2, 1
execute_one time: 1, 83338
2023/03/28 10:36:57 for select break: 1
2023/03/28 10:36:57 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 20, 83342, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 461
----- executor 0 executes write_coverage_signal cov->size 2261, flag collect 0
----- executor 0 signal number : 128
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5185, flag collect 0
----- executor 0 signal number : 64
2023/03/28 10:36:57 for select break: 1
2023/03/28 10:36:57 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 25294, flag collect 0
----- executor 0 signal number : 1002
----- executor 0 executes write_coverage_signal cov->size 25294, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1365
----- executor 0 executes write_coverage_signal cov->size 28592, flag collect 0
----- executor 0 signal number : 48
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 19, 83343, 0
before receive testcase: 0 0
----- executor 0 signal number : 700
----- executor 0 executes write_coverage_signal cov->size 18032, flag collect 0
----- executor 0 signal number : 351
----- executor 0 executes write_coverage_signal cov->size 2155, flag collect 0
----- executor 0 signal number : 117
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 575
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 510
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 160
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 940
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 277
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1748
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 640
----- executor 0 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1415
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1114
----- executor 0 executes write_coverage_signal cov->size 2342, flag collect 0
----- executor 0 signal number : 36
executor 0 server cover_cnt 24 output_pos_value 11837
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 83356, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 20818, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1465
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1422
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 786
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6983
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2896
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1832
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 209
----- executor 2 executes write_coverage_signal cov->size 4774, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 2288, flag collect 0
----- executor 2 signal number : 163
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1713
----- executor 2 executes write_coverage_signal cov->size 673, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 488
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4844
----- executor 2 executes write_coverage_signal cov->size 66, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2260
executor 2 server cover_cnt 18 output_pos_value 26316
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:36:58 wg wait finish
2023/03/28 10:36:58 ------ all executors finish execution
2023/03/28 10:36:58 exec time: 83379
2023/03/28 10:36:58 ----- PS len: 4
2023/03/28 10:36:58 [CLIENT] executor 3 has 20 replies
2023/03/28 10:36:58 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 228 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 [SERVER] executor 1 has 0 replies
2023/03/28 10:36:58 [SERVER] executor 2 has 18 replies
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/28 10:36:58 [SERVER] executor 0 has 24 replies
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 461 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 64 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 1002 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 1365 signal and 0 cover from userspace component
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1465 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1422 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 786 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 6983 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 2896 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1832 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 48 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 209 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 163 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1713 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 488 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 700 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 351 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 117 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 4844 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 575 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 510 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 2260 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 160 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 940 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 277 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 1748 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 640 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 1415 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 1114 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
time breakdown 2: 17, 83370, 0
before receive testcase: 0 0
2023/03/28 10:36:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:36:58 ----- no new client coverage: false, true
2023/03/28 10:36:58 mutate testcase with failures
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 2458 open open
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 2462 openat openat
2023/03/28 10:36:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:36:58 prog length: 10
2023/03/28 10:36:58 HasCrashFail:false HasNetFail:false
10:36:58 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
r0 = open(&(0x7f0000000040)='./file0\x00', 0x10802, 0x1)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
openat(r0, &(0x7f0000000080)='./file4\x00', 0x101100, 0x40)
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1496
remove dir: /root/cephfs-client/dfs-0-193
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-194 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-194
receive_execute: 4, 23
receive_execute: 19, 23
receive_execute: 33, 24
receive_execute: 32, 24
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 30
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 93
----- completed 7
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 757, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 757, flag collect 0
----- executor 3 signal number : 115
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 27, 9, 0
execute_one time: 1, 36
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 57, 39, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1980, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 59
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 29085, flag collect 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 56, 40, 0
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1407
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 875
executor 0 server cover_cnt 3 output_pos_value 1395
before receive testcase: 0 0
----- executor 2 signal number : 1133
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 42, 43, 0
----- executor 2 signal number : 7628
----- executor 2 executes write_coverage_signal cov->size 278, flag collect 0
----- executor 2 signal number : 118
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 779
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 6354
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 17508
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:36:58 wg wait finish
2023/03/28 10:36:58 ------ all executors finish execution
2023/03/28 10:36:58 exec time: 71
2023/03/28 10:36:58 ----- PS len: 4
2023/03/28 10:36:58 [CLIENT] executor 3 has 10 replies
2023/03/28 10:36:58 [SERVER] executor 0 has 3 replies
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/28 10:36:58 [SERVER] executor 1 has 0 replies
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 0 receive 875 signal and 0 cover from userspace component
time breakdown 2: 28, 47, 0
before receive testcase: 0 0
2023/03/28 10:36:58 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:36:58 [SERVER] executor 2 has 8 replies
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1407 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1133 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 7628 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 118 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 779 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 6354 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:36:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:36:58 ----- no new client coverage: false, true
2023/03/28 10:36:58 mutate testcase with failures
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 2458 open open
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 120 chdir chdir
2023/03/28 10:36:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:36:58 prog length: 6
2023/03/28 10:36:58 HasCrashFail:false HasNetFail:false
10:36:58 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
open(&(0x7f0000000000)='./file1\x00', 0x20040, 0x80)
lsetxattr$user(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)='].#\x9d^&{-^:(}\x00', 0xd, 0x1)
r1 = fcntl$dupfd(r0, 0x0, r0)
fdatasync(r1)
chdir(&(0x7f0000000140)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 864
remove dir: /root/cephfs-client/dfs-0-194
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-195 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-195
receive_execute: 12, 18
receive_execute: 4, 18
receive_execute: 10, 18
receive_execute: 9, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 1212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 1212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 131
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 1212, write pid:-2126826171
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 30, 6, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11544, flag collect 0
time breakdown 1: 28, 7, 0
before receive testcase: 0 1
----- executor 2 signal number : 4902
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 6773
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 8, 0
before receive testcase: 0 0
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 22, 8, 0
before receive testcase: 0 0
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:36:58 wg wait finish
2023/03/28 10:36:58 ------ all executors finish execution
2023/03/28 10:36:58 exec time: 31
2023/03/28 10:36:58 ----- PS len: 4
2023/03/28 10:36:58 [SERVER] executor 0 has 0 replies
2023/03/28 10:36:58 [SERVER] executor 1 has 0 replies
2023/03/28 10:36:58 [CLIENT] executor 3 has 6 replies
2023/03/28 10:36:58 [SERVER] executor 2 has 4 replies
2023/03/28 10:36:58 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:36:58 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:36:58 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 4902 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/28 10:36:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:36:58 ----- no new client coverage: false, true
2023/03/28 10:36:58 mutate testcase with failures
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/28 10:36:58 ----- mutateArg()
2023/03/28 10:36:58 ----- mutateArg()
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 258 getdents getdents
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 170 dup dup
2023/03/28 10:36:58 ----- mutateArg()
2023/03/28 10:36:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:36:58 prog length: 6
2023/03/28 10:36:58 HasCrashFail:false HasNetFail:false
10:36:58 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x8000, 0x84)
getdents(r0, &(0x7f0000000200)=""/73, 0x49)
lsetxattr$security_evm(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000040), &(0x7f0000000280)=ANY=[@ANYBLOB="05010c0000010000a900fec3103704d24691d6f1a25ceaedeea9fd178e0c6bc0776e1525aabdf69acdf5a1e36a8fc495b7ddd3292cae1032caaba362b1f30474cdd2c28b036868c75dfbc6da360ffbd4d0573624cd231cfa3fc76f859f0235015ba816acac3a57c797728790c990e0983b0083bcece0728c6c4dfa544ca9948bf25893bfe912bb3ff75840eb453fa03ec8227841062aab8e1b739802ef045cbf01a2"], 0xb2, 0x4)
lchown(&(0x7f0000000100)='./file0\x00', 0xffffffffffffffff, 0xee01)
r1 = dup2(r0, r0)
dup(r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1024
remove dir: /root/cephfs-client/dfs-0-195
remove dir time 12
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-196 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-196
receive_execute: 10, 15
receive_execute: 9, 14
receive_execute: 8, 15
receive_execute: 8, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 1215, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1215, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1215, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1215, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1215, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1215, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 25, 5, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 146, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 3131, flag collect 0
----- executor 2 signal number : 631
----- executor 2 executes write_coverage_signal cov->size 4187, flag collect 0
----- executor 2 signal number : 2121
----- executor 2 executes write_coverage_signal cov->size 11321, flag collect 0
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 5848, flag collect 0
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1655
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
time breakdown 0: 23, 6, 0
before receive testcase: 0 1
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 7 output_pos_value 7269
time breakdown 1: 24, 7, 0
before receive testcase: 0 0
2023/03/28 10:36:58 for select break: 1
2023/03/28 10:36:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:36:58 wg wait finish
2023/03/28 10:36:58 ------ all executors finish execution
2023/03/28 10:36:58 exec time: 22
2023/03/28 10:36:58 ----- PS len: 4
2023/03/28 10:36:58 [CLIENT] executor 3 has 6 replies
2023/03/28 10:36:58 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:36:58 [SERVER] executor 1 has 0 replies
2023/03/28 10:36:58 [SERVER] executor 2 has 7 replies
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/28 10:36:58 [SERVER] executor 0 has 0 replies
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 631 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 2121 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 1655 signal and 0 cover from userspace component
2023/03/28 10:36:58 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:36:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:36:58 ----- no new client coverage: false, true
2023/03/28 10:36:58 mutate testcase with failures
2023/03/28 10:36:58 ----- insertCall()
2023/03/28 10:36:58 ----- generateCall 3765 symlinkat symlinkat
2023/03/28 10:36:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:36:58 prog length: 2
2023/03/28 10:36:58 HasCrashFail:false HasNetFail:false
10:36:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00')
sync()
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 208
remove dir: /root/cephfs-client/dfs-0-196
time breakdown 2: 23, 8, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-197 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-197
receive_execute: 5, 4
receive_execute: 2, 3
receive_execute: 2, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 3
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- executor 3 write_call_output, size 477, pid 1218, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 342, pid 1218, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 3 signal number : 196
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3839, 1, 0
execute_one time: 0, 3841
cover_reset in execute_call
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 9, 3842, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2678, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 0 signal number : 461
----- executor 0 executes write_coverage_signal cov->size 2678, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 1634, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 1635, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 4506, flag collect 0
----- executor 0 signal number : 1207
----- executor 0 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1533
----- executor 2 executes write_coverage_signal cov->size 9218, flag collect 0
----- executor 0 signal number : 660
----- executor 0 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 0 signal number : 99
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 122
----- executor 0 executes write_coverage_signal cov->size 3489, flag collect 0
----- executor 0 signal number : 448
----- executor 0 executes write_coverage_signal cov->size 2672, flag collect 0
----- executor 0 signal number : 302
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
----- executor 0 signal number : 156
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 848
----- executor 0 executes write_coverage_signal cov->size 57, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 300
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1181
----- executor 2 executes write_coverage_signal cov->size 4000, flag collect 0
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 16863, flag collect 0
----- executor 0 signal number : 2799
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 6, 3844, 0
before receive testcase: 0 1
----- executor 2 signal number : 4959
----- executor 2 executes write_coverage_signal cov->size 2854, flag collect 0
----- executor 2 signal number : 329
----- executor 2 executes write_coverage_signal cov->size 10107, flag collect 0
----- executor 2 signal number : 2480
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 0 signal number : 473
executor 0 server cover_cnt 16 output_pos_value 8058
----- executor 2 signal number : 396
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
----- executor 2 signal number : 199
----- executor 2 executes write_coverage_signal cov->size 16405, flag collect 0
----- executor 2 signal number : 714
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1147
----- executor 2 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 7, 3848, 0
before receive testcase: 0 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 3856
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 2 replies
2023/03/28 10:37:02 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 196 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 0 has 16 replies
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 461 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 1207 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 660 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 99 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 122 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 448 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 302 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 156 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 848 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 300 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 2799 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 473 signal and 0 cover from userspace component
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 18 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1533 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1181 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 4959 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 329 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 2480 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 396 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 199 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 714 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1147 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 646 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3504 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3040 signal and 0 cover from userspace component
----- executor 2 signal number : 646
----- executor 2 executes write_coverage_signal cov->size 15791, flag collect 0
----- executor 2 signal number : 3504
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23772, flag collect 0
----- executor 2 signal number : 3040
executor 2 server cover_cnt 18 output_pos_value 20999
time breakdown 2: 5, 3852, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 258 getdents getdents
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 7
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
getdents(r0, &(0x7f0000000280)=""/102, 0x66)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(0xffffffffffffff9c, &(0x7f0000000180)=""/194, 0xc2)
getdents(r1, &(0x7f0000000380)=""/69, 0x45)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
remove dir: /root/cephfs-client/dfs-0-197
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-198 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-198
receive_execute: 17, 9
receive_execute: 16, 9
receive_execute: 12, 9
executor 3 before execute_one
receive_execute: 8, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 511, pid 1222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1222, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 95, pid 1222, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 3 signal number : 52
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 1, 0
execute_one time: 1, 16
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
executor 1 write_server_output
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 13073, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 911
----- executor 2 executes write_coverage_signal cov->size 26306, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6658
----- executor 2 executes write_coverage_signal cov->size 18373, flag collect 0
----- executor 2 signal number : 798
----- executor 2 executes write_coverage_signal cov->size 18106, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 21, 0
before receive testcase: 0 0
time breakdown 3: 26, 18, 0
before receive testcase: 0 1
----- executor 2 signal number : 3788
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 13630
time breakdown 0: 21, 18, 0
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 32
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 7 replies
time breakdown 2: 17, 23, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 911 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 6658 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 798 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3788 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 3764 symlink symlink
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 5
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='./file0\x00', 0x9ffbe5a7178b4258, 0x0)
symlink(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='./file0\x00')
lsetxattr$security_smack_transmute(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x4, 0x3)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={'U+', 0xb4}, 0x16, 0x1)
open$dir(&(0x7f0000000040)='./file0\x00', 0x2, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1040
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-198
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-199 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-199
receive_execute: 4, 19
receive_execute: 3, 19
receive_execute: 8, 19
receive_execute: 8, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 1225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 182
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 1225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 687, pid 1225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 687, flag collect 0
----- executor 3 signal number : 115
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 2, 0
execute_one time: 0, 6
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 2 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 4467, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 10720, flag collect 0
----- executor 0 signal number : 227
executor 0 server cover_cnt 1 output_pos_value 231
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 24173, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 26, 10, 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1011
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 23, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 8596
----- executor 2 executes write_coverage_signal cov->size 22779, flag collect 0
time breakdown 3: 27, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 1241
----- executor 2 executes write_coverage_signal cov->size 15267, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3464
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 15803
2023/03/28 10:37:02 for select break: 1
time breakdown 2: 22, 15, 0
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 35
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 5 replies
2023/03/28 10:37:02 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 182 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1011 signal and 0 cover from userspace component
2023/03/28 10:37:02 [SERVER] executor 0 has 1 replies
2023/03/28 10:37:02 ------- fuzzer executor 0 receive 227 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 8596 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1241 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3464 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2374 mkdirat mkdirat
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 9
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0xc0, 0x118)
lsetxattr$user(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)='\x00', 0x1, 0x2)
mkdirat(r0, &(0x7f0000000080)='./file1\x00', 0x0)
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r2 = dup(r1)
symlinkat(&(0x7f00000001c0)='./file1\x00', r2, &(0x7f0000000200)='./file1\x00')
r3 = open(&(0x7f0000000180)='./file1\x00', 0x8200, 0x10d)
getdents64(r3, &(0x7f0000000100)=""/92, 0x50)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1352
remove dir: /root/cephfs-client/dfs-0-199
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 14
executor 3 create dir /root/cephfs-client/dfs-0-200 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-200
receive_execute: 11, 22
receive_execute: 4, 22
receive_execute: 7, 21
receive_execute: 9, 21
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 56
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 33, 14, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8124, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1273
----- executor 2 executes write_coverage_signal cov->size 21578, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 30, 16, 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 5424
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 13316, flag collect 0
----- executor 2 signal number : 565
executor 2 server cover_cnt 5 output_pos_value 7346
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 41
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:02 [CLIENT] executor 3 has 9 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1273 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 5424 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 565 signal and 0 cover from userspace component
time breakdown 2: 26, 19, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 131 close close
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 250 fsync fsync
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2458 open open
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 248 fstat fstat
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2374 mkdirat mkdirat
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 3761 stat stat
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2341 lchown lchown
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 15
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x48840, 0x0)
r1 = open$dir(&(0x7f0000000140)='./file1\x00', 0x101100, 0x8)
lchown(&(0x7f0000000300)='./file1\x00', 0x0, 0x0)
r2 = open$dir(&(0x7f0000000180)='./file1\x00', 0x40100, 0x2b)
dup2(r1, r2)
r3 = open(&(0x7f00000001c0)='./file1\x00', 0x200044, 0x2)
r4 = dup(r0)
mkdirat(r3, &(0x7f0000000200)='./file1\x00', 0x10)
fsync(r0)
lseek(r0, 0x80, 0x2)
open(&(0x7f0000000000)='./file1\x00', 0x402000, 0x141)
close(r4)
r5 = open(&(0x7f0000000080)='./file1\x00', 0x500, 0x47)
stat(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280))
fstat(r5, &(0x7f00000000c0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1784
remove dir: /root/cephfs-client/dfs-0-200
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-201 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-201
receive_execute: 8, 20
receive_execute: 2, 21
receive_execute: 6, 21
receive_execute: 6, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 140
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 1232, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 1232, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 187
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 1232, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1232, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1232, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 1232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 1232, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 1, 9
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 28, 12, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 266, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 10283, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 12389, flag collect 0
----- executor 2 signal number : 952
----- executor 2 executes write_coverage_signal cov->size 18305, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 12, 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 5634
----- executor 2 executes write_coverage_signal cov->size 20010, flag collect 0
----- executor 2 signal number : 1645
----- executor 2 executes write_coverage_signal cov->size 11690, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3052
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 12760
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 43
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 952 signal and 0 cover from userspace component
time breakdown 2: 23, 23, 0
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 5634 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1645 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3052 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:02 [CLIENT] executor 3 has 15 replies
2023/03/28 10:37:02 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 187 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 1 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 3
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
open(&(0x7f0000000340)='./file0\x00', 0x8040, 0x0)
lsetxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@sha1={0x1, "8a32639e6467c52d2d07feaef5f185dc9d5a6d05"}, 0x15, 0x0)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x101000, 0x40)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 608
remove dir: /root/cephfs-client/dfs-0-201
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
receive_execute: 3, 8
receive_execute: 12, 8
receive_execute: 13, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-202 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-202
receive_execute: 14, 8
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 1236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 156
----- completed 2
execute_one loop: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 12, 0
execute_one time: 1, 14
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 22, 19, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11593, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 19, 0
2023/03/28 10:37:02 for select break: 1
----- executor 2 signal number : 4912
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 257
----- executor 2 executes write_coverage_signal cov->size 5177, flag collect 0
time breakdown 0: 21, 20, 0
before receive testcase: 0 0
----- executor 2 signal number : 368
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 533
executor 2 server cover_cnt 6 output_pos_value 7422
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 30
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:02 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 6 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 4912 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 368 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 3 signal and 0 cover from executor 3
time breakdown 2: 11, 21, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 3761 stat stat
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 12
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
stat(&(0x7f0000000600)='./file1\x00', &(0x7f0000000700))
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x8000, 0x0)
stat(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000340)='./file1\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fstat(r0, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000780)=ANY=[@ANYBLOB="02000000010002000000000002000400", @ANYRES32, @ANYBLOB="058db85895db4d589fbfc4b21f30208b0f12604741c9b296d1cafe7d721877c0cba35f84a1579eb501040000a7395d80a2c99565c5e73fa1aec12d4262c9", @ANYRES32=r1, @ANYBLOB="02000000", @ANYRES32=r2, @ANYBLOB="02000200", @ANYRES32=r3, @ANYBLOB="040007000000000008000100", @ANYRES32=r4, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB="08000600", @ANYRES32=r5, @ANYBLOB="08000200", @ANYRES32, @ANYBLOB="08000100", @ANYRES32, @ANYBLOB="08000400", @ANYRES32=0xee01, @ANYBLOB='\b\x00\a\x00', @ANYRES32=r6, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r7, @ANYBLOB="10000000000000002000070000000000"], 0x8c, 0x0)
r8 = dup(r0)
lseek(r8, 0x8008, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2944
remove dir: /root/cephfs-client/dfs-0-202
remove dir time 19
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-203 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-203
receive_execute: 6, 21
receive_execute: 4, 21
receive_execute: 5, 20
receive_execute: 5, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
cover_reset in execute_call
execute_one time: 1, 3
time breakdown 3: 27, 5, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 252
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 7, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 1 output_pos_value 256
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 29
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 12 replies
2023/03/28 10:37:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 1 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 252 signal and 0 cover from userspace component
time breakdown 2: 25, 8, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 ----- generateCall 170 dup dup
2023/03/28 10:37:02 ----- generateCall 194 fchmod fchmod
2023/03/28 10:37:02 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/28 10:37:02 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/28 10:37:02 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/28 10:37:02 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/28 10:37:02 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/28 10:37:02 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/28 10:37:02 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/28 10:37:02 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/28 10:37:02 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/28 10:37:02 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/28 10:37:02 ----- generateCall 2814 rmdir rmdir
2023/03/28 10:37:02 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/28 10:37:02 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/28 10:37:02 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/28 10:37:02 ----- generateCall 2723 pread64 pread64
2023/03/28 10:37:02 ----- generateCall 2350 lseek lseek
2023/03/28 10:37:02 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/28 10:37:02 map[./file0:true]
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 20
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
fchmod(r0, 0x100)
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000000), &(0x7f0000000040)={'U+', 0x7}, 0x16, 0x1)
r1 = fcntl$dupfd(r0, 0x0, r0)
fcntl$notify(r1, 0x402, 0x20)
write$binfmt_script(r0, &(0x7f0000000080)={'#! ', './file0', [{}, {}, {}, {0x20, 'U+'}, {0x20, '.#,/'}, {0x20, 'U+'}, {0x20, '\xed('}, {0x20, 'trusted.overlay.nlink\x00'}], 0xa, "bd1336a4e4a85e770e7124ac5e2c385a7a231e66595c7cb7936149ddda816e2518da867c5047a043f393352fda64be7b28b8cb0add2c9fe1673385e22fd29a4d587c9de4498402c88df82fa9c45c6fdb840c066b098c9e28c92bf71fc81e076d5919f424d365731a34aca7911300d1812336fdbe52d2dbae4ec3b8ea65a6e267db095a8d6f59b10f8863fe40f238155e3dd4"}, 0xc5)
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0x21, 0x0, 0x4, "9d3ce58f7d36b587550448b4eaebb1b1", "4e1237b9239b3ec85aa225b8"}, 0x21, 0x1)
fcntl$getownex(r1, 0x10, &(0x7f0000000240))
fcntl$F_GET_RW_HINT(r1, 0x40b, &(0x7f0000000280))
fcntl$addseals(r1, 0x409, 0x8)
r2 = fcntl$dupfd(r0, 0x0, r0)
fsetxattr$security_evm(r0, &(0x7f00000002c0), &(0x7f0000000300)=@v1={0x2, "f46b7add1fea6077d36522f61cae9405f1d861"}, 0x14, 0x2)
rmdir(&(0x7f0000000340)='./file0\x00')
fcntl$notify(r0, 0x402, 0xd)
write$binfmt_elf32(r0, &(0x7f0000000380)={{0x7f, 0x45, 0x4c, 0x46, 0x9, 0x81, 0xb6, 0x1f, 0x6, 0x2, 0x3, 0x100, 0x35d, 0x38, 0x310, 0x8, 0x3, 0x20, 0x2, 0x1, 0x100, 0xff}, [{0x1, 0x7, 0x0, 0x200, 0x641, 0x1, 0xffff0001, 0x2}, {0x4, 0x7ff, 0xffff0001, 0x0, 0x765, 0x5, 0x80000000, 0x1}], "02ec3657435ae9624b9d6fa89a4946f332", ['\x00', '\x00']}, 0x289)
write$binfmt_elf32(r2, &(0x7f0000000640)={{0x7f, 0x45, 0x4c, 0x46, 0x24, 0x7, 0x9, 0x7f, 0x4, 0x3, 0x3e, 0xff, 0x101, 0x38, 0x61, 0x6, 0xa7d6, 0x20, 0x2, 0x4, 0x5, 0x4}, [{0x5, 0x3ff, 0x5, 0x80000000, 0xdab, 0x100, 0x200, 0x1}], "86bac5e55307724f7d9a1101b831d54b6a36966b6c5b561d9108c577765638f08b168247a449847f5eeb8fb5f820effb11169b422fb71f85429221a1ac3c775257f9297730b6fceff9eae16fb75517fddb10cff2746e9d24364b0e4d5adccd2714567ce238e787532ccb959d8d4106c629c3b42042a65591a286e6dc38023c6fffacf2013e2afb142d8d6bbbe12323a43b8973bfce545dc4aedc5c8514dbac387e3f7ec5aafab022d406ab4cfa552f2f36a29e228f84104a"}, 0x110)
pread64(r0, &(0x7f0000000780)=""/72, 0x48, 0x8000)
lseek(r0, 0x7, 0x2)
r3 = fcntl$dupfd(r0, 0x406, r0)
fcntl$setpipe(r3, 0x407, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7576
remove dir: /root/cephfs-client/dfs-0-203
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-204 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-204
receive_execute: 5, 17
receive_execute: 0, 18
receive_execute: 2, 17
receive_execute: 3, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1242, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 8, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 9, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 9, 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 26
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 20 replies
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 18, 9, 0
before receive testcase: 0 0
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2462 openat openat
2023/03/28 10:37:02 ----- splice()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 3967 truncate truncate
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 171 dup2 dup2
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 11
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x8000, 0x44)
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x2c0b81, 0x0)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x28000, 0x24)
r2 = dup(r0)
dup2(r2, r1)
open$dir(&(0x7f0000000040)='./file0\x00', 0x200, 0x0)
open(&(0x7f0000000000)='./file0\x00', 0x1, 0x138)
truncate(&(0x7f0000000200)='./file0\x00', 0x2)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000180)=@known='security.selinux\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f00000001c0), 0x2, 0x3)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1600
remove dir: /root/cephfs-client/dfs-0-204
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
receive_execute: 1, 4
receive_execute: 0, 5
receive_execute: 0, 4
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-205 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-205
receive_execute: 1, 5
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 519, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 1245, write pid:-2127004809
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 20
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 293, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 293, flag collect 0
----- executor 3 signal number : 128
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 201, pid 1245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 201, flag collect 0
----- executor 3 signal number : 14
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11316, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 6, 5, 0
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 5, 6, 0
----- executor 2 signal number : 4706
----- executor 2 executes write_coverage_signal cov->size 7125, flag collect 0
----- executor 2 signal number : 522
executor 2 server cover_cnt 4 output_pos_value 6565
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 5, 8, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 13
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 11 replies
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 4 replies
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 4706 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 522 signal and 0 cover from userspace component
time breakdown 0: 5, 9, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 171 dup2 dup2
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 171 dup2 dup2
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 16
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
fcntl$setstatus(r0, 0x4, 0x0)
r1 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x0, 0x0, 0xffffffff})
fcntl$lock(r1, 0x6, &(0x7f00000001c0)={0x0, 0x0, 0x81})
setxattr$incfs_metadata(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000002c0)="b4d13e91fd14ae7a05d2041f77630a91bd3a5476d7fc83463e13b7d02d1f139b3c03864fa083006dccfcf1c51f3f1543e0d05e3f844d6183bb686ee8e7f62e2c7a03f20eda915f450e554bb9f980f5ef156a8013d2716fc8daafb57fb5c5d2460ca78d71bc4bc6a44f00062f36e92e4713619540edcc4a221810c5a7434368e85eee211a79816e2bc0ce4e9b95d284442df74cdf51a18dfa208732ec8457296c823b4d8aa9ba2e7fb10bb3bb", 0xac, 0x1)
r3 = fcntl$dupfd(r2, 0xac9b2d7c8cfbc428, r2)
fcntl$getownex(r3, 0x10, &(0x7f0000000200))
r4 = dup2(r2, r0)
fcntl$getownex(r1, 0x10, &(0x7f0000000000)={0x0, <r5=>0x0})
dup2(r1, r4)
fcntl$lock(r1, 0x7, &(0x7f0000000180)={0x2, 0x2, 0xc4, 0x4d16d712, r5})
fcntl$lock(r2, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x0, 0xc9})
r6 = fcntl$dupfd(r1, 0x406, r0)
fcntl$getownex(r6, 0x10, &(0x7f0000000140))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3120
remove dir: /root/cephfs-client/dfs-0-205
remove dir time 15
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-206 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-206
receive_execute: 6, 18
receive_execute: 3, 18
receive_execute: 5, 18
receive_execute: 3, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 1248, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 1248, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 131
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 1248, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 9
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 1248, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 3
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1248, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 1, 1
execute_one time: 1, 10
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 892, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 10290, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 26361, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 14, 0
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 14, 0
----- executor 2 signal number : 1059
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 24, 13, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 7100
----- executor 2 executes write_coverage_signal cov->size 25858, flag collect 0
----- executor 2 signal number : 1729
----- executor 2 executes write_coverage_signal cov->size 11785, flag collect 0
----- executor 2 signal number : 2885
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 7 output_pos_value 14251
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 37
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 16 replies
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1059 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 7100 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1729 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 2885 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
time breakdown 2: 21, 20, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2814 rmdir rmdir
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 11
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000011c0)='./file1\x00', 0x12441, 0x0)
open(&(0x7f0000000040)='./file1\x00', 0x40101, 0x0)
open$dir(&(0x7f0000000080)='./file1\x00', 0x0, 0x100)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x0)
open(&(0x7f00000002c0)='./file1\x00', 0x0, 0x0)
fstat(r0, &(0x7f0000000300))
setxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file1\x00', 0x8, 0x1)
r1 = open$dir(&(0x7f0000000380)='./file1\x00', 0x103002, 0x7)
read(r1, &(0x7f00000003c0)=""/109, 0x6d)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000440), &(0x7f0000000480)={'L+', 0x4f}, 0x16, 0x2)
rmdir(&(0x7f0000000200)='./file1\x00')
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1864
remove dir: /root/cephfs-client/dfs-0-206
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
receive_execute: 7, 7
executor 3 create dir /root/cephfs-client/dfs-0-207 successfully
receive_execute: 3, 8
receive_execute: 9, 8
current dir: executor 3: /root/cephfs-client/dfs-0-207
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 8
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 229
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 391, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 391, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 130
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 241, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 241, flag collect 0
----- executor 3 signal number : 13
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 202, pid 1253, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 202, flag collect 0
----- executor 3 signal number : 118
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 126, pid 1253, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 1253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 1, 13
time breakdown 3: 20, 15, 0
executor 1 write_server_output
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 9933, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 14731, flag collect 0
----- executor 2 signal number : 952
----- executor 2 executes write_coverage_signal cov->size 21318, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 18, 0
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 18, 0
----- executor 2 signal number : 6473
----- executor 2 executes write_coverage_signal cov->size 2114, flag collect 0
----- executor 2 signal number : 325
----- executor 2 executes write_coverage_signal cov->size 17115, flag collect 0
----- executor 2 signal number : 1667
----- executor 2 executes write_coverage_signal cov->size 11402, flag collect 0
----- executor 2 signal number : 2944
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 13839
before receive testcase: 0 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 22, 0
2023/03/28 10:37:02 wg wait finish
before receive testcase: 0 1
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 30
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 11 replies
2023/03/28 10:37:02 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 118 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 952 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 6473 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 325 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1667 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 2944 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 248 fstat fstat
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2753 read read
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 5
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
write$binfmt_misc(r1, &(0x7f0000000080)=ANY=[], 0x400000)
read(0xffffffffffffffff, &(0x7f0000000080)=""/57, 0x39)
fstat(r1, &(0x7f0000000000))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/cephfs-client/dfs-0-207
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-208 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-208
receive_execute: 8, 13
receive_execute: 6, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 18
receive_execute: 4, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 84861, pid 1256, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 84861, flag collect 0
----- executor 3 signal number : 953
----- completed 3
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1256, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 1256, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 0, 0
execute_one time: 1, 26
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 27, 28, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 14113, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 18425, flag collect 0
----- executor 2 signal number : 932
----- executor 2 executes write_coverage_signal cov->size 28639, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6096
----- executor 2 executes write_coverage_signal cov->size 1082, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 21, 35, 0
before receive testcase: 0 1
time breakdown 1: 19, 36, 0
before receive testcase: 0 1
----- executor 2 signal number : 1958
----- executor 2 executes write_coverage_signal cov->size 12378, flag collect 0
----- executor 2 signal number : 3126
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 13892
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 52
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 5 replies
2023/03/28 10:37:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 953 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 932 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 6096 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1958 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3126 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
time breakdown 2: 22, 34, 0
before receive testcase: 0 0
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2458 open open
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 3764 symlink symlink
2023/03/28 10:37:02 ----- insertCall()
2023/03/28 10:37:02 ----- generateCall 2458 open open
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 6
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x408080, 0x60)
open(&(0x7f0000000040)='./file0\x00', 0x2080, 0x51)
open(&(0x7f0000000140)='./file0\x00', 0x500, 0xd)
open$dir(&(0x7f0000000400)='./file0\x00', 0x0, 0x0)
symlink(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 840
remove dir: /root/cephfs-client/dfs-0-208
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
receive_execute: 7, 8
receive_execute: 7, 8
receive_execute: 3, 8
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-209 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-209
receive_execute: 9, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 620, pid 1259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 1259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 10
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 5888, flag collect 0
----- executor 2 signal number : 1281
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 15224, flag collect 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 13, 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 5370
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
time breakdown 3: 18, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 579
executor 2 server cover_cnt 5 output_pos_value 7314
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 24
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 6 replies
2023/03/28 10:37:02 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 1281 signal and 0 cover from userspace component
2023/03/28 10:37:02 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 5370 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 579 signal and 0 cover from userspace component
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 2
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000006c0)='./file0\x00', 0x210002, 0x61)
pwritev(r0, &(0x7f0000000780)=[{&(0x7f0000000700)='w', 0x1}], 0x1, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/cephfs-client/dfs-0-209
time breakdown 2: 11, 16, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-210 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-210
receive_execute: 8, 43
receive_execute: 12, 43
receive_execute: 9, 44
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 693, flag collect 0
----- executor 2 signal number : 283
executor 2 server cover_cnt 1 output_pos_value 287
receive_execute: 10, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 51, 4, 0
2023/03/28 10:37:02 for select break: 1
before receive testcase: 0 0
2023/03/28 10:37:02 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:02 for select break: 1
2023/03/28 10:37:02 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:02 wg wait finish
2023/03/28 10:37:02 ------ all executors finish execution
2023/03/28 10:37:02 exec time: 48
2023/03/28 10:37:02 ----- PS len: 4
2023/03/28 10:37:02 [CLIENT] executor 3 has 2 replies
2023/03/28 10:37:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:02 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 53, 4, 0
2023/03/28 10:37:02 [SERVER] executor 2 has 1 replies
2023/03/28 10:37:02 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/28 10:37:02 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:02 [SERVER] executor 0 has 0 replies
time breakdown 1: 53, 4, 0
before receive testcase: 0 0
2023/03/28 10:37:02 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:02 ----- no new client coverage: false, true
2023/03/28 10:37:02 mutate testcase with failures
2023/03/28 10:37:02 ----- mutateArg()
2023/03/28 10:37:02 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:02 prog length: 2
2023/03/28 10:37:02 HasCrashFail:false HasNetFail:false
10:37:02 ---executing program 0:
---
---
---
sync()
open(&(0x7f0000000100)='./file0\x00', 0x8040, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 56, 2, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 168
remove dir: /root/cephfs-client/dfs-0-210
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 36
-----finish removing dir
receive_execute: 0, 39
receive_execute: 0, 39
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 0, 1
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-211 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-211
receive_execute: 1, 39
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 39
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1089, pid 1264, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 1089, flag collect 0
----- executor 3 signal number : 383
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 1264, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 415
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 51, 0
execute_one time: 1, 90
2023/03/28 10:37:06 for select break: 1
2023/03/28 10:37:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 2708, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 2760, flag collect 0
2023/03/28 10:37:06 for select break: 1
2023/03/28 10:37:06 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 2 signal number : 1526
----- executor 2 executes write_coverage_signal cov->size 13934, flag collect 0
----- executor 0 signal number : 127
----- executor 0 executes write_coverage_signal cov->size 2760, flag collect 0
----- executor 0 signal number : 0
time breakdown 1: 39, 4452, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 0 signal number : 167
----- executor 0 executes write_coverage_signal cov->size 1898, flag collect 0
----- executor 2 signal number : 1223
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 0 signal number : 67
----- executor 2 signal number : 438
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3258, flag collect 0
----- executor 0 signal number : 898
----- executor 0 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 846
----- executor 0 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 0 signal number : 98
----- executor 2 signal number : 6013
----- executor 2 executes write_coverage_signal cov->size 2384, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 122
----- executor 0 executes write_coverage_signal cov->size 3489, flag collect 0
----- executor 2 signal number : 275
----- executor 2 executes write_coverage_signal cov->size 10320, flag collect 0
----- executor 0 signal number : 447
----- executor 0 executes write_coverage_signal cov->size 4620, flag collect 0
----- executor 0 signal number : 378
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
----- executor 2 signal number : 2484
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 406
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
----- executor 0 signal number : 157
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 203
----- executor 2 executes write_coverage_signal cov->size 1877, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1412
----- executor 2 executes write_coverage_signal cov->size 261, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 459
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4453
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 848
----- executor 0 executes write_coverage_signal cov->size 76, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 300
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2819
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2669
executor 2 server cover_cnt 18 output_pos_value 22188
2023/03/28 10:37:06 for select break: 1
2023/03/28 10:37:06 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 477
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
2023/03/28 10:37:06 for select break: 1
2023/03/28 10:37:06 --------- executor 0 receive reply, reply.done 1
----- executor 0 signal number : 18
executor 0 server cover_cnt 19 output_pos_value 8182
2023/03/28 10:37:06 wg wait finish
2023/03/28 10:37:06 ------ all executors finish execution
2023/03/28 10:37:06 exec time: 4499
2023/03/28 10:37:06 ----- PS len: 4
2023/03/28 10:37:06 [CLIENT] executor 3 has 2 replies
time breakdown 0: 39, 4460, 0
2023/03/28 10:37:06 fuzzer receive 383 signal and 0 cover from executor 3
2023/03/28 10:37:06 fuzzer receive 415 signal and 0 cover from executor 3
2023/03/28 10:37:06 [SERVER] executor 0 has 19 replies
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 127 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 167 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 898 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 846 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 98 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 122 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 447 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 378 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 157 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 848 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 300 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 2819 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 477 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/28 10:37:06 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:06 [SERVER] executor 2 has 18 replies
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 1526 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 1223 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 438 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 6013 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 275 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 2484 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 406 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 203 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 1412 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 459 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 4453 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:06 ------- fuzzer executor 2 receive 2669 signal and 0 cover from userspace component
time breakdown 3: 40, 4452, 0
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 2: 39, 4460, 0
before receive testcase: 0 0
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 2373 mkdir mkdir
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 3
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, 0x0, 0x40, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x280, 0x100)
mkdir(&(0x7f0000000000)='./file0\x00', 0x80)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/cephfs-client/dfs-0-211
remove dir time 21
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-212 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-212
receive_execute: 7, 25
receive_execute: 7, 25
receive_execute: 15, 25
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 15, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1268, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 1268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 366
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 1268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 158
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 1, 5
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 6079, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 40, 8, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 15176, flag collect 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 40, 9, 0
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 9, 0
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
----- executor 2 signal number : 5203
----- executor 2 executes write_coverage_signal cov->size 1711, flag collect 0
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
----- executor 2 signal number : 528
executor 2 server cover_cnt 5 output_pos_value 7417
2023/03/28 10:37:07 wg wait finish
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 37
2023/03/28 10:37:07 ----- PS len: 4
time breakdown 2: 32, 12, 0
2023/03/28 10:37:07 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 366 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 5203 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 528 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 171 dup2 dup2
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 3
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file1\x00', 0xacc2, 0x0)
dup2(r0, r0)
fchown(r0, 0xee01, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 384
remove dir: /root/cephfs-client/dfs-0-212
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-213 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-213
receive_execute: 8, 17
receive_execute: 5, 19
receive_execute: 2, 19
receive_execute: 5, 19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 624, pid 1271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
execute_one time: 1, 1
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 1271, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 0
----- executor 3 signal number : 140
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
time breakdown 3: 25, 6, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4199, flag collect 0
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 11907, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 5016
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 6702, flag collect 0
----- executor 2 signal number : 569
executor 2 server cover_cnt 5 output_pos_value 6937
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 8, 0
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:07 wg wait finish
time breakdown 1: 24, 8, 0
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 28
2023/03/28 10:37:07 ----- PS len: 4
2023/03/28 10:37:07 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:07 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 5016 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 569 signal and 0 cover from userspace component
time breakdown 2: 21, 8, 0
before receive testcase: 0 0
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 2809 rename rename
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 3970 unlink unlink
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 4
before receive testcase: 0 0
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000240)='./file1\x00', 0x0)
link(&(0x7f0000000340)='./file1\x00', &(0x7f0000000380)='./file0\x00')
unlink(&(0x7f0000000080)='./file0\x00')
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/cephfs-client/dfs-0-213
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
receive_execute: 3, 18
receive_execute: 3, 18
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-214 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-214
receive_execute: 2, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 7, 16
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 507, pid 1274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 400
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 1274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:37:07 for select break: 1
executor 0 write_server_output
executor 1 write_server_output
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 1 output_pos_value 23
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 4, 0
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 1775, flag collect 0
----- executor 2 signal number : 942
----- executor 2 executes write_coverage_signal cov->size 4657, flag collect 0
time breakdown 3: 23, 4, 0
before receive testcase: 0 1
----- executor 2 signal number : 993
----- executor 2 executes write_coverage_signal cov->size 11234, flag collect 0
----- executor 2 signal number : 4745
----- executor 2 executes write_coverage_signal cov->size 370, flag collect 0
----- executor 2 signal number : 250
----- executor 2 executes write_coverage_signal cov->size 7136, flag collect 0
----- executor 2 signal number : 542
----- executor 2 executes write_coverage_signal cov->size 2493, flag collect 0
time breakdown 0: 21, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 8687
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:07 wg wait finish
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 28
2023/03/28 10:37:07 ----- PS len: 4
2023/03/28 10:37:07 [CLIENT] executor 3 has 4 replies
2023/03/28 10:37:07 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 0 has 1 replies
2023/03/28 10:37:07 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 942 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 993 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 4745 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 250 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 542 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 21, 10, 0
before receive testcase: 0 0
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 131 close close
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 2458 open open
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 6
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file1\x00', 0x230800, 0xec)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xace02, 0x0)
open(&(0x7f0000000000)='./file1\x00', 0x10000, 0x8)
read(r0, 0x0, 0x0)
close(r0)
read(r0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 752
remove dir: /root/cephfs-client/dfs-0-214
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-215 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-215
receive_execute: 11, 15
receive_execute: 9, 15
receive_execute: 8, 15
receive_execute: 4, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 85, pid 1277, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
execute_one time: 1, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1277, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1277, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1277, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1277, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1277, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
cover_reset in execute_call
time breakdown 3: 26, 3, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 585, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 249
----- executor 2 executes write_coverage_signal cov->size 1994, flag collect 0
----- executor 2 signal number : 528
executor 2 server cover_cnt 4 output_pos_value 1239
time breakdown 0: 23, 5, 0
before receive testcase: 0 1
time breakdown 1: 24, 5, 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:07 wg wait finish
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 23
2023/03/28 10:37:07 ----- PS len: 4
2023/03/28 10:37:07 [CLIENT] executor 3 has 6 replies
2023/03/28 10:37:07 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:07 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 2 has 4 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 249 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 528 signal and 0 cover from userspace component
2023/03/28 10:37:07 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 19, 8, 0
before receive testcase: 0 0
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 259 getdents64 getdents64
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 6
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x0)
r0 = open$dir(&(0x7f0000000240)='./file0\x00', 0x102, 0x101)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x0)
getdents64(r0, &(0x7f0000000100)=""/75, 0x4b)
rmdir(&(0x7f00000001c0)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x2, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
remove dir: /root/cephfs-client/dfs-0-215
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-216 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-216
receive_execute: 6, 4
receive_execute: 3, 5
receive_execute: 1, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 1280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 4, 5
executor 0 before execute_one
----- executor 3 write_call_output, size 94, pid 1280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 474, pid 1280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 474, flag collect 0
----- executor 3 signal number : 38
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 4, 0
cover_reset in execute_call
execute_one time: 2, 8
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10, 11, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 276, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 10092, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 11, 0
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 9, 12, 0
----- executor 2 signal number : 6576
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 243
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 633
executor 2 server cover_cnt 5 output_pos_value 8810
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:07 wg wait finish
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 26
2023/03/28 10:37:07 ----- PS len: 4
2023/03/28 10:37:07 [CLIENT] executor 3 has 6 replies
2023/03/28 10:37:07 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/28 10:37:07 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 6576 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 243 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 633 signal and 0 cover from userspace component
time breakdown 2: 6, 21, 0
before receive testcase: 0 0
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 5
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x40400, 0x0)
write$binfmt_misc(r0, &(0x7f00000015c0)=ANY=[], 0x10000000000)
r1 = open(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
read(r1, &(0x7f0000000100)=""/254, 0xfe)
sync()
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 568
remove dir: /root/cephfs-client/dfs-0-216
remove dir time 15
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-217 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-217
receive_execute: 11, 19
receive_execute: 2, 19
receive_execute: 12, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 12, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 1283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 1283, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 191
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 6, 8
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8235, flag collect 0
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 4965, flag collect 0
----- executor 2 signal number : 765
----- executor 2 executes write_coverage_signal cov->size 7300, flag collect 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 3499
----- executor 2 executes write_coverage_signal cov->size 11199, flag collect 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1478
----- executor 2 executes write_coverage_signal cov->size 8567, flag collect 0
time breakdown 0: 30, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 2294
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 9521
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:07 wg wait finish
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 39
2023/03/28 10:37:07 ----- PS len: 4
2023/03/28 10:37:07 [CLIENT] executor 3 has 5 replies
2023/03/28 10:37:07 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 191 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 765 signal and 0 cover from userspace component
time breakdown 2: 21, 19, 0
before receive testcase: 0 0
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 3499 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1478 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 2294 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- generateCall 241 fsetxattr$trusted_overlay_origin fsetxattr$trusted_overlay_origin
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 14
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
fsync(r0)
r1 = open$dir(&(0x7f0000000240)='./file0/file0\x00', 0x8100, 0x50)
fsetxattr$smack_xattr_label(r1, &(0x7f0000000280)='security.SMACK64MMAP\x00', &(0x7f00000004c0)=ANY=[@ANYBLOB="7365e375726974792e65766d0000f7e4960e1e38e88d8c4388739ed0525d9e995d5a16bb1493612845a34c6f0c8960ab909ae85cd2eaaaedf10314fbb77fb62998abca2efdbf992ba2226486e9b6005462813347915cbc511cb81a32f5e9e89a67373bacfa5ad61db18e145d7a9d53670fe7b2e46db1467d842e4cd17f0af251139dfbcda30fa1c182349ed2b538d64a3462c5961a44c8198e0c3a46fa571ba2c313ff646c08eefbc5bb97e0c44fd4d0d0d6cd20ee9afac868a4a423f371a57fe296e1ab50be3b08f004dc38f32a8f9519b7433586334a51433f0f45c088910b5d4391948f2b2499"], 0xe, 0x3)
setxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
r2 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fsetxattr$trusted_overlay_origin(r2, &(0x7f00000002c0), &(0x7f0000000380), 0x2, 0x3)
getdents(r2, &(0x7f0000000300)=""/76, 0x4c)
r3 = open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
llistxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140)=""/96, 0x60)
setxattr$incfs_metadata(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f00000007c0)="", 0x1000, 0x3)
ioctl(r3, 0x0, &(0x7f0000000080)="91aa15e31538913652fe5b5dddd1c9f4dcafd8d0d6ff")
r4 = fcntl$getown(r0, 0x9)
fcntl$setown(r3, 0x8, r4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 31, 15, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6616
remove dir: /root/cephfs-client/dfs-0-217
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-218 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-218
receive_execute: 6, 8
receive_execute: 2, 7
receive_execute: 5, 7
receive_execute: 4, 7
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 202, pid 1286, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 202, flag collect 0
----- executor 3 signal number : 137
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 270, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 3 signal number : 128
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 116
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 179, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 179, flag collect 0
----- executor 3 signal number : 23
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 242, pid 1286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 242, flag collect 0
----- executor 3 signal number : 17
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 1286, write pid:-2126911943
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1286, write pid:-2126911943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1286, write pid:-2126911943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 9370, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8015, flag collect 0
----- executor 2 signal number : 936
----- executor 2 executes write_coverage_signal cov->size 14709, flag collect 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12, 11, 0
before receive testcase: 0 0
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 11, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 5818
----- executor 2 executes write_coverage_signal cov->size 11197, flag collect 0
----- executor 2 signal number : 736
----- executor 2 executes write_coverage_signal cov->size 10511, flag collect 0
time breakdown 3: 14, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 2920
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 11885
2023/03/28 10:37:07 for select break: 1
2023/03/28 10:37:07 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:07 wg wait finish
2023/03/28 10:37:07 ------ all executors finish execution
2023/03/28 10:37:07 exec time: 21
2023/03/28 10:37:07 ----- PS len: 4
2023/03/28 10:37:07 [CLIENT] executor 3 has 14 replies
2023/03/28 10:37:07 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:07 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:07 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 116 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:07 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 936 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 5818 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 736 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 2920 signal and 0 cover from userspace component
2023/03/28 10:37:07 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:07 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:07 ----- no new client coverage: false, true
2023/03/28 10:37:07 mutate testcase with failures
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 ----- mutateArg()
2023/03/28 10:37:07 ----- insertCall()
2023/03/28 10:37:07 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:07 prog length: 20
2023/03/28 10:37:07 HasCrashFail:false HasNetFail:false
10:37:07 ---executing program 0:
---
---
---
ftruncate(0xffffffffffffffff, 0x7ff)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file0\x00', 0x171942, 0x2)
fsetxattr$security_ima(r0, &(0x7f00000002c0), &(0x7f0000000600)=ANY=[@ANYBLOB="35de35d1e520620986fe81bae84bfb985397561f48db2863b15307a474ab8abd082fb4e1524a41eaeada43680ff1533b85193cacd8c1fc4da4d44406a5d9de231a25a69a62edd00c0b7b46630fc7b7602e86c76aff623534c936f16edee4064a233e13cff18f03eb23355e2e009b974adbb6e3e2783ebeaa81d433757b61dca1ed266a7470acf4fba08da3c23490c600871205e2f889836bfc7452dde4d268735b1e0e665c0d38dd1c41ad9b171bea0a71e945c2256c08bfeeba2368a6c1eb7446e61fe1736e105ddcd49d0146a974796b8c43fbea5eeaf55a86d224d00a23b8b24e879ce9ffd978d83e87d11ca2e0bd24457d257d790125b0209bfdccdd6a03453180d8fa6f5285d9885017753db44ccaf7fca89ba1e247ad1b78674a69a2681a153cef87c385b9a7be85fd791372746604abadc670c6363dea9a8ad5574ffc4f8a662548e1541a155cfa66d8f14b624c4c27757a"], 0x2, 0x0)
sync()
sync()
pwrite64(r0, &(0x7f0000000300)="8a4ecf184da32d67fb7071c7c7a2babc2cac365a3698b53e17649fd75ae736c0118777fdf224c4037405558ed00fcaadfec37b7930f36798321f12930854999c2a3854516c6f3cf90a5bed635923d1bfc387eeba84ae7adca2a6d5ff07b4621be1864af28de7800d1f2778ba80b76efb34f9fed8e7da4e6575105882af4fbe01154a6770153aff34d34e505bac75104e9e606823", 0x94, 0xff)
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x0)
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x81)
sync()
open(&(0x7f0000000080)='./file1\x00', 0xf29f83, 0x0)
mkdir(&(0x7f0000000000)='./file0\x00', 0x48)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
readlink(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)=""/7, 0x7)
symlinkat(&(0x7f0000000040)='./file1\x00', r1, &(0x7f0000000140)='./file1\x00')
renameat(r1, &(0x7f0000000240)='./file1\x00', r1, &(0x7f00000003c0)='./file2\x00')
setxattr$incfs_size(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)=0x20, 0x8, 0x2)
fcntl$dupfd(r1, 0x0, r1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3136
remove dir: /root/cephfs-client/dfs-0-218
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 9, 15, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-219 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-219
receive_execute: 8, 17
receive_execute: 7, 16
receive_execute: 6, 16
receive_execute: 3, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:-2126911943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 744, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 744, flag collect 0
----- executor 3 signal number : 242
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 411, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 411, flag collect 0
----- executor 3 signal number : 22
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 789, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 789, flag collect 0
----- executor 3 signal number : 41
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 96, pid 1291, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 3 signal number : 58
----- completed 17
----- executor 3 write_call_output, size 238, pid 1291, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 238, flag collect 0
----- executor 3 signal number : 37
----- completed 18
----- executor 3 write_call_output, size 96, pid 1291, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 3 signal number : 0
----- completed 19
----- executor 3 write_call_output, size 345, pid 1291, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 345, flag collect 0
----- executor 3 signal number : 65
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4750, 4, 0
execute_one time: 1, 4754
2023/03/28 10:37:16 for select break: 1
2023/03/28 10:37:16 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5990, flag collect 0
----- executor 0 signal number : 461
----- executor 0 executes write_coverage_signal cov->size 338, flag collect 0
----- executor 0 signal number : 128
----- executor 0 executes write_coverage_signal cov->size 5990, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 610, flag collect 0
----- executor 0 signal number : 64
----- executor 0 executes write_coverage_signal cov->size 4935, flag collect 0
time breakdown 3: 25, 9754, 0
----- executor 0 signal number : 67
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 7764, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3574, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 3748, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1530
----- executor 2 executes write_coverage_signal cov->size 29653, flag collect 0
----- executor 2 signal number : 1306
----- executor 2 executes write_coverage_signal cov->size 6752, flag collect 0
----- executor 0 signal number : 1206
----- executor 0 executes write_coverage_signal cov->size 3574, flag collect 0
----- executor 0 signal number : 48
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:16 for select break: 1
2023/03/28 10:37:16 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 583
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 616
----- executor 0 executes write_coverage_signal cov->size 2254, flag collect 0
----- executor 0 signal number : 101
----- executor 0 executes write_coverage_signal cov->size 266, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 6980, flag collect 0
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 10228, flag collect 0
----- executor 0 signal number : 323
----- executor 0 executes write_coverage_signal cov->size 30768, flag collect 0
----- executor 2 signal number : 7252
----- executor 2 executes write_coverage_signal cov->size 5834, flag collect 0
----- executor 2 signal number : 378
----- executor 2 executes write_coverage_signal cov->size 30310, flag collect 0
----- executor 0 signal number : 163
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4149
----- executor 2 executes write_coverage_signal cov->size 2932, flag collect 0
----- executor 0 signal number : 848
----- executor 0 executes write_coverage_signal cov->size 171, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 481
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 23, 9756, 0
before receive testcase: 0 0
----- executor 0 signal number : 330
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 207
----- executor 2 executes write_coverage_signal cov->size 4129, flag collect 0
----- executor 2 signal number : 424
----- executor 2 executes write_coverage_signal cov->size 286, flag collect 0
----- executor 2 signal number : 135
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2579
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 864
----- executor 2 executes write_coverage_signal cov->size 182, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 500
----- executor 2 executes write_coverage_signal cov->size 28585, flag collect 0
----- executor 0 signal number : 469
----- executor 0 executes write_coverage_signal cov->size 7386, flag collect 0
----- executor 0 signal number : 1589
----- executor 0 executes write_coverage_signal cov->size 266, flag collect 0
----- executor 0 signal number : 35
executor 0 server cover_cnt 20 output_pos_value 9682
----- executor 2 signal number : 4381
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:16 for select break: 1
2023/03/28 10:37:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 9761, 0
----- executor 2 signal number : 3114
before receive testcase: 0 0
executor 2 server cover_cnt 18 output_pos_value 25486
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 9793
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 20 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 242 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 20 replies
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 461 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 64 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 1206 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 48 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 616 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 101 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 323 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 163 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 848 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 330 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 2579 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 469 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 1589 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 18 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1530 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1306 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 583 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7252 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 378 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4149 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 481 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 207 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 135 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 864 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 500 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4381 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3114 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 65 signal and 0 cover from executor 3
time breakdown 2: 20, 9777, 0
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2462 openat openat
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 6
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x12c41, 0x0)
truncate(&(0x7f0000000000)='./file1\x00', 0x3)
setxattr$security_selinux(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0), &(0x7f0000000300)='system_u:object_r:dhcpd_initrc_exec_t:s0\x00', 0x29, 0x0)
openat(r0, &(0x7f0000000140)='./file1\x00', 0x2000c2, 0x90)
lsetxattr$security_selinux(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:gpg_agent_exec_t:s0\x00', 0x26, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0x58, 0x1, 0xfa, "0cf622acbac41d208f00af5fe295a018", "6850b5767fa5babc5d320967432013189c58b7bea2732372eee1ca603780b4b2879a178c22fef4bef2db12cbd0df4f9212d770b9d0af46f92c21cce40a84624838eeca"}, 0x58, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1664
remove dir: /root/cephfs-client/dfs-0-219
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-220 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-220
receive_execute: 28, 7
receive_execute: 5, 7
receive_execute: 27, 7
receive_execute: 21, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1298, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 1298, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 263
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 449, pid 1298, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 3 signal number : 52
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 527, pid 1298, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 527, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 449, pid 1298, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 3 signal number : 18
----- completed 6
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 12, 3, 0
execute_one time: 1, 15
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 17, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 986, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 13041, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 28086, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 18, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1036
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 34, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 7261
----- executor 2 executes write_coverage_signal cov->size 1661, flag collect 0
----- executor 2 signal number : 307
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1625
----- executor 2 executes write_coverage_signal cov->size 22332, flag collect 0
----- executor 2 signal number : 4519
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 16240
time breakdown 2: 12, 25, 0
before receive testcase: 0 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 36
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 6 replies
2023/03/28 10:37:17 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 263 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1036 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7261 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 307 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1625 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4519 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2346 listxattr listxattr
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2458 open open
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 8
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
symlink(&(0x7f0000000140)='.\x00', &(0x7f0000000180)='./file0\x00')
open(&(0x7f0000000100)='./file0\x00', 0x103200, 0x106)
setxattr$trusted_overlay_upper(&(0x7f0000000280)='./file0\x00', &(0x7f0000000040), &(0x7f0000000600)=ANY=[], 0x44, 0x3)
listxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=""/37, 0x25)
lsetxattr$security_capability(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@v2={0x2000000, [{0x80000001, 0x800}, {0x4f31, 0x9}]}, 0x14, 0x1)
setxattr$security_smack_transmute(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340), 0x4, 0x3)
stat(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580))
open$dir(&(0x7f0000000380)='./file0\x00', 0x101000, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1656
remove dir: /root/cephfs-client/dfs-0-220
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-221 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-221
receive_execute: 18, 20
receive_execute: 17, 20
receive_execute: 10, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 17, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 594, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 3 signal number : 178
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 41
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 20
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 596, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 160, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 3 signal number : 23
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 209, pid 1301, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 3 signal number : 47
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 3, 8
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 38, 13, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 600, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 19740, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 1 output_pos_value 23
----- executor 2 signal number : 1314
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 37, 14, 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 36, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 6280
----- executor 2 executes write_coverage_signal cov->size 2372, flag collect 0
----- executor 2 signal number : 317
----- executor 2 executes write_coverage_signal cov->size 12469, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 577
executor 2 server cover_cnt 5 output_pos_value 8564
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 38
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 8 replies
2023/03/28 10:37:17 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 1 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1314 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 6280 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 317 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 577 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 47 signal and 0 cover from executor 3
time breakdown 2: 30, 18, 0
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 10
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x0)
chown(&(0x7f0000000300)='./file1\x00', 0xffffffffffffffff, 0xee00)
r1 = open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
rename(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000180)='./file1\x00')
fsync(r1)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$F_SET_FILE_RW_HINT(r1, 0x40e, &(0x7f0000000340)=0x2)
write$binfmt_elf64(r2, &(0x7f00000001c0)=ANY=[@ANYBLOB="7f454c465940011f080000000000000003000600090000001a0300000000000040000000000096010000000000000600000000003800020003000600882c000000601f00000005000000000000004000000000000000980f000000000000000000000040020093cd000000000000fffffeffffffffff604a19afed04d452ce18ab40f0a31dfaa9da6f318015f4aa7695c9d76dfc1bdca4b2e7ee05fe56ad099be736d91fce65a291a94990cad387bac53139e4913645dbc192ee6a334b520ce67725601366"], 0xc7)
pread64(r0, &(0x7f00000000c0)=""/107, 0x6b, 0x6)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1720
remove dir: /root/cephfs-client/dfs-0-221
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-222 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-222
receive_execute: 5, 12
receive_execute: 2, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 13
receive_execute: 5, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 1304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 1304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 1304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 123
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 626, pid 1304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 626, flag collect 0
----- executor 3 signal number : 57
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 215, pid 1304, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 3 signal number : 129
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1304, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1304, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1304, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 201, pid 1304, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 201, flag collect 0
----- executor 3 signal number : 113
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 4, 0
execute_one time: 1, 14
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 597, flag collect 0
----- executor 0 signal number : 306
time breakdown 3: 20, 28, 0
before receive testcase: 0 0
executor 0 server cover_cnt 2 output_pos_value 373
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 798, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 28327, flag collect 0
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 27295, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1089
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 17, 30, 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 30, 0
before receive testcase: 0 0
----- executor 2 signal number : 7818
----- executor 2 executes write_coverage_signal cov->size 5287, flag collect 0
----- executor 2 signal number : 421
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2089
----- executor 2 executes write_coverage_signal cov->size 25685, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4432
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 17345
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 46
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 10 replies
2023/03/28 10:37:17 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 57 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 2 replies
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1089 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7818 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 421 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 2089 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4432 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 14, 35, 0
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 15
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fdatasync(0xffffffffffffffff)
open(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
r0 = open$dir(&(0x7f0000000400)='./file0\x00', 0x400, 0x2a8)
fchmod(r0, 0x180)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x0)
truncate(&(0x7f0000000240)='./file0\x00', 0x3)
r1 = open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
r2 = dup(r1)
fsetxattr$trusted_overlay_nlink(r2, &(0x7f0000000500), &(0x7f0000000540)={'U-', 0xfffffffffffffffb}, 0x16, 0x0)
lsetxattr$security_evm(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)=@md5={0x1, "400c44b8f5e6c148e6d62dacc2c9d2df"}, 0x11, 0x0)
fsetxattr$trusted_overlay_upper(r1, &(0x7f0000000040), 0x0, 0x0, 0x3)
lgetxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@known='system.posix_acl_default\x00', &(0x7f00000001c0)=""/74, 0x4a)
r3 = open(&(0x7f0000000280)='./file1\x00', 0x0, 0x114)
fsetxattr$trusted_overlay_nlink(r3, &(0x7f00000002c0), &(0x7f0000000300)={'L-', 0x8000}, 0x16, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2632
remove dir: /root/cephfs-client/dfs-0-222
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-223 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-223
receive_execute: 9, 8
receive_execute: 2, 9
receive_execute: 4, 9
receive_execute: 6, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1308, write pid:-2126826085
output_pos: 1, output_pos_value 1
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 1, 0
----- executor 3 signal number : 0
execute_one time: 0, 1
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1308, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1308, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 82
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 262, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 262, flag collect 0
----- executor 3 signal number : 104
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 107
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 87
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 369, pid 1308, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 369, flag collect 0
----- executor 3 signal number : 41
----- completed 10
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1308, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 52
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 578, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 578, flag collect 0
----- executor 3 signal number : 48
----- completed 13
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 32
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 21, 0, 0
execute_one time: 0, 21
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 866, flag collect 0
time breakdown 3: 17, 23, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 23408, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1416
----- executor 2 executes write_coverage_signal cov->size 30368, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1023
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 13, 24, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 7655
----- executor 2 executes write_coverage_signal cov->size 2439, flag collect 0
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2173
----- executor 2 executes write_coverage_signal cov->size 23644, flag collect 0
----- executor 2 signal number : 4981
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 17678
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 37
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 15 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 107 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1416 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1023 signal and 0 cover from userspace component
time breakdown 2: 11, 29, 0
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7655 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 2173 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4981 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 171 dup2 dup2
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2810 renameat renameat
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 8
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
dup2(0xffffffffffffffff, 0xffffffffffffffff)
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
dup(r0)
r1 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0, 0x0)
renameat(r1, &(0x7f0000000040)='./file0/file0\x00', r0, &(0x7f0000000100)='./file0/file0\x00')
r2 = dup(r0)
lseek(r2, 0x0, 0x4)
open$dir(&(0x7f0000000000)='./file0/file0\x00', 0x109000, 0x29)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/cephfs-client/dfs-0-223
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-224 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-224
receive_execute: 10, 14
receive_execute: 4, 14
receive_execute: 9, 13
receive_execute: 9, 14
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 1311, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1311, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 24, 7, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 23, 8, 0
before receive testcase: 0 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 24
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 8 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:17 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4905 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
time breakdown 1: 23, 7, 0
before receive testcase: 0 1
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 2
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x4c0, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000640))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 488
remove dir: /root/cephfs-client/dfs-0-224
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11546, flag collect 0
----- executor 2 signal number : 4905
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7024
time breakdown 2: 18, 8, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 23
-----finish removing dir
receive_execute: 4, 24
receive_execute: 3, 25
receive_execute: 3, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-225 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-225
receive_execute: 4, 25
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1314, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 1314, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 29, 6, 0
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 7469, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 18111, flag collect 0
time breakdown 1: 29, 7, 0
time breakdown 0: 28, 7, 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5794
----- executor 2 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 2 signal number : 559
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 5 output_pos_value 7721
before receive testcase: 0 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 34
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 2 replies
2023/03/28 10:37:17 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 5794 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 559 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 2: 28, 9, 0
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 14
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f00000002c0)='./file2\x00', 0x8, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
setxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x2)
link(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
open$dir(&(0x7f0000000380)='./file3\x00', 0x0, 0x8)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
r2 = open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
dup2(r2, 0xffffffffffffffff)
readlinkat(r1, 0xfffffffffffffffc, 0x0, 0x0)
rename(&(0x7f0000000700)='./file4\x00', &(0x7f0000000740)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2000
remove dir: /root/cephfs-client/dfs-0-225
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-226 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-226
receive_execute: 7, 13
receive_execute: 5, 13
receive_execute: 6, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 4, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 659, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 150
----- completed 6
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 7
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 32
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 542, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 542, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 431, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 431, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 232, pid 1316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 232, flag collect 0
----- executor 3 signal number : 17
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 42, 8, 0
execute_one time: 1, 50
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 53, 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1500, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 23160, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 54, 0
before receive testcase: 0 0
----- executor 2 signal number : 1191
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7694
----- executor 2 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 2 signal number : 99
----- executor 2 executes write_coverage_signal cov->size 7918, flag collect 0
----- executor 2 signal number : 479
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 812
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 19, 53, 0
before receive testcase: 0 0
----- executor 2 signal number : 5847
----- executor 2 executes write_coverage_signal cov->size 10286, flag collect 0
----- executor 2 signal number : 1750
executor 2 server cover_cnt 9 output_pos_value 19362
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 73
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 14 replies
2023/03/28 10:37:17 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 9 replies
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
time breakdown 2: 17, 59, 0
2023/03/28 10:37:17 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1191 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7694 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 99 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 479 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 812 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 5847 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1750 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 3
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x2000, 0x0)
r1 = dup(r0)
lseek(r1, 0x0, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/cephfs-client/dfs-0-226
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-227 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-227
receive_execute: 13, 22
receive_execute: 13, 21
receive_execute: 12, 22
receive_execute: 7, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 1322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
execute_one time: 1, 1
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 1957, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4729, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2215
----- executor 2 executes write_coverage_signal cov->size 667, flag collect 0
----- executor 2 signal number : 242
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 4 output_pos_value 3542
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 34, 3, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 29, 5, 0
before receive testcase: 0 0
time breakdown 3: 35, 3, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 30
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:17 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 4 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 2215 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 242 signal and 0 cover from userspace component
time breakdown 1: 35, 8, 0
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 6
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x7, &(0x7f0000000040)={0x2, 0x1, 0x5, 0x7})
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
rmdir(&(0x7f0000000240)='./file1\x00')
r1 = dup(r0)
fstat(r1, &(0x7f00000002c0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-227
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-228 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-228
receive_execute: 6, 10
receive_execute: 4, 10
receive_execute: 1, 10
receive_execute: 6, 10
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
execute_one time: 1, 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 1325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 474, pid 1325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 474, flag collect 0
----- executor 3 signal number : 37
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 339, pid 1325, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 339, flag collect 0
----- executor 3 signal number : 123
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
time breakdown 3: 16, 9, 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 11980, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 11, 10, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 1291
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7031
----- executor 2 executes write_coverage_signal cov->size 994, flag collect 0
----- executor 2 signal number : 260
----- executor 2 executes write_coverage_signal cov->size 23925, flag collect 0
----- executor 2 signal number : 641
executor 2 server cover_cnt 5 output_pos_value 9299
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 24
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 6 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1291 signal and 0 cover from userspace component
time breakdown 2: 14, 15, 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7031 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 260 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 641 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2462 openat openat
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2458 open open
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 13
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000011c0)='./file1\x00', 0x124c1, 0x0)
r1 = fcntl$getown(r0, 0x9)
fcntl$getownex(r0, 0x10, &(0x7f0000000240)={0x0, <r2=>0x0})
r3 = openat(r0, &(0x7f00000000c0)='./file1\x00', 0xa40, 0xc)
open(&(0x7f00000002c0)='./file1\x00', 0x48182, 0x8)
fcntl$lock(r3, 0x25, &(0x7f0000000280)={0x2, 0x1, 0x9, 0x1000000000193e, r2})
fcntl$setown(r0, 0x8, r1)
fsetxattr$user(r0, &(0x7f0000000300), &(0x7f0000000340)='-\'!$(%]\x00', 0x8, 0x2)
openat(r0, &(0x7f0000000000)='./file1\x00', 0x80, 0x92)
r4 = open(&(0x7f0000000040)='./file1\x00', 0x40301, 0x0)
write$binfmt_aout(r4, &(0x7f0000000100)=ANY=[@ANYBLOB="00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052556d1594571e6182b1b34a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e00"/286], 0x120)
open$dir(&(0x7f0000000080)='./file1\x00', 0x10000, 0x80)
lseek(r4, 0x0, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2472
remove dir: /root/cephfs-client/dfs-0-228
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-229 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-229
receive_execute: 8, 18
receive_execute: 8, 18
receive_execute: 3, 18
receive_execute: 7, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 3 signal number : 232
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 385, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 385, flag collect 0
----- executor 3 signal number : 141
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 742, pid 1329, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 742, flag collect 0
----- executor 3 signal number : 269
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1329, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 1329, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 8
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 26, 9, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10697, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 18636, flag collect 0
----- executor 2 signal number : 995
----- executor 2 executes write_coverage_signal cov->size 30605, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 8518
----- executor 2 executes write_coverage_signal cov->size 1407, flag collect 0
----- executor 2 signal number : 309
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 26, 11, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
----- executor 2 signal number : 1574
----- executor 2 executes write_coverage_signal cov->size 16282, flag collect 0
----- executor 2 signal number : 3968
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 16840
time breakdown 2: 21, 15, 0
before receive testcase: 0 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 33
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 13 replies
2023/03/28 10:37:17 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 141 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 269 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 995 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 8518 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 309 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1574 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3968 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 16
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x24, &(0x7f0000000380)={0x0, 0x4})
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x81, 0xbab0})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
open$dir(&(0x7f00000003c0)='./file0/file0\x00', 0x10400, 0x4)
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x1, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
r4 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r4, r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3112
remove dir: /root/cephfs-client/dfs-0-229
remove dir time 22
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-230 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-230
receive_execute: 9, 30
receive_execute: 9, 30
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 34
receive_execute: 5, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 1333, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 115
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 1333, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 1333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 345, pid 1333, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 345, flag collect 0
----- executor 3 signal number : 29
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
cover_reset in execute_call
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 13871, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 18625, flag collect 0
2023/03/28 10:37:17 for select break: 1
time breakdown 0: 39, 15, 0
before receive testcase: 0 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 39, 15, 0
----- executor 2 signal number : 1000
----- executor 2 executes write_coverage_signal cov->size 32510, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 7124
----- executor 2 executes write_coverage_signal cov->size 3111, flag collect 0
----- executor 2 signal number : 348
----- executor 2 executes write_coverage_signal cov->size 27698, flag collect 0
time breakdown 3: 45, 10, 0
before receive testcase: 0 1
----- executor 2 signal number : 1954
----- executor 2 executes write_coverage_signal cov->size 16880, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 51
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [CLIENT] executor 3 has 16 replies
2023/03/28 10:37:17 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1000 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7124 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 348 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1954 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4050 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 29 signal and 0 cover from executor 3
----- executor 2 signal number : 4050
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 15965
time breakdown 2: 39, 17, 0
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 2
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file1\x00', 0x72ba01, 0x3a)
truncate(&(0x7f0000000040)='./file1\x00', 0x1000000000000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 256
remove dir: /root/cephfs-client/dfs-0-230
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-231 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-231
receive_execute: 11, 12
receive_execute: 7, 12
receive_execute: 4, 12
receive_execute: 10, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
executor 2 server cover_cnt 1 output_pos_value 11
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 16, 3, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 3, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 17
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 2 replies
2023/03/28 10:37:17 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 1 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 22, 4, 0
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
before receive testcase: 0 0
2023/03/28 10:37:17 ----- generateCall 2374 mkdirat mkdirat
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 4
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00', 0x0)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
mkdirat(r0, &(0x7f0000000000)='./file1\x00', 0x40)
open(&(0x7f0000000040)='./file0\x00', 0x140, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 23, 3, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/cephfs-client/dfs-0-231
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 5
-----finish removing dir
receive_execute: 2, 11
receive_execute: 2, 11
receive_execute: 1, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-232 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-232
receive_execute: 2, 11
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 1339, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1339, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1339, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 1339, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 118
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 2, 2
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 6475, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 20238, flag collect 0
time breakdown 3: 13, 6, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 5707
----- executor 2 executes write_coverage_signal cov->size 330, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 13265, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 565
executor 2 server cover_cnt 5 output_pos_value 7859
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 19
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 4 replies
2023/03/28 10:37:17 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 118 signal and 0 cover from executor 3
time breakdown 2: 13, 9, 0
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 5707 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 565 signal and 0 cover from userspace component
time breakdown 0: 12, 7, 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 20
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000003c0)='./file0\x00', 0x121a40, 0x100)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x70001, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x100000001, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3656
remove dir: /root/cephfs-client/dfs-0-232
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
receive_execute: 2, 32
receive_execute: 4, 32
mkdir time 20
executor 3 create dir /root/cephfs-client/dfs-0-233 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-233
receive_execute: 6, 31
receive_execute: 1, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 1342, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 1342, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 49
----- completed 14
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 235, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 3 signal number : 62
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 1342, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1342, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 344, pid 1342, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 3 signal number : 27
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 6, 1
execute_one time: 1, 21
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 37, 23, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1776, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1485
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 1072
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8146
----- executor 2 executes write_coverage_signal cov->size 2747, flag collect 0
----- executor 2 signal number : 354
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 36, 27, 0
----- executor 2 signal number : 2043
----- executor 2 executes write_coverage_signal cov->size 41, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1086
----- executor 2 executes write_coverage_signal cov->size 29395, flag collect 0
----- executor 2 signal number : 5996
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 17704, flag collect 0
----- executor 2 signal number : 2123
executor 2 server cover_cnt 11 output_pos_value 22417
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 34, 31, 0
before receive testcase: 0 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 62
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 20 replies
2023/03/28 10:37:17 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 11 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1485 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1072 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 8146 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 354 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 2043 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1086 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 5996 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 2123 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 3
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0xff, 0x0, 0xff, "c61d10d2234b0369fc9edf8e13361cd1", "5b3ce6ef6b1d76640f38b91d7a437efebb3d5c751ea45aeae7ef63c0ea4213165ab838fd59acf81cccb45b019812ea9b085a16e23acc022e6083c7cbd5a26a1fcd51f2bd7ee821b7ced3adba299fe0a27015a7789fb27e6f5c5860b622ae65d4d0cf0d4d66360fa06ec2e1f0437e5b7ae9859b52b2c95cb010d512bcc767bd0acc40fdbccb517a4f3a85d7153f60ae7cb565eed246163b1bf89fceff4ae6d650801fa39e77a1037e71dcc536673a9de722ad2ea95877e6f2cb2cb2166fd780c6640dade4f71d2a9baff3d2278e7892db7de280599482f3f66ce8ecaadaa8e66a0422bbba90a8d72e90a3"}, 0xff, 0x5)
open$dir(&(0x7f0000001300)='./file0\x00', 0x28284, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 960
remove dir: /root/cephfs-client/dfs-0-233
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-234 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-234
receive_execute: 3, 9
receive_execute: 10, 9
receive_execute: 7, 9
receive_execute: 11, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1347, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1347, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1347, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 367
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 4, 0
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 1956, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4177, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2168
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 12
executor 2 server cover_cnt 5 output_pos_value 3508
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 19, 6, 0
before receive testcase: 0 0
time breakdown 1: 16, 6, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 15
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 2168 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 367 signal and 0 cover from executor 3
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 5
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x20040, 0x192)
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), 0x0, 0x0, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x200, 0x0)
lsetxattr$security_capability(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x0, 0x0)
openat(0xffffffffffffff9c, &(0x7f00000001c0)='./file0\x00', 0x2042, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
remove dir: /root/cephfs-client/dfs-0-234
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 12, 7, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-235 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-235
receive_execute: 3, 11
receive_execute: 1, 11
receive_execute: 2, 11
receive_execute: 2, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 1350, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 1350, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 160
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 573, pid 1350, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 573, flag collect 0
----- executor 3 signal number : 127
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 440, pid 1350, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 440, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 392, pid 1350, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 392, flag collect 0
----- executor 3 signal number : 84
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 4, 0
execute_one time: 1, 15
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 14, 18, 0
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 986, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 23115, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1404
----- executor 2 executes write_coverage_signal cov->size 28144, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 19, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 21, 0
before receive testcase: 0 0
----- executor 2 signal number : 1108
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 545
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8350
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 412
----- executor 2 executes write_coverage_signal cov->size 3141, flag collect 0
----- executor 2 signal number : 352
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1573
----- executor 2 executes write_coverage_signal cov->size 22854, flag collect 0
----- executor 2 signal number : 4595
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 10 output_pos_value 18435
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 34
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 5 replies
2023/03/28 10:37:17 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 10 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1108 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 8350 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 412 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 352 signal and 0 cover from userspace component
time breakdown 2: 12, 23, 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1573 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4595 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 14
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x9ffbe5a7178a6658, 0x81)
r1 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x410100, 0x4488f01d38123da6)
lsetxattr$security_selinux(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)='system_u:object_r:ping_exec_t:s0\x00', 0x21, 0x0)
lsetxattr$security_capability(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680)=@v1={0x1000000, [{0x3, 0x3ff}]}, 0xc, 0x3)
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
chown(&(0x7f0000000240)='./file0\x00', 0x0, r2)
symlinkat(&(0x7f0000000080)='./file0\x00', r1, &(0x7f0000000300)='./file0\x00')
lsetxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='\x06\x00\x00', 0x3, 0x2)
mkdirat(r1, &(0x7f0000000200)='./file0\x00', 0x86)
fcntl$getown(r0, 0x9)
mkdir(&(0x7f00000001c0)='./file0\x00', 0x101)
rename(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0\x00')
open$dir(&(0x7f0000000040)='./file0\x00', 0x2, 0x0)
lsetxattr$security_evm(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500), &(0x7f00000006c0)=ANY=[@ANYBLOB="03001300000001009ba505458db937101025b66711d992169388b0458153781095b2b91b4c3bd590a397b8235bcfd870d5d85e88a26db62885a7d226c2e95a11179c78bf571ab15c099841bb0dd1d1860ee0b3bc1dd09a57ec1d63495b76e8456f3d153787366bec924f7191ed43a3d15e0d31f05a310f4078a90bb9b4a38572c658e7f9596b62ab5d32703b58ff329aa27418334d4c957f61ef26cfa6ad50aea5bbb447a7fdf36d910ed7501714dc8e3b75bafd602734d115c720b9bb8e49ce6576aa0dce341ea979d28132f92222758a356f841e6328c92c56fad39f91b630"], 0xa4, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2872
remove dir: /root/cephfs-client/dfs-0-235
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-236 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-236
receive_execute: 12, 11
receive_execute: 9, 11
receive_execute: 7, 11
receive_execute: 11, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 161
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 73
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 205, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 205, flag collect 0
----- executor 3 signal number : 18
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 121
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 265, pid 1353, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 265, flag collect 0
----- executor 3 signal number : 12
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 7, 0
execute_one time: 1, 22
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 13926, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1413
----- executor 2 executes write_coverage_signal cov->size 11517, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 939
----- executor 2 executes write_coverage_signal cov->size 20437, flag collect 0
time breakdown 1: 20, 25, 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 26, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 6736
----- executor 2 executes write_coverage_signal cov->size 1770, flag collect 0
----- executor 2 signal number : 325
----- executor 2 executes write_coverage_signal cov->size 25318, flag collect 0
time breakdown 3: 23, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 1201
----- executor 2 executes write_coverage_signal cov->size 17413, flag collect 0
----- executor 2 signal number : 4335
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 15037
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 40
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 14 replies
2023/03/28 10:37:17 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 161 signal and 0 cover from executor 3
time breakdown 2: 18, 30, 0
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 121 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1413 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 939 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 6736 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 325 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1201 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4335 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2458 open open
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 8
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000140)='./file0\x00', 0x0)
open$dir(&(0x7f0000000080)='./file1\x00', 0x0, 0x1c2)
symlink(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000240)='./file0/file0\x00')
rename(&(0x7f00000003c0)='./file0/file0\x00', &(0x7f00000005c0)='./file1\x00')
mkdir(&(0x7f0000000600)='./file1/file0\x00', 0x0)
listxattr(&(0x7f0000000000)='./file0/file0/file0\x00', 0x0, 0x1c)
open(&(0x7f0000000040)='./file0/file0/file0\x00', 0x400000, 0x110)
rmdir(&(0x7f0000000300)='./file0/file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1096
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-236
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-237 successfully
receive_execute: 7, 7
current dir: executor 3: /root/cephfs-client/dfs-0-237
receive_execute: 10, 7
receive_execute: 8, 7
receive_execute: 4, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 511, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 111
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 545, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 3 signal number : 60
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 721, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 721, flag collect 0
----- executor 3 signal number : 79
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 653, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 653, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 221, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 221, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 543, pid 1356, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 3 signal number : 38
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 7, 0
execute_one time: 1, 26
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1140, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 20034, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 28701, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 29, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1012
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 17, 28, 0
before receive testcase: 0 1
----- executor 2 signal number : 7235
----- executor 2 executes write_coverage_signal cov->size 4570, flag collect 0
time breakdown 1: 14, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 371
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1684
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5625
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 17410
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 41
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 8 replies
time breakdown 2: 11, 35, 0
2023/03/28 10:37:17 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1012 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7235 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 371 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1684 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 5625 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2458 open open
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 9
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000100)=@sha1={0x1, "eeafab93ebc406a00355f680f889a50c75802f32"}, 0x15, 0x1)
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
fremovexattr(r0, &(0x7f00000000c0)=@known='security.selinux\x00')
open$dir(&(0x7f0000000140)='./file0\x00', 0x8280, 0x140)
open(&(0x7f0000000400)='./file0\x00', 0x2001, 0x0)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x400840, 0x2d)
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x1)
open(&(0x7f0000000240)='./file0\x00', 0x420340, 0x2)
fchown(r1, 0xffffffffffffffff, 0xee01)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1568
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-237
remove dir time 26
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-238 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-238
receive_execute: 10, 29
receive_execute: 8, 29
receive_execute: 3, 28
receive_execute: 9, 28
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 657, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 470
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 1359, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 129
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 565, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 3 signal number : 130
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 86
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 46
----- completed 7
execute_one loop: 0, 1, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1359, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 13, 0
execute_one time: 0, 22
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 686, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 20657, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1403
----- executor 2 executes write_coverage_signal cov->size 25609, flag collect 0
----- executor 2 signal number : 1049
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 37, 26, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 37, 25, 0
before receive testcase: 0 0
time breakdown 3: 39, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 7965
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 323
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1848
----- executor 2 executes write_coverage_signal cov->size 17478, flag collect 0
----- executor 2 signal number : 4078
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 16756
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 60
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 9 replies
2023/03/28 10:37:17 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 46 signal and 0 cover from executor 3
time breakdown 2: 31, 31, 0
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1403 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1049 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7965 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 323 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1848 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4078 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2753 read read
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2458 open open
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 6
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000780)='./file1\x00', 0x12040, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x101080, 0x0)
r2 = dup2(r1, r0)
open(&(0x7f0000000140)='./file1\x00', 0x424803, 0x1)
read(r2, &(0x7f0000000040)=""/240, 0xf0)
fchmod(r1, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 752
remove dir: /root/cephfs-client/dfs-0-238
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-239 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-239
receive_execute: 10, 19
receive_execute: 3, 18
receive_execute: 10, 18
receive_execute: 9, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1362, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 1362, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1362, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1362, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1362, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 460, pid 1362, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 460, flag collect 0
----- executor 3 signal number : 117
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 7889, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 19388, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7386, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1737
executor 0 server cover_cnt 1 output_pos_value 1741
----- executor 2 signal number : 5628
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 526
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 7512
time breakdown 1: 28, 9, 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 10, 0
time breakdown 3: 29, 7, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 28
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 6 replies
before receive testcase: 0 0
2023/03/28 10:37:17 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 1 replies
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 1737 signal and 0 cover from userspace component
time breakdown 2: 21, 11, 0
before receive testcase: 0 0
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 4 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 5628 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 526 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2343 link link
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2374 mkdirat mkdirat
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2814 rmdir rmdir
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 10
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_upper(&(0x7f0000000200)='./file0\x00', &(0x7f0000000280), &(0x7f0000000600)=ANY=[@ANYBLOB="00fb9c0406e8d30b8ba75bf69e5eacabbb9a9e3e90790eb582d92136eee3abb7ea8000000039dafcffffff7f0000000019fe2cf8b2a6bba0f248dfb2ffdb74995bfc7c2cac006f37b37caf8c902680e4d3c5d72f97676d9291bad0c64c8693246ddccf03afbece30947400273aac281044622f226a7ac81265c361e6875238dd44f3acd1a3f743b3bf76000000000000000000000000000014bb1b635a804cadae1838bcd1af2940214852458ace64d4f7bd8a2ea182b574b3e33eb3eafae0a592071d9d40ec6cd69cedd0e8a19cef1d194eb1595ec5060a61b9dc4a6607735bfdabed0a60a56c5ac657adc92556cafd008a6c049aa3f18b57436f2887626d29b0362193b96a1528afac285774a437506c46b1834a6d2a97e6c4d96cbe47ff2535380c0a416431514eef"], 0x9c, 0x0)
mkdirat(0xffffffffffffffff, &(0x7f0000000480)='./file0\x00', 0xa0)
mkdir(&(0x7f0000000140)='./file0\x00', 0x0)
symlink(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000240)='./file0/file0\x00')
lsetxattr$security_capability(&(0x7f0000000000)='./file2\x00', &(0x7f0000000100), &(0x7f0000000180)=@v3={0x3000000, [{0x8000, 0x5}, {0x5, 0xa265}]}, 0x18, 0x1)
lsetxattr$security_capability(&(0x7f0000000040)='./file0/file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v3={0x3000000, [{0x17, 0xffff}, {0x800, 0xfffffffd}], 0xffffffffffffffff}, 0x18, 0x2)
link(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000440)='./file0/file0\x00')
symlinkat(&(0x7f0000000300)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f0000000340)='./file1\x00')
rename(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)='./file1\x00')
rmdir(&(0x7f0000000380)='./file0/file1\x00')
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2560
remove dir: /root/cephfs-client/dfs-0-239
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-240 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-240
receive_execute: 6, 10
receive_execute: 3, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
receive_execute: 3, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 3, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 545, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 3 signal number : 40
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 162, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 256, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 794, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 794, flag collect 0
----- executor 3 signal number : 88
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 1365, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 7, 0
execute_one time: 1, 16
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 866, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 15801, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 23587, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1003
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 13, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 6838
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 16, 18, 0
before receive testcase: 0 1
----- executor 2 signal number : 661
----- executor 2 executes write_coverage_signal cov->size 28442, flag collect 0
time breakdown 1: 14, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 4867
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 14873
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 36
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [CLIENT] executor 3 has 10 replies
2023/03/28 10:37:17 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
time breakdown 2: 13, 25, 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1003 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 6838 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 661 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4867 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 171 dup2 dup2
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 258 getdents getdents
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2462 openat openat
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 8
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
getdents(0xffffffffffffffff, &(0x7f0000000b80)=""/4096, 0x1000)
open$dir(&(0x7f0000000740)='./file0\x00', 0x40, 0x0)
r0 = open(&(0x7f00000009c0)='./file0\x00', 0x582, 0x0)
write$binfmt_elf32(r0, &(0x7f0000000b00)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38}, [{}]}, 0x58)
dup2(r0, r0)
ftruncate(r0, 0x80)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x2c)
openat(r1, &(0x7f0000000040)='./file0\x00', 0x119400, 0x6)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2232
remove dir: /root/cephfs-client/dfs-0-240
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-241 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-241
receive_execute: 10, 13
receive_execute: 3, 12
receive_execute: 9, 12
receive_execute: 9, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1369, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1369, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1369, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 1369, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 346
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1369, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 147, pid 1369, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 147, flag collect 0
----- executor 3 signal number : 60
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1369, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1369, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
executor 2 write_server_output
2023/03/28 10:37:17 for select break: 1
executor 0 write_server_output
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 13309, flag collect 0
----- executor 2 signal number : 1393
----- executor 2 executes write_coverage_signal cov->size 12974, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 929
----- executor 2 executes write_coverage_signal cov->size 20918, flag collect 0
time breakdown 0: 21, 13, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 13, 0
before receive testcase: 0 0
time breakdown 3: 23, 10, 0
before receive testcase: 0 1
----- executor 2 signal number : 6329
----- executor 2 executes write_coverage_signal cov->size 3157, flag collect 0
----- executor 2 signal number : 363
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1980
----- executor 2 executes write_coverage_signal cov->size 17178, flag collect 0
----- executor 2 signal number : 4195
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 15277
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 33
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 8 replies
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1393 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 929 signal and 0 cover from userspace component
time breakdown 2: 15, 20, 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 6329 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 363 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1980 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4195 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- mutateArg()
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 20
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x70001, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x100000001, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0x5})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3656
remove dir: /root/cephfs-client/dfs-0-241
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-242 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-242
receive_execute: 3, 9
receive_execute: 11, 9
receive_execute: 8, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 10, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 1372, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 1372, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 49
----- completed 14
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 233, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 233, flag collect 0
----- executor 3 signal number : 62
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 1372, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 1372, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 349, pid 1372, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 349, flag collect 0
----- executor 3 signal number : 24
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
  423.444618] ==================================================================
[  423.445385] BUG: KASAN: use-after-free in ceph_fl_release_lock+0x87/0x160
[  423.445981] Write of size 4 at addr ff1100010f1bfd9c by task syz-executor/1372
[  423.446626] 
[  423.446743] CPU: 0 PID: 1372 Comm: syz-executor Not tainted 5.15.0+ #9
[  423.447233] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[  423.448020] Call Trace:
[  423.448223]  dump_stack_lvl+0x34/0x44
[  423.448522]  print_address_description.constprop.0+0x21/0x140
[  423.448999]  ? ceph_fl_release_lock+0x87/0x160
[  423.449306]  ? ceph_fl_release_lock+0x87/0x160
[  423.449572]  kasan_report.cold+0x7f/0x11b
[  423.449812]  ? ceph_fl_release_lock+0x87/0x160
[  423.450107]  kasan_check_range+0x17c/0x1e0
[  423.450386]  ceph_fl_release_lock+0x87/0x160
[  423.450642]  locks_release_private+0x5a/0xb0
[  423.450899]  locks_dispose_list+0x31/0x50
[  423.451149]  posix_lock_inode+0x13e/0x7f0
[  423.451394]  locks_lock_inode_wait+0xb4/0x180
[  423.451663]  ? file_update_time+0x5d/0x120
[  423.451954]  ceph_lock+0x3a1/0x550
[  423.452185]  locks_remove_posix+0xc6/0x150
[  423.452441]  filp_close+0x4c/0x60
[  423.452681]  __x64_sys_close+0x9/0x40
[  423.453029]  do_syscall_64+0x38/0x90
[  423.453370]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[  423.453853] RIP: 0033:0x7ffff732bd5b
[  423.454157] Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2f 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
[  423.455712] RSP: 002b:00007fffffffe220 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
[  423.456360] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff732bd5b
[  423.456989] RDX: 0000018727cb268f RSI: 0000000000000000 RDI: 0000000000000003
[  423.457616] RBP: 00007fffffffe250 R08: 0000000000000000 R09: 00000000000b8ed0
[  423.458244] R10: 000000006422c35d R11: 0000000000000293 R12: 00007ffff732e270
[  423.458873] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[  423.459497] 
[  423.459639] Allocated by task 1374:
[  423.459982] 
[  423.460124] Freed by task 1374:
[  423.460470] 
[  423.460628] The buggy address belongs to the object at ff1100010f1bfd80
[  423.460628]  which belongs to the cache ceph_file_info of size 32
[  423.461876] The buggy address is located 28 bytes inside of
[  423.461876]  32-byte region [ff1100010f1bfd80, ff1100010f1bfda0)
[  423.462946] The buggy address belongs to the page:
[  423.463360] 
[  423.463502] Memory state around the buggy address:
[  423.463868]  ff1100010f1bfc80: fc fc fa fb fb fb fc fc fa fb fb fb fc fc fa fb
[  423.464409]  ff1100010f1bfd00: fb fb fc fc 00 00 00 00 fc fc 00 00 00 00 fc fc
[  423.464833] >ff1100010f1bfd80: fa fb fb fb fc fc fb fb fb fb fc fc fa fb fb fb
[  423.465356]                             ^
[  423.465701]  ff1100010f1bfe00: fc fc fa fb fb fb fc fc fb fb fb fb fc fc fb fb
[  423.466320]  ff1100010f1bfe80: fb fb fc fc fb fb fb fb fc fc fb fb fb fb fc fc
[  423.466921] ==================================================================
executor 3, execute_one inner time: 8, 2, 25
execute_one time: 1, 35
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
executor 1 write_server_output
----- executor 0 signal number : 167
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
executor 0 server cover_cnt 1 output_pos_value 171
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 24387, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 19, 37, 0
before receive testcase: 0 0
----- executor 2 signal number : 1041
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 20, 37, 0
before receive testcase: 0 1
----- executor 2 signal number : 7274
----- executor 2 executes write_coverage_signal cov->size 3724, flag collect 0
time breakdown 1: 17, 37, 0
before receive testcase: 0 0
----- executor 2 signal number : 383
----- executor 2 executes write_coverage_signal cov->size 27742, flag collect 0
----- executor 2 signal number : 1959
----- executor 2 executes write_coverage_signal cov->size 17002, flag collect 0
----- executor 2 signal number : 4043
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 16187
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 51
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 20 replies
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 0 has 1 replies
2023/03/28 10:37:17 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 167 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1041 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 7274 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 383 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1959 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4043 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
time breakdown 2: 12, 43, 0
before receive testcase: 0 0
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 2
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
setxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='\x96,&\\$\xd8#\x00', 0x8, 0x2)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 392
remove dir: /root/cephfs-client/dfs-0-242
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-243 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-243
receive_execute: 10, 7
receive_execute: 9, 8
receive_execute: 3, 8
receive_execute: 9, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 511, pid 1376, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 293, pid 1376, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 293, flag collect 0
----- executor 3 signal number : 142
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 1, 9
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
executor 1 write_server_output
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 172, flag collect 0
----- executor 0 signal number : 62
executor 0 server cover_cnt 3 output_pos_value 359
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 2989, flag collect 0
----- executor 2 signal number : 1163
----- executor 2 executes write_coverage_signal cov->size 10003, flag collect 0
----- executor 2 signal number : 4451
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 12, 0
----- executor 2 signal number : 518
executor 2 server cover_cnt 4 output_pos_value 6205
before receive testcase: 0 0
time breakdown 3: 17, 11, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 13, 0
before receive testcase: 0 0
2023/03/28 10:37:17 for select break: 1
2023/03/28 10:37:17 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:17 wg wait finish
2023/03/28 10:37:17 ------ all executors finish execution
2023/03/28 10:37:17 exec time: 21
2023/03/28 10:37:17 ----- PS len: 4
2023/03/28 10:37:17 [CLIENT] executor 3 has 2 replies
2023/03/28 10:37:17 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:17 fuzzer receive 142 signal and 0 cover from executor 3
2023/03/28 10:37:17 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:17 [SERVER] executor 2 has 4 replies
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
time breakdown 2: 11, 14, 0
2023/03/28 10:37:17 [SERVER] executor 0 has 3 replies
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 1163 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 4451 signal and 0 cover from userspace component
2023/03/28 10:37:17 ------- fuzzer executor 2 receive 518 signal and 0 cover from userspace component
2023/03/28 10:37:17 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:17 ----- no new client coverage: false, true
2023/03/28 10:37:17 mutate testcase with failures
2023/03/28 10:37:17 ----- insertCall()
2023/03/28 10:37:17 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/28 10:37:17 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:17 prog length: 3
2023/03/28 10:37:17 HasCrashFail:false HasNetFail:false
10:37:17 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000040)=@known='user.incfs.id\x00', 0x0, 0x0)
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)=@random={'osx.', 'user.incfs.id\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 552
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-243
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-244 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-244
receive_execute: 5, 44
receive_execute: 1, 45
receive_execute: 2, 45
receive_execute: 3, 45
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 1378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 1378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4252, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 12234, flag collect 0
time breakdown 3: 49, 5, 0
before receive testcase: 0 1
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 48, 6, 0
----- executor 2 signal number : 4954
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 2 signal number : 279
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 530
time breakdown 0: 47, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7101
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 53
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:18 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
time breakdown 2: 46, 8, 0
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 4954 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 279 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 122 chown chown
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 3765 symlinkat symlinkat
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 7
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000011c0)='./file1\x00', 0x124c1, 0x0)
symlinkat(&(0x7f0000000080)='./file1\x00', r0, &(0x7f00000000c0)='./file1\x00')
r1 = open(&(0x7f0000000040)='./file1\x00', 0x40301, 0x0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x161801, 0x190)
write$binfmt_aout(r0, &(0x7f00000002c0)=ANY=[@ANYBLOB="002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004fa67b6e033c7ee7000000000000000000000000000000000000000000000000000000000000000000000000000081000000000000000000000000000000000000000000000000000005000000009de80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057be641b7bdd747de0d914777a342b4b6235d6a580a87c6ea8843b40c574da40f49ae923000000000000", @ANYRESDEC=0x0, @ANYBLOB="9fcaab06ee0d69dd12429b9a7d7ba9ff1b0b925a5d2b276e8377dc1114ab94"], 0x120)
lseek(r1, 0x0, 0x3)
chown(&(0x7f0000000000)='./file1\x00', 0xee01, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1440
remove dir: /root/cephfs-client/dfs-0-244
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-245 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-245
receive_execute: 6, 17
receive_execute: 5, 16
receive_execute: 4, 17
receive_execute: 3, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 1381, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1381, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1321, pid 1381, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1321, flag collect 0
----- executor 3 signal number : 350
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 1381, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1381, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 1381, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 248, pid 1381, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 248, flag collect 0
----- executor 3 signal number : 51
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 5, 8
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 14, 0
executor 2 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 12536, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 22144, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 16, 0
----- executor 2 signal number : 1026
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 7829
----- executor 2 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 2 signal number : 323
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2135
----- executor 2 executes write_coverage_signal cov->size 10804, flag collect 0
----- executor 2 signal number : 2866
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 15655
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 37
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 7 replies
2023/03/28 10:37:18 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 350 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 51 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1026 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 7829 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 323 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 2135 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 2866 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 20, 20, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 8
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
setxattr$system_posix_acl(&(0x7f0000000080)='./file1\x00', &(0x7f0000000100)='system.posix_acl_default\x00', &(0x7f0000000140), 0x24, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
dup2(r0, 0xffffffffffffffff)
r2 = openat(r1, &(0x7f0000000000)='./file1\x00', 0x100, 0x0)
r3 = dup2(r2, r2)
mkdirat(r3, &(0x7f0000000280)='./file0\x00', 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1728
remove dir: /root/cephfs-client/dfs-0-245
time breakdown 0: 21, 16, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-246 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-246
receive_execute: 9, 8
receive_execute: 7, 8
receive_execute: 2, 9
receive_execute: 7, 8
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 137
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 111
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1384, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 6, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 6114, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 0 server cover_cnt 1 output_pos_value 23
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1270
----- executor 2 executes write_coverage_signal cov->size 16219, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 5200
----- executor 2 executes write_coverage_signal cov->size 2001, flag collect 0
----- executor 2 signal number : 308
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
----- executor 2 signal number : 536
executor 2 server cover_cnt 5 output_pos_value 7390
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 17
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 8 replies
2023/03/28 10:37:18 [SERVER] executor 0 has 1 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 85 signal and 0 cover from executor 3
time breakdown 2: 11, 8, 0
2023/03/28 10:37:18 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1270 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 5200 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 308 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- mutateArg()
time breakdown 1: 15, 8, 0
before receive testcase: 0 0
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 3967 truncate truncate
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2462 openat openat
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 20
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
r0 = open$dir(0x0, 0x0, 0x100)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
r1 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r2 = open(&(0x7f0000000140)='./file4\x00', 0x100, 0x101)
stat(&(0x7f00000003c0)='./file2/file0\x00', &(0x7f00000004c0))
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000180)='./file4\x00')
rename(&(0x7f0000000380)='./file0\x00', &(0x7f0000000400)='./file2/file0\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
openat(r2, &(0x7f0000000680)='./file1\x00', 0x1, 0x12)
link(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000240)='./file1\x00')
lsetxattr$security_selinux(&(0x7f00000005c0)='./file2/file0\x00', &(0x7f0000000600), &(0x7f0000000640)='system_u:object_r:framebuf_device_t:s0\x00', 0x27, 0x1)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
truncate(&(0x7f0000000580)='./file2/file0\x00', 0x1f)
mkdir(&(0x7f0000000300)='.\x00', 0x0)
fcntl$dupfd(r1, 0x406, r1)
openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x40103, 0x4)
open$dir(&(0x7f0000000540)='./file2/file0\x00', 0x200400, 0x40)
fstat(r0, &(0x7f0000000080))
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000100)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2896
remove dir: /root/cephfs-client/dfs-0-246
remove dir time 14
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-247 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-247
receive_execute: 5, 16
receive_execute: 4, 15
receive_execute: 3, 15
receive_execute: 5, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 91
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 860, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 860, flag collect 0
----- executor 3 signal number : 83
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 699, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 3 signal number : 57
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 87
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 594, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 606, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 606, flag collect 0
----- executor 3 signal number : 112
----- completed 14
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 162, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 1387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 23, 0
execute_one time: 0, 47
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 51, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2220, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 59
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 52, 0
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 875
executor 0 server cover_cnt 3 output_pos_value 1395
time breakdown 0: 20, 54, 0
before receive testcase: 0 1
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1128
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7634
----- executor 2 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 2 signal number : 111
----- executor 2 executes write_coverage_signal cov->size 8355, flag collect 0
----- executor 2 signal number : 501
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 896
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6443
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 9 output_pos_value 18207
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 74
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 20 replies
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 57 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 3 replies
2023/03/28 10:37:18 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 0 receive 875 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 9 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1128 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 7634 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 111 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 501 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 896 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 6443 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
time breakdown 2: 18, 58, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 4
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000100)="74d0847d304039481ce4c82e14988deb5c58601bef9539caa7d5a10bb6829acf18c650659fef4aac6fddf085fa94b0ef5a246779109cdecaba267162f2aaee3f79aa41574027e3e25ddc25fd6fa3b343", 0x50, 0x0)
rename(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 736
remove dir: /root/cephfs-client/dfs-0-247
remove dir time 27
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-248 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-248
receive_execute: 10, 29
receive_execute: 9, 28
receive_execute: 8, 28
receive_execute: 4, 28
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1391, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1391, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 324, pid 1391, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 690, pid 1391, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 690, flag collect 0
----- executor 3 signal number : 64
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 39, 8, 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 37, 9, 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
before receive testcase: 0 0
time breakdown 0: 36, 10, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10027, flag collect 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 20330, flag collect 0
----- executor 2 signal number : 1005
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 7047
----- executor 2 executes write_coverage_signal cov->size 2498, flag collect 0
----- executor 2 signal number : 341
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 704
----- executor 2 executes write_coverage_signal cov->size 27534, flag collect 0
----- executor 2 signal number : 5176
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 15747
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 44
2023/03/28 10:37:18 ----- PS len: 4
time breakdown 2: 32, 15, 0
2023/03/28 10:37:18 [CLIENT] executor 3 has 4 replies
2023/03/28 10:37:18 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 2 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:37:18 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1005 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 7047 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 341 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 704 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 5176 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 4
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='./file0\x00', 0x9ffbe5a7179b56d8, 0x20)
chown(&(0x7f0000000280)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), 0x0, 0x0, 0x0)
llistxattr(&(0x7f0000000300)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 656
remove dir: /root/cephfs-client/dfs-0-248
remove dir time 12
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-249 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-249
receive_execute: 10, 14
receive_execute: 9, 13
receive_execute: 4, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
receive_execute: 10, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 622, pid 1394, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 721, pid 1394, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 721, flag collect 0
----- executor 3 signal number : 233
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 1394, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 67
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 471, pid 1394, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 3 signal number : 22
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 5, 0
execute_one time: 0, 9
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 24, 10, 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 780, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 17785, flag collect 0
----- executor 2 signal number : 1311
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 6733
----- executor 2 executes write_coverage_signal cov->size 2013, flag collect 0
----- executor 2 signal number : 306
----- executor 2 executes write_coverage_signal cov->size 30872, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 14, 0
----- executor 2 signal number : 674
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 9100
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 29
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 4 replies
2023/03/28 10:37:18 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
time breakdown 2: 17, 16, 0
2023/03/28 10:37:18 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1311 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 6733 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 674 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 233 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 22 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2462 openat openat
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2782 readv readv
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 8
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x1, 0x100)
readv(r0, &(0x7f00000002c0)=[{&(0x7f0000000100)=""/201, 0xc9}, {&(0x7f0000000200)=""/186, 0xba}], 0x2)
fcntl$lock(r0, 0x5, &(0x7f0000000300)={0x2, 0x9, 0xfffffffffffffffb, 0x8})
r1 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
r2 = dup2(r1, r1)
openat(r2, &(0x7f0000000000)='./file0\x00', 0x511040, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x3)
lseek(r1, 0x0, 0x4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1440
remove dir: /root/cephfs-client/dfs-0-249
remove dir time 22
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-250 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-250
receive_execute: 7, 25
receive_execute: 2, 25
receive_execute: 4, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 653, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 653, flag collect 0
----- executor 3 signal number : 224
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 169
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 1397, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 8
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 339, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4763, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 11654, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1080
----- executor 2 executes write_coverage_signal cov->size 24951, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 29, 7, 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 32, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 6419
----- executor 2 executes write_coverage_signal cov->size 24926, flag collect 0
----- executor 2 signal number : 1854
----- executor 2 executes write_coverage_signal cov->size 12762, flag collect 0
time breakdown 1: 29, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 3183
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 13212
before receive testcase: 0 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 37
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 8 replies
2023/03/28 10:37:18 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 224 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 7 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1080 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 6419 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1854 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3183 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 8 signal and 0 cover from executor 3
time breakdown 2: 27, 12, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 220 flock flock
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:18 ----- splice()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 7
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x200000, 0x1f1)
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x0)
getdents64(r0, &(0x7f0000000040)=""/80, 0x50)
r1 = open(&(0x7f00000000c0)='./file0\x00', 0x202, 0x0)
flock(r1, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-250
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-251 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-251
receive_execute: 8, 8
receive_execute: 9, 8
receive_execute: 3, 8
receive_execute: 8, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 1400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 64
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1400, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10708, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 12656, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 9, 0
----- executor 2 signal number : 906
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 27790, flag collect 0
time breakdown 3: 17, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6613
----- executor 2 executes write_coverage_signal cov->size 2439, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 19301, flag collect 0
time breakdown 1: 16, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 816
----- executor 2 executes write_coverage_signal cov->size 18639, flag collect 0
----- executor 2 signal number : 3821
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 13966
time breakdown 2: 11, 13, 0
before receive testcase: 0 1
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 21
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 7 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:18 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 906 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 6613 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 816 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3821 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 3
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00', 0x0)
lsetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.redirect\x00', 0x0, 0x0, 0x0)
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=@random={'user.', 'trusted.overlay.redirect\x00'}, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 656
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-251
receive_execute: 5, 29
receive_execute: 3, 28
receive_execute: 6, 29
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
remove dir time 27
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-252 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-252
receive_execute: 7, 29
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 1403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 167
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 1403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 23
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 2, 3
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4174, flag collect 0
----- executor 2 signal number : 1264
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 11398, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 34, 8, 0
----- executor 2 signal number : 4696
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 7119, flag collect 0
----- executor 2 signal number : 525
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 6802
before receive testcase: 0 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 31, 9, 0
before receive testcase: 0 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 39
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:18 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 167 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 4696 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 525 signal and 0 cover from userspace component
time breakdown 3: 36, 6, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 214 fcntl$setsig fcntl$setsig
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 3
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
fcntl$setsig(0xffffffffffffffff, 0xa, 0x31)
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x848440, 0x0)
flock(r0, 0xc)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-252
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 35, 10, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-253 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-253
receive_execute: 5, 16
receive_execute: 2, 17
receive_execute: 4, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 2, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 619, pid 1406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9, pid 1406, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11654, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 4895
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 531
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7014
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 25
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 3 replies
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 2 has 5 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 4895 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
time breakdown 2: 19, 8, 0
before receive testcase: 0 0
time breakdown 3: 21, 5, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 7
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
write$binfmt_script(r0, &(0x7f0000000200)={'#! ', './file1', [{0x20, '@::,'}, {0x20, '$}'}, {0x20, '&#'}, {0x20, '/$'}, {0x20, ','}, {0x20, '%-\\'}], 0xa, "792d9d47396e0f5d4fc696622f9402c49657940c38d52b0c6274cd1315b3f4ab4648650e73aa79be3a7772aedc20df39550f427d5374e6cce933d9add4f9c189763ea8abfcc1d0d70943010f865aedc87ea5dfbcb0345cdc21dda03ad18b9a1fbe1f62d45050e8f6ff7bb193a7cadbed572aabd90b01ec2a31cdf47b7caafbb57f9b88a0d3b70f4d4eef8fd0a39b407e3868484adef607c7a685c5564298069361d2642a3ddf28c5a008404561c83ece232d0b11484c5a90c275ed85f47cddb9a00dfb6232d332406b4f84551556ee7e92750ef9f83f7c3f875ec608452a170d6c5f073b627334efcb08f80f9cff2786b30004ce"}, 0x113)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file1\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
getdents64(r1, &(0x7f0000001540)=""/78, 0x4e)
openat(r1, &(0x7f00000001c0)='./file1\x00', 0x240, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1928
remove dir: /root/cephfs-client/dfs-0-253
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-254 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-254
receive_execute: 5, 13
receive_execute: 2, 13
receive_execute: 3, 12
receive_execute: 4, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 1409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 339, pid 1409, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 339, flag collect 0
----- executor 3 signal number : 109
----- completed 6
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 704, pid 1409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 3 signal number : 92
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 13, 4, 0
execute_one time: 0, 17
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 18, 18, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 16408, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1396
----- executor 2 executes write_coverage_signal cov->size 23844, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 15, 20, 0
before receive testcase: 0 0
----- executor 2 signal number : 981
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 21, 0
----- executor 2 signal number : 7854
----- executor 2 executes write_coverage_signal cov->size 2087, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 327
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1243
----- executor 2 executes write_coverage_signal cov->size 24882, flag collect 0
----- executor 2 signal number : 4809
----- executor 2 executes write_coverage_signal cov->size 7469, flag collect 0
----- executor 2 signal number : 575
executor 2 server cover_cnt 8 output_pos_value 17270
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 38
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 7 replies
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:18 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 109 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 92 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1396 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 981 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 7854 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 327 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1243 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 4809 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 575 signal and 0 cover from userspace component
time breakdown 2: 15, 26, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 4
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
open(&(0x7f0000000480)='./file2\x00', 0x442, 0x0)
r0 = open$dir(&(0x7f0000000000)='./file2\x00', 0x0, 0x8)
r1 = dup2(r0, r0)
flock(r1, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/cephfs-client/dfs-0-254
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 19
-----finish removing dir
receive_execute: 6, 21
receive_execute: 3, 20
receive_execute: 10, 20
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-255 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-255
receive_execute: 11, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1412, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1412, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1412, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 1412, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 31, 8, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 7470, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 18598, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 8, 0
----- executor 2 signal number : 5941
----- executor 2 executes write_coverage_signal cov->size 1374, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 12279, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 616
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
time breakdown 0: 30, 9, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 2 server cover_cnt 6 output_pos_value 8224
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 31
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 4 replies
2023/03/28 10:37:18 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 6 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 5941 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 616 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 23, 11, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/28 10:37:18 ----- mutateArg()
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2780 readlink readlink
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2462 openat openat
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 13
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x48840, 0x0)
r1 = dup(r0)
getdents(r1, &(0x7f0000000380)=""/4096, 0x1000)
chmod(&(0x7f0000000100)='./file1\x00', 0x168)
truncate(&(0x7f0000000340)='./file1\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)={'L+', 0x100000001}, 0x16, 0x3)
fsync(r0)
openat(r1, &(0x7f0000001540)='./file1\x00', 0x2001, 0x101)
readlink(&(0x7f0000000140)='\x00', &(0x7f0000000240)=""/214, 0xd6)
setxattr$incfs_metadata(&(0x7f00000013c0)='./file1\x00', &(0x7f0000001400), &(0x7f0000001440)="1e4f23afe9988e804404a11ef0479538c2f108aa3ff3327acddd052e3fd81fc2de5cbc8060fb6d3563401255260aa16eed3ff4dfd739278617b9f171e6d00a5df2e3e64c8a06ffe433e3f392634e2c09cb1d49b03425fae2e9e4b47ec638a5c824fe56718aa4022ea77aada97923427a59591e4853ef5abd0949d19014f3edbe3db32433a7816970d2265bbecdc7b52c0fe0ed43ec2c23330584c9bf7a996162c755d93b86ea2c44b508afb79c4ce1c3ee54fa2e68a0e67ccf3a635e8ff3ae0e187fa27c666b2ebf773f8b2dd63cd04c051571c6e5d7", 0xd6, 0x2)
fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
open$dir(&(0x7f0000001380)='./file1\x00', 0x101400, 0x18c)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file1\x00', 0x8, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2280
remove dir: /root/cephfs-client/dfs-0-255
remove dir time 14
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-256 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-256
receive_execute: 4, 17
receive_execute: 6, 16
receive_execute: 6, 16
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
receive_execute: 7, 17
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 111
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 280, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 280, flag collect 0
----- executor 3 signal number : 82
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 213, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 213, flag collect 0
----- executor 3 signal number : 58
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 1415, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 187
----- completed 7
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1415, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1415, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 574, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 574, flag collect 0
----- executor 3 signal number : 81
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 517, pid 1415, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 517, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 17, 2, 0
execute_one time: 1, 19
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 24, 21, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10283, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 23752, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1056
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 23, 0
before receive testcase: 0 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7354
----- executor 2 executes write_coverage_signal cov->size 3410, flag collect 0
time breakdown 0: 22, 25, 0
before receive testcase: 0 0
----- executor 2 signal number : 383
----- executor 2 executes write_coverage_signal cov->size 20010, flag collect 0
----- executor 2 signal number : 1675
----- executor 2 executes write_coverage_signal cov->size 11854, flag collect 0
----- executor 2 signal number : 2815
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 14761
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 43
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 13 replies
2023/03/28 10:37:18 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 8 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1056 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 7354 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 383 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1675 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 2815 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 21, 26, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 187 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 2459 open$dir open$dir
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 9
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000040)='./file4\x00', 0x900, 0x2)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1312
remove dir: /root/cephfs-client/dfs-0-256
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-257 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-257
receive_execute: 9, 9
receive_execute: 4, 9
receive_execute: 6, 9
receive_execute: 7, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 460, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 460, flag collect 0
----- executor 3 signal number : 88
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 33
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 507, pid 1419, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 27, 7, 0
execute_one time: 1, 34
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 18, 37, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1698, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 30073, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 37, 0
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1113
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 39, 0
before receive testcase: 0 0
----- executor 2 signal number : 7626
----- executor 2 executes write_coverage_signal cov->size 278, flag collect 0
----- executor 2 signal number : 119
----- executor 2 executes write_coverage_signal cov->size 6560, flag collect 0
----- executor 2 signal number : 460
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 788
----- executor 2 executes write_coverage_signal cov->size 117, flag collect 0
----- executor 2 signal number : 17
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2578
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6694
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9576, flag collect 0
----- executor 2 signal number : 661
executor 2 server cover_cnt 12 output_pos_value 21567
2023/03/28 10:37:18 for select break: 1
2023/03/28 10:37:18 --------- executor 2 receive reply, reply.done 1
2023/03/28 10:37:18 wg wait finish
2023/03/28 10:37:18 ------ all executors finish execution
2023/03/28 10:37:18 exec time: 60
2023/03/28 10:37:18 ----- PS len: 4
2023/03/28 10:37:18 [CLIENT] executor 3 has 9 replies
2023/03/28 10:37:18 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 0 has 0 replies
2023/03/28 10:37:18 [SERVER] executor 1 has 0 replies
2023/03/28 10:37:18 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/28 10:37:18 [SERVER] executor 2 has 12 replies
2023/03/28 10:37:18 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/28 10:37:18 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/28 10:37:18 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 1113 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 7626 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 119 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 460 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 788 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 17 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 2578 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 6694 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 10:37:18 ------- fuzzer executor 2 receive 661 signal and 0 cover from userspace component
time breakdown 2: 13, 50, 0
before receive testcase: 0 0
2023/03/28 10:37:18 fsMds: [map[] map[] map[] map[]]
2023/03/28 10:37:18 ----- no new client coverage: false, true
2023/03/28 10:37:18 mutate testcase with failures
2023/03/28 10:37:18 ----- insertCall()
2023/03/28 10:37:18 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/28 10:37:18 HasCrashFail: false, .HasNetFail: false
2023/03/28 10:37:18 prog length: 9
2023/03/28 10:37:18 HasCrashFail:false HasNetFail:false
10:37:18 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
flock(r0, 0x1)
fcntl$lock(r0, 0x5, &(0x7f0000000040)={0x2, 0x1, 0x8, 0xfffffffffffffff9})
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
flock(r1, 0x6)
dup2(r1, r1)
r2 = dup(r1)
dup2(r0, r2)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1424
remove dir: /root/cephfs-client/dfs-0-257
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-258 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-258
receive_execute: 5, 25
receive_execute: 17, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
e
VM DIAGNOSIS:
10:37:17  Registers:
info registers vcpu 0
RAX=ffffffff81d3b3f0 RBX=0000000000000000 RCX=0000000000000000 RDX=ff1100026562e7e0
RSI=ffffffff82607e30 RDI=00000000001cd812 RBP=ffffffff82619280 RSP=ffffffff82607ea0
R8 =00000000001cd811 R9 =ff110001002b7e28 R10=0000000000000008 R11=0000000000000001
R12=ffffffff82619280 R13=ffffffff82619280 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81d3b3fb RFL=00000206 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fffee440000 CR3=00000001212f8001 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=000000000000ff000000000000000000 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffff0000000000000000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=0000000000000000 R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032fa RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=0000000121d30005 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000000f20000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
