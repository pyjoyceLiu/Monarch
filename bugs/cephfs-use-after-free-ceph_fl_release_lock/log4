&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000200)={'L+', 0xb8f}, 0x16, 0x1)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
unlink(&(0x7f0000000040)='./file0\x00')
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x200, 0xc3d00cddcb76eb8a)
fstat(r1, &(0x7f0000000180))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1056
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-399
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-400 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-400
receive_execute: 9, 8
receive_execute: 1, 8
receive_execute: 7, 8
receive_execute: 6, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 12
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 487, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 487, flag collect 0
----- executor 3 signal number : 25
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1925, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 18, 0
execute_one time: 0, 30
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 59
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1920, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1446
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1096
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 810
executor 0 server cover_cnt 3 output_pos_value 1330
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 34, 0
before receive testcase: 0 0
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 35, 0
before receive testcase: 0 0
time breakdown 3: 17, 31, 0
before receive testcase: 0 0
----- executor 2 signal number : 8061
----- executor 2 executes write_coverage_signal cov->size 30817, flag collect 0
----- executor 2 signal number : 433
----- executor 2 executes write_coverage_signal cov->size 3151, flag collect 0
----- executor 2 signal number : 374
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7357
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1721
executor 2 server cover_cnt 9 output_pos_value 20587
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:56 wg wait finish
2023/03/27 22:34:56 ------ all executors finish execution
2023/03/27 22:34:56 exec time: 48
2023/03/27 22:34:56 ----- PS len: 4
2023/03/27 22:34:56 [CLIENT] executor 3 has 7 replies
2023/03/27 22:34:56 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:34:56 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:56 [SERVER] executor 2 has 9 replies
2023/03/27 22:34:56 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:56 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 25 signal and 0 cover from executor 3
time breakdown 2: 9, 40, 0
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 1446 signal and 0 cover from userspace component
2023/03/27 22:34:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:56 [SERVER] executor 0 has 3 replies
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 1096 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 8061 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 0 receive 810 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 433 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 374 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 7357 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 1721 signal and 0 cover from userspace component
2023/03/27 22:34:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:56 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:56 ----- no new client coverage: false, true
2023/03/27 22:34:56 ----- enqueue testcases with server coveraged
2023/03/27 22:34:56 prog length: 7
2023/03/27 22:34:56 HasCrashFail:false HasNetFail:false
22:34:56 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000200)={'L+', 0xb8f}, 0x16, 0x1)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
unlink(&(0x7f0000000040)='./file0\x00')
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x200, 0xc3d00cddcb76eb8a)
fstat(r1, &(0x7f0000000180))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1056
remove dir: /root/cephfs-client/dfs-0-400
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-401 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-401
receive_execute: 14, 3
receive_execute: 7, 3
receive_execute: 12, 3
receive_execute: 13, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 1
----- executor 3 cover number : 453, signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 1
----- executor 3 cover number : 407, signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 1929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 1
----- executor 3 cover number : 373, signal number : 55
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 630, pid 1929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 630, flag collect 1
----- executor 3 cover number : 449, signal number : 56
----- completed 4
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 1929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 1
----- executor 3 cover number : 351, signal number : 29
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1929, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1929, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 25, 0
execute_one time: 1, 25
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 833, flag collect 1
----- executor 2 cover number : 64, signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28611, flag collect 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 28, 0
before receive testcase: 0 0
time breakdown 3: 17, 27, 0
before receive testcase: 0 0
----- executor 2 cover number : 1180, signal number : 1449
----- executor 2 executes write_coverage_signal cov->size 21043, flag collect 1
----- executor 2 cover number : 1051, signal number : 992
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 40, 0
before receive testcase: 0 1
----- executor 2 cover number : 5750, signal number : 8108
----- executor 2 executes write_coverage_signal cov->size 2107, flag collect 1
----- executor 2 cover number : 272, signal number : 342
----- executor 2 executes write_coverage_signal cov->size 23835, flag collect 1
----- executor 2 cover number : 5292, signal number : 5664
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1501, signal number : 1707
executor 2 server cover_cnt 8 output_pos_value 33471
time breakdown 2: 10, 56, 0
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/27 22:34:56 wg wait finish
2023/03/27 22:34:56 ------ all executors finish execution
2023/03/27 22:34:56 exec time: 61
2023/03/27 22:34:56 ----- PS len: 4
2023/03/27 22:34:56 [CLIENT] executor 3 has 7 replies
2023/03/27 22:34:56 fuzzer receive 478 signal and 453 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 198 signal and 407 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 55 signal and 373 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 56 signal and 449 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 29 signal and 351 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:56 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:56 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:56 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 67 signal and 64 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 1449 signal and 1180 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 992 signal and 1051 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 8108 signal and 5750 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 342 signal and 272 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 5664 signal and 5292 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/27 22:34:56 ------- fuzzer executor 2 receive 1707 signal and 1501 cover from userspace component
2023/03/27 22:34:56 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:56 prog length: 7
2023/03/27 22:34:56 HasCrashFail:false HasNetFail:false
22:34:56 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000200)={'L+', 0xb8f}, 0x16, 0x1)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
unlink(&(0x7f0000000040)='./file0\x00')
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x200, 0xc3d00cddcb76eb8a)
fstat(r1, &(0x7f0000000180))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1056
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-401
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-402 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-402
receive_execute: 9, 5
receive_execute: 38, 6
receive_execute: 36, 5
receive_execute: 25, 5
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 1931, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 1
----- executor 3 cover number : 453, signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1931, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 1
----- executor 3 cover number : 407, signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 1931, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 1
----- executor 3 cover number : 373, signal number : 55
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 1931, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 1
----- executor 3 cover number : 412, signal number : 12
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 487, pid 1931, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 487, flag collect 1
----- executor 3 cover number : 355, signal number : 25
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1931, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1931, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 12, 0
execute_one time: 0, 13
2023/03/27 22:34:56 for select break: 1
2023/03/27 22:34:56 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 890, flag collect 1
----- executor 2 cover number : 64, signal number : 67
----- executor 2 executes write_coverage_signal cov->size 27482, flag collect 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 30, 18, 0
before receive testcase: 0 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 44, 16, 0
before receive testcase: 0 0
----- executor 2 cover number : 1177, signal number : 1431
----- executor 2 executes write_coverage_signal cov->size 22917, flag collect 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 41, 18, 0
before receive testcase: 0 1
----- executor 2 cover number : 1078, signal number : 1041
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 5762, signal number : 8157
----- executor 2 executes write_coverage_signal cov->size 32283, flag collect 1
----- executor 2 cover number : 5518, signal number : 6718
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1501, signal number : 1776
executor 2 server cover_cnt 7 output_pos_value 34319
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 48
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 7 replies
2023/03/27 22:34:57 fuzzer receive 478 signal and 453 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 198 signal and 407 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 55 signal and 373 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 12 signal and 412 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 25 signal and 355 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 14, 43, 0
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 7 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 64 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1431 signal and 1177 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1041 signal and 1078 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 8157 signal and 5762 cover from userspace component
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 6718 signal and 5518 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1776 signal and 1501 cover from userspace component
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 prog length: 7
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000200)={'L+', 0xb8f}, 0x16, 0x1)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
unlink(&(0x7f0000000040)='./file0\x00')
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x200, 0xc3d00cddcb76eb8a)
fstat(r1, &(0x7f0000000180))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1056
remove dir: /root/cephfs-client/dfs-0-402
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-403 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-403
receive_execute: 30, 3
receive_execute: 4, 3
receive_execute: 29, 3
receive_execute: 28, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 1933, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 1
----- executor 3 cover number : 453, signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 1933, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 1
----- executor 3 cover number : 407, signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 1933, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 1
----- executor 3 cover number : 373, signal number : 55
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 1933, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 1
----- executor 3 cover number : 412, signal number : 12
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 487, pid 1933, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 487, flag collect 1
----- executor 3 cover number : 355, signal number : 25
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1933, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1933, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 15, 0
execute_one time: 1, 15
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 33, 19, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 959, flag collect 1
----- executor 2 cover number : 64, signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 32, 19, 0
before receive testcase: 0 1
----- executor 2 cover number : 1184, signal number : 1450
----- executor 2 executes write_coverage_signal cov->size 24885, flag collect 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 27, 0
before receive testcase: 0 0
----- executor 2 cover number : 1078, signal number : 1053
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 5750, signal number : 8132
----- executor 2 executes write_coverage_signal cov->size 3125, flag collect 1
----- executor 2 cover number : 274, signal number : 379
----- executor 2 executes write_coverage_signal cov->size 32234, flag collect 1
----- executor 2 cover number : 5534, signal number : 6828
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1501, signal number : 1802
executor 2 server cover_cnt 8 output_pos_value 35128
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 52
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 7 replies
2023/03/27 22:34:57 fuzzer receive 478 signal and 453 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 198 signal and 407 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 55 signal and 373 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 fuzzer receive 12 signal and 412 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 25 signal and 355 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 64 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1450 signal and 1184 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1053 signal and 1078 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 8132 signal and 5750 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 379 signal and 274 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 6828 signal and 5534 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1802 signal and 1501 cover from userspace component
time breakdown 2: 7, 49, 0
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- triage return due to unsuccessful execution extra
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2373 mkdir mkdir
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 3
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
stat(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140))
mkdir(&(0x7f0000000040)='./file1\x00', 0xa0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 344
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-403
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-404 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-404
receive_execute: 34, 5
receive_execute: 4, 5
receive_execute: 26, 5
receive_execute: 34, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 1935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 52
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11349, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4685
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 521
time breakdown 1: 39, 4, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 5, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6546
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 11
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 3 replies
2023/03/27 22:34:57 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 4 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
time breakdown 2: 9, 6, 0
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4685 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
time breakdown 3: 39, 4, 0
before receive testcase: 0 1
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 2
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file1\x00', 0x7ac01, 0x0)
lsetxattr$security_smack_transmute(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 440
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-404
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-405 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-405
receive_execute: 3, 15
receive_execute: 0, 15
receive_execute: 3, 15
receive_execute: 2, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 1938, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1938, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1956, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2159
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 4, 0
2023/03/27 22:34:57 for select break: 1
before receive testcase: 0 0
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 3 output_pos_value 3246
time breakdown 0: 17, 4, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 20
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 2 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 3 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
time breakdown 2: 15, 5, 0
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 2159 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 27 signal and 0 cover from executor 3
time breakdown 3: 18, 3, 0
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 ----- generateCall 3761 stat stat
2023/03/27 22:34:57 ----- generateCall 3761 stat stat
2023/03/27 22:34:57 ----- generateCall 248 fstat fstat
2023/03/27 22:34:57 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/27 22:34:57 ----- generateCall 170 dup dup
2023/03/27 22:34:57 ----- generateCall 194 fchmod fchmod
2023/03/27 22:34:57 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:34:57 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/27 22:34:57 ----- generateCall 170 dup dup
2023/03/27 22:34:57 ----- generateCall 2750 pwritev pwritev
2023/03/27 22:34:57 ----- generateCall 2723 pread64 pread64
2023/03/27 22:34:57 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/27 22:34:57 ----- generateCall 171 dup2 dup2
2023/03/27 22:34:57 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/27 22:34:57 ----- generateCall 2458 open open
2023/03/27 22:34:57 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/27 22:34:57 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:34:57 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:34:57 map[./file0:true ./file0/file0:true ./file1:true]
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 20
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040))
stat(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100))
r0 = openat(0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00', 0x20000, 0x8a)
fstat(r0, &(0x7f00000001c0))
fcntl$F_SET_RW_HINT(r0, 0x40c, &(0x7f0000000240))
r1 = dup(r0)
fchmod(r1, 0x18f)
r2 = open$dir(&(0x7f0000000280)='./file0/file0\x00', 0x40000, 0x131)
lsetxattr$security_evm(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)=@v2={0x3, 0x2, 0xd, 0x100, 0x7c, "1c2dc421d1ae2bf17477cf1ee0b64d2460f464e527bad898fffffe506c7d39036e9bd2c3fd557d986c655cd1274c052c1cd82d6902c4e9db7b164a69c2ffa5f153e7870391a62b324285e9faba1a11cf459650f55cdd469eba1409b04cf5e33f61b988fa86ca435679ce5c886da7f1f260867c580b1a14ce66430233"}, 0x85, 0x0)
r3 = dup(r1)
r4 = dup(r2)
pwritev(r4, &(0x7f0000000440)=[{&(0x7f0000000400)="91", 0x1}], 0x1, 0x2, 0x80000001)
pread64(r4, &(0x7f0000000480)=""/27, 0x1b, 0x3)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f00000004c0), &(0x7f0000000500)={'U-', 0xfffffffffffffaa2}, 0x16, 0x3)
dup2(r0, r3)
setxattr$security_evm(&(0x7f0000000540)='./file1\x00', &(0x7f0000000580), &(0x7f00000005c0)=@ng={0x4, 0x7, '\a'}, 0x3, 0x0)
r5 = open(&(0x7f0000000600)='./file0\x00', 0x2, 0x10)
lsetxattr$security_evm(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f00000006c0)=@v2={0x3, 0x2, 0x6, 0x10001, 0x6c, "ec855d5afd3b85c62df3dfa813ed24859ab9602f1805eee3f5813df5bc47589140873d93836e971d22cdf8148e840e126dc5bae62686ff08aebc1ed693a2479e829f87d4822c891b2b2a738da43254a4d0365f106192be8c65ceecbf22a163b0de3c9fc66df76c66ac488acf"}, 0x75, 0x1)
fcntl$dupfd(r0, 0x406, r5)
setxattr$trusted_overlay_opaque(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x1)
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4024
remove dir: /root/cephfs-client/dfs-0-405
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-406 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-406
receive_execute: 4, 8
receive_execute: 1, 8
receive_execute: 3, 8
receive_execute: 2, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1940, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 14631, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 810
executor 2 server cover_cnt 2 output_pos_value 879
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
time breakdown 2: 9, 7, 0
time breakdown 1: 11, 7, 0
before receive testcase: 0 0
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 11, 6, 0
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 16
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 20 replies
2023/03/27 22:34:57 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 2 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 810 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 4
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
open$dir(&(0x7f0000000000)='./file1\x00', 0x200, 0x0)
r0 = open(&(0x7f00000000c0)='./file1\x00', 0x200200, 0x185)
fsetxattr$system_posix_acl(r0, &(0x7f0000000080)='system.posix_acl_access\x00', &(0x7f0000000480)={{}, {}, [], {}, [], {}, {0x20, 0x4}}, 0x24, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 12, 5, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1160
remove dir: /root/cephfs-client/dfs-0-406
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-407 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-407
receive_execute: 3, 5
receive_execute: 0, 5
receive_execute: 0, 5
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 1, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 627, pid 1943, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 627, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 609, pid 1943, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 609, flag collect 0
----- executor 3 signal number : 201
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1943, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1943, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11010, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 13294, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 5, 8, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 7, 8, 0
----- executor 2 signal number : 928
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 21693, flag collect 0
time breakdown 3: 8, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 6006
----- executor 2 executes write_coverage_signal cov->size 6490, flag collect 0
----- executor 2 signal number : 429
----- executor 2 executes write_coverage_signal cov->size 24256, flag collect 0
----- executor 2 signal number : 3981
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32584, flag collect 0
----- executor 2 signal number : 2253
executor 2 server cover_cnt 8 output_pos_value 15078
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 18
2023/03/27 22:34:57 ----- PS len: 4
time breakdown 2: 6, 12, 0
2023/03/27 22:34:57 [CLIENT] executor 3 has 4 replies
2023/03/27 22:34:57 fuzzer receive 477 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:34:57 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 928 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 6006 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 429 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 3981 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 2253 signal and 0 cover from userspace component
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 12
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
lsetxattr$security_selinux(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000380)='system_u:object_r:sendmail_exec_t:s0\x00', 0x22, 0x5)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
write(r1, &(0x7f0000000040)="9e", 0x400000)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000300), &(0x7f0000000340)={'L+', 0x1ff}, 0x16, 0x3)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000240), &(0x7f0000000280)={'L+', 0x6}, 0x16, 0x1)
chdir(&(0x7f00000002c0)='./file1\x00')
r2 = open$dir(&(0x7f00000003c0)='./file1\x00', 0x10000, 0x121)
fcntl$F_SET_RW_HINT(r2, 0x40c, &(0x7f0000000400))
lsetxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file2\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file0\x00', 0x8, 0x0)
unlink(&(0x7f0000000100)='./file1\x00')
write$binfmt_misc(r0, &(0x7f00000005c0)=ANY=[@ANYBLOB="73797a3011142e8e646b07c351667d4d7cbc97910c834fee91f8f0fd2042e69616ded87c87c18e5738874548daf7df6e11384b41dd07a7e09a85ed8008f384f33c23e3bf797f8880d750c64a2d12f32a3e7e6d8364f43da9d90f87350bc9af800c873d94a77c57302a8a609f3d54e7de6bd48da2ca485921c54a98b280665efd7d272490bd368e5310d84ddd9005c679119fa07f99adcde77eeb92f74d417f68f8b8aefecfd4ed6e4c5f64319a88919a9c16f445d13373622a9f0ee15e9807adba6f4211dc4a0c1d714bd2d8a92287918744b5f03780c0a964c913257b99077c18568121475503c5c4a35714229fa93231858a8f1b89c6f91985b0e046181e1a3e6c5171785cdd97b88a98631eb872ab4061ed233e837ff54d79e0b6d4328bb4c74e3786062159acb63a223a1e304f93399889cb7dfe68f174aa21bc6593396025e62ec30048d18a44d6ebc757d573180e603507f35a283353"], 0x6f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2624
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-407
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-408 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-408
receive_execute: 10, 10
receive_execute: 9, 9
receive_execute: 8, 9
receive_execute: 3, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 623, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 155
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 55940, pid 1946, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 55940, flag collect 0
----- executor 3 signal number : 322
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1946, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 141, pid 1946, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 141, flag collect 0
----- executor 3 signal number : 60
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1946, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1265, pid 1946, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1265, flag collect 0
----- executor 3 signal number : 657
----- completed 12
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 5, 0
execute_one time: 0, 18
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 673, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 28298, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1417
----- executor 2 executes write_coverage_signal cov->size 30218, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1063
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 22, 0
before receive testcase: 0 0
time breakdown 3: 20, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 6473
----- executor 2 executes write_coverage_signal cov->size 1357, flag collect 0
----- executor 2 signal number : 300
----- executor 2 executes write_coverage_signal cov->size 23605, flag collect 0
time breakdown 0: 17, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 5491
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1585
executor 2 server cover_cnt 8 output_pos_value 16427
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 36
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 12 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 155 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 322 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 657 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1417 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1063 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 6473 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 300 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5491 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1585 signal and 0 cover from userspace component
time breakdown 2: 12, 27, 0
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 171 dup2 dup2
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 5
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file1\x00', 0x121041, 0x0)
open$dir(&(0x7f0000000080)='./file1\x00', 0x81, 0x8)
fremovexattr(r0, &(0x7f0000000000)=@known='security.selinux\x00')
r1 = openat(r0, &(0x7f0000000040)='./file1\x00', 0x101200, 0x0)
dup2(r0, r1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 736
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-408
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-409 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-409
receive_execute: 10, 7
receive_execute: 8, 7
receive_execute: 3, 7
receive_execute: 8, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 1951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 191, pid 1951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 3 signal number : 34
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 1951, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 129
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1951, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1951, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 5, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11960, flag collect 0
----- executor 2 signal number : 5012
executor 2 server cover_cnt 2 output_pos_value 6290
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10, 5, 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 13
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [CLIENT] executor 3 has 5 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 2 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5012 signal and 0 cover from userspace component
time breakdown 0: 15, 6, 0
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
time breakdown 3: 17, 4, 0
before receive testcase: 0 1
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2462 openat openat
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 7
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x0)
r1 = openat(0xffffffffffffffff, &(0x7f0000000100)='./file0\x00', 0x303000, 0x208)
openat(r1, &(0x7f0000000140)='./file0\x00', 0x200000, 0x9f)
setxattr$trusted_overlay_opaque(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x0)
r2 = open$dir(&(0x7f0000000240)='./file0\x00', 0x2c02, 0x0)
fcntl$dupfd(r0, 0x406, r2)
setxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='-)\\.\x00', 0x5, 0x1)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1320
remove dir: /root/cephfs-client/dfs-0-409
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-410 successfully
receive_execute: 3, 32
receive_execute: 0, 32
current dir: executor 3: /root/cephfs-client/dfs-0-410
receive_execute: 4, 33
receive_execute: 2, 32
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 123
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 322, pid 1954, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 20
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 3, 0
execute_one time: 0, 6
2023/03/27 22:34:57 for select break: 1
time breakdown 3: 37, 8, 0
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10740, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1395
----- executor 2 executes write_coverage_signal cov->size 11012, flag collect 0
----- executor 2 signal number : 968
----- executor 2 executes write_coverage_signal cov->size 17582, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5930
----- executor 2 executes write_coverage_signal cov->size 1768, flag collect 0
----- executor 2 signal number : 323
----- executor 2 executes write_coverage_signal cov->size 11960, flag collect 0
time breakdown 1: 35, 9, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 34, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 2678
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 22507, flag collect 0
----- executor 2 signal number : 1782
executor 2 server cover_cnt 8 output_pos_value 13171
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 44
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 7 replies
2023/03/27 22:34:57 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1395 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 968 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5930 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 323 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 2678 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1782 signal and 0 cover from userspace component
time breakdown 2: 32, 12, 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 20
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000480)='./file0/file0\x00')
stat(&(0x7f0000000080)='./file0/file0\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
r1 = open(&(0x7f0000000780)='./file1\x00', 0x12040, 0x45)
openat(r1, &(0x7f00000007c0)='./file1\x00', 0x12000, 0x4)
r2 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x438902, 0x3)
fstat(r2, &(0x7f0000000800)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lsetxattr$smack_xattr_label(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='security.SMACK64\x00', &(0x7f00000003c0)=ANY=[@ANYBLOB="747275737465642e6f7665726c61792e6f00b9003b283a46"], 0x18, 0x1)
writev(0xffffffffffffffff, &(0x7f00000008c0), 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000000)='.\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000580)=ANY=[@ANYBLOB="02000000010005000000000002000300", @ANYRES32=0xee00, @ANYBLOB="02000600", @ANYRES32, @ANYBLOB="02000400", @ANYRES32=0x0, @ANYBLOB="cf58a0e8960209e239a7045c291a4fbba2c9c4b8c55904efd2c98cb6534362460ea7ebd096ffd6b37e534650d10a5d234effa1490269e9816cbb7a3eab1be75b1fd030f0e6376ff51dec2c770eef6a8cde0b37e116763d5d", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000700", @ANYRES32=r0, @ANYBLOB="040001000000000008000100", @ANYRES32=0xee01, @ANYBLOB="08000600", @ANYRES32=0x0, @ANYBLOB, @ANYRES32=r3, @ANYBLOB="1000060000000000"], 0x6c, 0x5)
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
faccessat(0xffffffffffffffff, &(0x7f0000000640)='./file2\x00', 0x108)
lsetxattr$security_evm(&(0x7f0000000240)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000180)=ANY=[@ANYRES16=r2], 0xe, 0x2)
setxattr$trusted_overlay_nlink(&(0x7f00000001c0)='./file1\x00', 0x0, 0x0, 0x0, 0x0)
setxattr$trusted_overlay_redirect(&(0x7f0000000880)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000200)='./file0/file0\x00', 0xe, 0x2)
rename(&(0x7f0000000280)='./file0\x00', &(0x7f0000000380)='./file1\x00')
mkdir(&(0x7f0000000680)='./file1\x00', 0x20)
lremovexattr(&(0x7f00000001c0)='.\x00', &(0x7f00000004c0)=@known='trusted.overlay.nlink\x00')
fcntl$setown(0xffffffffffffffff, 0x8, 0x0)
setxattr$security_ima(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700), &(0x7f0000000740)=@sha1={0x1, "84a3d5f1fa7675f190929ce425ed9e0aead7e491"}, 0x15, 0x3)
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x180)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4536
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-410
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-411 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-411
receive_execute: 2, 6
receive_execute: 7, 6
receive_execute: 7, 6
executor 2 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 467
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 33
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 532, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 3 signal number : 182
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 6, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 688, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 688, flag collect 0
----- executor 3 signal number : 46
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 465, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 465, flag collect 0
----- executor 3 signal number : 15
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 639, pid 1957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 639, flag collect 0
----- executor 3 signal number : 10
----- completed 20
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 3, 0
execute_one time: 1, 12
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 13, 15, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 931, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 16887, flag collect 0
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 24321, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 16, 0
----- executor 2 signal number : 1072
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7710
----- executor 2 executes write_coverage_signal cov->size 4237, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
time breakdown 1: 13, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 397
----- executor 2 executes write_coverage_signal cov->size 32461, flag collect 0
----- executor 2 signal number : 5257
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1712
executor 2 server cover_cnt 8 output_pos_value 17637
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 27
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
time breakdown 2: 8, 21, 0
2023/03/27 22:34:57 [CLIENT] executor 3 has 20 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 467 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1072 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 7710 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 397 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5257 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1712 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 182 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 2
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x101242, 0x0)
ftruncate(r0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 240
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-411
remove dir time 5
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-412 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-412
receive_execute: 10, 8
receive_execute: 7, 8
receive_execute: 8, 9
receive_execute: 1, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 1960, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 194, pid 1960, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 194, flag collect 0
----- executor 3 signal number : 151
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11965, flag collect 0
time breakdown 3: 18, 4, 0
before receive testcase: 0 0
time breakdown 1: 15, 6, 0
before receive testcase: 0 1
----- executor 2 signal number : 5004
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 543
executor 2 server cover_cnt 4 output_pos_value 6889
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
time breakdown 0: 17, 5, 0
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 15
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 2 replies
2023/03/27 22:34:57 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 151 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 4 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5004 signal and 0 cover from userspace component
time breakdown 2: 10, 6, 0
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 3761 stat stat
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 10
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rename(&(0x7f0000000240)='./file1\x00', &(0x7f00000004c0)='./file0\x00')
stat(&(0x7f0000000000)='./file1/file0\x00', &(0x7f00000002c0))
setxattr$user(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
removexattr(&(0x7f0000000400)='./file1/../file0\x00', &(0x7f0000000440)=@known='security.apparmor\x00')
open$dir(&(0x7f0000000100)='./file1\x00', 0x200000, 0x140)
setxattr$security_ima(&(0x7f00000000c0)='./file1/file0\x00', &(0x7f0000000080), &(0x7f0000000200)=@v2={0x5, 0x0, 0x6, 0x3, 0x1, 's'}, 0xa, 0x2)
listxattr(&(0x7f00000003c0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1848
remove dir: /root/cephfs-client/dfs-0-412
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-413 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-413
receive_execute: 4, 10
receive_execute: 3, 10
receive_execute: 1, 10
receive_execute: 3, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0, execute_one inner time: 1, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 606, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 606, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 468, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 468, flag collect 0
----- executor 3 signal number : 97
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 169, pid 1962, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 169, flag collect 0
----- executor 3 signal number : 45
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 0, 0
execute_one time: 1, 14
cover_reset in execute_call
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1026, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17198, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 27202, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1042
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 13, 18, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 18, 0
time breakdown 3: 14, 16, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 signal number : 7006
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5615
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1709
executor 2 server cover_cnt 8 output_pos_value 16868
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 33
2023/03/27 22:34:57 ----- PS len: 4
time breakdown 2: 11, 23, 0
2023/03/27 22:34:57 [CLIENT] executor 3 has 10 replies
2023/03/27 22:34:57 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 97 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:34:57 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1042 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 7006 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5615 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1709 signal and 0 cover from userspace component
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2462 openat openat
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 4
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
openat(r0, &(0x7f0000000040)='./file0/file0\x00', 0x480, 0x1)
setxattr$trusted_overlay_upper(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=ANY=[@ANYBLOB="00fb79067f58b6df1a47070204d8dd761dd79dcd3f8b0408986b7d5347be01006aa42cc7b7d7af83b1ac341e4f278c01c8cc28bc1acc6933b9d13a890a143f990f81ac20789139054f7890f28dd0e97841da5d9db890f204eff8b408000000dd03"], 0x79, 0x0)
removexattr(&(0x7f0000000480)='./file0\x00', &(0x7f0000000340)=@known='system.posix_acl_access\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 880
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-413
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-414 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-414
receive_execute: 11, 26
receive_execute: 4, 25
receive_execute: 8, 26
receive_execute: 8, 26
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 1968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 249, pid 1968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 249, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11657, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 2422, flag collect 0
time breakdown 1: 34, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7101
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 34, 6, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 33
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 4 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 5 replies
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
time breakdown 2: 29, 7, 0
time breakdown 3: 37, 3, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 15
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x1, 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x1010c2, 0x12a)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000140)='./file1/../file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x7)
stat(&(0x7f0000000280)='./file1\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f0000000740)=ANY=[@ANYBLOB="02000000010000000000000002000300", @ANYRES32=0xee01, @ANYBLOB="02000000", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=r1, @ANYBLOB="02000100", @ANYRES32, @ANYBLOB="02000300", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32, @ANYBLOB="613787b47e63d92e3b87f1ca00", @ANYRES32, @ANYBLOB="02000400", @ANYRES32=0x0, @ANYBLOB="02000200444a62984b7a224cf87c03bc6eff842f26a28fa9f9032e0aaa641c938bfef31af1d6f3f093c33043b528f676ea04cb761dcd4e5515c68c35eaa7965513b3974cf5d701883bd8dcdf53b0fb11cf24511b3d764db1acf2044ffb7368331172765a671e8a75c852b85016b1e54b08c2727c77a1ed442310cf17aa1388e08302a0b49e458103876d5ca29e0becc10133950eb0fe36bb4df3e32d1751a6b5201779da9783ee6aca684bc81a761b5605fa59d47e5fde9284929ac6890d5b83e06a60add1ff878e7d22591894eadb07c651816ada", @ANYRES32=0xee01, @ANYBLOB="02000900", @ANYRES32=r2, @ANYBLOB="040002000000000008000500", @ANYRES32=0xee00, @ANYBLOB="08000500", @ANYRES32=0xee00, @ANYBLOB="08000300", @ANYRES32=0x0, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="10000100000000002000030000000000"], 0x94, 0x2)
r3 = dup(r0)
r4 = open(&(0x7f0000000440)='./file2\x00', 0x901, 0x102)
fstat(r4, &(0x7f0000000480))
getdents(r3, 0x0, 0x0)
linkat(r3, &(0x7f00000000c0)='./file1/../file0\x00', 0xffffffffffffffff, &(0x7f0000000100)='./file0\x00', 0x1000)
fsetxattr$user(r0, &(0x7f0000000000), &(0x7f0000000080)='\x00', 0x1, 0x2)
getdents(r3, &(0x7f0000002300)=""/4100, 0x1004)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3864
remove dir: /root/cephfs-client/dfs-0-414
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-415 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-415
receive_execute: 5, 13
receive_execute: 2, 13
receive_execute: 4, 13
receive_execute: 3, 13
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 42
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 23
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 3
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 85
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 18, 7, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6822, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 9299, flag collect 0
----- executor 2 signal number : 892
----- executor 2 executes write_coverage_signal cov->size 27247, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 8, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 7008
----- executor 2 executes write_coverage_signal cov->size 3475, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 10273, flag collect 0
----- executor 2 signal number : 2312
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 21880, flag collect 0
----- executor 2 signal number : 1632
executor 2 server cover_cnt 8 output_pos_value 13689
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 24
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 15 replies
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 892 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 7008 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 2312 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1632 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 15, 11, 0
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 2
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000000c0)='./file1\x00', 0x40, 0x0)
lseek(r0, 0xffffffffffff77d0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/cephfs-client/dfs-0-415
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-416 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-416
receive_execute: 8, 12
receive_execute: 4, 11
receive_execute: 7, 11
receive_execute: 7, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 1975, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 25, pid 1975, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 25, flag collect 0
----- executor 3 signal number : 6
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 20, 3, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 12258, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4965
----- executor 2 executes write_coverage_signal cov->size 1727, flag collect 0
----- executor 2 signal number : 307
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 530
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 6, 0
2023/03/27 22:34:57 for select break: 1
executor 2 server cover_cnt 5 output_pos_value 7147
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 6, 0
before receive testcase: 0 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 19
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 2 replies
2023/03/27 22:34:57 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [SERVER] executor 2 has 5 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4965 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 307 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
time breakdown 2: 15, 8, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 220 flock flock
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 3
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file0\x00', 0x8040, 0x0)
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='system.posix_acl_access\x00')
flock(r0, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 408
remove dir: /root/cephfs-client/dfs-0-416
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-417 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-417
receive_execute: 6, 14
receive_execute: 1, 14
receive_execute: 4, 13
receive_execute: 3, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 619, pid 1977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 283, pid 1977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 283, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 4, 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4246, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11671, flag collect 0
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 2071, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 530
executor 2 server cover_cnt 5 output_pos_value 7087
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 21
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 [CLIENT] executor 3 has 3 replies
time breakdown 0: 18, 5, 0
2023/03/27 22:34:57 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 5 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
time breakdown 2: 15, 7, 0
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2462 openat openat
2023/03/27 22:34:57 ----- mutateArg()
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 17
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x81)
fchmod(0xffffffffffffffff, 0x8)
writev(0xffffffffffffffff, &(0x7f0000000300)=[{&(0x7f0000000000)="dde7a448e74e11d0b3824473db3fd27e7cc54a5eea2871d089eb0d2f46be719d34e3611ab6b35abf8c0cee44ff82b292437a6dd67c1833f25510bfcc7b539d8de4760ed9d5fbfe0589540c841ec9393de7957beda2ec1d632ba49552c801efb81cc33c7269", 0x65}, {&(0x7f0000000080)="91571db8c532a7b086d1e1dc6bdcc14941a2d31ac94000f3389321f7d15faba1593ac8368fcb5defbb16d534d113b2b4fa9358cf1985e65ed5dea48a5eccb71a826d2d95d72f495205db15bcccf341f1b14135dda0a766a1542fc80124b9029efa897d04fb128548b52ef2480d406542e1c459d841dc6fc4bad87b3c33fafbe69dd11b390af805337adbfe65a88ca29aba7d5c25f4f949ed1c15c2f484605c11aa2d68f9d183a4e596f9b579070999424f2871b50f62a4b32012f50e6be1f56f4b461f0ee4663ab37cf41f7d49ace49639463313f17a823806a1382eb192ad4ce86755dadb2f129decc960cfd4189b511ce54a1a5e58f660675832", 0xfb}, {&(0x7f0000000180)="315f2c1e6f30044c4a63c492f15324f15d2cc04e316d331f67443e07748a9fd6572f10a7243869f72ea51b5ab9b6945eaf2645cd9e9364e788f5d70c62a8feaa982a1523ae945db4cbb90a46f4f85210e2a7ee35d4186fa2c64c5c02244a27fcd32b073f7a7b1f4b9469d6df1c709574369e799274d3f1fe70ad36215a3a8c05669b9167228cae0afdb4a1a658abc3c7807fdfd95e6b5fb603bddfa42333ce8cc23224b06becefff8179fe8c910fbe5924408ae03d9d3eda7c", 0xb9}, {&(0x7f0000000240)="626dcda5b565a248f290cd8322d05412e2a7385cb7aa42d61e7043ca9e4a3364d4337f29163110f6af292d56b2f312c9ec7a196462e72fdcb43d390495ef849011471de5e84ed36059255a31d67225b1b71c83f889ba4b394eb5ee76ea7f4625ada8067fb0e938ae9230efe6b1abbeabdef1a2d3c8ac40cf739f8c0784121b2a338fb19363387b5151bd5c9d24708a53fa04941c0dc4ceaa7677954c6ce87c46b85da2bd0b73ff0cee9a4a16534d1d3edf8f26e9", 0xb4}], 0x4)
fchown(0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff)
fcntl$addseals(0xffffffffffffffff, 0x409, 0x8)
read(0xffffffffffffffff, &(0x7f0000000340)=""/47, 0x2f)
fsync(0xffffffffffffffff)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000380), &(0x7f00000003c0)={'L+', 0x6}, 0x16, 0x3)
close(0xffffffffffffffff)
fchown(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
lseek(0xffffffffffffffff, 0x3, 0x0)
removexattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000540)=@known='user.incfs.id\x00')
open$dir(&(0x7f0000000580)='./file0\x00', 0x20001, 0x0)
r0 = open$dir(&(0x7f0000000400)='./file0\x00', 0x40, 0x80)
write$binfmt_elf32(r0, &(0x7f00000005c0)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x4, 0x57, 0x40, 0x1, 0x3, 0x6, 0x100, 0x265, 0x38, 0x2e0, 0x1, 0x7f, 0x20, 0x2, 0x1000, 0xa6, 0x2}, [{0x7, 0x72, 0x293, 0x0, 0xfffffffe, 0x1, 0x1, 0xffffffff}, {0x1474e552, 0x5, 0x0, 0xfffffc01, 0x8001, 0x636, 0x5, 0x6}], "16a5b8ec4c1bb8309a6af8d8f9a82c17ecb7fa4f32e2dde9b666c334301c828ad79f560f3940c267902313f100f6bc74164ee7aa03bbd104e93fb3fcffd441ecae80a9f68f0d253642564f263d158adf4e361f88f0b166", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x6cf)
r1 = open(&(0x7f0000000440)='./file0\x00', 0x1a0c0, 0x45)
openat(r1, &(0x7f0000000480)='./file0\x00', 0x10082, 0x102)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6552
remove dir: /root/cephfs-client/dfs-0-417
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-418 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-418
receive_execute: 4, 16
receive_execute: 3, 17
receive_execute: 1, 17
receive_execute: 1, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 649, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 649, flag collect 0
----- executor 3 signal number : 442
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 6, 0
execute_one time: 1, 9
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 254, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 9155, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8602, flag collect 0
----- executor 2 signal number : 905
----- executor 2 executes write_coverage_signal cov->size 14748, flag collect 0
time breakdown 0: 18, 13, 0
before receive testcase: 0 1
----- executor 2 signal number : 5412
----- executor 2 executes write_coverage_signal cov->size 1105, flag collect 0
----- executor 2 signal number : 292
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
----- executor 2 signal number : 1626
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 17675, flag collect 0
----- executor 2 signal number : 1704
time breakdown 3: 20, 12, 0
before receive testcase: 0 1
executor 2 server cover_cnt 8 output_pos_value 11424
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 20, 12, 0
before receive testcase: 0 1
time breakdown 2: 18, 18, 0
before receive testcase: 0 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:34:57 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:34:57 for select break: 1
2023/03/27 22:34:57 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:34:57 wg wait finish
2023/03/27 22:34:57 ------ all executors finish execution
2023/03/27 22:34:57 exec time: 36
2023/03/27 22:34:57 ----- PS len: 4
2023/03/27 22:34:57 [CLIENT] executor 3 has 17 replies
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 [SERVER] executor 2 has 8 replies
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:34:57 [SERVER] executor 0 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:34:57 [SERVER] executor 1 has 0 replies
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 905 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 5412 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 292 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 442 signal and 0 cover from executor 3
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1626 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:34:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:34:57 ------- fuzzer executor 2 receive 1704 signal and 0 cover from userspace component
2023/03/27 22:34:57 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:34:57 ----- no new client coverage: false, true
2023/03/27 22:34:57 mutate testcase with failures
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 3766 sync sync
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2462 openat openat
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 22:34:57 ----- insertCall()
2023/03/27 22:34:57 ----- generateCall 2462 openat openat
2023/03/27 22:34:57 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:34:57 prog length: 7
2023/03/27 22:34:57 HasCrashFail:false HasNetFail:false
22:34:57 ---executing program 0:
---
---
---
openat(0xffffffffffffffff, &(0x7f0000000180)='./file0\x00', 0x11200, 0x2)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00', 0x230000, 0x100)
fcntl$getown(r0, 0x9)
sync()
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v3={0x3000000, [{0x5, 0x1ff}, {0x10000, 0xfff}]}, 0x18, 0x1)
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
lgetxattr(&(0x7f0000000100)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000200)=""/9, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1256
remove dir: /root/cephfs-client/dfs-0-418
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-419 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-419
receive_execute: 10, 8
receive_execute: 10, 8
receive_execute: 4, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1983, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 1983, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1983, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
receive_execute: 9, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 993, pid 1983, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 993, flag collect 0
----- executor 3 signal number : 391
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 1983, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1983, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 307
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 210, pid 1983, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 64
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 1, 10
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 18, 4104, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2146, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 1318, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 19027, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 2852, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 1154
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1472
----- executor 2 executes write_coverage_signal cov->size 18098, flag collect 0
----- executor 0 signal number : 746
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1587
----- executor 2 executes write_coverage_signal cov->size 2384, flag collect 0
----- executor 2 signal number : 259
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 581
----- executor 0 executes write_coverage_signal cov->size 3455, flag collect 0
time breakdown 1: 18, 4105, 0
before receive testcase: 0 0
----- executor 0 signal number : 528
----- executor 0 executes write_coverage_signal cov->size 4607, flag collect 0
----- executor 0 signal number : 676
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
----- executor 0 signal number : 154
----- executor 0 executes write_coverage_signal cov->size 76, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6123
----- executor 2 executes write_coverage_signal cov->size 6527, flag collect 0
----- executor 0 signal number : 849
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2077
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 405
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 681
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 442
----- executor 2 executes write_coverage_signal cov->size 1848, flag collect 0
----- executor 2 signal number : 310
----- executor 2 executes write_coverage_signal cov->size 14879, flag collect 0
----- executor 0 signal number : 2791
----- executor 0 executes write_coverage_signal cov->size 7387, flag collect 0
----- executor 2 signal number : 3418
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 0 receive reply, reply.done 1
----- executor 0 signal number : 1589
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 2678, flag collect 0
----- executor 0 signal number : 126
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 0 signal number : 63
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 3230, flag collect 0
----- executor 0 signal number : 23
executor 0 server cover_cnt 18 output_pos_value 10532
time breakdown 0: 17, 4110, 0
before receive testcase: 0 0
----- executor 2 signal number : 1493
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
executor 2 server cover_cnt 14 output_pos_value 17887
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:01 wg wait finish
2023/03/27 22:35:01 ------ all executors finish execution
2023/03/27 22:35:01 exec time: 4119
2023/03/27 22:35:01 ----- PS len: 4
2023/03/27 22:35:01 [CLIENT] executor 3 has 7 replies
2023/03/27 22:35:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 391 signal and 0 cover from executor 3
2023/03/27 22:35:01 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:01 [SERVER] executor 2 has 14 replies
2023/03/27 22:35:01 [SERVER] executor 0 has 18 replies
time breakdown 2: 12, 4111, 0
2023/03/27 22:35:01 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:01 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:01 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 1154 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1472 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 746 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1587 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 581 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 528 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 259 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 676 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 154 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 6123 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 849 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 2077 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 405 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 442 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 681 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 3418 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 2791 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 1589 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1493 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 126 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 63 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:35:01 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:01 ----- no new client coverage: false, true
2023/03/27 22:35:01 mutate testcase with failures
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:35:01 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:01 prog length: 5
2023/03/27 22:35:01 HasCrashFail:false HasNetFail:false
22:35:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
open$dir(&(0x7f0000000140)='./file0/file0\x00', 0x0, 0x0)
open$dir(&(0x7f0000000000)='./file1\x00', 0x40100, 0x10)
rename(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 664
remove dir: /root/cephfs-client/dfs-0-419
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-420 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-420
receive_execute: 6, 7
receive_execute: 5, 7
receive_execute: 12, 8
receive_execute: 11, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- executor 3 write_call_output, size 489, pid 1988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 495, pid 1988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 495, flag collect 0
----- executor 3 signal number : 141
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 1988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 55
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 692, pid 1988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 692, flag collect 0
----- executor 3 signal number : 71
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 4, 5, 0
execute_one time: 0, 9
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 20, 10, 0
executor 0 write_server_output
before receive testcase: 0 1
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 925, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 18533, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1419
----- executor 2 executes write_coverage_signal cov->size 24564, flag collect 0
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 12, 0
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7141
----- executor 2 executes write_coverage_signal cov->size 25527, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4790
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1319
executor 2 server cover_cnt 7 output_pos_value 15751
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:01 wg wait finish
2023/03/27 22:35:01 ------ all executors finish execution
2023/03/27 22:35:01 exec time: 24
2023/03/27 22:35:01 ----- PS len: 4
2023/03/27 22:35:01 [CLIENT] executor 3 has 5 replies
2023/03/27 22:35:01 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 141 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:35:01 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:01 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:01 [SERVER] executor 2 has 7 replies
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1419 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 7141 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 4790 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 12, 17, 0
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1319 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:35:01 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/27 22:35:01 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:01 ----- no new client coverage: false, true
2023/03/27 22:35:01 mutate testcase with failures
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- generateCall 3970 unlink unlink
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- generateCall 2341 lchown lchown
2023/03/27 22:35:01 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:01 prog length: 5
2023/03/27 22:35:01 HasCrashFail:false HasNetFail:false
22:35:01 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000040)='./file0\x00', r1, 0xee01)
unlink(&(0x7f0000000000)='./file0\x00')
fchmod(r0, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 632
remove dir: /root/cephfs-client/dfs-0-420
remove dir time 9
-----finish removing dir
receive_execute: 8, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-421 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-421
receive_execute: 9, 10
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 1992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 1992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 48
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 7, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 277, pid 1992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 140
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 495, pid 1992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 495, flag collect 0
----- executor 3 signal number : 54
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 1992, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 51
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 8, 5, 0
execute_one time: 1, 13
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 15, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 929, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 18066, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 1246, flag collect 0
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 28817, flag collect 0
----- executor 0 signal number : 734
----- executor 0 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 0 signal number : 366
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 3 output_pos_value 1171
time breakdown 1: 17, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 1058
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7635
----- executor 2 executes write_coverage_signal cov->size 25611, flag collect 0
time breakdown 0: 18, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 3994
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1930
executor 2 server cover_cnt 7 output_pos_value 16105
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 13, 20, 0
before receive testcase: 0 1
2023/03/27 22:35:01 wg wait finish
2023/03/27 22:35:01 ------ all executors finish execution
2023/03/27 22:35:01 exec time: 30
2023/03/27 22:35:01 ----- PS len: 4
2023/03/27 22:35:01 [CLIENT] executor 3 has 5 replies
2023/03/27 22:35:01 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 51 signal and 0 cover from executor 3
2023/03/27 22:35:01 [SERVER] executor 0 has 3 replies
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 734 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 366 signal and 0 cover from userspace component
2023/03/27 22:35:01 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:01 [SERVER] executor 2 has 7 replies
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1058 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 7635 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 3994 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1930 signal and 0 cover from userspace component
2023/03/27 22:35:01 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:01 ----- no new client coverage: false, true
2023/03/27 22:35:01 mutate testcase with failures
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/27 22:35:01 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:01 prog length: 12
2023/03/27 22:35:01 HasCrashFail:false HasNetFail:false
22:35:01 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
chmod(&(0x7f00000003c0)='.\x00', 0x0)
lsetxattr$security_evm(&(0x7f0000000140)='.\x00', &(0x7f00000001c0), &(0x7f00000002c0)=@md5={0x1, "fb49347478028623477c27bdf55acd29"}, 0x11, 0x1)
setxattr$trusted_overlay_redirect(&(0x7f00000005c0)='./file1/file0\x00', &(0x7f0000000600), &(0x7f0000000640)='./file1/../file0\x00', 0x11, 0x2)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
setxattr$security_evm(&(0x7f0000000400)='.\x00', &(0x7f0000000440), &(0x7f0000000680)=ANY=[@ANYBLOB="041505e6b3d2effa46d95676fddf661be6546e90543c7e021fb5ca9f32ec136f05fbbdfa32a205"], 0x12, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000000500)='./file1/../file0\x00', &(0x7f0000000540), &(0x7f0000000580), 0x2, 0x0)
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000200), &(0x7f0000001500)="48d5be23d0cf3bff38e7fddd79376bd053c6d1b88aa227e41aca5d3cf0750a07d46cd394553608c37860d0bf554061c556ea84bf929658054a0e1371c557d0cdee58ce27cbff49c45f27572ddad811c13e154712ecf14f24632d0da73aff73810a12886dfcda9ffd11c4f00884881b475b88c7bff2754c94465b24d7505a52410d0d5e157916f300c615bea4c2f271ac097a0bf447888ef19203952922b9214ae2e9d49da1724810e9fe2eb95676cb5037d1dd00c8b0ede7b2ffe476bbed6a95f75fef1b117d262de25f21b3881f1409abcfbde8966a8d3fec654117e213d0307274d537e55d76e7c4745a9658c33772baab1eb1dbe6fb17796c79089ecb3e99f93d30846157c51f224e59c27bad8049c856ab419ba90896952eebd30d33e41813260d5e13f0287277ac8197f06bf0324721f9ac878e075a0f8d1c429920078eb76366dd45cfdb24a67f1de0b46f868f5991137c863b2fdd076a7fdb9a0cad569f2f1d996f86e421910a192aac534daa6e2964f4e603894fc50bbed0a065a3b8c5453e1fb11c3d0413088d8bf6a67b7dc9254f582b23d41abb48bbcdb57ac7de531b257a35e730ec94c08b55f7f5396692a00f029361a3dc3d1ced07eb316a788fe9bfc6c77c4e1ce7e8d939f0a038e3f82936045e6db0f0f4fd207a74d892626b4342feb2b1a2acce9635447c8ecbdac11a1ef5e5a3b9a70719de7dab537da80b1218f16f2bf641edbc144e3996dfc3beb6ad3f090dd0d5bf219c102cfebc573ad0974b5bc8d7e42d8346910266ef3a3ef54be26809b45b45d1f464355773356f4ae0e578462e7946ae236fd7a87e9364508f172f1a66f31a9a93a521f3adcf6517b4e34cc23b68c40547f91205dd011c71e8a83b966bfeecee470aa0b75b211642beba2befc701b096ca1311022af9a34a04d1b50a228713277953e3c7746ad6984c1a5874e83341137595a6c63b05f39a2e126b840b941aa168c5546a7643781a0e0cdd335fb5a02d2471900679c50057a9b23c141095770cc0299342e146f0563eb01a516d7605b2a2e36ce5849cdd7737898641a335b064bf57fe9ed8adc396b8c0682db4a3a636d335f477a4b47ae913e1a15c12a841d133d03ba32bd622add2bebc2f3ab334e1d5243041076726f7b82db6e808c4496e9a28a4d29662af132d3140dff178cf9f684c286cca2ee08efcbccc745da7e6bfb6c13a154277d195d5f06ff43a8942745d0e52a23d75251059508d5558d096afd9542df61ef0282acffc986409e3aa6d86377690eaa34310ee4548324ad78fccd963341891e25c092849a0902ec80730072ec26957cdfce915d3568751ef9ec1ee10a1541ddb3511339d984fa69d9e33cb1519a115e56ddd0ff410668225c05ffec4d633bf3e0b3f765bce7a18249e0498b7d00fc0ab6c3fae6ad3ee6b29bfc180575d33c4d8b803f26d71b72d37f53bb9b74c37046a4ed3984b210c0af2c0933dbe665ef0349e39b0db5ef078fa911b0b2370748623ff58b2302b6c1f2fb1555c4afcc3a473ab69f66adf5995d65a7fb317b66fac587dcd0912d5fa87f992ae1d14a0a615d540f97f6be7c2b54b64fb0df0571ad8012e7ed4dffe40cafaabde858a0c0efa7746bc5cb51864398553dd40dbbb1c315ce5740c38064dbf4fb59fd2bb8eeac659ed23f6678b77ab9085b23cb00cb2abf532eb215764078449639ad528217038bde5b0cc619591f015f4e5ba00157e56394d1db96f34044d928ce63e6bcc75c32c282b973ae4d76832bb8b730fc6012d628910102b65f1022b4b18577b7f457a9743b95a06debb22ad3c3457271e9939b772e6155df17c4b47d85e010d21c37b7c855cdf757e81c1ab1fe405cec4df24f08b47ebecef6f85f00651449e6552bb777a3e09cc8199e325e25339c930815f81ebe2f37cab828f463a1ad7b1b58e1d70ee358d7240899d2d2f66e3118c445b8fbf54db20c8f96bf71d97cb499383f1fbae003d910e39f3ffdb8002b6cb1476206efeea139e212882f4ee05e5ae517fe07013a54c17f8c68fef1eecfb285818a7e8eae0c2dbe91f92503c7477c64f2a7d8a08dc904c9f91c7bdc0a828ca5ee65dcd3f0059b7ee6287c5cd3ae7f7346f7e641c1a52d33ee7f800121db4fcb618063c1670e06c2eaef8ff94eea72757e3896cb15ab1bc94ba095b52461ae5d6137681598cb08e30abc16f2b44f87b3b756ec9a684aead981aea7ba4731bae36a9e8599451efdc00a6820b1ea9dc02841e2f3002a2ba67089323f59e0815ae26fe27b628a8dcbbedc2a2e763aa97fdf4591885dd4f6434d9b98581f3d223e9b9f96c438680af7f4b7b5ec16c24496f7c79f9c96f2f391041f4fc1228bb3cbe1aa7f154603068fe2e68a45438caff796f87218a6468c96c33f78302a705bb555ba9fcae7a257a469ff1593d0c328ca13e2e58a16755c7859134838d5e2ccb929f5058fb5fe7dad017993ca5424ab536c4d62c1a2af419bef074b66406a9f504289055f3715520a0938d9c98d3ceac9ec310062a337efc5718bf34aa3c45fb59d34c16758d09beb940dd1da3317a688a1d93f8264dbb22427e469fa6292c5a77d175c28c8315b8b2fa2ba6d0b9103f917263d114f1ce36c74433620d7e2d6fde2fe6a73f402d07ab6933de3b4d1a885a28bd41e1112f8798de9bffd73e8ac93036accbfe9a3a41e1802092e38301f3e764367ec923fbff3141f69b42c73be929946d0540b45c1fa89631fa4e57c7208f799121305d2db202e2544bf88d01fb80d9f173037de1144bfc79329ed958ba4a72cb97313cec6604e4cd20bf201dbfd1fcceedad7d881ec1f089511b59a7c04f849afe5939f1f613c41675bca8f816c9ade5442a043d933ae67368a469ec57478408016898bd6d1866227cba84cff605b66bf9f00af55ae576aa0f701eb30b4a8351d71e511e555e4a079ade4c5945c7717b613827a77210a4060b6de111238ee650d9dfa7d5e9f79af32cb8ee6d0df6a9789fe884d13b64753d32f6fc2555c7c1b8535999f2ea9c66728f308268ff5e6d9e3e9b6ec2beb7439f0a2b1c370504a5a575718248e7d9fb6b9b36569eb02a904d90121a13d700d7c301b9eba43d6d47c39d07e26fc3273bba2799576c75478da1484ad93ae9a0c5843bafa224feefd9f1765053e215ed0481fb2670fd417443df0f1eb2ec6bb180438e8de36a8d3c4af6975dddb6995fb5ed9b7ad69565daf776ee5f8aa2ef247c696aad87a7728551ce70a993ceaac7326a750faa2441b2f080b77b8e13040c0abf6089ed107135330f0d6146d17aeb1afa376d9cea46aa9adc4c37062cef6cf786addd2901900a9d9d968b2d416663855a6a1216d6164b1f3c434a34c7757d84378bff879a0cd007b0a3d36681285323a9e86f3cf77f2913d82de16258ab2b798315c1abeaf31df266c58c5690043dfde346345777aed77a6832f8873bfbe205a23b5547962f228d626181e150da1c333ad180e75b826c54ef02de35ea1b2c5b1af674b3dfc79d04cf825a7a60d2c83bc55b7a3a6c55359ba5ef108b94c4960e96657e2864e4a6aac1a8331ab11daca81b8556c8cd9322a950364cb9fc5f3090af3bf241f725df6c18a64b8d3ca4d179c861f8af82284b76c4d2ee8aa719a64065084f68646fb47d88b2f368f417e9d92a7f80a7ade26d0321bd8aea64936b746b1590155c3aca4599358628fc40b4836d4356d53fca3df0e2c79bc9c07c4dd7edffd3fe6d1d9b5421a4db08a1e0dca001f20fce7e9fc33c00a0adc8c0669efe331a07224741027aebf67fffb8b6f5331462611af1b26499549fec34c8a1a943095127457a0695275447d9ce713296d6315a29c3548cd99b2d4ae6521db5505a6630cda53c224425a8489cd01f86819eea4a78ddb33e353c426af01c3818166845f078b14071fbda11177259736ec001aacdbb1dd88f75f33ad4c246f2b2f570a9d571fa053adbe5465719bb7c249beab848935fb63eb280b5637f8577dc6a56b477041dad72023dec1425d0a0951e283c8c794ca9d9b2938da765dfd4a5972c68b862ea35e92d649a7e9a4083c3485810e5eb267b37314033f9bf281721bc1ded1bcbfd47c51c0b608b5a697387afb74dfca9f83f200e1c0b9c32ee0daeea9c008bdf203fb3d3d24962e77f43ac819835a0b7f169f2dbdec722fdabef25ae7ce0f18c63abfb4f0130dfcc2e9a2b2604ad1b67fe5cc625d26a9e7ba144eeb7cd6131e2c4cf2594893e00b1677b71d9fa42d56dc52566361c5289abf47b4a0005b4acf563d0d0309c01cfc081217515faae7947ef6017eb630d0a9ead555574623dff14514cfb1dd755bcb613210ee52f412abdcd7c728fcae8258c03d7a880b5e02dfc7227544381030fdde05840182fb22eb17072e20ea72dfda0ba9537a4b58dbab4dd305084743bc0c116fc814db3b2bf81307e57927d9ae73897a0b454f7940327e34b5ba449e67f87fccce99b857ee6ca4e26933be0de4e16028319c814c09c640e67f39d97ceff052606f788151b81328c02adb7f490d34c4b12af21ecaec6b6132c333775134d4afaeca3a81bbf36c7cc2ee8ec32c8cba98daae7021303801ad51cf71a477646a71d81208fb8bf710060639261952aecc972ce196f0c1449f8b40627e02112d28963aa717d146716c6e715346a853cee038822cab81f4bd6bfc1f5f63e3faae7d810dfeb2ca5bd66c268de26974a213b0ed3c972694c600fd0faefc097371384f5ac8a59476aff590aafb05d9086ecf32c15f86fa85d1f2ae0f2e16ebd1fbf9f56132855384f8248d78d6ca644bf49fe07b3c8f2f1f78924b9876a593dd9d4b3a2b4bc3b9e0c402762dd21fedb5aad6604fed9364050fd820378c028d028f5041fb798a14104a039e80ee71a872b3e33dfd9cc9d24f0cd7e6c68762f1151732a14d00f5a0732d29aed324b5d746b6ed375621ca9c096378a340e914af44dbd23341c14599e4f10ac7959f52b1426e4a934b5cc6cbc8f449f923f133665abf7126b0d1f4fb2a5adcb3b61a7e206a744107e788958ee5e06f47972e365359a65081c9eb449cf653ab3d51c871bc8a9de26881cfe96b98ed79f2a928e73b0d54bd3a38944a26cab21cdd5f56025dceac0bf7871f68b5efb16f5bdda80e1f99255ac754e8b0e6957d6661a4009cdd2cb295d4dab699db8754f969a2488897d997bff1228c2ae21332146f136f9fa2425fe61b77a5d3cf07f393d998a316580df6a8a465d3ef166f27faff2765acecffd2595beb5ee3c56cebf5516195f6b8fc2ebff4adc5a1951d7af4eaeeabf08adac38abc2b48463529b35f97d398df0a75beaf5cf424cb72e3f7c01d85aa2cc2bd39cd425b836dd6e5eec75bae04d93c2e226e9d03bac5481d811762c95edca2bf57e445d7ebc403c616c63df6794df581af58f0a6a1c3174ad95cdc0a75acf97fe660e96c785b75dd2e65588f114a2623eef86440a3d8e4f7800d7008e24ef08dbc2154571a3b3ae81f51a81dc1d4047efbc4a2323e374a0c611dddcd30feb66358059359719432db42d96280f36480c7db2016e2d97954275dc12ff784b1fd49fd58ad2db9a2bfa8143f140e1f7903238aaf40d42d3a5a7efd944ec4ae7c2eb6cd3969f3fcce74e851d5fa1d4e418ed8e9d7ba9e70a268bd81797e283bfa32ad8c0f2b313ce4c11dafb69d61944fde28160db607eef237093c298d79f37694a54c1eff4a8788c072cc17f7a998272f420d7bc8cbd5978e10f98d484a2fbd4be011605c39cd9d0454f567ddfa2c5ff1c9e2092f0", 0x1001, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file1/../file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@md5={0x1, "e9e03c30b521232cdf8a108cc8ffa4b8"}, 0x11, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6904
remove dir: /root/cephfs-client/dfs-0-421
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-422 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-422
receive_execute: 8, 3
receive_execute: 7, 3
receive_execute: 9, 4
receive_execute: 4, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 331, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 331, flag collect 0
----- executor 3 signal number : 90
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 402, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 402, flag collect 0
----- executor 3 signal number : 62
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 32
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 840, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 3 signal number : 72
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 406, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 406, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 177, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 177, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 748, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 496, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 496, flag collect 0
----- executor 3 signal number : 8
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 583, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 583, flag collect 0
----- executor 3 signal number : 17
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 1995, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 97
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 10, 0
execute_one time: 0, 23
cover_reset in execute_call
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 13, 25, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 1995, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 597, flag collect 0
----- executor 2 signal number : 67
----- executor 0 signal number : 306
----- executor 2 executes write_coverage_signal cov->size 30135, flag collect 0
executor 0 server cover_cnt 2 output_pos_value 373
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1420
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 1062
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 11, 28, 0
before receive testcase: 0 0
----- executor 2 signal number : 6885
----- executor 2 executes write_coverage_signal cov->size 14579, flag collect 0
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5196
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 877
executor 2 server cover_cnt 8 output_pos_value 16094
2023/03/27 22:35:01 for select break: 1
2023/03/27 22:35:01 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:01 wg wait finish
2023/03/27 22:35:01 ------ all executors finish execution
time breakdown 2: 7, 33, 0
2023/03/27 22:35:01 exec time: 36
2023/03/27 22:35:01 ----- PS len: 4
before receive testcase: 0 1
2023/03/27 22:35:01 [CLIENT] executor 3 has 12 replies
2023/03/27 22:35:01 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:01 [SERVER] executor 2 has 8 replies
2023/03/27 22:35:01 [SERVER] executor 0 has 2 replies
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/27 22:35:01 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 72 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 22:35:01 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1420 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 1062 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 6885 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 5196 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:35:01 ------- fuzzer executor 2 receive 877 signal and 0 cover from userspace component
2023/03/27 22:35:01 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:01 ----- no new client coverage: false, true
2023/03/27 22:35:01 mutate testcase with failures
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- mutateArg()
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- mutateArg()
2023/03/27 22:35:01 ----- insertCall()
2023/03/27 22:35:01 ----- mutateArg()
2023/03/27 22:35:01 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:01 prog length: 20
2023/03/27 22:35:01 HasCrashFail:false HasNetFail:false
22:35:01 ---executing program 0:
---
---
---
ftruncate(0xffffffffffffffff, 0x7ff)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file0\x00', 0x171942, 0x2)
fsetxattr$security_ima(r0, &(0x7f00000002c0), &(0x7f0000000580)=ANY=[@ANYBLOB="35de35d1e520620986fe81bae84bfb985397561f48db28638abd082fb4e1524a41eaeada43680ff1533b85193cacd8c1fc4da4d44406a5d9de231a25a69a62edd00c0b7b46630fc7b7602e86c76aff623534c936f16edee4064a233e13cff18f03eb23355e2e009b974adbb6e3e2783ebeaa81d433757b61dca1ed266a7470acf4fba08da3c23490c600871205e2f889836bfc7452dde4d268735b1ede4816d33c3893cf292e15bce0027f34d91ef9d175d58d26199296cb7ba802fa7d031ad917955914"], 0x2, 0x0)
sync()
sync()
pwrite64(r0, &(0x7f0000000300)="8a4ecf184da32d67fb7071c7c7a2babc2cac365a3698b53e17649fd75ae736c0118777fdf224c4037405558ed00fcaadfec37b7930f36798321f12930854999c2a3854516c6f3cf90a5bed635923d1bfc387eeba84ae7adca2a6d5ff07b4621be1864af28de7800d1f2778ba80b76efb34f9fed8e7da4e6575105882af4fbe01154a6770153aff34d34e505bac75104e9e606823", 0x94, 0xff)
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x20)
lchown(&(0x7f0000000240)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
sync()
open(&(0x7f0000000080)='./file1\x00', 0xf29f83, 0x0)
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x182, 0x0)
readlink(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)=""/7, 0x7)
symlinkat(&(0x7f0000000040)='./file1\x00', r1, &(0x7f0000000140)='./file1\x00')
renameat(r1, &(0x7f0000000380)='./file1\x00', r1, &(0x7f00000003c0)='./file1\x00')
setxattr$incfs_size(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)=0x20, 0x8, 0x2)
fcntl$dupfd(r1, 0x406, r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2992
remove dir: /root/cephfs-client/dfs-0-422
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
receive_execute: 9, 14
receive_execute: 8, 14
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-423 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-423
receive_execute: 3, 14
receive_execute: 11, 14
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 53
cover_reset in execute_call
----- executor 3 write_call_output, size 744, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 744, flag collect 0
----- executor 3 signal number : 242
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 411, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 411, flag collect 0
----- executor 3 signal number : 22
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 789, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 789, flag collect 0
----- executor 3 signal number : 41
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 505, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 505, flag collect 0
----- executor 3 signal number : 39
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 293, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 293, flag collect 0
----- executor 3 signal number : 62
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2000, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 98, pid 2000, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 98, flag collect 0
----- executor 3 signal number : 59
----- completed 17
----- executor 3 write_call_output, size 98, pid 2000, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 98, flag collect 0
----- executor 3 signal number : 0
----- completed 18
----- executor 3 write_call_output, size 98, pid 2000, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 98, flag collect 0
----- executor 3 signal number : 0
----- completed 19
----- executor 3 write_call_output, size 354, pid 2000, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 354, flag collect 0
----- executor 3 signal number : 101
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4876, 3, 0
execute_one time: 0, 4879
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1787, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 53
----- executor 0 executes write_coverage_signal cov->size 2429, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 9418, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 1604, flag collect 0
----- executor 0 signal number : 844
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1522
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 955
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1689
----- executor 2 executes write_coverage_signal cov->size 1181, flag collect 0
----- executor 2 signal number : 114
----- executor 2 executes write_coverage_signal cov->size 3450, flag collect 0
----- executor 0 signal number : 585
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 122
----- executor 0 executes write_coverage_signal cov->size 3487, flag collect 0
----- executor 2 signal number : 423
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 530
----- executor 0 executes write_coverage_signal cov->size 4148, flag collect 0
----- executor 0 signal number : 517
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
time breakdown 1: 22, 4883, 0
before receive testcase: 0 0
time breakdown 3: 25, 4882, 0
before receive testcase: 0 0
----- executor 0 signal number : 155
----- executor 0 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 849
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7161
----- executor 2 executes write_coverage_signal cov->size 24136, flag collect 0
----- executor 2 signal number : 2955
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 416
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
----- executor 2 signal number : 209
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 588
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2056
----- executor 2 executes write_coverage_signal cov->size 1860, flag collect 0
----- executor 2 signal number : 311
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2756
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 2760, flag collect 0
----- executor 0 signal number : 58
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 0 signal number : 63
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2760, flag collect 0
----- executor 0 signal number : 13
executor 0 server cover_cnt 19 output_pos_value 8658
----- executor 2 signal number : 4153
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2006
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 4892, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 4918
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 20 replies
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 0 has 19 replies
2023/03/27 22:35:06 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 53 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:06 [SERVER] executor 2 has 18 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1522 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1689 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 114 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 423 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 7161 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 2955 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 416 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 209 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 242 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 2056 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 311 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 4153 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 2006 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 992 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 844 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 955 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 585 signal and 0 cover from userspace component
----- executor 2 signal number : 992
----- executor 2 executes write_coverage_signal cov->size 645, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
executor 2 server cover_cnt 18 output_pos_value 24329
time breakdown 2: 17, 4904, 0
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 122 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 530 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 517 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 155 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 849 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 588 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 2756 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 58 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 63 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 101 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2458 open open
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 4
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
open(&(0x7f0000000340)='./file0\x00', 0x8040, 0x0)
llistxattr(&(0x7f0000000080)='./file0\x00', 0x0, 0x0)
open(&(0x7f0000000100)='./file0/file0\x00', 0x40400, 0x18e)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000040), &(0x7f00000000c0), 0x2, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 712
remove dir: /root/cephfs-client/dfs-0-423
remove dir time 18
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-424 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-424
receive_execute: 26, 19
receive_execute: 5, 19
receive_execute: 17, 19
receive_execute: 26, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2007, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 2007, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 68
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2007, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2007, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
time breakdown 3: 45, 5, 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4242, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11567, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4908
----- executor 2 executes write_coverage_signal cov->size 8513, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 36, 5, 0
before receive testcase: 0 0
time breakdown 1: 45, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 567
executor 2 server cover_cnt 4 output_pos_value 6817
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 25
2023/03/27 22:35:06 ----- PS len: 4
time breakdown 2: 24, 6, 0
2023/03/27 22:35:06 [CLIENT] executor 3 has 4 replies
2023/03/27 22:35:06 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 4 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 4908 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 567 signal and 0 cover from userspace component
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2780 readlink readlink
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 13
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0xa8)
lsetxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000440)=@md5={0x1, "267089c315813e9fd12941346add918d"}, 0x11, 0x0)
readlink(&(0x7f0000000180)='./file0\x00', &(0x7f0000000480)=""/65, 0x41)
setxattr$trusted_overlay_redirect(&(0x7f0000000500)='./file0\x00', &(0x7f0000000540), &(0x7f0000000580)='./file0\x00', 0x8, 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x147)
readlink(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)=""/119, 0x77)
fsync(r0)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000640)="56306807a0c0311131479cebfc4f67dd124835d3ef444ef06bb2761045a152837b871ee65db1a281884b564637b7845c0782b07821a2a118bf55eba5c15d95ed9f46d3c3cb9158aa40eda6c73c12cfdd4e280b2dc35ff34cb9e1c565fa5bff3f8e361f0d8ff5f3385c8e2b6d8908db589919ddbe87a7e90b40e7a384d62dad41d0606edcff393761a46b2fb4c935d2c2793d8a5a0def63d1893248f760b3dccd712d320da952245b3ba3f6997c6963abea67883fabe2e7945c2ab5c30435144875f42c4f09f9d3112373e20bbb8e7a20d421fe710caa63b218905eb8760f2f2043a0debc40f3c63e9eaabc18e1d4ac80087bbdc81c2648691e30adaf0b840d2738cf868a72d3c4153290cc3a2df4bf44efe20ede9ed98c9137a36ddd437569579d3fe05f8789ed4f7c5f70476d51155397c56f5b81587b26c9131aa81f89e6abdcdb8ffecdcb1bc56b33c3f2b23352f5f5ff89e81e889a8a93148a2f7141801e2339df6cdf70638ccd7a0e9851284382c15fbd160fdc702cc0d1e5f18d49fa9a00631a3db12b4ece1b0705837d51991ae262b340e799d46095c9a590a043308829c80264dd32d79ce675a1090cc4d4112c8b3638d184a200cff7bbbf8e42bec46146ce3445060b085ac07c4de1cec20c4bb8c5a400def3e1b34b24f09475ab9e69354e15ff73c3f2aa5052ba736d37d5721b04913f17cb9cfd572fcd14e83f88c5f6a26565e25c1ca0c389f93c58da18f278c7503cf3562d0ea007b2360123bed723906ee248797a110704e54b2d159cd686b77937a27f40621d5791052ee53963a9ea911ab18e9f4e3a668f84af31cb73a4253dc70f15b97d48048579fcf1664b7a25dde0b56bfcfd31c5fb53391a6bbb", 0x271, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)='./file0\x00', 0x8, 0x2)
fsetxattr$security_smack_transmute(r0, &(0x7f00000005c0), &(0x7f0000000600), 0x4, 0x1)
lremovexattr(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900)=@random={'security.', 'security.SMACK64TRANSMUTE\x00'})
llistxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=""/73, 0x49)
lchown(&(0x7f0000000340)='./file0\x00', 0xee00, 0xee00)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3192
remove dir: /root/cephfs-client/dfs-0-424
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-425 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-425
receive_execute: 3, 17
receive_execute: 2, 17
receive_execute: 1, 15
receive_execute: 3, 17
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 163
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 262, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 262, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2010, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 190
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 387, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 387, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 11
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 131, pid 2010, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 131, flag collect 0
----- executor 3 signal number : 1
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 242, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 242, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 119, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 119, flag collect 0
----- executor 3 signal number : 9
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 2010, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 83
----- completed 13
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 11, 0
execute_one time: 1, 20
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 23, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1279, flag collect 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 30137, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 1327, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 604
----- executor 0 executes write_coverage_signal cov->size 1477, flag collect 0
----- executor 0 signal number : 606
executor 0 server cover_cnt 3 output_pos_value 1280
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 23, 0
before receive testcase: 0 0
----- executor 2 signal number : 1420
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 1075
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7231
----- executor 2 executes write_coverage_signal cov->size 24267, flag collect 0
----- executor 2 signal number : 3911
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2143
executor 2 server cover_cnt 7 output_pos_value 15874
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 47
2023/03/27 22:35:06 ----- PS len: 4
time breakdown 2: 16, 30, 0
2023/03/27 22:35:06 [CLIENT] executor 3 has 13 replies
2023/03/27 22:35:06 [SERVER] executor 0 has 3 replies
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 7 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1420 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1075 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 7231 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 3911 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 2143 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 604 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 606 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 163 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 190 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2344 linkat linkat
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 13
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000400)='./file1\x00')
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r2 = openat(r1, &(0x7f0000000140)='./file1\x00', 0x262dc1, 0x0)
getdents(r0, &(0x7f0000000180)=""/173, 0xad)
r3 = open(&(0x7f0000000100)='./file1\x00', 0x101480, 0x1a)
linkat(r3, &(0x7f0000000240)='./file1\x00', r0, &(0x7f0000000280)='./file1\x00', 0x0)
r4 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
fstat(r4, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fstat(r2, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r6=>0x0})
setxattr$system_posix_acl(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000380)='system.posix_acl_default\x00', &(0x7f0000000540)={{}, {0x1, 0x2}, [{0x2, 0x3}, {0x2, 0x3, 0xee00}, {0x2, 0x5}, {0x2, 0x6, r5}, {0x2, 0x4, r6}], {0x4, 0x3}, [{0x8, 0x4}, {0x8, 0x1, 0xffffffffffffffff}], {0x10, 0x1}, {0x20, 0x4}}, 0x5c, 0x3)
getdents(r4, &(0x7f0000000300)=""/98, 0x62)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3472
remove dir: /root/cephfs-client/dfs-0-425
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
receive_execute: 10, 10
receive_execute: 1, 10
receive_execute: 10, 10
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-426 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-426
receive_execute: 11, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2015, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 42, pid 2015, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 3 signal number : 23
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2015, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 82, pid 2015, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 3 signal number : 44
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
time breakdown 3: 21, 11, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 13169, flag collect 0
----- executor 2 signal number : 930
----- executor 2 executes write_coverage_signal cov->size 26327, flag collect 0
time breakdown 0: 20, 12, 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 12, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 6663
----- executor 2 executes write_coverage_signal cov->size 18192, flag collect 0
----- executor 2 signal number : 3681
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18355, flag collect 0
----- executor 2 signal number : 1092
executor 2 server cover_cnt 7 output_pos_value 13848
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 26
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 13 replies
2023/03/27 22:35:06 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 2 has 7 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 11, 16, 0
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 930 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 6663 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 44 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 3681 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1092 signal and 0 cover from userspace component
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 5
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x1)
open(&(0x7f0000000080)='./file1/file0\x00', 0x103000, 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1/file0\x00', 0x268202, 0x40)
symlinkat(&(0x7f0000000100)='./file1\x00', r0, &(0x7f0000000180)='./file0\x00')
removexattr(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)=@known='system.posix_acl_default\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-426
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-427 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-427
receive_execute: 9, 9
receive_execute: 7, 10
receive_execute: 0, 10
receive_execute: 7, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2018, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2018, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2018, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2018, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2018, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1952, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
executor 2 server cover_cnt 3 output_pos_value 3248
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10, 7, 0
time breakdown 3: 18, 5, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
time breakdown 0: 17, 6, 0
before receive testcase: 0 0
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 18
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 5 replies
2023/03/27 22:35:06 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 3 replies
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
time breakdown 1: 17, 8, 0
before receive testcase: 0 0
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 171 dup2 dup2
2023/03/27 22:35:06 ----- insertCall()
before receive testcase: 0 0
2023/03/27 22:35:06 ----- generateCall 171 dup2 dup2
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 12
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000011c0)='./file0\x00', 0x101080, 0x10)
dup2(0xffffffffffffffff, r0)
r1 = open(&(0x7f0000000100)='./file0\x00', 0x8040, 0x0)
fsetxattr(r1, &(0x7f0000000280)=@random={'os2.', 'system.posix_acl_default\x00'}, &(0x7f00000002c0)='system.posix_acl_default\x00', 0x19, 0x2)
truncate(&(0x7f0000000000)='./file0\x00', 0x4)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file1\x00', 0x8, 0x0)
fchown(r1, 0x0, 0x0)
r2 = open(&(0x7f0000000100)='./file0\x00', 0x48042, 0x0)
r3 = fcntl$dupfd(0xffffffffffffffff, 0x406, r2)
dup2(r3, r0)
write$binfmt_misc(r2, &(0x7f0000000140)={'syz1', ""}, 0x1001)
open$dir(&(0x7f0000001180)='./file1\x00', 0x2, 0x1)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6032
remove dir: /root/cephfs-client/dfs-0-427
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-428 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-428
receive_execute: 4, 3
receive_execute: 5, 3
receive_execute: 0, 3
receive_execute: 2, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 657, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 227
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 31, pid 2021, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 3 signal number : 7
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 169
----- completed 5
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 52
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 184, pid 2021, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 184, flag collect 0
----- executor 3 signal number : 36
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 88
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 961, pid 2021, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 961, flag collect 0
----- executor 3 signal number : 299
----- completed 11
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 2021, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 4
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 24, 6, 0
execute_one time: 1, 30
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 27897, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 1654, flag collect 0
----- executor 0 signal number : 887
----- executor 2 signal number : 1423
----- executor 2 executes write_coverage_signal cov->size 29410, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 16215, flag collect 0
----- executor 0 signal number : 454
executor 0 server cover_cnt 2 output_pos_value 1348
2023/03/27 22:35:06 for select break: 1
----- executor 2 signal number : 1077
----- executor 2 executes write_coverage_signal cov->size 1181, flag collect 0
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 211
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7470
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
time breakdown 0: 7, 35, 0
time breakdown 1: 5, 34, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 18496, flag collect 0
----- executor 2 signal number : 752
----- executor 2 executes write_coverage_signal cov->size 30919, flag collect 0
time breakdown 3: 8, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 6244
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1795
executor 2 server cover_cnt 10 output_pos_value 19357
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 42
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 12 replies
2023/03/27 22:35:06 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 227 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 299 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 0 has 2 replies
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 887 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 454 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 2 has 10 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1423 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1077 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 211 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 7470 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 752 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 6244 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1795 signal and 0 cover from userspace component
time breakdown 2: 3, 39, 0
before receive testcase: 0 0
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2458 open open
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 6
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
rename(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)='./file0\x00')
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0)='system_u:object_r:initrc_var_run_t:s0\x00', 0x26, 0x0)
open(&(0x7f0000000400)='./file0\x00', 0x12001, 0x4d)
setxattr$trusted_overlay_opaque(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f00000003c0), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000080)='.\x00', &(0x7f0000000180), &(0x7f00000002c0)="7a428052f842e6db2efe05546cd4a46aed634b6a472382d347b6f6c389753fa752912bdc0be764e6424414f4a7e4b805a0b8f91ff41bf880c9245dc1b5badcec5dfe1e5ae749d19f3bb4c4a53e3519e158e72c85fd04172aec34865d7585e7c1d2db409a813253204500ca41eb97685ade1aac09411efbc0cca2456eabbf4fc0bbe261a6bbf3b9976ff4b996847418e3499e3e7fc4f66c5afd034776fc175fe0126d73b181d1f11ca895f72e55be363baa613951951971872174e8181c674fe105152f010079cf9b6ef520bdfe6b1a53c4783e95962a", 0xd6, 0x1)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1528
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-428
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-429 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-429
receive_execute: 11, 9
receive_execute: 5, 9
receive_execute: 10, 9
receive_execute: 9, 9
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2024, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2024, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2024, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 108
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2024, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2024, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 429, pid 2024, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 429, flag collect 0
----- executor 3 signal number : 11
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 671, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10555, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 299
----- executor 2 executes write_coverage_signal cov->size 25864, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 12, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 20, 11, 0
before receive testcase: 0 1
----- executor 2 signal number : 5659
----- executor 2 executes write_coverage_signal cov->size 343, flag collect 0
----- executor 2 signal number : 239
----- executor 2 executes write_coverage_signal cov->size 26055, flag collect 0
----- executor 2 signal number : 668
executor 2 server cover_cnt 6 output_pos_value 8240
2023/03/27 22:35:06 for select break: 1
time breakdown 2: 14, 14, 0
before receive testcase: 0 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 23
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 6 replies
2023/03/27 22:35:06 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 11 signal and 0 cover from executor 3
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 18, 12, 0
before receive testcase: 0 0
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 6 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 299 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 5659 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 239 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 668 signal and 0 cover from userspace component
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2462 openat openat
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 5
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x509242, 0x0)
ftruncate(r0, 0x0)
fcntl$getownex(r0, 0x10, &(0x7f0000000080)={0x0, <r1=>0x0})
fcntl$lock(0xffffffffffffffff, 0x7, &(0x7f00000000c0)={0x0, 0x4, 0x8000, 0x85, r1})
openat(r0, &(0x7f0000000040)='./file0\x00', 0x20d02, 0x1a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/cephfs-client/dfs-0-429
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-430 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-430
receive_execute: 3, 14
receive_execute: 6, 14
receive_execute: 5, 14
receive_execute: 5, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2027, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2027, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2027, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2027, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2027, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 0, 2
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 21, 4, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 1 output_pos_value 11
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 5, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 5, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 20
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 5 replies
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 17, 6, 0
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 1 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2341 lchown lchown
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3761 stat stat
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 15
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
stat(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000600))
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
fsetxattr(r0, &(0x7f0000000140)=@known='trusted.syz\x00', &(0x7f00000001c0)='\xbe\xe9\x00', 0x3, 0x0)
fremovexattr(r0, &(0x7f0000000200)=@known='trusted.overlay.metacopy\x00')
fstat(0xffffffffffffffff, &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000500)='./file0\x00', 0x0, r1)
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0x0)
unlink(&(0x7f0000000240)='./file0\x00')
setxattr$trusted_overlay_origin(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x0)
llistxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=""/63, 0x3f)
truncate(&(0x7f0000000000)='./file0\x00', 0x100000001)
r2 = dup2(r0, r0)
fsetxattr$trusted_overlay_nlink(r2, &(0x7f0000000480), &(0x7f00000004c0)={'U+', 0x8}, 0x16, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400), &(0x7f0000000440)=@ng={0x4, 0x10, "98e30625f82b53a74714aa4d014e"}, 0x10, 0x2)
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2776
remove dir: /root/cephfs-client/dfs-0-430
remove dir time 7
-----finish removing dir
receive_execute: 0, 9
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-431 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-431
receive_execute: 2, 8
receive_execute: 1, 9
receive_execute: 1, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 444
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 180, pid 2030, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 3 signal number : 130
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2030, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2030, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 102
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 499, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 499, flag collect 0
----- executor 3 signal number : 54
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 439, pid 2030, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 439, flag collect 0
----- executor 3 signal number : 130
----- completed 13
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2030, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 1, 10
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 10, 13, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14021, flag collect 0
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 22009, flag collect 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 8110
----- executor 2 executes write_coverage_signal cov->size 2827, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 21870, flag collect 0
----- executor 2 signal number : 3526
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 10, 17, 0
before receive testcase: 0 1
----- executor 2 signal number : 1928
executor 2 server cover_cnt 8 output_pos_value 16434
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 27
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 15 replies
2023/03/27 22:35:06 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 444 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 8 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 8110 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 3526 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1928 signal and 0 cover from userspace component
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
time breakdown 2: 9, 18, 0
before receive testcase: 0 1
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2753 read read
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2343 link link
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 13
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x460043, 0x152)
r0 = open(&(0x7f0000000100)='./file0\x00', 0x0, 0x1b0)
open(&(0x7f0000000000)='./file0\x00', 0x22282, 0x0)
lsetxattr$security_capability(&(0x7f0000000180)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v2={0x2000000, [{0xfffffff8}]}, 0x14, 0x0)
setxattr$user(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)='security.capability\x00', 0x14, 0x2)
link(&(0x7f0000000140)='./file1\x00', &(0x7f00000004c0)='./file1\x00')
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
chown(&(0x7f0000000400)='./file1\x00', r1, r2)
lchown(&(0x7f0000000200)='./file0\x00', 0xffffffffffffffff, 0x0)
open$dir(&(0x7f0000000500)='./file1\x00', 0x141240, 0x97)
read(0xffffffffffffffff, &(0x7f0000000300)=""/42, 0x2a)
lchown(&(0x7f0000000200)='./file0\x00', 0x0, 0xffffffffffffffff)
lgetxattr(&(0x7f0000000040)='./file1\x00', &(0x7f00000001c0)=@known='system.posix_acl_default\x00', &(0x7f0000000240)=""/176, 0xb0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2368
remove dir: /root/cephfs-client/dfs-0-431
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-432 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-432
receive_execute: 9, 8
receive_execute: 3, 9
receive_execute: 7, 9
receive_execute: 4, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 654, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 202
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2035, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1094, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28361, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1512
----- executor 2 executes write_coverage_signal cov->size 10190, flag collect 0
----- executor 0 signal number : 875
----- executor 2 signal number : 893
----- executor 2 executes write_coverage_signal cov->size 24796, flag collect 0
executor 0 server cover_cnt 1 output_pos_value 879
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 9, 0
----- executor 2 signal number : 6684
----- executor 2 executes write_coverage_signal cov->size 1685, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 9, 0
----- executor 2 signal number : 315
----- executor 2 executes write_coverage_signal cov->size 25809, flag collect 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 2620
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1165
executor 2 server cover_cnt 7 output_pos_value 13280
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 21
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 13 replies
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 0 has 1 replies
2023/03/27 22:35:06 ------- fuzzer executor 0 receive 875 signal and 0 cover from userspace component
2023/03/27 22:35:06 [SERVER] executor 2 has 7 replies
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1512 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 893 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 6684 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 315 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 2620 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1165 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 202 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2814 rmdir rmdir
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2814 rmdir rmdir
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2346 listxattr listxattr
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2341 lchown lchown
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 3761 stat stat
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 10
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000200)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
lsetxattr$user(&(0x7f0000000000)='./file1/file0/../file0\x00', &(0x7f0000000240), 0x0, 0x0, 0x2)
rmdir(&(0x7f0000000080)='./file1\x00')
lchown(&(0x7f0000019300)='./file2\x00', 0xffffffffffffffff, 0xee01)
stat(&(0x7f00000000c0)='./file1/file0\x00', &(0x7f0000000100))
stat(&(0x7f0000019340)='./file1/file0/../file0\x00', &(0x7f0000019380))
listxattr(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)=""/102400, 0x19000)
rmdir(&(0x7f00000001c0)='./file1/file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 17, 7, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1360
remove dir: /root/cephfs-client/dfs-0-432
time breakdown 2: 12, 12, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-433 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-433
receive_execute: 9, 25
receive_execute: 4, 25
receive_execute: 7, 25
receive_execute: 7, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 719, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 719, flag collect 0
----- executor 3 signal number : 152
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 39
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 542, pid 2039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 542, flag collect 0
----- executor 3 signal number : 5
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 4, 0
execute_one time: 1, 13
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1193, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 11992, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1113
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 32, 17, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7017
----- executor 2 executes write_coverage_signal cov->size 24972, flag collect 0
time breakdown 0: 32, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 4702
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 34, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1708
executor 2 server cover_cnt 7 output_pos_value 16024
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 46
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 10 replies
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:06 fuzzer receive 2 signal and 0 cover from executor 3
time breakdown 2: 29, 21, 0
before receive testcase: 0 0
2023/03/27 22:35:06 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 152 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:35:06 [SERVER] executor 2 has 7 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1113 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 7017 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 4702 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1708 signal and 0 cover from userspace component
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- mutateArg()
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 3
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
stat(&(0x7f0000000340)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=@known='security.selinux\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 464
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-433
remove dir time 30
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-434 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-434
receive_execute: 9, 31
receive_execute: 3, 31
receive_execute: 6, 31
receive_execute: 7, 31
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 160, pid 2042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 3 signal number : 53
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 469, pid 2042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 469, flag collect 0
----- executor 3 signal number : 96
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 7900, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1274
----- executor 2 executes write_coverage_signal cov->size 18288, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5408
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 11152, flag collect 0
----- executor 2 signal number : 582
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 7355
time breakdown 3: 40, 8, 0
before receive testcase: 0 1
time breakdown 1: 38, 10, 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 37, 10, 0
before receive testcase: 0 0
2023/03/27 22:35:06 for select break: 1
2023/03/27 22:35:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:06 wg wait finish
2023/03/27 22:35:06 ------ all executors finish execution
2023/03/27 22:35:06 exec time: 42
2023/03/27 22:35:06 ----- PS len: 4
2023/03/27 22:35:06 [CLIENT] executor 3 has 3 replies
2023/03/27 22:35:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:06 [SERVER] executor 2 has 5 replies
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 1274 signal and 0 cover from userspace component
2023/03/27 22:35:06 [SERVER] executor 0 has 0 replies
time breakdown 2: 34, 11, 0
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 5408 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:35:06 ------- fuzzer executor 2 receive 582 signal and 0 cover from userspace component
2023/03/27 22:35:06 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/27 22:35:06 fuzzer receive 96 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:35:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:06 ----- no new client coverage: false, true
2023/03/27 22:35:06 mutate testcase with failures
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2809 rename rename
2023/03/27 22:35:06 ----- insertCall()
2023/03/27 22:35:06 ----- generateCall 2458 open open
2023/03/27 22:35:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:06 prog length: 9
2023/03/27 22:35:06 HasCrashFail:false HasNetFail:false
22:35:06 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)={0x0, 0xfb, 0x1001, 0x0, 0x0, "52a5f40dec6f79cec8bac034a53b9489", ""}, 0x1001, 0x0)
lsetxattr$security_selinux(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f00000013c0)='system_u:object_r:qemu_device_t:s0\x00', 0x23, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f0000001300)='./file0\x00', &(0x7f0000001340), &(0x7f0000001380), 0x2, 0x0)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000001280), &(0x7f00000012c0)='./file0\x00', 0x8, 0x3)
open$dir(&(0x7f0000000180)='./file0\x00', 0x400101, 0x40)
open(&(0x7f0000001480)='./file0/file0\x00', 0x1086c0, 0x90)
rename(&(0x7f0000001400)='./file0\x00', &(0x7f0000001440)='./file0/file0\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64\x00', &(0x7f00000000c0)={'trusted.overlay.upper\x00'}, 0x17, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6384
remove dir: /root/cephfs-client/dfs-0-434
remove dir time 9
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-435 successfully
receive_execute: 4, 13
current dir: executor 3: /root/cephfs-client/dfs-0-435
receive_execute: 3, 13
receive_execute: 6, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 618, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 139
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 420, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 144, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 2045, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 4, 0
execute_one time: 1, 10
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 13, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1288, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 21719, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 15, 0
before receive testcase: 0 0
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6777
----- executor 2 executes write_coverage_signal cov->size 1077, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 2559, flag collect 0
----- executor 2 signal number : 1144
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1750
executor 2 server cover_cnt 8 output_pos_value 12451
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:07 wg wait finish
2023/03/27 22:35:07 ------ all executors finish execution
2023/03/27 22:35:07 exec time: 30
2023/03/27 22:35:07 ----- PS len: 4
2023/03/27 22:35:07 [CLIENT] executor 3 has 9 replies
2023/03/27 22:35:07 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 1 has 0 replies
time breakdown 2: 16, 17, 0
2023/03/27 22:35:07 [SERVER] executor 2 has 8 replies
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 6777 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1144 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1750 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:35:07 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:07 ----- no new client coverage: false, true
2023/03/27 22:35:07 mutate testcase with failures
2023/03/27 22:35:07 ----- insertCall()
2023/03/27 22:35:07 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/27 22:35:07 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:07 prog length: 3
2023/03/27 22:35:07 HasCrashFail:false HasNetFail:false
22:35:07 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x40, 0x0)
read(r0, &(0x7f0000000000)=""/253, 0xfd)
fcntl$setpipe(r0, 0x407, 0x401)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 408
remove dir: /root/cephfs-client/dfs-0-435
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-436 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-436
receive_execute: 8, 23
receive_execute: 4, 23
receive_execute: 7, 23
receive_execute: 7, 23
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2049, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 2049, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 157
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2049, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 31, 4, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11614, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 30, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 4906
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 6784
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:07 wg wait finish
2023/03/27 22:35:07 ------ all executors finish execution
2023/03/27 22:35:07 exec time: 30
2023/03/27 22:35:07 ----- PS len: 4
time breakdown 2: 27, 7, 0
2023/03/27 22:35:07 [CLIENT] executor 3 has 3 replies
2023/03/27 22:35:07 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 157 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 2 has 4 replies
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 4906 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/27 22:35:07 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:07 ----- no new client coverage: false, true
2023/03/27 22:35:07 mutate testcase with failures
2023/03/27 22:35:07 ----- insertCall()
2023/03/27 22:35:07 ----- generateCall 2750 pwritev pwritev
2023/03/27 22:35:07 ----- splice()
2023/03/27 22:35:07 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:07 prog length: 11
2023/03/27 22:35:07 HasCrashFail:false HasNetFail:false
22:35:07 ---executing program 0:
---
---
---
pwritev(0xffffffffffffffff, &(0x7f0000000780)=[{&(0x7f0000000000)="cd2c07b23ef81b4f0d0d84fcaff0be90f581373dbeb9082c75adcef84226d7bca202a7ecf921fcba41198f25d0fe6639f10f0785e900105fbedf9100bfc7cbbacf66aaf73c21a5a88fe135135e50a4cf90ecc06de95457618c6df2c3d8d87a2b312d3e39e49ce74a8acc98784128e3b2642527d6e5fe3e09e4f1adeae03845a0c9ed773fe5c486f0ef0335133d0280e586143e2110ca3abceed07caea319c593eff5fb37686cfa68ea85ca", 0xab}, {&(0x7f0000000180)="99a7df1f9d4ef20c2078e80f4766c3a374e9fdd651c026bc3d78a474f293a44b181bbe9ebcc7d954c133cc39a5d243831b7d2bc3bd1358e2d820bca90ec5cb532e786f1b5615b2e70d9638732a9b3363d7c79f8b42f5a39036", 0x59}, {&(0x7f0000000200)="46267c1cb9a038c0089e3975ef3b608d", 0x10}, {&(0x7f00000005c0)="61c6f3e72cdd3c5a8cd93bfedad4aeb621edbc3cf5f70528a03f635cf91ec67ba6dc45471bbffccd554fd06740057f874c3205c0ce11cb1dc97497dc3fd512e583c4925f887141f320ae015a125d56d0cf2df8fef8929da3f47b426aae5927a8e23f9f91d672f4cfc40254710170e08a3e876f4880fb5caa1e6d2cef6599f371b3075dc50fee6581be22de93bfe0cf96e332dab034dc8fbc6d07ead22d432f5c25137b242a7086e3f65be823c4aaaf763747053884fb05730d5f0d06ad6b82a87cb19c8578f3d2ddbd0c", 0xca}, {&(0x7f00000003c0)="999cbf43eb0372425a2dcf0aee3b99c06fbc1f25dc410b32a51484cc692455327681066fa8a2306e90af6ae9831e17dc83c90cb2add8f0b69140cd42e2aa9103829567399b26a2ca603204ceed826db7b6b1d4fae439d67b7090ad585bc67bc4b0019b5d13c8405eb8103be61304a9172e43781af8ff32c88050c3381982a461", 0x80}, {&(0x7f0000000480)="a414", 0x2}, {&(0x7f00000006c0)="c530fafc4d23ae280a9f7da88bcffaa5e58bbea0afbc5bfad329250f1b31af995c5cf4e024c13403012fa756f956d6f278387e4fc6fd0d2479f84415829749867dd7b9d91fae4c8683b8a7100f6408ee6ec12ba4b791b76aa5845740d878a04c00558422ff3fd9d1af8ae7bcd710f3b0c3e0caf9fd4e113cc1a884296137b0c499039d1779fa653b2e3db585d6dbf96d79c299ca72d9", 0x96}], 0x7, 0x6c68, 0x6)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file1\x00')
open(&(0x7f0000000500)='./file0\x00', 0x30440, 0x0)
sync()
open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
truncate(0x0, 0x5)
lsetxattr$trusted_overlay_upper(&(0x7f0000000580)='./file0\x00', &(0x7f0000000440), &(0x7f00000005c0)=ANY=[], 0x5c, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0, 0x0, 0x3)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
stat(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3320
remove dir: /root/cephfs-client/dfs-0-436
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-437 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-437
receive_execute: 5, 13
receive_execute: 2, 13
receive_execute: 4, 12
receive_execute: 4, 13
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2052, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 158
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 654, pid 2052, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 227
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 585, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 585, flag collect 0
----- executor 3 signal number : 88
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 66
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 418, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 3 signal number : 20
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 532, pid 2052, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 3 signal number : 19
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 24, 7, 0
execute_one time: 0, 31
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 18, 32, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1483, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 21051, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1412
----- executor 2 executes write_coverage_signal cov->size 32360, flag collect 0
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1084
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 16, 34, 0
before receive testcase: 0 0
time breakdown 0: 17, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 7733
----- executor 2 executes write_coverage_signal cov->size 10892, flag collect 0
----- executor 2 signal number : 545
----- executor 2 executes write_coverage_signal cov->size 30717, flag collect 0
----- executor 2 signal number : 4931
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1989
executor 2 server cover_cnt 8 output_pos_value 17789
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:07 wg wait finish
2023/03/27 22:35:07 ------ all executors finish execution
2023/03/27 22:35:07 exec time: 52
2023/03/27 22:35:07 ----- PS len: 4
2023/03/27 22:35:07 [CLIENT] executor 3 has 11 replies
2023/03/27 22:35:07 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 2 has 8 replies
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:35:07 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:07 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 227 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 66 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1412 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1084 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 7733 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 4931 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1989 signal and 0 cover from userspace component
2023/03/27 22:35:07 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:07 ----- no new client coverage: false, true
time breakdown 2: 15, 39, 0
before receive testcase: 0 1
2023/03/27 22:35:07 mutate testcase with failures
2023/03/27 22:35:07 ----- insertCall()
2023/03/27 22:35:07 ----- generateCall 3970 unlink unlink
2023/03/27 22:35:07 ----- insertCall()
2023/03/27 22:35:07 ----- generateCall 2343 link link
2023/03/27 22:35:07 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:07 prog length: 5
2023/03/27 22:35:07 HasCrashFail:false HasNetFail:false
22:35:07 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000100)='./file0\x00', r0, 0xffffffffffffffff)
link(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
unlink(&(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/cephfs-client/dfs-0-437
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-438 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-438
receive_execute: 11, 10
receive_execute: 9, 9
receive_execute: 10, 9
receive_execute: 4, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 622, pid 2057, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2057, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 148
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 486, pid 2057, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 486, flag collect 0
----- executor 3 signal number : 120
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2057, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2057, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 25
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 13, 5, 0
execute_one time: 0, 18
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 19, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1101, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 16364, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 24855, flag collect 0
----- executor 2 signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 21, 0
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 8408
----- executor 2 executes write_coverage_signal cov->size 3393, flag collect 0
time breakdown 1: 19, 22, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 365
----- executor 2 executes write_coverage_signal cov->size 32758, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 5803
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1465
executor 2 server cover_cnt 8 output_pos_value 18568
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:35:07 wg wait finish
2023/03/27 22:35:07 ------ all executors finish execution
2023/03/27 22:35:07 exec time: 36
2023/03/27 22:35:07 ----- PS len: 4
2023/03/27 22:35:07 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:07 [CLIENT] executor 3 has 5 replies
2023/03/27 22:35:07 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 2 has 8 replies
2023/03/27 22:35:07 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:07 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 120 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
time breakdown 2: 13, 26, 0
before receive testcase: 0 1
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1038 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 8408 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 365 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 5803 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1465 signal and 0 cover from userspace component
2023/03/27 22:35:07 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:07 ----- no new client coverage: false, true
2023/03/27 22:35:07 mutate testcase with failures
2023/03/27 22:35:07 ----- insertCall()
2023/03/27 22:35:07 ----- generateCall 3761 stat stat
2023/03/27 22:35:07 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:07 prog length: 10
2023/03/27 22:35:07 HasCrashFail:false HasNetFail:false
22:35:07 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x40ac1, 0x0)
truncate(&(0x7f0000000200)='./file1\x00', 0x2000200)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x680, 0x13)
stat(&(0x7f0000000100)='./file1\x00', &(0x7f0000000380))
open(&(0x7f00000002c0)='./file1\x00', 0x20000, 0x28)
fstat(r1, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
symlinkat(&(0x7f0000000240)='./file1\x00', r0, &(0x7f0000000280)='./file1\x00')
unlink(&(0x7f00000000c0)='./file1\x00')
chown(&(0x7f0000000080)='./file1\x00', r2, 0xee00)
lgetxattr(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)=@known='com.apple.FinderInfo\x00', &(0x7f00000001c0)=""/38, 0x26)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1456
remove dir: /root/cephfs-client/dfs-0-438
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-439 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-439
receive_execute: 11, 6
receive_execute: 8, 7
receive_execute: 8, 7
receive_execute: 4, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 178
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 591, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 591, flag collect 0
----- executor 3 signal number : 89
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2060, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2060, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 496, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 496, flag collect 0
----- executor 3 signal number : 25
----- completed 8
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 13, 14, 0
execute_one time: 1, 27
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 30, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1091, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1441
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1071
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 31, 0
before receive testcase: 0 0
----- executor 2 signal number : 7913
----- executor 2 executes write_coverage_signal cov->size 2429, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 15, 33, 0
----- executor 2 signal number : 6264
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1890
executor 2 server cover_cnt 8 output_pos_value 18995
2023/03/27 22:35:07 for select break: 1
2023/03/27 22:35:07 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 34, 0
2023/03/27 22:35:07 wg wait finish
2023/03/27 22:35:07 ------ all executors finish execution
2023/03/27 22:35:07 exec time: 41
2023/03/27 22:35:07 ----- PS len: 4
2023/03/27 22:35:07 [CLIENT] executor 3 has 10 replies
2023/03/27 22:35:07 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 89 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/27 22:35:07 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:35:07 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:35:07 [SERVER] executor 0 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 1 has 0 replies
2023/03/27 22:35:07 [SERVER] executor 2 has 8 replies
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1441 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1071 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 7913 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 6264 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:35:07 ------- fuzzer executor 2 receive 1890 signal and 0 cover from userspace component
2023/03/27 22:35:07 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:35:07 ----- no new client coverage: false, true
2023/03/27 22:35:07 mutate testcase with failures
2023/03/27 22:35:07 ----- mutateArg()
2023/03/27 22:35:07 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:35:07 prog length: 20
2023/03/27 22:35:07 HasCrashFail:false HasNetFail:false
22:35:07 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x240000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000480)='./file0/file0\x00', 0x202080, 0x48)
r5 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r5})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0))
fcntl$lock(r3, 0x26, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9})
r6 = open(&(0x7f0000000380)='./file0\x00', 0x400880, 0x0)
dup2(r6, r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3840
remove dir: /root/cephfs-client/dfs-0-439
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-440 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-440
receive_execute: 4, 11
receive_execute: 8, 10
receive_execute: 3, 11
receive_execute: 6, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2063, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2063, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2063, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 217, pid 2063, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 217, flag collect 0
----- executor 3 signal number : 7
----- completed 18
----- executor 3 write_call_output, size 217, pid 2063, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 217, flag collect 0
----- executor 3 signal number : 2
----- completed 19
----- executor 3 write_call_output, size 223, pid 2063, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 223, flag collect 0
----- executor 3 signal number : 0
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83337, 1, 12
execute_one time: 1, 83350
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12647, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 12647, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 21039, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1466
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 18, 83353, 0
before receive testcase: 0 0
----- executor 2 signal number : 1832
----- executor 2 executes write_coverage_signal cov->size 18809, flag collect 0
----- executor 2 signal number : 232
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 447
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1214
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 754
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 587
----- executor 0 executes write_coverage_signal cov->size 2261, flag collect 0
----- executor 2 signal number : 8147
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 117
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 554
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3102
----- executor 2 executes write_coverage_signal cov->size 29320, flag collect 0
----- executor 0 signal number : 781
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1713
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 160
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 215
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 941
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 479
----- executor 2 executes write_coverage_signal cov->size 4371, flag collect 0
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 333
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 278
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 17, 83361, 0
before receive testcase: 0 0
----- executor 0 signal number : 694
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4055
----- executor 2 executes write_coverage_signal cov->size 69, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2834
----- executor 0 executes write_coverage_signal cov->size 112, flag collect 0
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1579
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2454
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1737
----- executor 2 executes write_coverage_signal cov->size 464, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 2431, flag collect 0
----- executor 2 signal number : 165
executor 2 server cover_cnt 18 output_pos_value 26569
----- executor 0 signal number : 1211
----- executor 0 executes write_coverage_signal cov->size 2270, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 283
----- executor 0 executes write_coverage_signal cov->size 5185, flag collect 0
----- executor 0 signal number : 97
----- executor 0 executes write_coverage_signal cov->size 2261, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 159
executor 0 server cover_cnt 24 output_pos_value 13624
2023/03/27 22:36:30 for select break: 1
time breakdown 2: 14, 83365, 0
before receive testcase: 0 0
2023/03/27 22:36:30 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:36:30 wg wait finish
2023/03/27 22:36:30 ------ all executors finish execution
2023/03/27 22:36:30 exec time: 83378
2023/03/27 22:36:30 ----- PS len: 4
2023/03/27 22:36:30 [CLIENT] executor 3 has 20 replies
2023/03/27 22:36:30 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:36:30 [SERVER] executor 1 has 0 replies
2023/03/27 22:36:30 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:36:30 [SERVER] executor 2 has 18 replies
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 [SERVER] executor 0 has 24 replies
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
time breakdown 0: 15, 83368, 0
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1466 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 54 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1832 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 1214 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 754 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 587 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 117 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 554 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 232 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 781 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 160 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 447 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 941 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 694 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 2834 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 8147 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 1579 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 1211 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 283 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 97 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 3102 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1713 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 479 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 333 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 4055 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 2454 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1737 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 0 receive 159 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:36:30 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:36:30 ----- no new client coverage: false, true
2023/03/27 22:36:30 mutate testcase with failures
2023/03/27 22:36:30 ----- insertCall()
2023/03/27 22:36:30 ----- generateCall 2343 link link
2023/03/27 22:36:30 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:36:30 prog length: 4
2023/03/27 22:36:30 HasCrashFail:false HasNetFail:false
22:36:30 ---executing program 0:
---
---
---
open(&(0x7f0000000180)='./file1\x00', 0x171940, 0x0)
open(&(0x7f00000001c0)='./file1\x00', 0x0, 0x0)
link(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file1\x00')
stat(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 544
remove dir: /root/cephfs-client/dfs-0-440
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 62
-----finish removing dir
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-441 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-441
receive_execute: 10, 67
receive_execute: 14, 67
receive_execute: 23, 67
receive_execute: 7, 68
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 2070, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2070, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2070, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2070, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
cover_reset in execute_call
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 90, 5, 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 7886, flag collect 0
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 20159, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 81, 6, 0
before receive testcase: 0 1
----- executor 2 signal number : 5700
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 7592
time breakdown 2: 77, 8, 0
before receive testcase: 0 1
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:36:30 wg wait finish
2023/03/27 22:36:30 ------ all executors finish execution
2023/03/27 22:36:30 exec time: 75
2023/03/27 22:36:30 ----- PS len: 4
2023/03/27 22:36:30 [CLIENT] executor 3 has 4 replies
2023/03/27 22:36:30 [SERVER] executor 1 has 0 replies
2023/03/27 22:36:30 [SERVER] executor 0 has 0 replies
2023/03/27 22:36:30 [SERVER] executor 2 has 4 replies
2023/03/27 22:36:30 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 5700 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 75, 6, 0
before receive testcase: 0 1
2023/03/27 22:36:30 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:36:30 ----- no new client coverage: false, true
2023/03/27 22:36:30 mutate testcase with failures
2023/03/27 22:36:30 ----- insertCall()
2023/03/27 22:36:30 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/27 22:36:30 ----- mutateArg()
2023/03/27 22:36:30 ----- mutateArg()
2023/03/27 22:36:30 ----- insertCall()
2023/03/27 22:36:30 ----- generateCall 3985 write write
2023/03/27 22:36:30 ----- insertCall()
2023/03/27 22:36:30 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:36:30 ----- mutateArg()
2023/03/27 22:36:30 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:36:30 prog length: 10
2023/03/27 22:36:30 HasCrashFail:false HasNetFail:false
22:36:30 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r1 = open(&(0x7f0000000040)='./file0\x00', 0x1, 0x0)
pwrite64(r1, &(0x7f0000000140)="cd", 0x1, 0x2)
r2 = openat(r0, &(0x7f00000001c0)='./file0\x00', 0x2002, 0x8)
write(r2, &(0x7f0000000200)="1e501c2751c13ece66be1c591be019f3ae81f5aaeb47daf29ae2ad4d959eece425b90249d2a744d521f5f3052a3bec360a8eeb431c5aa5934812190479bcd0f1d451edd423f353eb4a953f402548b0699d219d77b5b7db0c364181383a0eed8547a51b7c6be4e7c0bc6d7d61f16f6b0c78fe8f21526c45f5326ee97f828eae3dad38277835a3b5d758fef935ca8d9a2be1efec2a4c42b234032685b6fb58714cb4f29b57b3678185aa7340294490f469f97c1789db1c1ac0f5c0fb154811e2bd9ad90a88268f134aac4394ce2ef80abde4dc6decbc921df8992b90676c5d541a5fa368a00bf5af9daed80f5a643aa335d37fcb58b2911f", 0xf7)
r3 = open$dir(&(0x7f0000000300)='./file0\x00', 0x202100, 0xaf)
fcntl$dupfd(r0, 0x406, r3)
r4 = open$dir(&(0x7f0000000180)='./file0\x00', 0x22ad01, 0x110)
pwrite64(r4, &(0x7f0000001140)='\r', 0x1, 0xfffffffffffffff9)
setxattr$incfs_id(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={'0000000000000000000000000000000', 0x33}, 0x20, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1984
remove dir: /root/cephfs-client/dfs-0-441
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-442 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-442
receive_execute: 5, 38
receive_execute: 3, 38
receive_execute: 5, 38
receive_execute: 6, 36
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 549, pid 2073, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 549, flag collect 0
----- executor 3 signal number : 345
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2073, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2073, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 2073, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 65
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 3, 7
cover_reset in execute_call
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 43, 11, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10290, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8275, flag collect 0
----- executor 2 signal number : 883
----- executor 2 executes write_coverage_signal cov->size 14438, flag collect 0
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 42, 12, 0
----- executor 2 signal number : 5373
----- executor 2 executes write_coverage_signal cov->size 11673, flag collect 0
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2962
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 21573, flag collect 0
----- executor 2 signal number : 1780
before receive testcase: 0 0
executor 2 server cover_cnt 7 output_pos_value 12480
time breakdown 1: 43, 12, 0
before receive testcase: 0 0
2023/03/27 22:36:30 for select break: 1
2023/03/27 22:36:30 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:36:30 wg wait finish
2023/03/27 22:36:30 ------ all executors finish execution
2023/03/27 22:36:30 exec time: 52
2023/03/27 22:36:30 ----- PS len: 4
2023/03/27 22:36:30 [SERVER] executor 0 has 0 replies
2023/03/27 22:36:30 [SERVER] executor 2 has 7 replies
2023/03/27 22:36:30 [CLIENT] executor 3 has 10 replies
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:36:30 [SERVER] executor 1 has 0 replies
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 883 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 345 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 5373 signal and 0 cover from userspace component
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:36:30 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 2962 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:36:30 ------- fuzzer executor 2 receive 1780 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 2: 41, 14, 0
before receive testcase: 0 0
2023/03/27 22:36:30 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:36:30 ----- no new client coverage: false, true
2023/03/27 22:36:30 mutate testcase with failures
2023/03/27 22:36:30 ----- insertCall()
2023/03/27 22:36:30 ----- generateCall 2458 open open
2023/03/27 22:36:30 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:36:30 prog length: 8
2023/03/27 22:36:30 HasCrashFail:false HasNetFail:false
22:36:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x121040, 0x0)
r1 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r2 = fcntl$dupfd(r0, 0x406, r1)
flock(r2, 0x2)
open(&(0x7f0000000080)='./file0\x00', 0x40000, 0x20)
flock(r1, 0x1)
fcntl$lock(r2, 0x24, &(0x7f0000000040)={0x0, 0x3, 0x7ff, 0x1, 0xffffffffffffffff})
flock(r1, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1168
remove dir: /root/cephfs-client/dfs-0-442
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 4, 8
receive_execute: 4, 9
receive_execute: 5, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-443 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-443
receive_execute: 6, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2077, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2077, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2077, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2077, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2077, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2077, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 219, pid 2077, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 219, flag collect 0
----- executor 3 signal number : 1
----- completed 7
----- executor 3 write_call_output, size 224, pid 2077, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 0
----- completed 8
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83336, 1, 0
execute_one time: 1, 83337
2023/03/27 22:37:54 for select break: 1
executor 1 write_server_output
time breakdown 3: 15, 83339, 0
before receive testcase: 0 1
executor 0 write_server_output
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 25294, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 18707, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1005
----- executor 0 executes write_coverage_signal cov->size 25294, flag collect 0
----- executor 2 signal number : 1556
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 1881
----- executor 2 executes write_coverage_signal cov->size 20077, flag collect 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 83341, 0
before receive testcase: 0 0
----- executor 2 signal number : 236
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7809
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1214
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4518
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1777
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 337
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 213
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 481
----- executor 2 executes write_coverage_signal cov->size 14281, flag collect 0
----- executor 2 signal number : 682
----- executor 2 executes write_coverage_signal cov->size 21404, flag collect 0
----- executor 0 signal number : 820
----- executor 0 executes write_coverage_signal cov->size 2261, flag collect 0
----- executor 0 signal number : 117
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4135
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23154, flag collect 0
----- executor 2 signal number : 3261
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 554
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1476
----- executor 2 executes write_coverage_signal cov->size 87, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 2431, flag collect 0
----- executor 2 signal number : 165
executor 2 server cover_cnt 18 output_pos_value 28837
----- executor 0 signal number : 840
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 155
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 940
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 279
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 12, 83349, 0
before receive testcase: 0 0
----- executor 0 signal number : 490
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2602
----- executor 0 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 0 signal number : 33
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1477
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1177
----- executor 0 executes write_coverage_signal cov->size 2128, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 4880, flag collect 0
----- executor 0 signal number : 94
----- executor 0 executes write_coverage_signal cov->size 2128, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 162
executor 0 server cover_cnt 24 output_pos_value 12924
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 83367
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [CLIENT] executor 3 has 8 replies
2023/03/27 22:37:54 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 13, 83359, 0
2023/03/27 22:37:54 [SERVER] executor 0 has 24 replies
2023/03/27 22:37:54 [SERVER] executor 2 has 18 replies
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 1005 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 54 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1556 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1881 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 236 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 7809 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 4518 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1777 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 213 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 481 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 682 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 4135 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 1214 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 337 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 820 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 117 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 3261 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 554 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1476 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 840 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 155 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 940 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 279 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 490 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 2602 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 33 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 1477 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 1177 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 94 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 162 signal and 0 cover from userspace component
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 20
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
openat(r3, &(0x7f0000000480)='./file0/file0\x00', 0x202080, 0x4a)
r5 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r5})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x2)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r6=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r6})
r7 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r7, r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3896
remove dir: /root/cephfs-client/dfs-0-443
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-444 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-444
receive_execute: 30, 13
receive_execute: 28, 12
receive_execute: 20, 12
receive_execute: 10, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2083, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2083, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 214, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 3 signal number : 61
----- completed 14
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2083, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 2083, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 12
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2083, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 361, pid 2083, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 361, flag collect 0
----- executor 3 signal number : 29
----- completed 18
----- executor 3 write_call_output, size 316, pid 2083, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 0
----- completed 19
----- executor 3 write_call_output, size 315, pid 2083, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 1
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 131, 2, 1
execute_one time: 0, 134
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 43, 136, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 40, 138, 0
before receive testcase: 0 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 139, 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 154
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 [SERVER] executor 2 has 8 replies
2023/03/27 22:37:54 [CLIENT] executor 3 has 20 replies
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1089 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 7364 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 502 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 3743 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 2184 signal and 0 cover from userspace component
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1420, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13863, flag collect 0
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1089
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7364
----- executor 2 executes write_coverage_signal cov->size 6100, flag collect 0
----- executor 2 signal number : 502
----- executor 2 executes write_coverage_signal cov->size 16793, flag collect 0
----- executor 2 signal number : 3743
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28956, flag collect 0
----- executor 2 signal number : 2184
executor 2 server cover_cnt 8 output_pos_value 16377
time breakdown 2: 32, 142, 0
before receive testcase: 0 0
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 2462 openat openat
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 170 dup dup
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 222 fremovexattr fremovexattr
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 6
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000340)='./file0\x00', 0x551081, 0x0)
truncate(&(0x7f0000000200)='./file0\x00', 0x7fffffff)
r1 = openat(r0, &(0x7f0000000000)='./file0\x00', 0x400, 0x2)
setxattr$incfs_metadata(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000380)="", 0x1000, 0x1)
dup(r1)
fremovexattr(r1, &(0x7f00000000c0)=@known='user.incfs.id\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5024
remove dir: /root/cephfs-client/dfs-0-444
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-445 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-445
receive_execute: 9, 10
receive_execute: 4, 10
receive_execute: 8, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 7, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2088, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2088, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2088, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2088, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2088, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2088, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 16, 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 18, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 585, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 5333, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 19, 0
before receive testcase: 0 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 284
time breakdown 1: 18, 20, 0
----- executor 2 executes write_coverage_signal cov->size 1454, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 486
executor 2 server cover_cnt 4 output_pos_value 1235
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 31
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [CLIENT] executor 3 has 6 replies
2023/03/27 22:37:54 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 2 has 4 replies
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
time breakdown 2: 14, 21, 0
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 486 signal and 0 cover from userspace component
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 2458 open open
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 3967 truncate truncate
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 2344 linkat linkat
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 220 flock flock
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 13
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
r1 = dup2(r0, r0)
linkat(r1, &(0x7f00000000c0)='./file4\x00', r0, &(0x7f00000001c0)='./file3\x00', 0x1400)
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
truncate(&(0x7f0000000080)='./file0\x00', 0xf03)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
flock(0xffffffffffffffff, 0xd)
open(&(0x7f0000000040)='./file2\x00', 0x40001, 0x2)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1888
remove dir: /root/cephfs-client/dfs-0-445
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-446 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-446
receive_execute: 1, 7
receive_execute: 1, 8
receive_execute: 4, 7
receive_execute: 3, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
----- executor 3 write_call_output, size 515, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 864, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 864, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 31
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 464, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 464, flag collect 0
----- executor 3 signal number : 88
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 32
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2091, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 3
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 16, 15, 0
execute_one time: 1, 31
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 11, 33, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2243, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10, 34, 0
before receive testcase: 0 0
time breakdown 1: 9, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 1080
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7591
----- executor 2 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 2 signal number : 122
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5329
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 916
executor 2 server cover_cnt 8 output_pos_value 16540
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8, 40, 0
before receive testcase: 0 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 47
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [CLIENT] executor 3 has 13 replies
2023/03/27 22:37:54 [SERVER] executor 2 has 8 replies
2023/03/27 22:37:54 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1080 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 7591 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/27 22:37:54 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:54 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 5329 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 916 signal and 0 cover from userspace component
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 2810 renameat renameat
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 250 fsync fsync
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 3761 stat stat
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 6
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
fsync(0xffffffffffffffff)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0x4281c2, 0x0)
read(r0, &(0x7f0000000000)=""/253, 0xfd)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x100, 0x0)
stat(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000240))
renameat(r1, &(0x7f0000000140)='./file1\x00', r0, &(0x7f0000000180)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 832
remove dir: /root/cephfs-client/dfs-0-446
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-447 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-447
receive_execute: 11, 14
receive_execute: 11, 14
receive_execute: 4, 14
receive_execute: 10, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 2, 2
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 5, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2164
----- executor 2 executes write_coverage_signal cov->size 11047, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 1961, flag collect 0
----- executor 2 signal number : 380
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 6, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 4013
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 18, 7, 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 21
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [CLIENT] executor 3 has 6 replies
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 2 has 5 replies
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 380 signal and 0 cover from userspace component
time breakdown 1: 25, 7, 0
before receive testcase: 0 0
2023/03/27 22:37:54 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- splice()
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 13
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000340))
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
lsetxattr$security_selinux(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:sendmail_exec_t:s0\x00', 0x25, 0x2)
pwrite64(r0, &(0x7f0000000280)="6a5a5c4f401ad30c82741a3ad563e489058694bc63378aceab64c48a9fe932a8047a33448e3a47ab4e0b59f3a7e33a77246f05e66346558598dcb7770efc58920a6135fbb911fdbf98aaab51d8bfe74b0e3d3f46f0a87c71e7bdd91992e91e81308901efe5ac3e63e7a06d4a65fed583109b421ea50e0f07e98634cfe5c8fd9eed142d240df83aa903d6b2425ab511893ccd2633d8e71af648d56b8caadd7b", 0x9f, 0x100000001)
setxattr$incfs_id(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000240)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x98)
faccessat(r0, &(0x7f0000000140)='./file0\x00', 0x14)
r2 = dup2(r1, 0xffffffffffffffff)
write$binfmt_elf64(r2, &(0x7f0000000380)={{0x7f, 0x45, 0x4c, 0x46, 0x3f, 0xe4, 0x1b, 0x8, 0x6, 0x3, 0x3d, 0x3, 0xc6, 0x40, 0x123, 0x867a, 0x9b, 0x38, 0x2, 0x9, 0xf4ae, 0x8dd}, [{0x4, 0xe9, 0x480, 0x9, 0x8000000000000000, 0x3ff, 0x6, 0x7fff}], "bfda981c99592d52b46dd641061c8cde7ced2811c914891e4a56ec0c9aa084c79c0630778263b662709c2e98cff0c6c176bed47e0db9488d14a46b04007a94195358f4307d1ec0748e2a4a985c6ca38fdbe56aec1c6c2104300797f0ae2365dcc214f9dfcdaf3d637f464d5cc3d2b90efebf8fc18d4861f21ebdda019691dea365c23d89bdac46353e6db03e20396ec0fc04b38f11a442a29babba325d97401b80bb71e9574b13101ad630b25b", ['\x00', '\x00', '\x00']}, 0x425)
write(r1, &(0x7f0000000040)="9e", 0x400000)
r3 = open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
r4 = fcntl$dupfd(r3, 0x0, r3)
fcntl$lock(r4, 0x24, &(0x7f0000000040))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4792
remove dir: /root/cephfs-client/dfs-0-447
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-448 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-448
receive_execute: 3, 5
receive_execute: 1, 4
receive_execute: 2, 5
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 1, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 627, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 627, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 163
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1461, pid 2098, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1461, flag collect 0
----- executor 3 signal number : 902
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 293, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 293, flag collect 0
----- executor 3 signal number : 23
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 588, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 588, flag collect 0
----- executor 3 signal number : 102
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 53756, pid 2098, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 53756, flag collect 0
----- executor 3 signal number : 18
----- completed 10
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 589, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 589, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 306, pid 2098, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 306, flag collect 0
----- executor 3 signal number : 74
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 0, 0
execute_one time: 1, 24
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 898, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 7, 28, 0
----- executor 2 signal number : 1432
----- executor 2 executes write_coverage_signal cov->size 27357, flag collect 0
----- executor 2 signal number : 1067
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 7665
----- executor 2 executes write_coverage_signal cov->size 2829, flag collect 0
----- executor 2 signal number : 349
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 8, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 4940
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2107
executor 2 server cover_cnt 8 output_pos_value 17655
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 5, 35, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 43
2023/03/27 22:37:54 ----- PS len: 4
time breakdown 1: 5, 39, 0
2023/03/27 22:37:54 [CLIENT] executor 3 has 13 replies
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 2 has 8 replies
2023/03/27 22:37:54 fuzzer receive 163 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 902 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 23 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:37:54 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1432 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1067 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 74 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 7665 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 349 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 4940 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 2107 signal and 0 cover from userspace component
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 20
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
fsetxattr$security_ima(r0, &(0x7f0000000140), 0x0, 0x0, 0x0)
r1 = fcntl$dupfd(r0, 0x0, r0)
fsync(r1)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000000540)='./cgroup.net/syz1\x00', 0x1ff)
faccessat(0xffffffffffffffff, &(0x7f0000000140)='./file1\x00', 0x80)
lchown(&(0x7f0000000000)='.\x00', 0x0, 0xee01)
setxattr$incfs_id(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)={'0000000000000000000000000000000', 0x33}, 0x20, 0x2)
fcntl$setflags(0xffffffffffffffff, 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@sha1={0x1, "51dab1826b5617c4ec919823805749f6255311bf"}, 0x15, 0x3)
mkdir(&(0x7f0000000240)='./file1\x00', 0x20)
open(&(0x7f0000000280)='./file0\x00', 0x40, 0x1c0)
lremovexattr(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)=@known='user.incfs.id\x00')
r2 = open$dir(&(0x7f0000000040)='./file0\x00', 0x800, 0x100)
fcntl$getownex(r2, 0x10, &(0x7f00000000c0))
setxattr$smack_xattr_label(&(0x7f0000000480)='./file2\x00', &(0x7f00000004c0)='security.SMACK64IPOUT\x00', &(0x7f0000000880)=ANY=[@ANYBLOB="73656375726974792e696d6100006347a3c7d564c7debfcf02db7a980c30cea9dda0bd005bf6bc1b306cdad386ef1d480000f1ade3b93bae0000006a60b86bd9632179d325485871d5d971b9a0aa00c86a0a867b6571ea5f4f602391a57c0224ffdfdabeacfab0bfbf1f32083514f8a14bedc5ec9e3266f8332543c2694013804cc3cf5f51f8de05c8580f18ad26b07fd3f0cabc676e2a3a682b980bd0f27f1e345eb90ce4679b3f9f18bfbea80e3e305722217d2961533630de141bae99f20df8e6ee69aa837b9b2fee8bbb97fe189f63d7ddb06f86df4534671b879422c4c27cdfcc397eb8ef48ed755b3f9c7fe7ec057d39b0e89e78ae6a3754146038773cacb8434811b913c215501a391be43d8270acf111dd59b8ec1ecb0a66b65885c9493c1b8768850163322aacc3c9ee006005862efca80b9cfe05e6859867591afab8fcd9a69a1f9856de5f3e80a515b273de5477a6"], 0xe, 0x1)
rename(&(0x7f0000000080)='./file2\x00', &(0x7f0000000100)='./file2\x00')
fstat(0xffffffffffffffff, &(0x7f00000005c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000640)='./file2\x00', &(0x7f0000000680)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
chown(&(0x7f0000000580)='./file1\x00', r3, r4)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3624
remove dir: /root/cephfs-client/dfs-0-448
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 115
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-449 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-449
receive_execute: 13, 117
receive_execute: 8, 118
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 15, 119
receive_execute: 4, 119
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 176, pid 2103, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 176, flag collect 0
----- executor 3 signal number : 128
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2103, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 331, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 331, flag collect 0
----- executor 3 signal number : 83
----- completed 6
----- executor 3 write_call_output, size 322, pid 2103, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 201
----- completed 7
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 631, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 631, flag collect 0
----- executor 3 signal number : 3
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 14
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 282, pid 2103, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 282, flag collect 0
----- executor 3 signal number : 43
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 66, 1, 0
execute_one time: 1, 67
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
time breakdown 3: 134, 69, 0
before receive testcase: 0 1
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 1255, flag collect 0
----- executor 0 signal number : 732
----- executor 0 executes write_coverage_signal cov->size 2121, flag collect 0
----- executor 0 signal number : 312
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1420
----- executor 2 executes write_coverage_signal cov->size 18819, flag collect 0
----- executor 2 signal number : 1039
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 302
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 278
executor 0 server cover_cnt 5 output_pos_value 1701
----- executor 2 signal number : 7500
----- executor 2 executes write_coverage_signal cov->size 1086, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 130, 73, 0
----- executor 2 signal number : 1671
----- executor 2 executes write_coverage_signal cov->size 4000, flag collect 0
----- executor 2 signal number : 786
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1436
executor 2 server cover_cnt 8 output_pos_value 14234
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 126, 75, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 196
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [CLIENT] executor 3 has 20 replies
2023/03/27 22:37:54 [SERVER] executor 0 has 5 replies
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/27 22:37:54 [SERVER] executor 2 has 8 replies
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 732 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 312 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 302 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1420 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 0 receive 278 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1039 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 7500 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1671 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 786 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1436 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:54 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 43 signal and 0 cover from executor 3
time breakdown 1: 123, 77, 0
before receive testcase: 0 0
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 2343 link link
2023/03/27 22:37:54 ----- insertCall()
2023/03/27 22:37:54 ----- generateCall 2809 rename rename
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 7
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080), 0x0, 0x0, 0x3)
link(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)='./file0\x00')
open(&(0x7f0000000040)='./file0\x00', 0x200, 0x0)
lsetxattr$security_capability(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x0, 0x0)
rename(&(0x7f0000000200)='./file1\x00', &(0x7f0000000240)='./file0\x00')
openat(0xffffffffffffff9c, &(0x7f00000001c0)='./file0\x00', 0x2042, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1232
remove dir: /root/cephfs-client/dfs-0-449
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 127
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-450 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-450
receive_execute: 7, 128
receive_execute: 10, 127
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 12, 129
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 129
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 619, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 605, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 605, flag collect 0
----- executor 3 signal number : 181
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 436, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 436, flag collect 0
----- executor 3 signal number : 46
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 signal number : 86
----- completed 7
execute_one loop: 0, 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 51, 0
execute_one time: 1, 55
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 137, 66, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 141, 64, 0
before receive testcase: 0 0
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 133, 68, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 638, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1421
----- executor 2 executes write_coverage_signal cov->size 15254, flag collect 0
----- executor 2 signal number : 943
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7767
----- executor 2 executes write_coverage_signal cov->size 1083, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1173
----- executor 2 executes write_coverage_signal cov->size 27780, flag collect 0
----- executor 2 signal number : 966
executor 2 server cover_cnt 7 output_pos_value 12649
2023/03/27 22:37:54 for select break: 1
2023/03/27 22:37:54 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:54 wg wait finish
2023/03/27 22:37:54 ------ all executors finish execution
2023/03/27 22:37:54 exec time: 206
2023/03/27 22:37:54 ----- PS len: 4
2023/03/27 22:37:54 [CLIENT] executor 3 has 7 replies
2023/03/27 22:37:54 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:37:54 [SERVER] executor 1 has 0 replies
time breakdown 2: 135, 78, 0
2023/03/27 22:37:54 [SERVER] executor 2 has 7 replies
2023/03/27 22:37:54 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:54 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 181 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:54 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:54 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1421 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 943 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 7767 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 1173 signal and 0 cover from userspace component
2023/03/27 22:37:54 ------- fuzzer executor 2 receive 966 signal and 0 cover from userspace component
2023/03/27 22:37:54 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:54 ----- no new client coverage: false, true
2023/03/27 22:37:54 mutate testcase with failures
2023/03/27 22:37:54 ----- mutateArg()
2023/03/27 22:37:54 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:54 prog length: 20
2023/03/27 22:37:54 HasCrashFail:false HasNetFail:false
22:37:54 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000480)='./file0/file0\x00', 0x202080, 0x48)
r5 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r5})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000380)={0x0, <r6=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r6})
r7 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r7, r3)
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3872
remove dir: /root/cephfs-client/dfs-0-450
remove dir time 152
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-451 successfully
receive_execute: 1, 153
current dir: executor 3: /root/cephfs-client/dfs-0-451
receive_execute: 14, 153
receive_execute: 16, 154
receive_execute: 12, 153
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2112, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2112, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 16, 4
----- executor 3 write_call_output, size 534, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 48
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 2112, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 12
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2112, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 350, pid 2112, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 350, flag collect 0
----- executor 3 signal number : 26
----- completed 18
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 316, pid 2112, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 0
----- completed 19
----- executor 3 write_call_output, size 318, pid 2112, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 1
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 158, 1, 4
execute_one time: 0, 163
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 170, 165, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1543, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
----- executor 2 signal number : 449
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 167, 167, 0
----- executor 2 signal number : 2148
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 7259
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 450
----- executor 2 executes write_coverage_signal cov->size 6175, flag collect 0
----- executor 2 signal number : 460
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 165, 169, 0
before receive testcase: 0 1
----- executor 2 signal number : 2570
----- executor 2 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27749, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1469
executor 2 server cover_cnt 9 output_pos_value 14906
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 325
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 20 replies
2023/03/27 22:37:55 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 9 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 449 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 2148 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 7259 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 450 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 460 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 2570 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1469 signal and 0 cover from userspace component
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 3766 sync sync
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2341 lchown lchown
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 15
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x180)
open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
lchown(&(0x7f0000000340)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000000240)='system_u:object_r:var_log_t:s0\x00', 0x1f, 0x0)
r0 = open(&(0x7f0000000480)='./file0\x00', 0x2, 0x40)
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000000)='./file0\x00', r1, 0xffffffffffffffff)
sync()
lsetxattr$security_smack_transmute(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x4, 0x2)
write(r0, &(0x7f00000004c0)="81bd7077a66e1e220a9aba9492e9302592bda6606db4840db590b40df633365d4ad5c176047e62c4b4605fb807db8d3c30c0139893011dc65e5b841f36e3bba3d4fff9b554e0e85b4b9be61bf21732eddeb1d4529615425ba5eba0f12a0c61c2cc05100b65dda9005b5973788b0caccb50706fdb09b819d159cca5229135fc984e8c6c83d6f05265a8104a72baf075090e1c8cd6d466892afcede34e1ab4b0318ad22b960cd8ee9f033dafe4e3430093f73c1a495381cd253cf7f5d82c161759", 0xc0)
sync()
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2224
remove dir: /root/cephfs-client/dfs-0-451
time breakdown 2: 154, 172, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 3, 63
receive_execute: 6, 63
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
remove dir time 61
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-452 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-452
receive_execute: 9, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 8, 63
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 472
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 149
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 81
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 457, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 3 signal number : 52
----- completed 7
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 89
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 2117, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 240
----- completed 10
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 504, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 504, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 559, pid 2117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 559, flag collect 0
----- executor 3 signal number : 9
----- completed 12
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 293, pid 2117, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 293, flag collect 0
----- executor 3 signal number : 12
----- completed 13
----- executor 3 write_call_output, size 317, pid 2117, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 3
----- completed 14
----- executor 3 write_call_output, size 1039, pid 2117, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1039, flag collect 0
----- executor 3 signal number : 281
----- completed 15
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 255, 115, 1
execute_one time: 1, 371
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1443, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 127
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 0 signal number : 167
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 0
executor 0 server cover_cnt 5 output_pos_value 658
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 69, 373, 0
before receive testcase: 0 0
----- executor 2 signal number : 854
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 71, 374, 0
before receive testcase: 0 0
----- executor 2 signal number : 1295
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 72, 373, 0
before receive testcase: 0 0
----- executor 2 signal number : 7923
----- executor 2 executes write_coverage_signal cov->size 2174, flag collect 0
----- executor 2 signal number : 323
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1345
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1312
executor 2 server cover_cnt 8 output_pos_value 13150
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 442
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 15 replies
2023/03/27 22:37:55 [SERVER] executor 0 has 5 replies
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/27 22:37:55 [SERVER] executor 2 has 8 replies
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 127 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 854 signal and 0 cover from userspace component
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1295 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 167 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 7923 signal and 0 cover from userspace component
time breakdown 2: 66, 379, 0
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 323 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1345 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1312 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:37:55 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 472 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 240 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 281 signal and 0 cover from executor 3
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 6
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
mkdir(&(0x7f00000000c0)='./file1/file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000080)='./file1/file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
setxattr$smack_xattr_label(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000140)='security.SMACK64IPOUT\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB=',(\x00'], 0x3, 0x0)
lchown(&(0x7f00000002c0)='./file1\x00', 0x0, 0xee01)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 920
remove dir: /root/cephfs-client/dfs-0-452
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-453 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-453
receive_execute: 9, 7
receive_execute: 9, 7
receive_execute: 3, 7
receive_execute: 8, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 2122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 45
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 16, 5, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10826, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 16, 6, 0
before receive testcase: 0 1
----- executor 2 signal number : 6762
----- executor 2 executes write_coverage_signal cov->size 23898, flag collect 0
time breakdown 0: 15, 7, 0
before receive testcase: 0 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 620
executor 2 server cover_cnt 4 output_pos_value 8747
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 16
2023/03/27 22:37:55 ----- PS len: 4
time breakdown 2: 10, 8, 0
before receive testcase: 0 1
2023/03/27 22:37:55 [CLIENT] executor 3 has 6 replies
2023/03/27 22:37:55 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 4 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 6762 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 620 signal and 0 cover from userspace component
2023/03/27 22:37:55 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 3
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
fcntl$setown(0xffffffffffffffff, 0x8, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x38041, 0x0)
setxattr$system_posix_acl(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0)='system.posix_acl_access\x00', &(0x7f0000000940), 0x24, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1000
remove dir: /root/cephfs-client/dfs-0-453
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 5, 25
receive_execute: 3, 25
receive_execute: 4, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8150, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 21156, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 7, 0
time breakdown 1: 30, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 5658
----- executor 2 executes write_coverage_signal cov->size 18613, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 636
executor 2 server cover_cnt 4 output_pos_value 7659
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 35
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 3 replies
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 144 signal and 0 cover from executor 3
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 4 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 5658 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 636 signal and 0 cover from userspace component
time breakdown 2: 28, 10, 0
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 3
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x4)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
chown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, 0xee00)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-454 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-454
receive_execute: 6, 26
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 2126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 144
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
time breakdown 3: 32, 5, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 392
remove dir: /root/cephfs-client/dfs-0-454
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-455 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-455
receive_execute: 1, 13
receive_execute: 3, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 14
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 470, pid 2129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 470, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 4, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4763, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 0 signal number : 59
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9715, flag collect 0
----- executor 2 signal number : 1041
----- executor 2 executes write_coverage_signal cov->size 24594, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 451
----- executor 0 executes write_coverage_signal cov->size 12601, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 6065
----- executor 2 executes write_coverage_signal cov->size 20861, flag collect 0
----- executor 0 signal number : 831
executor 0 server cover_cnt 3 output_pos_value 1351
----- executor 2 signal number : 1465
executor 2 server cover_cnt 5 output_pos_value 9245
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 23
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 3 replies
2023/03/27 22:37:55 [SERVER] executor 0 has 3 replies
2023/03/27 22:37:55 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/27 22:37:55 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 451 signal and 0 cover from userspace component
2023/03/27 22:37:55 [SERVER] executor 2 has 5 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 831 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1041 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 6065 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1465 signal and 0 cover from userspace component
time breakdown 2: 14, 10, 0
before receive testcase: 0 0
time breakdown 0: 19, 7, 0
before receive testcase: 0 0
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2462 openat openat
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 3970 unlink unlink
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 6
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
openat(r1, &(0x7f0000000080)='./file0\x00', 0x880, 0x9)
unlink(&(0x7f00000000c0)='./file0\x00')
open$dir(&(0x7f0000000000)='./file0\x00', 0x2000, 0x40)
dup2(r1, r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 832
remove dir: /root/cephfs-client/dfs-0-455
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-456 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-456
receive_execute: 8, 13
receive_execute: 7, 13
receive_execute: 6, 13
receive_execute: 10, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 500, pid 2132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 500, flag collect 0
----- executor 3 signal number : 51
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 86
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2132, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
cover_reset in execute_call
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12262, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 20, 11, 0
time breakdown 1: 22, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 7261
----- executor 2 executes write_coverage_signal cov->size 31958, flag collect 0
----- executor 2 signal number : 710
time breakdown 3: 24, 8, 0
before receive testcase: 0 1
executor 2 server cover_cnt 4 output_pos_value 9343
before receive testcase: 0 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 26
2023/03/27 22:37:55 ----- PS len: 4
time breakdown 2: 19, 13, 0
2023/03/27 22:37:55 [CLIENT] executor 3 has 6 replies
2023/03/27 22:37:55 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 51 signal and 0 cover from executor 3
2023/03/27 22:37:55 [SERVER] executor 2 has 4 replies
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1292 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 7261 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 710 signal and 0 cover from userspace component
2023/03/27 22:37:55 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 220 flock flock
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2350 lseek lseek
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 6
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
r1 = openat(r0, &(0x7f0000000000)='./file0\x00', 0x800, 0x30)
fcntl$getownex(r0, 0x10, &(0x7f0000000040)={0x0, <r2=>0x0})
fcntl$lock(r1, 0x25, &(0x7f0000000640)={0x0, 0x2, 0xffffffffffffffff, 0x8, r2})
lseek(r1, 0x1f, 0x5)
flock(r1, 0x4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 952
remove dir: /root/cephfs-client/dfs-0-456
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-457 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-457
receive_execute: 7, 12
receive_execute: 3, 12
receive_execute: 5, 12
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
cover_reset in execute_call
execute_one time: 1, 2
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 339, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 251
executor 2 server cover_cnt 1 output_pos_value 255
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 5, 0
before receive testcase: 0 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 15, 6, 0
before receive testcase: 0 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 20
2023/03/27 22:37:55 ----- PS len: 4
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:55 [CLIENT] executor 3 has 6 replies
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 1 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 251 signal and 0 cover from userspace component
time breakdown 0: 16, 8, 0
before receive testcase: 0 0
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 1
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 19, 4, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 152
remove dir: /root/cephfs-client/dfs-0-457
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-458 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-458
receive_execute: 2, 7
receive_execute: 4, 8
receive_execute: 0, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 2138, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 404
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
receive_execute: 3, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
time breakdown 3: 12, 4, 0
before receive testcase: 0 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4174, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 61
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 598, flag collect 0
----- executor 0 signal number : 307
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11377, flag collect 0
executor 0 server cover_cnt 2 output_pos_value 375
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 4713
time breakdown 1: 10, 6, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 7112, flag collect 0
----- executor 2 signal number : 523
executor 2 server cover_cnt 4 output_pos_value 6580
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 15
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 1 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 4 replies
2023/03/27 22:37:55 fuzzer receive 404 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 [SERVER] executor 0 has 2 replies
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 4713 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 523 signal and 0 cover from userspace component
time breakdown 2: 9, 8, 0
2023/03/27 22:37:55 ------- fuzzer executor 0 receive 307 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
time breakdown 0: 8, 6, 0
before receive testcase: 0 0
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2809 rename rename
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2458 open open
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2458 open open
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 8
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file1\x00', 0x121041, 0x0)
chmod(&(0x7f0000000180)='./file1\x00', 0x42)
fsetxattr$security_evm(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000080)=@md5={0x1, "3970c6bb51cdb3cd1d27d3cc6b4a7779"}, 0x11, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='security.SMACK64IPOUT\x00', &(0x7f0000000280)={'[@\x00'}, 0x4, 0x2)
open(&(0x7f0000000140)='./file0\x00', 0x400, 0x80)
open(&(0x7f0000000040)='\x00', 0x101400, 0x102)
fcntl$getown(r0, 0x9)
rename(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1376
remove dir: /root/cephfs-client/dfs-0-458
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-459 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-459
receive_execute: 5, 15
receive_execute: 2, 15
receive_execute: 5, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2140, write pid:-2127101003
receive_execute: 4, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2140, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 15, 0, 0
execute_one time: 1, 15
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 17, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11948, flag collect 0
----- executor 2 signal number : 5013
----- executor 2 executes write_coverage_signal cov->size 2816, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 18, 0
----- executor 2 signal number : 325
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 548
executor 2 server cover_cnt 5 output_pos_value 7240
before receive testcase: 0 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 35
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 8 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 5 replies
2023/03/27 22:37:55 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 fuzzer receive 113 signal and 0 cover from executor 3
time breakdown 2: 17, 20, 0
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 5013 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 325 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 548 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:37:55 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 1 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 4
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
lsetxattr$security_ima(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180)=@v2={0x3, 0x0, 0x3, 0x8, 0x9a, "27a068a783181cf352d3b7798e1be2a15beafa2c12e838cf7818dcb2e97e1efeabea4ea5d981f76bad2fb89babf047c40d702074863472c41f50d1288a1f11220d3356446d47c41b790a0b5d2720d19822eefc7298f53dc37730d505911788c1ed1a567908ed37deae704adc08f35ec9bee78230c26cc54f137fab13340eaad587e6b45496e4acd891e407b88c16c48029c4dbe0bd37f5d79a88"}, 0xa3, 0x3)
lremovexattr(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)=@known='user.incfs.id\x00')
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x149a41, 0x72)
write$binfmt_misc(r0, &(0x7f0000000000)=ANY=[@ANYBLOB="73797a3119fdd8c836f5ee47319c6a41a305a7628b87b30e2701c48762adc62d294567e2856785d3bd58689a87b3eead5c41bab240090000009d4131ea746372b13d5ff0fa5fb8294f9a691bff526260d2ec61657fcb6e20df4bc528d278ffb64aeb6286cde47f748479b091a702c0c9528b044b726a65fa71d4bddbc9dab2752536694dc61e3e87703fa14bfa81c2d2045e15862ca9567b605287b1eb88c1339660c1df9c318f601c3b6d0f04ad0a00"/190], 0x10000000000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/cephfs-client/dfs-0-459
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
receive_execute: 3, 15
receive_execute: 4, 16
receive_execute: 4, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-460 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-460
receive_execute: 6, 15
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 2143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 450
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 262143, pid 2143, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 921
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 68, 25, 0
execute_one time: 1, 93
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 97, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 506, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26209, flag collect 0
----- executor 2 signal number : 1414
----- executor 2 executes write_coverage_signal cov->size 16521, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 921
----- executor 2 executes write_coverage_signal cov->size 23691, flag collect 0
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6564
----- executor 2 executes write_coverage_signal cov->size 365, flag collect 0
----- executor 2 signal number : 126
----- executor 2 executes write_coverage_signal cov->size 3167, flag collect 0
----- executor 2 signal number : 348
----- executor 2 executes write_coverage_signal cov->size 24834, flag collect 0
----- executor 2 signal number : 5372
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 20, 98, 0
before receive testcase: 0 0
----- executor 2 signal number : 1760
executor 2 server cover_cnt 9 output_pos_value 16603
2023/03/27 22:37:55 for select break: 1
2023/03/27 22:37:55 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:37:55 wg wait finish
2023/03/27 22:37:55 ------ all executors finish execution
2023/03/27 22:37:55 exec time: 117
2023/03/27 22:37:55 ----- PS len: 4
2023/03/27 22:37:55 [CLIENT] executor 3 has 4 replies
2023/03/27 22:37:55 [SERVER] executor 0 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 1 has 0 replies
2023/03/27 22:37:55 [SERVER] executor 2 has 9 replies
2023/03/27 22:37:55 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:37:55 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:37:55 fuzzer receive 450 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1414 signal and 0 cover from userspace component
2023/03/27 22:37:55 fuzzer receive 921 signal and 0 cover from executor 3
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 921 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 6564 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 126 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 348 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 5372 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:37:55 ------- fuzzer executor 2 receive 1760 signal and 0 cover from userspace component
time breakdown 2: 18, 102, 0
before receive testcase: 0 0
2023/03/27 22:37:55 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:37:55 ----- no new client coverage: false, true
2023/03/27 22:37:55 mutate testcase with failures
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- insertCall()
2023/03/27 22:37:55 ----- mutateArg()
2023/03/27 22:37:55 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:37:55 prog length: 20
2023/03/27 22:37:55 HasCrashFail:false HasNetFail:false
22:37:55 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000480)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440)={0x0, 0x1, 0x0, 0x0, 0xffffffffffffffff})
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0x4c)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x26, &(0x7f0000000200)={0x2, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x0, 0x81, 0x7ff})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r5})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x553d41, 0x0)
dup2(r6, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3864
remove dir: /root/cephfs-client/dfs-0-460
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 19, 98, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-461 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-461
receive_execute: 9, 8
receive_execute: 4, 8
receive_execute: 8, 8
receive_execute: 8, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2146, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2146, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2146, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 12
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2146, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 217, pid 2146, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 217, flag collect 0
----- executor 3 signal number : 0
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83336, 1, 14
execute_one time: 1, 83351
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12647, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 21087, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 12647, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 1468
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1841
----- executor 2 executes write_coverage_signal cov->size 20202, flag collect 0
----- executor 2 signal number : 301
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 85
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 16, 83354, 0
before receive testcase: 0 1
----- executor 0 signal number : 3259
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7642
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 798
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3568
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
time breakdown 3: 17, 83353, 0
before receive testcase: 0 0
----- executor 0 signal number : 748
----- executor 0 executes write_coverage_signal cov->size 2261, flag collect 0
----- executor 0 signal number : 118
----- executor 2 signal number : 1735
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 218
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 666
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 480
----- executor 2 executes write_coverage_signal cov->size 5761, flag collect 0
----- executor 2 signal number : 367
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 984
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5666
----- executor 2 executes write_coverage_signal cov->size 69, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 173
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2818
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1040
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1663
----- executor 2 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 2431, flag collect 0
----- executor 2 signal number : 165
executor 2 server cover_cnt 18 output_pos_value 28580
----- executor 0 signal number : 294
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 967
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1717
----- executor 0 executes write_coverage_signal cov->size 112, flag collect 0
----- executor 0 signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1644
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1335
----- executor 0 executes write_coverage_signal cov->size 2128, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 12, 83364, 0
before receive testcase: 0 0
----- executor 0 signal number : 313
----- executor 0 executes write_coverage_signal cov->size 1385, flag collect 0
----- executor 0 signal number : 461
----- executor 0 executes write_coverage_signal cov->size 4880, flag collect 0
----- executor 0 signal number : 97
----- executor 0 executes write_coverage_signal cov->size 2128, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 1290, flag collect 0
----- executor 0 signal number : 56
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 179
executor 0 server cover_cnt 26 output_pos_value 16263
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 83378
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 20 replies
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 26 replies
time breakdown 0: 16, 83370, 0
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 54 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 85 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 3259 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 798 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 748 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 118 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 666 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 2 has 18 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1468 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1841 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 301 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 984 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 173 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7642 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 1040 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 294 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 967 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 1717 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 1644 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3568 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1735 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 218 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 480 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 367 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 1335 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 313 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 461 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 97 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 56 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 179 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 5666 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 2818 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1663 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 19
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
open$dir(&(0x7f0000000800)='./file0\x00', 0x5d93c0, 0x27)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=ANY=[@ANYBLOB="d08495160608af9b00"/22], 0x16, 0x0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000340)='./file0\x00', 0x8)
lsetxattr$user(&(0x7f0000000040)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='+@\xd7\x00', 0x4, 0x0)
stat(&(0x7f00000001c0)='./file0/file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$security_capability(&(0x7f0000000580)='./file0/file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@v1={0x1000000, [{0x38, 0x4}]}, 0xc, 0x0)
stat(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380))
stat(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
readlink(&(0x7f0000000500)='./file1\x00', &(0x7f0000000700)=""/94, 0x5e)
lsetxattr$system_posix_acl(&(0x7f00000004c0)='./file0/file1\x00', &(0x7f0000000180)='system.posix_acl_default\x00', &(0x7f0000000640)=ANY=[@ANYBLOB="02000000010004000000000002000200", @ANYBLOB="98cd01f1", @ANYBLOB="02000700", @ANYRES64=0x0, @ANYBLOB="02000200", @ANYRESDEC, @ANYBLOB="02000700", @ANYRES32=r1, @ANYBLOB='\x00m+\x00', @ANYRES32=r2, @ANYBLOB="040003000000000008000100", @ANYBLOB="c304453f18996acafe8b49603f0947c239c1cb86c843033784c2a3a969358839e412f3b2b4c53c", @ANYBLOB="088d0f0000379bb9833ef6eb289c6fef1e2177ff7c57d7a3", @ANYRES32=0x0, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB="08000300", @ANYRES32=r3, @ANYBLOB="10000000000000002000020000000000"], 0x6c, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000000540)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x1)
open$dir(&(0x7f0000000040)='./file0\x00', 0xe703, 0x0)
chdir(&(0x7f0000000140)='./file0/file1\x00')
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
fstat(r0, &(0x7f0000000240))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4152
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-461
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-462 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-462
receive_execute: 24, 14
receive_execute: 13, 14
receive_execute: 23, 14
receive_execute: 7, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 556, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 12
----- completed 6
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 0
----- executor 3 signal number : 139
----- completed 16
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 2153, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 23
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2153, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 3
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 10, 0
execute_one time: 1, 39
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1599, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1446
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 21, 43, 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1064
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 37, 43, 0
before receive testcase: 0 0
----- executor 2 signal number : 7992
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 38, 41, 0
before receive testcase: 0 1
----- executor 2 signal number : 6643
----- executor 2 executes write_coverage_signal cov->size 1329, flag collect 0
----- executor 2 signal number : 243
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1694
executor 2 server cover_cnt 7 output_pos_value 19173
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 64
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 19 replies
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 7 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1446 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1064 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7992 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6643 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 243 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1694 signal and 0 cover from userspace component
time breakdown 2: 27, 50, 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 9
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x7, &(0x7f0000000a00))
flock(r0, 0x1)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
flock(r1, 0x6)
r2 = dup2(r1, r1)
fcntl$lock(r2, 0x24, &(0x7f0000000040)={0x1, 0x1, 0x756, 0x1f})
r3 = dup(r1)
dup2(r0, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1424
remove dir: /root/cephfs-client/dfs-0-462
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-463 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-463
receive_execute: 3, 10
receive_execute: 10, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 12, 10
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2158, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 2158, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 122
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 2158, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2158, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 10, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 308, pid 2158, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2158, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2158, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2158, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2158, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 5, 2, 0
execute_one time: 1, 7
2023/03/27 22:39:19 for select break: 1
time breakdown 3: 22, 10, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 838, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15747, flag collect 0
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1418
----- executor 2 executes write_coverage_signal cov->size 25395, flag collect 0
----- executor 2 signal number : 1079
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6659
----- executor 2 executes write_coverage_signal cov->size 14759, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 11, 0
----- executor 2 signal number : 3980
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19822, flag collect 0
----- executor 2 signal number : 1400
time breakdown 1: 21, 11, 0
before receive testcase: 0 0
executor 2 server cover_cnt 7 output_pos_value 14631
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 24
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 9 replies
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
time breakdown 2: 13, 14, 0
2023/03/27 22:39:19 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 2 has 7 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1418 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1079 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6659 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3980 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2458 open open
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 196 fchown fchown
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 9
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, 0xffffffffffffffff, r0)
r1 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r1, 0x7, &(0x7f0000000a00))
fcntl$lock(r1, 0x24, &(0x7f0000000140)={0x2, 0x254d58899e3309f2, 0x0, 0xfffffffffffffffa})
setxattr$trusted_overlay_opaque(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x1)
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000180)='system.posix_acl_default\x00', &(0x7f00000002c0)={{}, {0x1, 0x1}, [{0x2, 0x7, r2}], {0x4, 0x7}, [], {0x10, 0x6}, {0x20, 0x4}}, 0x2c, 0x3)
open(&(0x7f0000000040)='./file0\x00', 0x400400, 0xd0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2520
remove dir: /root/cephfs-client/dfs-0-463
remove dir time 6
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-464 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-464
receive_execute: 7, 9
receive_execute: 3, 9
receive_execute: 3, 9
receive_execute: 6, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2161, write pid:-2127101003
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
output_pos: 1, output_pos_value 1
----- executor 3 signal number : 471
----- completed 3
execute_one loop: 0, 0, 2
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 1
----- executor 3 write_call_output, size 319, pid 2161, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2161, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 2161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 139
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 16, 7, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10973, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1296
----- executor 2 executes write_coverage_signal cov->size 24613, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 8, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 8, 0
----- executor 2 signal number : 6077
----- executor 2 executes write_coverage_signal cov->size 1400, flag collect 0
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 537
executor 2 server cover_cnt 6 output_pos_value 8283
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 20
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 9 replies
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 6 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1296 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6077 signal and 0 cover from userspace component
time breakdown 2: 12, 11, 0
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 537 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 3
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
open(&(0x7f0000000340)='./file0\x00', 0x8040, 0x0)
chown(&(0x7f0000000040)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:hald_sonypic_exec_t:s0\x00', 0x29, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 600
remove dir: /root/cephfs-client/dfs-0-464
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-465 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-465
receive_execute: 7, 16
receive_execute: 6, 13
receive_execute: 5, 17
receive_execute: 4, 17
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2165, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2165, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 210, pid 2165, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 55
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 23, 5, 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4249, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11585, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4898
----- executor 2 executes write_coverage_signal cov->size 352, flag collect 0
----- executor 2 signal number : 248
----- executor 2 executes write_coverage_signal cov->size 9264, flag collect 0
----- executor 2 signal number : 582
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 6, 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 6, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7073
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 24
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 3 replies
time breakdown 2: 19, 7, 0
2023/03/27 22:39:19 [SERVER] executor 2 has 5 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4898 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 248 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 582 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 170 dup dup
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2781 readlinkat readlinkat
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2809 rename rename
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 220 flock flock
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2458 open open
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 12
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0xe703, 0x0)
r2 = fcntl$dupfd(0xffffffffffffffff, 0x0, r1)
readlinkat(r2, &(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)=""/159, 0x9f)
r3 = dup2(r1, r0)
open(&(0x7f0000000200)='./file0\x00', 0x14d0c0, 0x0)
fsetxattr$trusted_overlay_redirect(r3, &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x3)
fsync(r0)
dup2(r3, r1)
rename(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)='./file0\x00')
dup(r1)
flock(0xffffffffffffffff, 0xa)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1600
remove dir: /root/cephfs-client/dfs-0-465
remove dir time 11
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-466 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-466
receive_execute: 5, 14
receive_execute: 4, 14
receive_execute: 1, 14
receive_execute: 4, 14
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 289
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2168, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 120, pid 2168, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 3 signal number : 61
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 181, pid 2168, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 181, flag collect 0
----- executor 3 signal number : 108
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2168, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 1, 13
time breakdown 3: 19, 16, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17936, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 12938, flag collect 0
----- executor 2 signal number : 971
----- executor 2 executes write_coverage_signal cov->size 20625, flag collect 0
time breakdown 1: 18, 16, 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6178
time breakdown 0: 18, 17, 0
----- executor 2 executes write_coverage_signal cov->size 2177, flag collect 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 17866, flag collect 0
----- executor 2 signal number : 4053
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2187
executor 2 server cover_cnt 8 output_pos_value 15217
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 34
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 12 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 15, 20, 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 971 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6178 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4053 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 2187 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 289 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 3
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
setxattr$incfs_size(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=0x4, 0x8, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x38041, 0x0)
setxattr$system_posix_acl(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0)='system.posix_acl_access\x00', &(0x7f0000000040)=ANY=[], 0x24, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 656
remove dir: /root/cephfs-client/dfs-0-466
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 3, 6
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-467 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-467
receive_execute: 7, 7
receive_execute: 6, 6
receive_execute: 6, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 659, pid 2171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 7974, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 20228, flag collect 0
time breakdown 0: 13, 5, 0
before receive testcase: 0 1
----- executor 2 signal number : 5907
----- executor 2 executes write_coverage_signal cov->size 354, flag collect 0
----- executor 2 signal number : 244
----- executor 2 executes write_coverage_signal cov->size 12360, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
time breakdown 1: 12, 7, 0
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 2 signal number : 629
executor 2 server cover_cnt 5 output_pos_value 8150
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 14
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 3 replies
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 5 replies
time breakdown 3: 14, 5, 0
before receive testcase: 0 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 5907 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 244 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 629 signal and 0 cover from userspace component
time breakdown 2: 9, 8, 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2341 lchown lchown
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 12
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(0x0, &(0x7f0000000240), 0x0, 0x0, 0x4)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000000080)='./file3\x00', &(0x7f00000000c0), &(0x7f0000000100)={'U-', 0xfff}, 0x16, 0x0)
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
link(0x0, 0x0)
unlink(&(0x7f0000000000)='./file4\x00')
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x4)
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
lchown(&(0x7f0000000040)='./file0\x00', 0xee01, 0xee00)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x100)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1880
remove dir: /root/cephfs-client/dfs-0-467
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-468 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-468
receive_execute: 5, 11
receive_execute: 3, 10
receive_execute: 3, 11
receive_execute: 4, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 185
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 32
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 507, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 121
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2174, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 14, 0
execute_one time: 1, 25
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 27, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1344, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 19852, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 31113, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 29, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1076
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 15, 30, 0
before receive testcase: 0 0
----- executor 2 signal number : 7670
----- executor 2 executes write_coverage_signal cov->size 5413, flag collect 0
----- executor 2 signal number : 426
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6065
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1820
executor 2 server cover_cnt 8 output_pos_value 18548
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 47
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 12 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
time breakdown 2: 13, 36, 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1076 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7670 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 426 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6065 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1820 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 121 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 220 flock flock
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 14
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$getownex(r0, 0x10, &(0x7f0000000040)={0x0, <r1=>0x0})
fcntl$lock(r0, 0x5, &(0x7f0000000a00)={0x1, 0x0, 0x0, 0x5, r1})
flock(r0, 0x1)
r2 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r3 = fcntl$getown(r0, 0x9)
fcntl$lock(r0, 0x7, &(0x7f0000000080)={0x1, 0x0, 0x56d, 0x5, r3})
flock(r2, 0x6)
flock(r2, 0x3)
dup2(r2, r2)
r4 = dup(r2)
dup2(r0, r4)
r5 = dup2(0xffffffffffffffff, r4)
fcntl$getownex(r5, 0x10, &(0x7f00000000c0))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2032
remove dir: /root/cephfs-client/dfs-0-468
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-469 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-469
receive_execute: 11, 10
receive_execute: 12, 10
receive_execute: 10, 10
receive_execute: 4, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
----- executor 3 write_call_output, size 620, pid 2180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2180, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 112
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 28
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2180, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 1, 1
execute_one time: 1, 9
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 22, 11, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17423, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1370
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 20, 13, 0
time breakdown 1: 21, 13, 0
before receive testcase: 0 1
before receive testcase: 0 1
----- executor 2 signal number : 6495
----- executor 2 executes write_coverage_signal cov->size 2763, flag collect 0
----- executor 2 signal number : 307
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
2023/03/27 22:39:19 for select break: 1
----- executor 2 signal number : 538
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 6 output_pos_value 8800
time breakdown 2: 14, 15, 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 25
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 14 replies
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 6 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1370 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6495 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 307 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3967 truncate truncate
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 241 fsetxattr$trusted_overlay_origin fsetxattr$trusted_overlay_origin
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 170 dup dup
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 10
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
write$binfmt_elf32(0xffffffffffffffff, &(0x7f00000002c0)={{0x7f, 0x45, 0x4c, 0x46, 0x5, 0x40, 0x1, 0x1, 0x7f, 0x2, 0x6, 0x9, 0x392, 0x38, 0x292, 0x3, 0x9, 0x20, 0x1, 0x40, 0x8, 0xfffa}, [{0x70000000, 0x3, 0x65, 0x40, 0xf18, 0x5, 0x6, 0x5}, {0x6474e551, 0xed09, 0x9, 0x6, 0x8001, 0x6, 0x80000000, 0x4}], "1df6ca4c0bdc0c6dba0533ca1122225506fdfc7a2c34558f3fe11517ab4881e896d783b87b7e017f96229502223cc539316c9e65157e5bb51b45684951940538240d7ea711f9139dd37101a4eb7c47a7d69567caca1f9fc718da85513f74649117f3f0cd8a4d09d0936dd60f8ff4c64f5b80f1cdfd1a175891f7a2a165bf4bbecf6c57f8176ce4a494b6a8617ada1841c136a37a0b50111837b1e7579b45beea2b989cca6a891d8dfdbdd7ab47d0589561d6788a71afc2429db30862ecfb1b42a6456ad967893541", ['\x00', '\x00', '\x00']}, 0x440)
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_origin(r0, &(0x7f0000000180), &(0x7f0000000200), 0x2, 0x2)
r1 = open(&(0x7f0000000280)='./file1\x00', 0x232000, 0x25)
truncate(&(0x7f0000000000)='./file1\x00', 0x100000000)
lseek(r1, 0x0, 0x0)
r2 = open(&(0x7f0000000240)='./file1\x00', 0x942, 0x0)
dup(r2)
fsetxattr$trusted_overlay_opaque(r1, &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x1)
setxattr$security_capability(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x1000000, [{0x0, 0x2}]}, 0xc, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4232
remove dir: /root/cephfs-client/dfs-0-469
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-470 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-470
receive_execute: 8, 13
receive_execute: 5, 14
receive_execute: 3, 14
receive_execute: 5, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2184, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 0, pid 2184, write pid:-2126974658
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2184, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 450
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11918, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 5022
----- executor 2 executes write_coverage_signal cov->size 2159, flag collect 0
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 9, 0
----- executor 2 signal number : 549
executor 2 server cover_cnt 5 output_pos_value 7267
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 25
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 10 replies
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
time breakdown 2: 17, 11, 0
2023/03/27 22:39:19 [SERVER] executor 2 has 5 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 5022 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 549 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 450 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 6 signal and 0 cover from executor 3
time breakdown 3: 21, 8, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3761 stat stat
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 8
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file0\x00', 0x440, 0x0)
fsetxattr(r0, &(0x7f0000000280)=ANY=[@ANYBLOB="6f73322e73797374656d2e706f7369785f61636c8264656661756c7400"], &(0x7f00000002c0)='system.posix_acl_default\x00', 0x19, 0x2)
truncate(&(0x7f0000000000)='./file0\x00', 0x4)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file1\x00', 0x8, 0x0)
stat(&(0x7f0000001180)='./file0/file0\x00', &(0x7f00000011c0))
fchown(r0, 0x0, 0x0)
r1 = open(&(0x7f0000000100)='./file0\x00', 0x48042, 0x0)
write$binfmt_misc(r1, &(0x7f0000000140)=ANY=[@ANYBLOB=""/4097], 0x1001)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5472
remove dir: /root/cephfs-client/dfs-0-470
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-471 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-471
receive_execute: 5, 13
receive_execute: 4, 13
receive_execute: 3, 13
receive_execute: 5, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 619, pid 2187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 31, pid 2187, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 52
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2187, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 44
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 392, pid 2187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 392, flag collect 0
----- executor 3 signal number : 86
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 875, pid 2187, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 875, flag collect 0
----- executor 3 signal number : 302
----- completed 8
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 17, 4, 0
execute_one time: 0, 22
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 23, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 635, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 21326, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 204
executor 0 server cover_cnt 1 output_pos_value 208
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 24588, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 25, 0
before receive testcase: 0 0
time breakdown 1: 18, 25, 0
before receive testcase: 0 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7453
----- executor 2 executes write_coverage_signal cov->size 2550, flag collect 0
----- executor 2 signal number : 347
----- executor 2 executes write_coverage_signal cov->size 26261, flag collect 0
----- executor 2 signal number : 6251
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1537
executor 2 server cover_cnt 8 output_pos_value 18089
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 44
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 8 replies
time breakdown 2: 16, 30, 0
2023/03/27 22:39:19 [SERVER] executor 0 has 1 replies
2023/03/27 22:39:19 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 204 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 44 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 302 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7453 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 347 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6251 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1537 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3967 truncate truncate
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2809 rename rename
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 6
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='./file0\x00', 0x408000, 0x8)
rename(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x2)
truncate(&(0x7f0000000000)='./file0\x00', 0x200002000004)
open$dir(&(0x7f0000000040)='./file0\x00', 0x200000, 0x3)
truncate(&(0x7f00000000c0)='./file0\x00', 0xd9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 936
remove dir: /root/cephfs-client/dfs-0-471
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-472 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-472
receive_execute: 11, 12
receive_execute: 10, 11
receive_execute: 4, 11
receive_execute: 9, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2190, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2190, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2190, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2190, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2190, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2190, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 23, 2, 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 1 output_pos_value 11
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 20, 4, 0
time breakdown 1: 21, 4, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 16
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 6 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 2 has 1 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 250 fsync fsync
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 17
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
link(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100)='./file1\x00')
mkdir(&(0x7f0000000380)='./file0\x00', 0x8)
fstat(0xffffffffffffffff, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
unlink(&(0x7f0000000280)='./file0\x00')
r1 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
fcntl$setown(r1, 0x8, 0x0)
link(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
r2 = open(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
r3 = dup2(r1, r2)
write$binfmt_misc(r1, &(0x7f00000015c0)={'syz1', ""}, 0x1000)
write(r3, &(0x7f00000005c0)="82", 0x1)
fsync(r2)
lsetxattr$security_capability(&(0x7f0000000140)='./file1\x00', &(0x7f0000000000), &(0x7f0000000080)=@v3={0x3000000, [{0x3ff, 0x4}, {0x80003, 0x4}], r0}, 0x18, 0x2)
fstat(0xffffffffffffffff, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lchown(&(0x7f0000000040)='./file0\x00', r0, r4)
open(&(0x7f00000002c0)='./file0/file0\x00', 0x31880, 0x10)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 15, 5, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6776
remove dir: /root/cephfs-client/dfs-0-472
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-473 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-473
receive_execute: 0, 5
receive_execute: 3, 4
receive_execute: 1, 5
receive_execute: 0, 5
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 47
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 609, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 609, flag collect 0
----- executor 3 signal number : 130
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 579, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 579, flag collect 0
----- executor 3 signal number : 35
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 3
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2193, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1326, pid 2193, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1326, flag collect 0
----- executor 3 signal number : 980
----- completed 11
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 1077, pid 2193, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1077, flag collect 0
----- executor 3 signal number : 8
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 13, pid 2193, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 3 signal number : 6
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 210, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 54
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 45
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 2193, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 3 signal number : 1
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 22, 2, 0
execute_one time: 1, 24
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 7, 26, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1022, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 20152, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 287
executor 0 server cover_cnt 2 output_pos_value 362
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 24314, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6, 27, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1054
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 5, 27, 0
----- executor 2 signal number : 7574
----- executor 2 executes write_coverage_signal cov->size 3327, flag collect 0
----- executor 2 signal number : 386
----- executor 2 executes write_coverage_signal cov->size 26049, flag collect 0
----- executor 2 signal number : 4278
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 934
executor 2 server cover_cnt 8 output_pos_value 15715
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 38
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 17 replies
2023/03/27 22:39:19 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 980 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 2 replies
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
time breakdown 2: 5, 33, 0
before receive testcase: 0 0
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1054 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7574 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 386 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4278 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 934 signal and 0 cover from userspace component
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 121 chmod chmod
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 5
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
chmod(&(0x7f0000000080)='./file1\x00', 0x10)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
open$dir(&(0x7f0000000000)='./file1\x00', 0x111000, 0x160)
lseek(r0, 0x80000000000080, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/cephfs-client/dfs-0-473
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-474 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-474
receive_execute: 3, 13
receive_execute: 11, 12
receive_execute: 9, 13
receive_execute: 9, 13
executor 2 before execute_one
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2196, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 2196, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2196, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 64
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2196, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11, pid 2196, write pid:-2127077826
----- executor 3 executes write_coverage_signal cov->size 11, flag collect 0
----- executor 3 signal number : 11
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 22, 8, 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 23
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 5 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4690 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
time breakdown 1: 22, 10, 0
before receive testcase: 0 0
time breakdown 3: 23, 7, 0
before receive testcase: 0 1
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2462 openat openat
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 122 chown chown
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2809 rename rename
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 6
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x100, 0xa)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000280)='./file0\x00')
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="0800000000e8290063647373006cc84bf7fe224c301f7c5f632e25068acd7a094f644884d8d4f3e78c638ff2b0c5723a7e015f09e8f1a5c0bc4c2e45a677184229ee97b62377aba105edd37fcde150c489e54b99a4165afeb53336a79b272f621f01805809bdc7999b83e24aca2815e0971747ca8d4473f279adb988ac6a62f257c20993fb64932583ce69c71c8f5c9846bf3cf0d1fec8d01c926d07e855ce"])
fstat(r0, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000100)='./file0\x00', r1, 0xee00)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1024
remove dir: /root/cephfs-client/dfs-0-474
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4161, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11348, flag collect 0
----- executor 2 signal number : 4690
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
----- executor 2 signal number : 521
executor 2 server cover_cnt 4 output_pos_value 6553
time breakdown 2: 16, 9, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-475 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-475
receive_execute: 5, 13
receive_execute: 2, 12
receive_execute: 4, 12
receive_execute: 2, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 7
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 42, pid 2199, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 3 signal number : 23
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 80
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:39:19 for select break: 1
executor 1 write_server_output
executor 0 write_server_output
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4163, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11353, flag collect 0
----- executor 2 signal number : 4690
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
----- executor 2 signal number : 521
executor 2 server cover_cnt 4 output_pos_value 6553
time breakdown 0: 16, 8, 0
before receive testcase: 0 1
time breakdown 2: 15, 7, 0
before receive testcase: 0 1
time breakdown 3: 18, 5, 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 29
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 6 replies
2023/03/27 22:39:19 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4690 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
time breakdown 1: 14, 17, 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 5
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='security.SMACK64IPOUT\x00', &(0x7f0000000080)={'(-'}, 0x3, 0x3)
setxattr$trusted_overlay_opaque(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340), 0x2, 0x1)
lgetxattr(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)=@random={'btrfs.', '(-'}, &(0x7f00000001c0)=""/99, 0x63)
rename(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1152
remove dir: /root/cephfs-client/dfs-0-475
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-476 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-476
receive_execute: 2, 20
receive_execute: 11, 20
receive_execute: 13, 21
receive_execute: 11, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 528, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 528, flag collect 0
----- executor 3 signal number : 213
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 0, 5
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 34, 7, 0
executor 1 write_server_output
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 260, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 7923, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1281
----- executor 2 executes write_coverage_signal cov->size 17948, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5358
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
time breakdown 0: 31, 9, 0
----- executor 2 signal number : 538
executor 2 server cover_cnt 4 output_pos_value 7255
time breakdown 2: 31, 9, 0
before receive testcase: 0 1
time breakdown 1: 22, 10, 0
before receive testcase: 0 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 33
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1281 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 5358 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [CLIENT] executor 3 has 5 replies
2023/03/27 22:39:19 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 213 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 12
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
lsetxattr$security_selinux(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000380)='system_u:object_r:sendmail_exec_t:s0\x00', 0x22, 0x5)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
write(r1, &(0x7f0000000040)="9e", 0x400000)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000300), &(0x7f0000000340)={'L+', 0x1ff}, 0x16, 0x3)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000240), &(0x7f0000000280)={'L+', 0x6}, 0x16, 0x1)
chdir(&(0x7f00000002c0)='./file1\x00')
r2 = open$dir(&(0x7f00000003c0)='./file1\x00', 0x10000, 0x121)
fcntl$F_SET_RW_HINT(r2, 0x40c, &(0x7f0000000400))
lsetxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file0\x00', 0x8, 0x1)
unlink(&(0x7f0000000100)='./file1\x00')
write$binfmt_misc(r0, &(0x7f0000000600)=ANY=[], 0x6f)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2240
remove dir: /root/cephfs-client/dfs-0-476
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-477 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-477
receive_execute: 8, 15
receive_execute: 5, 16
receive_execute: 6, 16
receive_execute: 7, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 155
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 55940, pid 2206, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 55940, flag collect 0
----- executor 3 signal number : 322
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2206, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 141, pid 2206, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 141, flag collect 0
----- executor 3 signal number : 60
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1067, pid 2206, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1067, flag collect 0
----- executor 3 signal number : 554
----- completed 12
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 5, 0
execute_one time: 0, 19
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 23, 22, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 726, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32169, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 22, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 22, 0
----- executor 2 signal number : 1433
----- executor 2 executes write_coverage_signal cov->size 28735, flag collect 0
----- executor 2 signal number : 1077
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6400
----- executor 2 executes write_coverage_signal cov->size 1482, flag collect 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 24215, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 5583
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1649
executor 2 server cover_cnt 8 output_pos_value 16559
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 22, 29, 0
2023/03/27 22:39:19 wg wait finish
before receive testcase: 0 1
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 45
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1433 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1077 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6400 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 5583 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/27 22:39:19 [CLIENT] executor 3 has 12 replies
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 155 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 322 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 554 signal and 0 cover from executor 3
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2458 open open
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 3
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='./file0\x00', 0x40080, 0x0)
stat(&(0x7f0000000100)='./file0\x00', 0x0)
symlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 408
remove dir: /root/cephfs-client/dfs-0-477
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-478 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-478
receive_execute: 11, 9
receive_execute: 4, 9
receive_execute: 11, 8
receive_execute: 10, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 2211, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2211, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 2211, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 128
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 20, 8, 0
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 5978, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1277
----- executor 2 executes write_coverage_signal cov->size 14079, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 4960
----- executor 2 executes write_coverage_signal cov->size 358, flag collect 0
----- executor 2 signal number : 246
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
----- executor 2 signal number : 539
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 7105
time breakdown 0: 19, 10, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 20
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 3 replies
2023/03/27 22:39:19 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
time breakdown 2: 13, 11, 0
2023/03/27 22:39:19 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 2 has 5 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1277 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4960 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 246 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 539 signal and 0 cover from userspace component
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3967 truncate truncate
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3761 stat stat
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 9
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
truncate(&(0x7f00000000c0)='./file0\x00', 0x81)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
getdents(r0, &(0x7f0000000280)=""/102, 0x66)
fcntl$lock(r0, 0x26, &(0x7f0000000240)={0x2, 0x2, 0x1ff, 0x1, 0xffffffffffffffff})
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(r1, &(0x7f0000000380)=""/69, 0x45)
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1376
remove dir: /root/cephfs-client/dfs-0-478
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-479 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-479
receive_execute: 6, 14
receive_execute: 3, 14
receive_execute: 4, 14
receive_execute: 4, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2214, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2214, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 95, pid 2214, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 3 signal number : 52
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 10, 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 453, flag collect 0
executor 1 write_server_output
before receive testcase: 0 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 13064, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 927
----- executor 2 executes write_coverage_signal cov->size 26446, flag collect 0
time breakdown 1: 19, 11, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 6658
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 18308, flag collect 0
----- executor 2 signal number : 3678
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19096, flag collect 0
----- executor 2 signal number : 1121
executor 2 server cover_cnt 8 output_pos_value 13876
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 29
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 9 replies
2023/03/27 22:39:19 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 927 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6658 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3678 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1121 signal and 0 cover from userspace component
time breakdown 2: 17, 14, 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 122 chown chown
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 4
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
chown(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
fstat(r0, &(0x7f0000000080))
fcntl$dupfd(r0, 0x406, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/cephfs-client/dfs-0-479
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-480 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-480
receive_execute: 8, 15
receive_execute: 7, 15
receive_execute: 4, 15
receive_execute: 7, 15
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2217, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2217, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4253, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 23, 4, 0
before receive testcase: 0 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11644, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:19 for select break: 1
time breakdown 1: 22, 5, 0
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 22, 5, 0
----- executor 2 signal number : 4893
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 12170, flag collect 0
----- executor 2 signal number : 573
executor 2 server cover_cnt 5 output_pos_value 6819
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 22
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 4 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 2 has 5 replies
time breakdown 2: 19, 7, 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4893 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 573 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 3
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000017c0)='./file1\x00', 0x10042, 0x0)
fcntl$notify(r0, 0x402, 0x80000024)
chmod(&(0x7f0000000140)='./file1\x00', 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/cephfs-client/dfs-0-480
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-481 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-481
receive_execute: 7, 13
receive_execute: 6, 13
receive_execute: 6, 13
receive_execute: 1, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 2220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 497
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 736, pid 2220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 736, flag collect 0
----- executor 3 signal number : 243
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 6, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 573, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 10657, flag collect 0
----- executor 2 signal number : 926
----- executor 2 executes write_coverage_signal cov->size 24864, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 7, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 7, 0
----- executor 2 signal number : 6491
----- executor 2 executes write_coverage_signal cov->size 1103, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 306
----- executor 2 executes write_coverage_signal cov->size 2693, flag collect 0
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 29733, flag collect 0
----- executor 2 signal number : 1683
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 23
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:39:19 [CLIENT] executor 3 has 3 replies
2023/03/27 22:39:19 fuzzer receive 497 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 926 signal and 0 cover from userspace component
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 243 signal and 0 cover from executor 3
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6491 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1683 signal and 0 cover from userspace component
executor 2 server cover_cnt 8 output_pos_value 11919
time breakdown 2: 14, 9, 0
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2781 readlinkat readlinkat
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 2347 llistxattr llistxattr
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 10
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
truncate(&(0x7f0000000500)='./file0\x00', 0x401)
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
fstat(r0, &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$system_posix_acl(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='system.posix_acl_default\x00', &(0x7f0000000540)={{}, {0x1, 0x4}, [{0x2, 0x1, r1}, {0x2, 0x1, 0xee00}, {0x2, 0x5, r3}, {0x2, 0x4, r4}, {0x2, 0xf, r5}, {0x2, 0x4, r1}, {0x2, 0x4, r1}], {0x4, 0x3}, [{0x8, 0x3, r2}, {0x8, 0x0, 0xee01}, {0x8, 0xe, r2}, {0x8, 0x2}, {0x8, 0x2, r2}, {0x8, 0x3, r2}, {0x8, 0x6, r2}], {}, {0x20, 0x1}}, 0x94, 0x1)
readlinkat(r0, &(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)=""/106, 0x6a)
llistxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/32, 0x20)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3960
remove dir: /root/cephfs-client/dfs-0-481
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
receive_execute: 3, 14
receive_execute: 8, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-482 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-482
receive_execute: 9, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 8, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 577, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 3 signal number : 47
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2223, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2223, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2223, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 121, pid 2223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 121, flag collect 0
----- executor 3 signal number : 11
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 9, 0
execute_one time: 1, 20
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 898, flag collect 0
executor 0 write_server_output
time breakdown 3: 23, 23, 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1432
----- executor 2 executes write_coverage_signal cov->size 26396, flag collect 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 24, 0
before receive testcase: 0 0
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 25, 0
before receive testcase: 0 0
----- executor 2 signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7093
----- executor 2 executes write_coverage_signal cov->size 2531, flag collect 0
----- executor 2 signal number : 335
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6864
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1956
executor 2 server cover_cnt 8 output_pos_value 18811
2023/03/27 22:39:19 for select break: 1
2023/03/27 22:39:19 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:19 wg wait finish
2023/03/27 22:39:19 ------ all executors finish execution
2023/03/27 22:39:19 exec time: 45
2023/03/27 22:39:19 ----- PS len: 4
2023/03/27 22:39:19 [CLIENT] executor 3 has 10 replies
2023/03/27 22:39:19 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:19 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:19 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:39:19 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1432 signal and 0 cover from userspace component
time breakdown 2: 17, 31, 0
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1035 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 7093 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 335 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 6864 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:19 ------- fuzzer executor 2 receive 1956 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:19 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:19 ----- no new client coverage: false, true
2023/03/27 22:39:19 mutate testcase with failures
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 3967 truncate truncate
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 ----- insertCall()
2023/03/27 22:39:19 ----- generateCall 258 getdents getdents
2023/03/27 22:39:19 ----- mutateArg()
2023/03/27 22:39:19 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:19 prog length: 4
2023/03/27 22:39:19 HasCrashFail:false HasNetFail:false
22:39:19 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x0, 0x40)
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
truncate(&(0x7f0000000000)='./file0\x00', 0x8d2f)
getdents(r0, &(0x7f00000001c0)=""/230, 0xe6)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 528
remove dir: /root/cephfs-client/dfs-0-482
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-483 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-483
receive_execute: 12, 7
receive_execute: 2, 7
receive_execute: 10, 7
receive_execute: 11, 7
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 2226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 154
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 6
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 19, 6, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6086, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 14033, flag collect 0
----- executor 2 signal number : 4961
----- executor 2 executes write_coverage_signal cov->size 1395, flag collect 0
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
----- executor 2 signal number : 539
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 18, 8, 0
time breakdown 1: 17, 8, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
executor 2 server cover_cnt 5 output_pos_value 7141
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 17
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 4 replies
2023/03/27 22:39:20 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 154 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
time breakdown 2: 9, 10, 0
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 5 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4961 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 539 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2347 llistxattr llistxattr
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3761 stat stat
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2341 lchown lchown
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 8
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x2000000, [{0x800, 0x1003}, {0x8000, 0x8}]}, 0x14, 0x0)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x180)
llistxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=""/224, 0xe0)
stat(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000380)='./file0\x00', r0, r1)
r2 = open(&(0x7f0000000140)='./file0\x00', 0x1a040, 0x40)
openat(r2, &(0x7f0000000100)='./file0\x00', 0x10040, 0x14)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1512
remove dir: /root/cephfs-client/dfs-0-483
remove dir time 9
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-484 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-484
receive_execute: 9, 13
receive_execute: 7, 13
receive_execute: 7, 13
receive_execute: 5, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one loop: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 358
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 47
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 88
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 1
execute_one time: 1, 4
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 6, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 222, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 5337, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 881
----- executor 2 executes write_coverage_signal cov->size 11303, flag collect 0
time breakdown 1: 20, 7, 0
----- executor 2 signal number : 4701
----- executor 2 executes write_coverage_signal cov->size 781, flag collect 0
----- executor 2 signal number : 288
----- executor 2 executes write_coverage_signal cov->size 3814, flag collect 0
before receive testcase: 0 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1531
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18439, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 1561
executor 2 server cover_cnt 8 output_pos_value 10445
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 23
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 8 replies
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
time breakdown 2: 18, 10, 0
2023/03/27 22:39:20 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 881 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4701 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 288 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1531 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1561 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 3
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x2283c2, 0x1a4)
symlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)='./file0\x00')
setxattr$security_selinux(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0xfffffffffffffffc, 0x0, 0x3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/cephfs-client/dfs-0-484
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-485 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-485
receive_execute: 7, 15
receive_execute: 6, 15
receive_execute: 5, 15
receive_execute: 3, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 10734, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4482
----- executor 2 executes write_coverage_signal cov->size 1413, flag collect 0
----- executor 2 signal number : 307
----- executor 2 executes write_coverage_signal cov->size 8452, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 574
executor 2 server cover_cnt 5 output_pos_value 6710
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 7, 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 22
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 3 replies
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 5 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4482 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 307 signal and 0 cover from userspace component
time breakdown 2: 18, 8, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 574 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 3: 22, 5, 0
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 258 getdents getdents
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 170 dup dup
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 14
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = open$dir(&(0x7f0000000300)='./file1\x00', 0x800, 0x28)
r2 = fcntl$dupfd(r1, 0x0, r0)
open(&(0x7f0000000200)='./file1\x00', 0x200, 0x90)
fcntl$setsig(r2, 0xa, 0x8)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
open$dir(&(0x7f00000001c0)='./file1\x00', 0x20002, 0x8)
unlink(&(0x7f0000000000)='./file0\x00')
r3 = openat(r2, &(0x7f0000000340)='./file2/../file0\x00', 0x200000, 0x10)
dup(r3)
r4 = openat(0xffffffffffffff9c, &(0x7f0000000240)='./file2/../file0\x00', 0x42201, 0x1)
getdents(r4, &(0x7f00000002c0)=""/33, 0x21)
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2096
remove dir: /root/cephfs-client/dfs-0-485
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-486 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-486
receive_execute: 5, 18
receive_execute: 4, 18
receive_execute: 3, 17
receive_execute: 2, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 102
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 550, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 550, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 95
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 3, 0
execute_one time: 1, 10
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 13, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1156, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17278, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 1396
----- executor 2 executes write_coverage_signal cov->size 30991, flag collect 0
----- executor 2 signal number : 1133
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7400
----- executor 2 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 2 signal number : 98
----- executor 2 executes write_coverage_signal cov->size 3169, flag collect 0
----- executor 2 signal number : 358
----- executor 2 executes write_coverage_signal cov->size 27993, flag collect 0
time breakdown 1: 22, 15, 0
before receive testcase: 0 1
----- executor 2 signal number : 5019
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1861
executor 2 server cover_cnt 9 output_pos_value 17364
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 36
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 14 replies
2023/03/27 22:39:20 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 9 replies
2023/03/27 22:39:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1396 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1133 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7400 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 98 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 358 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5019 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1861 signal and 0 cover from userspace component
time breakdown 2: 20, 18, 0
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 250 fsync fsync
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3761 stat stat
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 250 fsync fsync
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 10
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x82a02, 0xc)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x101001, 0x9b)
faccessat(r0, &(0x7f0000000040)='./file0\x00', 0x14)
open$dir(&(0x7f00000002c0)='./file1\x00', 0x301000, 0x0)
stat(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100))
r1 = openat(r0, &(0x7f0000000200)='./file0\x00', 0x40, 0x10)
fsync(r0)
setxattr$trusted_overlay_origin(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000240), 0x2, 0x3)
fsync(r1)
open$dir(&(0x7f0000000280)='./file0\x00', 0x800, 0x10)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1432
remove dir: /root/cephfs-client/dfs-0-486
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-487 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-487
receive_execute: 9, 10
receive_execute: 9, 10
receive_execute: 4, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 7, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 93, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
time breakdown 3: 19, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1956, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4175, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2166
----- executor 2 executes write_coverage_signal cov->size 669, flag collect 0
----- executor 2 signal number : 243
executor 2 server cover_cnt 4 output_pos_value 3499
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 17, 6, 0
time breakdown 0: 19, 6, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 16
2023/03/27 22:39:20 ----- PS len: 4
time breakdown 2: 14, 6, 0
2023/03/27 22:39:20 [CLIENT] executor 3 has 10 replies
2023/03/27 22:39:20 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2166 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 243 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2458 open open
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 248 fstat fstat
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 8
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x20242, 0x0)
chown(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r1 = dup(r0)
open(&(0x7f00000000c0)='./file0\x00', 0x200040, 0x142)
open$dir(&(0x7f00000001c0)='./file0\x00', 0x8400, 0x15)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x82)
fstat(r2, &(0x7f0000000140))
write$binfmt_script(r1, &(0x7f0000000080)={'#! ', './file1'}, 0xb)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1096
remove dir: /root/cephfs-client/dfs-0-487
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-488 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-488
receive_execute: 3, 4
receive_execute: 0, 3
receive_execute: 2, 4
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 4
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 629, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 629, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 170
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2241, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 378, pid 2241, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 3 signal number : 265
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 6, 0
execute_one time: 1, 8
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 7, 11, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 350, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 12738, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 11977, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 919
----- executor 2 executes write_coverage_signal cov->size 18253, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 6062
----- executor 2 executes write_coverage_signal cov->size 2134, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 25051, flag collect 0
time breakdown 1: 6, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 5282
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 31749, flag collect 0
----- executor 2 signal number : 1754
executor 2 server cover_cnt 8 output_pos_value 15822
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 18
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 8 replies
time breakdown 2: 3, 14, 0
2023/03/27 22:39:20 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 170 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 919 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 6062 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5282 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1754 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 265 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2341 lchown lchown
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2809 rename rename
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2810 renameat renameat
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 17
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0xa8)
setxattr$trusted_overlay_upper(&(0x7f0000000900)='./file0\x00', &(0x7f0000000940), &(0x7f0000000980)={0x0, 0xfb, 0xcb, 0x2, 0x22, "017499ef33b3aee590d44d664b974158", "99f7a36dc45ffb1604530aaba513b313b62f0586088799ef019844e0d88c931b4136d8f3a4eae81e799971ac4cc214ce3209439aee2016152162203e45bce32c04bd458e6a4ccc5fe1aadad99e8ce1f58d0c5231371d753a19aa992b1d60cb379ca696dee634138ce796789a62218e1bb8453baa54c9aa1b26268653aa916e18d5ed2b072d95894471231e78976f423a2ca80273ecf578c6f648566e932df190af962fe71fab8852dfb6b101bd0e079fd349057cf9e6"}, 0xcb, 0x3)
lsetxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000440)=@md5={0x1, "267089c315813e9fd12941346add918d"}, 0x11, 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x147)
fsync(r0)
fstat(0xffffffffffffffff, &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000680)='./file0\x00', r1, 0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000600), &(0x7f0000000640)='./file0\x00', 0x8, 0x1)
setxattr$incfs_id(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000b40), &(0x7f0000000b80)={'0000000000000000000000000000000', 0x40}, 0x20, 0x0)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000001c0)="56306807a0c0311131479cebfc4f67dd124835d3ef444ef06bb2761045a152837b871ee65db1a281884b564637b7845c0782b07821a2a118bf55eba5c15d95ed9f46d3c3cb9158aa40eda6c73c12cfdd4e280b2dc35ff34cb9e1c565fa5bff3f8e361f0d8ff5f3385c8e2b6d8908db589919ddbe87a7e90b40e7a384d62dad41d0606edcff393761a46b2fb4c935d2c2793d8a5a0def63d1893248f760b3dccd712d320da952245b3ba3f6997c6963abea67883fabe2e7945c2ab5c30435144875f42c4f09f9d3112373e20bbb8e7a20d421fe710caa63b218905eb8760f2f2043a0debc40f3c63e9eaabc18e1d4ac80087bbdc81c2648691e30adaf0b840d2738cf868a72d3c4153290cc3a2df4bf44efe20ede9ed98c9137a36ddd437569579d3fe05f8789ed4f7c5f70476d51155397c56f5b81587b26c9131aa81f89e6abdcdb8ffecdcb1bc56b33c3f2b23352f5f5ff89e81e889a8a93148a2f7141801e2339df6cdf70638ccd7a0e9851284382c15fbd160fdc702cc0d1e5da0680ed621f0b453db12b4ece1b0705837d51991ae262b340e799d46095c9a590a043308829c80264dd32d79ce675a1090cc4d4112c8b3638d184a200cff7bbbf8e42bec46146ce3445060b085ac07c4de1cec20c4bb8c5a400def3e1b34b24f09475ab9e69354e15ff73c3f2aa5052ba736d37d5721b04913f17cb9cfd572fcd14e83f88c5f6a26565e25c1ca0c389f93c58da18f278c7503cf3562d0ea007b2360123bed723906ee248797a110704e54b2d159cd686b77937a27f40621d5791052ee53963", 0x241, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000840)='./file0\x00', &(0x7f0000000880)='security.SMACK64\x00', &(0x7f00000008c0)={'system.posix_acl_access\x00'}, 0x19, 0x2)
fstat(r0, &(0x7f00000007c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000180)='./file0\x00', &(0x7f0000000480)='system.posix_acl_access\x00', &(0x7f00000004c0)={{}, {}, [{0x2, 0x3, 0xee01}], {0x4, 0x1}, [{0x8, 0x2, 0xee00}, {0x8, 0x7, 0xee01}, {0x8, 0x1, 0xffffffffffffffff}, {0x8, 0x5, r2}, {0x8, 0x6, 0xee00}, {0x8, 0x4, 0xee01}], {0x10, 0x3}, {0x20, 0x4}}, 0x5c, 0x2)
r3 = dup2(r0, r0)
renameat(r3, &(0x7f0000000a80)='./file0\x00', r0, &(0x7f0000000ac0)='./file0\x00')
lsetxattr$security_evm(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580), &(0x7f00000005c0)=@sha1={0x1, "181988f2173df508e6dbbc198fa8e69851d7400e"}, 0x15, 0x3)
rename(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6040
remove dir: /root/cephfs-client/dfs-0-488
remove dir time 18
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-489 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-489
receive_execute: 8, 19
receive_execute: 2, 20
receive_execute: 6, 20
receive_execute: 7, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 268, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 268, flag collect 0
----- executor 3 signal number : 140
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 235, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 3 signal number : 35
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2245, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 190
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 45
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 367, pid 2245, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 367, flag collect 0
----- executor 3 signal number : 75
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 490, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 490, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 494, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 494, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 569, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 569, flag collect 0
----- executor 3 signal number : 8
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 332, pid 2245, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 332, flag collect 0
----- executor 3 signal number : 41
----- completed 12
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 560, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 560, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 16, 6, 0
execute_one time: 1, 22
executor 1 write_server_output
executor 0 write_server_output
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 27, 24, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 25, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 25, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1573, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 27681, flag collect 0
----- executor 2 signal number : 1415
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1085
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7055
----- executor 2 executes write_coverage_signal cov->size 2142, flag collect 0
----- executor 2 signal number : 321
----- executor 2 executes write_coverage_signal cov->size 28729, flag collect 0
----- executor 2 signal number : 4675
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1901
executor 2 server cover_cnt 8 output_pos_value 16549
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 51
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 17 replies
2023/03/27 22:39:20 fuzzer receive 401 signal and 0 cover from executor 3
time breakdown 2: 22, 31, 0
2023/03/27 22:39:20 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1415 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1085 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7055 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 321 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4675 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1901 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 190 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 1 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 1
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open(&(0x7f0000000140)='./file1\x00', 0x87c1, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/cephfs-client/dfs-0-489
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-490 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-490
receive_execute: 11, 8
receive_execute: 2, 8
receive_execute: 9, 8
receive_execute: 9, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 2249, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 5, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11966, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5010
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 544
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 6905
time breakdown 2: 11, 7, 0
before receive testcase: 0 1
time breakdown 1: 17, 7, 0
before receive testcase: 0 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 20
2023/03/27 22:39:20 ----- PS len: 4
time breakdown 0: 17, 7, 0
before receive testcase: 0 0
2023/03/27 22:39:20 [CLIENT] executor 3 has 1 replies
2023/03/27 22:39:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5010 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 258 getdents getdents
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 8
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r1, &(0x7f0000000140)='./file1\x00')
getdents(r1, &(0x7f0000000280)=""/102, 0x66)
r2 = open$dir(&(0x7f0000000000)='./file0\x00', 0x400002, 0x1a0)
getdents(r2, &(0x7f0000000300)=""/234, 0xea)
getdents(r0, &(0x7f0000000180)=""/173, 0xad)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1088
remove dir: /root/cephfs-client/dfs-0-490
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-491 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-491
receive_execute: 9, 13
receive_execute: 6, 13
receive_execute: 8, 13
receive_execute: 8, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2251, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2251, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2251, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 104, pid 2251, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 104, flag collect 0
----- executor 3 signal number : 58
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 9, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 13336, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 952
----- executor 2 executes write_coverage_signal cov->size 26428, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 6732
----- executor 2 executes write_coverage_signal cov->size 3885, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 18351, flag collect 0
----- executor 2 signal number : 3746
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18355, flag collect 0
----- executor 2 signal number : 1126
executor 2 server cover_cnt 8 output_pos_value 14405
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 27
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 8 replies
2023/03/27 22:39:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 952 signal and 0 cover from userspace component
time breakdown 2: 19, 14, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 6732 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3746 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1126 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 2
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file1\x00', 0xe00, 0x111)
fdatasync(r0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 216
remove dir: /root/cephfs-client/dfs-0-491
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-492 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-492
receive_execute: 8, 18
receive_execute: 4, 16
receive_execute: 7, 18
receive_execute: 7, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 424, pid 2254, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2254, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 1955, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4175, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2166
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 242
executor 2 server cover_cnt 4 output_pos_value 3496
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 3, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 4, 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 22
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 2 replies
2023/03/27 22:39:20 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
time breakdown 2: 20, 4, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2166 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 242 signal and 0 cover from userspace component
time breakdown 3: 26, 3, 0
before receive testcase: 0 1
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 2
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lchown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/cephfs-client/dfs-0-492
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-493 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-493
receive_execute: 5, 6
receive_execute: 3, 5
receive_execute: 4, 5
receive_execute: 5, 5
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 481, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 171
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 5902, flag collect 0
----- executor 2 signal number : 1274
----- executor 2 executes write_coverage_signal cov->size 14710, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4859
----- executor 2 executes write_coverage_signal cov->size 12364, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 9, 5, 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 559
time breakdown 1: 10, 5, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6772
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 12
2023/03/27 22:39:20 ----- PS len: 4
time breakdown 2: 8, 7, 0
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 4 replies
2023/03/27 22:39:20 [CLIENT] executor 3 has 2 replies
2023/03/27 22:39:20 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 171 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1274 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4859 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 559 signal and 0 cover from userspace component
time breakdown 3: 11, 3, 0
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 250 fsync fsync
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 3
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
fsync(0xffffffffffffffff)
open(&(0x7f0000000040)='./file0\x00', 0x20041, 0x0)
open(&(0x7f00000017c0)='./file1\x00', 0x8000, 0x3b)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 328
remove dir: /root/cephfs-client/dfs-0-493
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-494 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-494
receive_execute: 5, 14
receive_execute: 1, 14
receive_execute: 3, 15
receive_execute: 4, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2258, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 2258, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6037, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1279
----- executor 2 executes write_coverage_signal cov->size 16141, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5623
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 553
executor 2 server cover_cnt 5 output_pos_value 7546
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 18, 14, 0
before receive testcase: 0 0
time breakdown 0: 18, 15, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 30
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 3 replies
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
time breakdown 2: 15, 16, 0
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 5 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1279 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5623 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 553 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
----- executor 3 write_call_output, size 423, pid 2258, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 90
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 1, 11
time breakdown 3: 19, 13, 0
before receive testcase: 0 0
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2814 rmdir rmdir
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2346 listxattr listxattr
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 9
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
open$dir(&(0x7f0000000140)='./file0\x00', 0x0, 0x10)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000840)=ANY=[], 0x16, 0x0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
removexattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100)=@known='security.selinux\x00')
rmdir(&(0x7f0000000180)='./file0\x00')
listxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=""/215, 0xd7)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1272
remove dir: /root/cephfs-client/dfs-0-494
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-495 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-495
receive_execute: 2, 12
receive_execute: 7, 12
receive_execute: 5, 12
receive_execute: 4, 12
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 305, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 3 signal number : 34
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 432, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 432, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 156, pid 2261, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 156, flag collect 0
----- executor 3 signal number : 12
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 4, 0
execute_one time: 1, 10
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 965, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 19946, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 29436, flag collect 0
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 16, 15, 0
before receive testcase: 0 0
time breakdown 1: 17, 15, 0
before receive testcase: 0 0
time breakdown 3: 19, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7419
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 21082, flag collect 0
----- executor 2 signal number : 4206
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2041
executor 2 server cover_cnt 8 output_pos_value 16223
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 30
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 9 replies
2023/03/27 22:39:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
time breakdown 2: 14, 19, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7419 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4206 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2041 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2343 link link
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2458 open open
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 4
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x0)
link(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0/file0\x00')
llistxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000380)=""/84, 0x54)
open(&(0x7f0000000100)='./file0\x00', 0x40000, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 576
remove dir: /root/cephfs-client/dfs-0-495
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-496 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-496
receive_execute: 9, 21
receive_execute: 4, 21
receive_execute: 8, 21
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 2265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 41
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 8, 21
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 5, 0
execute_one time: 1, 8
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 254, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6830, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 11294, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 912
----- executor 2 executes write_coverage_signal cov->size 19442, flag collect 0
----- executor 2 signal number : 5814
----- executor 2 executes write_coverage_signal cov->size 2169, flag collect 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 12586, flag collect 0
time breakdown 3: 30, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 3160
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 24902, flag collect 0
----- executor 2 signal number : 2074
executor 2 server cover_cnt 8 output_pos_value 13772
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 38
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 4 replies
time breakdown 2: 25, 16, 0
2023/03/27 22:39:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 912 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5814 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3160 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2074 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2343 link link
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3967 truncate truncate
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 9
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
truncate(&(0x7f0000000080)='./file2\x00', 0x8000000000000000)
setxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f00000001c0), 0x2, 0x2)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000380)='./file2\x00')
r0 = open(&(0x7f0000000200)='./file2\x00', 0x0, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file2\x00', &(0x7f00000003c0), &(0x7f0000000440)=ANY=[@ANYBLOB=""], 0x1001, 0x0)
lgetxattr(&(0x7f0000000240)='./file0\x00', &(0x7f00000002c0)=@known='trusted.overlay.metacopy\x00', &(0x7f0000001440)=""/164, 0xa4)
link(&(0x7f0000000000)='./file2\x00', &(0x7f0000000040)='./file0\x00')
fsync(r0)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 5632
remove dir: /root/cephfs-client/dfs-0-496
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-497 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-497
receive_execute: 10, 13
receive_execute: 2, 13
receive_execute: 7, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 211
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 7, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 852, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 62
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 465, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 465, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 58
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 208, pid 2268, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 208, flag collect 0
----- executor 3 signal number : 62
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 10, 7, 0
execute_one time: 0, 17
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 929, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 16484, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1412
----- executor 2 executes write_coverage_signal cov->size 24739, flag collect 0
----- executor 2 signal number : 1079
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 20, 20, 0
before receive testcase: 0 0
time breakdown 0: 20, 20, 0
before receive testcase: 0 0
----- executor 2 signal number : 7857
----- executor 2 executes write_coverage_signal cov->size 4642, flag collect 0
time breakdown 3: 23, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 431
----- executor 2 executes write_coverage_signal cov->size 17262, flag collect 0
----- executor 2 signal number : 3423
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 31766, flag collect 0
----- executor 2 signal number : 1829
executor 2 server cover_cnt 8 output_pos_value 16128
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 36
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 9 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 211 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1412 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1079 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7857 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 431 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3423 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1829 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2809 rename rename
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
time breakdown 2: 15, 23, 0
before receive testcase: 0 0
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 171 dup2 dup2
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 20
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x80)
link(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
rename(&(0x7f00000001c0)='./file3\x00', &(0x7f0000000240)='./file2\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file1\x00', &(0x7f0000000200)='./file1\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
r2 = dup2(r0, r1)
stat(&(0x7f0000000400)='./file1\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(r1, &(0x7f00000005c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000140)='system.posix_acl_default\x00', &(0x7f0000000640)={{}, {0x1, 0x2}, [{0x2, 0x4, r3}, {0x2, 0x6}, {0x2, 0x2}, {}, {0x2, 0x9d10e2ec21908f28, r4}, {0x2, 0x3, 0xee00}], {0x4, 0x6}, [{0x8, 0x4}, {0x8, 0x5, 0xee01}], {0x10, 0x2}}, 0x64, 0x1)
write$binfmt_script(r1, &(0x7f0000000940)=ANY=[@ANYBLOB="2321202e2f66696c65322020743c49513765642e6f76655c6c61792e6f706171000af40ca01eeb18be46606500000000000000000000000000000000000000000000479098d42e9fac2b226b00157b3a36be20da55bb1d6b7ee87f561dc56c5075153095127ea68a67aaba481614f87d27198b6bb602854ec382ed33565cb8daf4f09c1c18eb8a65c4d7682079441d61df6ac61e45c5f9467b075266401af1fc85a6a65ea810890e1d226554f094476bd5c5ccfce22db022cc7625da3f11b5dae992df66f6a0effae6f5369f8854fd9c834165f3e2c4d25479b989f20cb1b1c36ac92d1b9ea324b1711b0aa831f77c377d35ba82405e8d7d1c7133ff7ada756797be7546cc67624dc0f5c2a78c656e6ebf48e4"], 0x42)
stat(&(0x7f0000000780)='./file3\x00', &(0x7f00000007c0)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
r6 = dup2(r2, r1)
fcntl$setflags(r6, 0x2, 0x0)
lsetxattr$security_capability(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000740), &(0x7f0000000840)=@v3={0x3000000, [{0x5, 0x5}, {0x7, 0x3}], r5}, 0x18, 0x3)
setxattr$system_posix_acl(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)='system.posix_acl_default\x00', &(0x7f0000000880)=ANY=[@ANYBLOB="020000000100000000000000040000000000000008000000", @ANYRES32=0x0, @ANYBLOB="10000000f84dcb6e70d5fdff04000000000000005747e607d5df1f0000000000008a008186ebe30940f7c8791240004ac38e624c96d58442d3116bb4f9b2c0138e512118874aa26341edfc524092f1fe51de233d060d6a162d09d8e254806d50f9cabfe8705613275a89e7471a25e10f065956facb765faf73e93081eb1c8d548708684865f50e"], 0x2c, 0x0)
open$dir(&(0x7f0000000380)='./file3\x00', 0xe0c02, 0x1d7)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file2\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x2, 0x1)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5504
remove dir: /root/cephfs-client/dfs-0-497
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-498 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-498
receive_execute: 9, 11
receive_execute: 7, 12
receive_execute: 4, 12
receive_execute: 7, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 24
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 2271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 65
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 0, 14
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1282, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12886, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 27910, flag collect 0
----- executor 2 signal number : 1092
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 18, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 17, 0
before receive testcase: 0 0
time breakdown 3: 20, 16, 0
before receive testcase: 0 1
----- executor 2 signal number : 7590
----- executor 2 executes write_coverage_signal cov->size 4307, flag collect 0
----- executor 2 signal number : 397
----- executor 2 executes write_coverage_signal cov->size 26838, flag collect 0
----- executor 2 signal number : 5229
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1148
executor 2 server cover_cnt 8 output_pos_value 16941
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 34
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 [CLIENT] executor 3 has 20 replies
2023/03/27 22:39:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1092 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7590 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 397 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5229 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1148 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 131 close close
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2374 mkdirat mkdirat
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/27 22:39:20 ----- splice()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 171 dup2 dup2
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 20
time breakdown 2: 16, 22, 0
before receive testcase: 0 0
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x220)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x2, 0x0)
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000740)=ANY=[@ANYBLOB="02000000010005000000000002000700", @ANYRES32=0xee00, @ANYBLOB="0200671d", @ANYRES32=0xee00, @ANYBLOB="02000400", @ANYRES32=r1, @ANYBLOB="02000000", @ANYRES32=0xee00, @ANYBLOB="04000100000000000800040002000000d2ba4d49ed9c108b3c8118ccdc30c0a0fde842baf591ccd2f360e61c216ba25cf7e18408caf1eecf5ab3ee4ee0214cf6af451bbd0c7334b8bf20c32ffb8681", @ANYRES32, @ANYBLOB="10000400000000002000000000000000"], 0x4c, 0x3)
close(0xffffffffffffffff)
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
chmod(&(0x7f00000003c0)='.\x00', 0x0)
symlink(&(0x7f0000000400)='./file1/file0\x00', &(0x7f0000000440)='./file2\x00')
lsetxattr$security_evm(&(0x7f0000000140)='.\x00', &(0x7f00000001c0), &(0x7f00000002c0)=@md5={0x1, "fb49347478028623477c27bdf55acd29"}, 0x11, 0x1)
r2 = dup(r0)
dup2(0xffffffffffffffff, r2)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000000)='./file2\x00', &(0x7f0000000200), &(0x7f0000001340)="", 0x1007, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file1/../file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@md5={0x1, "e9e03c30b521232cdf8a108cc8ffa4b8"}, 0x11, 0x1)
setxattr$security_ima(&(0x7f0000000480)='./file0\x00', &(0x7f0000000500), &(0x7f0000000640)=ANY=[@ANYBLOB="04021aad6f0c9de6b78e7bb65db9a78004db15cb83610b871b8528cf6c1f114e91c2abe89d71edf1690ab751e8165bb4769692fe83accd4879bffb8633cc4a0a2306f827a234c82af1bdc26874cb688a3a726975e27a9182473774c2c8e9c1fc8e7bfd30c0bcea815b6f810ccaff696249dcd62011310f8667f5f1d3f271f68bd33a1d0249b3abf276ceda7cbe81b142dd977d9049992b2f70662dac6b5fbe7de5b37d026453445b1b04b61c45eea75590a563effa93a373b47d086452737eb383099e4eec8d9eeee0f5e43928fd042c9ce1fd5be7fbbb185b134402b478f49de3e96d18c9851cd8f48af6"], 0x4, 0x2)
lsetxattr$smack_xattr_label(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0)='security.SMACK64EXEC\x00', &(0x7f0000000600)={'!)\'![/'}, 0x7, 0x2)
open$dir(&(0x7f0000001300)='./file0\x00', 0x28084, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8552
remove dir: /root/cephfs-client/dfs-0-498
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-499 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-499
receive_execute: 11, 23
receive_execute: 5, 23
receive_execute: 10, 23
receive_execute: 10, 23
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 511, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 52
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 331, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 331, flag collect 0
----- executor 3 signal number : 90
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 30
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 406, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 406, flag collect 0
----- executor 3 signal number : 55
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 832, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 832, flag collect 0
----- executor 3 signal number : 67
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 762, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 762, flag collect 0
----- executor 3 signal number : 14
----- completed 14
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 3
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 557, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 557, flag collect 0
----- executor 3 signal number : 4
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 96
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 569, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 569, flag collect 0
----- executor 3 signal number : 81
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 242, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 242, flag collect 0
----- executor 3 signal number : 13
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 47
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 12, 0
execute_one time: 1, 28
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 34, 30, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1672, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26451, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1418
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 33, 31, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 31, 0
before receive testcase: 0 0
----- executor 2 signal number : 1060
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6762
----- executor 2 executes write_coverage_signal cov->size 6549, flag collect 0
----- executor 2 signal number : 421
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5499
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 923
executor 2 server cover_cnt 8 output_pos_value 16178
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 60
2023/03/27 22:39:20 ----- PS len: 4
time breakdown 2: 28, 36, 0
before receive testcase: 0 0
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 [CLIENT] executor 3 has 20 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1418 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1060 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 6762 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 421 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5499 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 923 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 96 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 20
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x26, &(0x7f0000000880)={0x0, 0x0, 0xffffffffffffffff, 0x1f, 0xffffffffffffffff})
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
stat(&(0x7f0000000080)='./file0/file0\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
open(&(0x7f0000000780)='./file1\x00', 0x12040, 0x45)
openat(0xffffffffffffffff, &(0x7f00000007c0)='./file1\x00', 0x32000, 0x125)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0x44001, 0x1d)
fstat(r1, &(0x7f0000000800)={0x0, 0x0, 0x0, 0x0, <r2=>0x0, <r3=>0x0})
lsetxattr$smack_xattr_label(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='security.SMACK64\x00', &(0x7f0000000480)=ANY=[@ANYBLOB='trusted.overlay.o\x00'], 0x18, 0x1)
lsetxattr$system_posix_acl(&(0x7f0000000000)='.\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000cc0)=ANY=[@ANYRESHEX=r3, @ANYRES32=r1, @ANYBLOB="02000600b2bf107533df08944d5d5f6768c9e01839b86726c8e41f1a24c568c4bf7a2bbc07d73ae3a605517b9c60069ad24d506852f6c8556082c46db8681d5949189f39", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="cf58a0e8960209e239a7c55904efd2c98cb6534362460ea7ebd096ffd6b37e534650b90a5d234effa1490269e9816cbb023eab1be75b1fd030f0e6376ff51dec2c770eef6a8cde0b37e116763d5d736e1303af3dccd8681e1f610e800048e4f7a9bf58e3c4de383a1079cb7b331e836579144ba95a7e463788ec34969a49e5edc4f81ea9b565d0d150f68d844a3c7beab5f081986023f02387cc82f68d1b7639c98c4cb064c927b5f5024731b1af85e0e479ba576e6bc58d02eca311534122514b9fc4088bc025920431c3dd9b083dd69c7b972a852c27a33ddfb74f0282905da3298a14d9096689a676c3bde0e02864dbb839cc6d8fb8e72dc58abc5ace6562b14358d9f14ba077641898d012c6d27dc59200a9b1c4e74d1df370d1e24e2a44b7c0cd8f21ae9fd0372b1c49f7b9eb68a20c5e33c5117f9c268596664263ab497dbb9898893f0f37cf06737e3565a90ab0f1c25d", @ANYRES64, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000700", @ANYRES32=r0, @ANYBLOB="040001000000000008000100", @ANYRES32=0xee01, @ANYBLOB="08000600", @ANYRESDEC=r2, @ANYBLOB="0fc2702af0e1dfaa7b196798b1cce9fa75cf8f49ef259bef36af5a1db3c22c54eb0979c72650b0bcb539b97c0da59c3f41959fbde8701ef98109f27e54021217996a811977", @ANYRES32=r3, @ANYBLOB="1000060000000000"], 0x6c, 0x5)
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
faccessat(0xffffffffffffffff, &(0x7f0000000640)='./file0/file0\x00', 0x108)
lsetxattr$security_evm(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000240), &(0x7f0000000180)=ANY=[@ANYRES16=r1], 0xe, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f00000001c0)='./file1\x00', 0x0, 0x0, 0x0, 0x3)
setxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000200)='./file0/file0\x00', 0xe, 0x2)
rename(&(0x7f0000000280)='./file0\x00', &(0x7f0000000380)='./file1\x00')
mkdir(&(0x7f0000000680)='./file1\x00', 0x20)
lremovexattr(&(0x7f00000001c0)='.\x00', &(0x7f00000004c0)=@known='trusted.overlay.nlink\x00')
fcntl$setown(0xffffffffffffffff, 0x8, 0x0)
setxattr$security_ima(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700), &(0x7f0000000740)=@sha1={0x1, "84a3d5f1fa7675f190929ce425ed9e0aead7e491"}, 0x15, 0x3)
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x180)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5224
remove dir: /root/cephfs-client/dfs-0-499
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-500 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-500
receive_execute: 13, 13
receive_execute: 7, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 11, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
receive_execute: 12, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 598, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 598, flag collect 0
----- executor 3 signal number : 157
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 682, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 682, flag collect 0
----- executor 3 signal number : 197
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 2281, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 67
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 509, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 509, flag collect 0
----- executor 3 signal number : 26
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 711, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 711, flag collect 0
----- executor 3 signal number : 48
----- completed 15
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 457, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 3 signal number : 14
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 19
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 631, pid 2281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 631, flag collect 0
----- executor 3 signal number : 13
----- completed 20
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 4, 0
execute_one time: 1, 21
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 26, 23, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 1343, flag collect 0
time breakdown 1: 25, 24, 0
before receive testcase: 0 1
----- executor 2 signal number : 67
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 27030, flag collect 0
----- executor 2 signal number : 1422
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1102
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 7618
----- executor 2 executes write_coverage_signal cov->size 4734, flag collect 0
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5884
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2048
executor 2 server cover_cnt 8 output_pos_value 18559
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 46
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 20 replies
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1422 signal and 0 cover from userspace component
time breakdown 2: 20, 32, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1102 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7618 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5884 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2048 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 157 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 197 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 4200 writev writev
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 5
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000180)='./file1\x00', 0x171940, 0x0)
writev(r0, &(0x7f0000000140)=[{&(0x7f0000000000)="f329ee73a88079f2a596b70044720bfce4678cbb77981e76cb66b078c7eef2d999839145ae4dfda087e679e0781840673fdd084f80bc5211bb512acf69ac76333b5b40b1139fe6d7b2a5d6b066fbc087afe6e6270808d5960494b6ac3eabe3cafa0b09e1bdc6838e", 0x68}, {&(0x7f00000002c0)="491620ba3ffea547cb3cd0ac4a035be4130df38fecb5875b93b82e927481370aa924bd17ccd1acaefd9f7afed9f17340fa2d420b857a9f740d9c10b5f1d62ae0ac81159b90c9129662e1f5d8225e75f1dc4f31b89ed7aebeb4696c00d0defc7ec2caf10e44effd58841725681024bacae636ca1c82eabe3b922e8b69ba5274c79b7b75ceed4648294d38c4ebebef19cbfcda50866a608d15ffa9728b271ae71eb7bfafbd715e80ae39af236af00e974ca782ddd32eed08ee593e6d2639ec05303cc47853bc014e79938ce0ffad2667caf29bcf86ac2ccde0f4f3911094340c9cc99472373758", 0xe6}, {&(0x7f0000000080)="74f03bef15894252489081edaf5224c6df580a58276137df375285ec3083b27fa47aa763b66e1f9e82e38d4af7e6d20d56f92b7ab0650c286ce7e4d28c2cec732c89415946fffc9caacd6edcb41fcaa16e715d4d04352a01c8bc64b9244bd6a029e6076edd3fccec0ab5dbad0f66381cf848", 0x72}, {&(0x7f0000000480)="a7f3ac75e8bbf7ad0f7dc527e8a26679e9ad708428fc80ac49bd9adf24430e6c52148e71e26a85edb26c8b980ccbff4f6410d9cdb191eafb9d7ae70957691331a7fda352a4c5a31a959d0c12f3de0b3abd32b8c82e9ff107ff4e19f2817c4d52d5aeb4b584326f64ceffbfd45281421cc3a16dd0a145d0691a68bb19fdbacdcfc8c4d4427c43df2b922d6d9357b3d90936677bb6b6da2a61474108f2ede3e085cc8a87c5538d66543b0e9b5efdced5bed7d9ffce2a2c1e70c2c861cca11b2e4a2f4e97b7c34acd28ff3552c9a9", 0xcd}], 0x4)
truncate(&(0x7f0000000100)='./file1\x00', 0x1bf8)
r1 = open(&(0x7f0000000240)='./file1\x00', 0x0, 0x0)
preadv(r1, &(0x7f0000000440)=[{&(0x7f0000000280)=""/53, 0x35}], 0x1, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1872
remove dir: /root/cephfs-client/dfs-0-500
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-501 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-501
receive_execute: 13, 18
receive_execute: 4, 18
receive_execute: 12, 18
receive_execute: 9, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 2284, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2284, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 2284, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 263
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 383, pid 2284, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 383, flag collect 0
----- executor 3 signal number : 89
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 966, pid 2284, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 966, flag collect 0
----- executor 3 signal number : 530
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
time breakdown 3: 31, 11, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 573, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13621, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 18619, flag collect 0
----- executor 2 signal number : 989
----- executor 2 executes write_coverage_signal cov->size 31473, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 30, 12, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7552
----- executor 2 executes write_coverage_signal cov->size 2455, flag collect 0
time breakdown 0: 27, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 338
----- executor 2 executes write_coverage_signal cov->size 14009, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3376
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 23123, flag collect 0
----- executor 2 signal number : 1483
executor 2 server cover_cnt 8 output_pos_value 15231
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 34
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 5 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 263 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
time breakdown 2: 22, 15, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 989 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7552 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 338 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3376 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1483 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 530 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 220 flock flock
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 18
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000000c0)='./file0/file0\x00', 0x321001, 0xc5)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$lock(r1, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r2 = dup(r1)
flock(r0, 0xa)
r3 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r4 = open(&(0x7f0000000280)='./file0\x00', 0x121042, 0x0)
fcntl$setown(r2, 0x8, 0x0)
fcntl$lock(r4, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x40000})
fcntl$lock(r4, 0x6, &(0x7f0000000080)={0x2, 0x2, 0x7f14, 0x9})
flock(r3, 0x6)
r5 = dup(r4)
fstat(r5, &(0x7f00000001c0))
r6 = dup(r4)
fcntl$dupfd(r2, 0x406, r6)
dup2(r0, 0xffffffffffffffff)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0/file0\x00')
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 3: prog_data_offset 1336, prog_size 2872
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-501
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-502 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-502
receive_execute: 7, 10
receive_execute: 5, 10
receive_execute: 8, 10
receive_execute: 8, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 662, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 3 signal number : 451
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 2287, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11, pid 2287, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 11, flag collect 0
----- executor 3 signal number : 6
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2287, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2287, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 2, 0
execute_one time: 1, 5
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10570, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1299
----- executor 2 executes write_coverage_signal cov->size 25053, flag collect 0
----- executor 2 signal number : 6231
----- executor 2 executes write_coverage_signal cov->size 697, flag collect 0
----- executor 2 signal number : 269
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
time breakdown 1: 18, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 554
executor 2 server cover_cnt 6 output_pos_value 8442
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 19
2023/03/27 22:39:20 ----- PS len: 4
time breakdown 2: 15, 9, 0
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 6 replies
2023/03/27 22:39:20 [CLIENT] executor 3 has 18 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1299 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 451 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 6231 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 269 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 6 signal and 0 cover from executor 3
time breakdown 3: 17, 7, 0
before receive testcase: 0 1
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 18, 8, 0
before receive testcase: 0 0
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 20
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000400)='./file1\x00', 0x301641, 0x12)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
symlink(&(0x7f00000003c0)='./file0/file0\x00', &(0x7f0000000280)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x100000001, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0/file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x7)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3672
remove dir: /root/cephfs-client/dfs-0-502
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-503 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-503
receive_execute: 6, 13
receive_execute: 5, 12
receive_execute: 3, 12
receive_execute: 5, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 616, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 49
----- completed 14
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 349, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 349, flag collect 0
----- executor 3 signal number : 24
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
[  962.819263] ==================================================================
[  962.820099] BUG: KASAN: use-after-free in ceph_fl_release_lock+0x87/0x160
[  962.820811] Write of size 4 at addr ff11000110d2328c by task syz-executor/2292
[  962.821596] 
[  962.821761] CPU: 1 PID: 2292 Comm: syz-executor Tainted: G        W         5.15.0+ #9
[  962.822585] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[  962.823549] Call Trace:
[  962.823823]  dump_stack_lvl+0x34/0x44
[  962.824223]  print_address_description.constprop.0+0x21/0x140
[  962.824869]  ? ceph_fl_release_lock+0x87/0x160
[  962.825340]  ? ceph_fl_release_lock+0x87/0x160
[  962.825934]  kasan_report.cold+0x7f/0x11b
[  962.826367]  ? ceph_fl_release_lock+0x87/0x160
[  962.826837]  kasan_check_range+0x17c/0x1e0
[  962.827271]  ceph_fl_release_lock+0x87/0x160
[  962.827726]  locks_release_private+0x5a/0xb0
[  962.828186]  locks_dispose_list+0x31/0x50
[  962.828619]  posix_lock_inode+0x13e/0x7f0
[  962.829051]  locks_lock_inode_wait+0xb4/0x180
[  962.829513]  ? file_update_time+0x5d/0x120
[  962.829951]  ceph_lock+0x3a1/0x550
[  962.830318]  locks_remove_posix+0xc6/0x150
[  962.830756]  filp_close+0x4c/0x60
[  962.831097]  __x64_sys_close+0x9/0x40
[  962.831470]  do_syscall_64+0x38/0x90
[  962.831831]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[  962.832339] RIP: 0033:0x7ffff732bd5b
[  962.832621] Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2f 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
[  962.834389] RSP: 002b:00007fffffffe220 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
[  962.835157] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff732bd5b
[  962.835883] RDX: 000001872539d845 RSI: 0000000000000000 RDI: 0000000000000003
[  962.836404] RBP: 00007fffffffe250 R08: 0000000000000000 R09: 00000000001c75de
[  962.836950] R10: 0000000064221b18 R11: 0000000000000293 R12: 00007ffff732e270
[  962.838664] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[  962.839391] 
[  962.839557] Allocated by task 2294:
[  962.839956] 
[  962.840122] Freed by task 2294:
[  962.840480] 
[  962.840633] The buggy address belongs to the object at ff11000110d23270
[  962.840633]  which belongs to the cache ceph_file_info of size 32
[  962.841711] The buggy address is located 28 bytes inside of
[  962.841711]  32-byte region [ff11000110d23270, ff11000110d23290)
[  962.842806] The buggy address belongs to the page:
[  962.843151] 
[  962.843274] Memory state around the buggy address:
[  962.843606]  ff11000110d23180: fa fb fb fb fc fc fa fb fb fb fc fc fa fb fb fb
[  962.844121]  ff11000110d23200: fc fc fa fb fb fb fc fc 00 00 00 00 fc fc fa fb
[  962.844623] >ff11000110d23280: fb fb fc fc fa fb fb fb fc fc fa fb fb fb fc fc
[  962.845172]                       ^
[  962.845515]  ff11000110d23300: 00 00 00 00 fc fc fb fb fb fb fc fc fb fb fb fb
[  962.846028]  ff11000110d23380: fc fc fb fb fb fb fc fc fb fb fb fb fc fc fb fb
[  962.846615] ==================================================================
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 9, 2, 31
execute_one time: 0, 42
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 969, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12985, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 23956, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 44, 0
before receive testcase: 0 0
----- executor 2 signal number : 1037
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7343
----- executor 2 executes write_coverage_signal cov->size 3842, flag collect 0
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 11829, flag collect 0
time breakdown 3: 19, 43, 0
before receive testcase: 0 0
time breakdown 1: 17, 44, 0
before receive testcase: 0 0
----- executor 2 signal number : 2615
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2112
executor 2 server cover_cnt 8 output_pos_value 14987
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 61
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 [CLIENT] executor 3 has 20 replies
time breakdown 2: 16, 48, 0
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1037 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7343 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2615 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2112 signal and 0 cover from userspace component
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 7
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file1\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
getdents64(r1, &(0x7f0000001540)=""/78, 0x4e)
r2 = fcntl$dupfd(r1, 0x0, r0)
openat(r2, &(0x7f00000001c0)='./file1\x00', 0x240, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1072
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-503
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-504 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-504
receive_execute: 9, 22
receive_execute: 9, 22
receive_execute: 4, 22
receive_execute: 8, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 511, pid 2296, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2296, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2296, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2296, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 2296, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 101
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2296, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 704, pid 2296, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 3 signal number : 92
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 2, 9
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 579, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 97, flag collect 0
----- executor 0 signal number : 73
----- executor 0 executes write_coverage_signal cov->size 1216, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 630
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 16023, flag collect 0
----- executor 0 signal number : 1605
----- executor 2 signal number : 961
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 2318
time breakdown 3: 31, 12, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 13, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 14, 0
----- executor 2 signal number : 7734
----- executor 2 executes write_coverage_signal cov->size 18239, flag collect 0
----- executor 2 signal number : 3674
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25274, flag collect 0
----- executor 2 signal number : 1297
executor 2 server cover_cnt 7 output_pos_value 15148
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 40
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 7 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 3 replies
2023/03/27 22:39:20 ------- fuzzer executor 0 receive 73 signal and 0 cover from userspace component
2023/03/27 22:39:20 [SERVER] executor 2 has 7 replies
2023/03/27 22:39:20 ------- fuzzer executor 0 receive 630 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 0 receive 1605 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 961 signal and 0 cover from userspace component
time breakdown 2: 26, 18, 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 7734 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3674 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1297 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 92 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2810 renameat renameat
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 5
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
write$binfmt_elf64(r0, &(0x7f00000005c0)={{0x7f, 0x45, 0x4c, 0x46, 0x81, 0x2a, 0x8, 0x7, 0xffffffffffff7fff, 0x2, 0x3e, 0x7ff, 0x79, 0x40, 0x29f, 0x400, 0x1, 0x38, 0x2, 0x899c, 0xff, 0x4}, [{0x3, 0x2, 0x7, 0x10000, 0x8, 0x8, 0x1ff, 0x1}], "4c79d71f560d2ec87246417b1bbb50552c249ce43351deff9212ad3aac8324fe5001e4ef69fe50112a87dc981e035a5e7ae475dec3", ['\x00', '\x00', '\x00']}, 0x3ad)
r1 = dup(r0)
r2 = fcntl$dupfd(r0, 0x0, r0)
renameat(r1, &(0x7f0000000000)='./file0/file0\x00', r2, &(0x7f0000000040)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2912
remove dir: /root/cephfs-client/dfs-0-504
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-505 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-505
receive_execute: 10, 16
receive_execute: 9, 16
receive_execute: 4, 16
receive_execute: 8, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2300, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1312, pid 2300, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1312, flag collect 0
----- executor 3 signal number : 992
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2300, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2300, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2300, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 1, 9
executor 1 write_server_output
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 26, 15, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 443, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12415, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 15, 0
time breakdown 0: 24, 15, 0
----- executor 2 signal number : 1392
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 10472, flag collect 0
----- executor 2 signal number : 927
----- executor 2 executes write_coverage_signal cov->size 18875, flag collect 0
----- executor 2 signal number : 5883
----- executor 2 executes write_coverage_signal cov->size 738, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 12751, flag collect 0
----- executor 2 signal number : 3000
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 29436, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 2083
executor 2 server cover_cnt 8 output_pos_value 13666
2023/03/27 22:39:20 for select break: 1
time breakdown 2: 20, 20, 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 36
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 5 replies
2023/03/27 22:39:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 992 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 927 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5883 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3000 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2083 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 ----- generateCall 171 dup2 dup2
2023/03/27 22:39:20 ----- generateCall 248 fstat fstat
2023/03/27 22:39:20 ----- generateCall 171 dup2 dup2
2023/03/27 22:39:20 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:39:20 ----- generateCall 2458 open open
2023/03/27 22:39:20 ----- generateCall 248 fstat fstat
2023/03/27 22:39:20 ----- generateCall 248 fstat fstat
2023/03/27 22:39:20 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
before receive testcase: 0 1
2023/03/27 22:39:20 ----- generateCall 171 dup2 dup2
2023/03/27 22:39:20 ----- generateCall 2750 pwritev pwritev
2023/03/27 22:39:20 ----- generateCall 170 dup dup
2023/03/27 22:39:20 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:39:20 ----- generateCall 2753 read read
2023/03/27 22:39:20 map[./file0:true]
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 20
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x2400, 0x120)
fstat(r1, &(0x7f0000000040))
r2 = dup2(r0, r1)
fcntl$lock(r2, 0x26, &(0x7f00000000c0)={0x2, 0x3, 0x1, 0x80000000, 0xffffffffffffffff})
r3 = open(&(0x7f0000000100)='./file0\x00', 0x101002, 0x41)
r4 = dup(0xffffffffffffffff)
fstat(r4, &(0x7f0000000140))
fstat(r4, &(0x7f00000001c0))
r5 = openat(r4, &(0x7f0000000240)='./file0\x00', 0x800, 0x90)
r6 = fcntl$dupfd(r0, 0x406, r1)
fcntl$dupfd(r5, 0x406, r6)
dup2(r0, r0)
pwritev(r2, &(0x7f0000001440)=[{&(0x7f0000000280)="91d022dea91be3101279f582017057fd4fc346d4a88ae798a8a35105b92c69f509e78aa98022d118dd413fc8fec313511494c95c6d213ed66c48804b38ef7c4aa6c986b45e60d5b3507510c37195aa897073553e61e9dc00e3045b93216a11a2fb3e4b8357158435bbb1c330ad0cf69a33c6ff398990d7d4e9940b4b9a6984d2c782843c7274c0d7f3a18290b4e0c7dd71a54488668f54437028566e504fec9959416bfd7ac5f135c292063338716769da9191f171bd1d1f58495f5e93de8856e6a1909556cc4857605ce1ceb332f4010307", 0xd2}, {&(0x7f0000000380)="", 0x1000}, {&(0x7f0000001380)="67c1f992ef889e3a74ede1d81979dc021d08f3a062a29d5f16097ae48f7b7059ff4d1029170fc15f5f5aac08010edf0975d0c91e0ee1924491c8bf6bb7f4db90e02f4594e5c3f4293329fb0a119170bcd4e5516e485211ae8ed333228c01402678024cf4e2a21342727a35f9a4508b484173c729481027eee3cf676e8fbe306294d7cb77989bfb2e1b7d9362dc89f40b320650b18fde022a22546c7bd8a80112da6fc9eddb4345736a766864f3aa9cc24087f1b20ee082a73a34938461", 0xbd}], 0x3, 0xab, 0x1)
dup(r0)
r7 = dup2(r0, r3)
r8 = open$dir(&(0x7f0000001480)='./file0\x00', 0xc0, 0x64)
fcntl$dupfd(r7, 0x406, r8)
r9 = open(&(0x7f00000014c0)='./file0\x00', 0x2102, 0x102)
read(r9, &(0x7f0000001500)=""/141, 0x8d)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7456
remove dir: /root/cephfs-client/dfs-0-505
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 5
-----finish removing dir
receive_execute: 9, 7
receive_execute: 4, 7
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-506 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-506
receive_execute: 9, 7
receive_execute: 8, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_one time: 0, 1
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 654, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 202
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2304, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 107
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 198, pid 2304, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 198, flag collect 0
----- executor 3 signal number : 113
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 8, 0
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4755, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 7466, flag collect 0
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 18430, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 9, 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 5890
----- executor 2 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 2 signal number : 247
----- executor 2 executes write_coverage_signal cov->size 15120, flag collect 0
----- executor 2 signal number : 1449
executor 2 server cover_cnt 6 output_pos_value 9295
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 18
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 20 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 2 has 6 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5890 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 247 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1449 signal and 0 cover from userspace component
time breakdown 2: 11, 11, 0
before receive testcase: 0 0
2023/03/27 22:39:20 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 202 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 107 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 113 signal and 0 cover from executor 3
time breakdown 0: 15, 9, 0
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3967 truncate truncate
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 4
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x91b)
r1 = dup(r0)
lseek(r1, 0x0, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
remove dir: /root/cephfs-client/dfs-0-506
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-507 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-507
receive_execute: 5, 8
receive_execute: 3, 8
receive_execute: 5, 8
receive_execute: 6, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2307, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2307, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2307, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2307, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 14, 5, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4763, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 8080, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1045
----- executor 2 executes write_coverage_signal cov->size 19346, flag collect 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 1246, flag collect 0
----- executor 0 signal number : 734
----- executor 0 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 2 signal number : 5718
----- executor 2 executes write_coverage_signal cov->size 2143, flag collect 0
----- executor 0 signal number : 366
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 15221, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1178
----- executor 2 signal number : 1413
executor 2 server cover_cnt 6 output_pos_value 9173
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 7, 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 8, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 17
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 4 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 3 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 6 replies
2023/03/27 22:39:20 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 0 receive 734 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 0 receive 366 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1045 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5718 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1413 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 8 signal and 0 cover from executor 3
time breakdown 2: 11, 9, 0
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 10
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x7, &(0x7f0000000a00))
fcntl$lock(r0, 0x25, &(0x7f0000000040)={0x1, 0x2, 0x4, 0x6})
r1 = dup(r0)
write$binfmt_elf64(r1, &(0x7f0000000a40)={{0x7f, 0x45, 0x4c, 0x46, 0x20, 0x81, 0x1, 0x8, 0x10000, 0x2, 0x6, 0x4, 0x238, 0x40, 0xd8, 0x1000, 0x5, 0x38, 0x2, 0x5, 0x6, 0x400}, [{0x7, 0x8, 0x8, 0x8, 0x2, 0x9, 0x637c, 0xd76}], "", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x1778)
openat(r0, &(0x7f0000000000)='./file0\x00', 0x52001, 0x28)
r2 = fcntl$dupfd(r0, 0x406, r0)
openat(r0, &(0x7f0000000080)='./file0\x00', 0x200000, 0x62)
fcntl$getownex(r0, 0x10, &(0x7f0000000100)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x7, &(0x7f00000000c0)={0x2, 0x4, 0x3, 0x2, r3})
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9328
remove dir: /root/cephfs-client/dfs-0-507
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-508 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-508
receive_execute: 3, 6
receive_execute: 3, 7
receive_execute: 1, 6
receive_execute: 7, 6
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 620, pid 2310, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2310, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 13, 11, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 380, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10877, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1305
----- executor 2 executes write_coverage_signal cov->size 24698, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6062
----- executor 2 executes write_coverage_signal cov->size 2099, flag collect 0
----- executor 2 signal number : 314
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 540
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 6 output_pos_value 8311
time breakdown 1: 10, 12, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 9, 13, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 24
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 10 replies
2023/03/27 22:39:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 2 has 6 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1305 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 6062 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 314 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 540 signal and 0 cover from userspace component
time breakdown 0: 7, 17, 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2462 openat openat
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 6
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
openat(0xffffffffffffffff, &(0x7f0000000180)='./file0/file0\x00', 0x10200, 0x10)
lsetxattr$trusted_overlay_origin(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x2)
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000000)='./file0/file0\x00', 0x0, 0x0)
openat(r0, &(0x7f00000000c0)='./file0\x00', 0x240, 0x0)
open(&(0x7f00000002c0)='./file0/file0\x00', 0x103002, 0x0)
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1064
remove dir: /root/cephfs-client/dfs-0-508
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-509 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-509
receive_execute: 8, 12
receive_execute: 7, 12
receive_execute: 9, 12
receive_execute: 1, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 2314, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
execute_one time: 1, 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2314, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 2314, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 381
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 487, pid 2314, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 487, flag collect 0
----- executor 3 signal number : 119
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2314, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 2314, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 5, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 1775, flag collect 0
----- executor 2 signal number : 942
----- executor 2 executes write_coverage_signal cov->size 6901, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1016
----- executor 2 executes write_coverage_signal cov->size 15824, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 6, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5346
----- executor 2 executes write_coverage_signal cov->size 712, flag collect 0
time breakdown 0: 13, 6, 0
----- executor 2 signal number : 266
----- executor 2 executes write_coverage_signal cov->size 2619, flag collect 0
----- executor 2 signal number : 928
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 7124, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 555
executor 2 server cover_cnt 8 output_pos_value 9148
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 20
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 6 replies
time breakdown 2: 19, 8, 0
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 381 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 2 has 8 replies
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 942 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1016 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5346 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 266 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 928 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 555 signal and 0 cover from userspace component
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3662 setxattr setxattr
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 2
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
setxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='system.advise\x00', &(0x7f0000000080)='\x00', 0x1, 0x0)
openat(0xffffffffffffff9c, &(0x7f00000001c0)='./file0\x00', 0x2a441, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 440
remove dir: /root/cephfs-client/dfs-0-509
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-510 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-510
receive_execute: 6, 10
receive_execute: 4, 10
receive_execute: 2, 10
receive_execute: 4, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2318, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 2318, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 473
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 2, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4248, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 12544, flag collect 0
----- executor 2 signal number : 5081
----- executor 2 executes write_coverage_signal cov->size 7848, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 4, 0
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
----- executor 2 signal number : 582
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 4, 0
executor 2 server cover_cnt 4 output_pos_value 7005
before receive testcase: 0 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 15
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 2 replies
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
time breakdown 2: 12, 5, 0
2023/03/27 22:39:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 473 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 2 has 4 replies
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5081 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 582 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2780 readlink readlink
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 258 getdents getdents
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 8
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
getdents(r0, &(0x7f0000000240)=""/209, 0xd1)
readlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000180)=""/164, 0xa4)
r1 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x10e)
fsync(r1)
r2 = dup(r1)
fsync(r2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 824
remove dir: /root/cephfs-client/dfs-0-510
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-511 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-511
receive_execute: 5, 24
receive_execute: 3, 24
receive_execute: 3, 25
receive_execute: 3, 24
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 56
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 2320, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 138
----- completed 6
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2320, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 13, pid 2320, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 1, 10
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 29, 13, 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8458, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1471
----- executor 2 executes write_coverage_signal cov->size 6805, flag collect 0
----- executor 2 signal number : 868
----- executor 2 executes write_coverage_signal cov->size 14497, flag collect 0
2023/03/27 22:39:20 for select break: 1
----- executor 2 signal number : 5598
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 28, 14, 0
before receive testcase: 0 1
time breakdown 0: 27, 15, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 1820
----- executor 2 executes write_coverage_signal cov->size 1459, flag collect 0
----- executor 2 signal number : 311
----- executor 2 executes write_coverage_signal cov->size 11029, flag collect 0
----- executor 2 signal number : 2799
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1001
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1188
----- executor 2 executes write_coverage_signal cov->size 41, flag collect 0
----- executor 2 signal number : 12
executor 2 server cover_cnt 11 output_pos_value 15174
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 46
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 8 replies
2023/03/27 22:39:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 27, 21, 0
2023/03/27 22:39:20 [SERVER] executor 2 has 11 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 138 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1471 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 868 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5598 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1820 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 311 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2799 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1001 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1188 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3761 stat stat
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 5
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
open$dir(&(0x7f00000001c0)='./file1\x00', 0x0, 0x0)
r0 = open(&(0x7f0000000080)='./file0\x00', 0x200, 0x80)
linkat(r0, &(0x7f00000000c0)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000100)='./file1\x00', 0x400)
symlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file1\x00')
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000200))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 792
remove dir: /root/cephfs-client/dfs-0-511
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-512 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-512
receive_execute: 11, 21
receive_execute: 9, 21
receive_execute: 10, 21
receive_execute: 3, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 420, pid 2323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 3 signal number : 6
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
----- executor 3 write_call_output, size 481, pid 2323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 150
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 32, 11, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 356, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 31976, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1431
----- executor 2 executes write_coverage_signal cov->size 7994, flag collect 0
----- executor 2 signal number : 905
----- executor 2 executes write_coverage_signal cov->size 18118, flag collect 0
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 5089
----- executor 2 executes write_coverage_signal cov->size 1390, flag collect 0
----- executor 2 signal number : 297
----- executor 2 executes write_coverage_signal cov->size 22896, flag collect 0
----- executor 2 signal number : 2078
----- executor 2 executes write_coverage_signal cov->size 12989, flag collect 0
----- executor 2 signal number : 717
executor 2 server cover_cnt 7 output_pos_value 10606
executor 1 write_server_output
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 23, 14, 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:20 for select break: 1
2023/03/27 22:39:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:39:20 wg wait finish
2023/03/27 22:39:20 ------ all executors finish execution
2023/03/27 22:39:20 exec time: 37
2023/03/27 22:39:20 ----- PS len: 4
2023/03/27 22:39:20 [CLIENT] executor 3 has 5 replies
2023/03/27 22:39:20 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:39:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:20 [SERVER] executor 0 has 0 replies
time breakdown 1: 31, 16, 0
2023/03/27 22:39:20 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/27 22:39:20 [SERVER] executor 2 has 7 replies
2023/03/27 22:39:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 1431 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 905 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 5089 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 297 signal and 0 cover from userspace component
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 2078 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 ------- fuzzer executor 2 receive 717 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:39:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:20 ----- no new client coverage: false, true
2023/03/27 22:39:20 mutate testcase with failures
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:39:20 ----- mutateArg()
2023/03/27 22:39:20 ----- insertCall()
2023/03/27 22:39:20 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/27 22:39:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:20 prog length: 15
2023/03/27 22:39:20 HasCrashFail:false HasNetFail:false
22:39:20 ---executing program 0:
---
---
---
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x180)
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
open$dir(&(0x7f0000000540)='./file1\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f00000004c0), &(0x7f0000000500)='./file0\x00', 0x8, 0x2)
r2 = open$dir(&(0x7f0000000000)='./file0\x00', 0x103003, 0x20)
readlinkat(r2, &(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=""/140, 0x8c)
chown(&(0x7f0000000080)='./file0\x00', 0xee00, 0xffffffffffffffff)
fstat(r2, &(0x7f00000002c0))
rename(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)='./file1\x00')
fstat(r1, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f0000000640)=ANY=[@ANYBLOB="02000000010001000000000002000300", @ANYRES32=0x0, @ANYBLOB="02000400", @ANYRES32=r3, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000000", @ANYRES32=0xee00, @ANYBLOB="02000500", @ANYRESOCT, @ANYBLOB="02000500", @ANYRES32=r3, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040000000000000008000000", @ANYRES32=0x0, @ANYBLOB="700f0000", @ANYRES32=0x0, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRESOCT=r1, @ANYBLOB="10000500000000002000060000000000"], 0x7c, 0x3)
setxattr$user(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000580)='@\x00', 0x2, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3296
remove dir: /root/cephfs-client/dfs-0-512
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 3, 36
mkdir time 11
executor 3 create dir /root/cephfs-client/dfs-0-513 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-513
receive_execute: 3, 36
receive_execute: 7, 36
receive_execute: 8, 37
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 288, pid 2326, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 288, flag collect 0
----- executor 3 signal number : 204
----- completed 1
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 45
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 651, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 651, flag collect 0
----- executor 3 signal number : 412
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 96
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 526, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 526, flag collect 0
----- executor 3 signal number : 154
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 2326, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 83
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 26
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 248, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 248, flag collect 0
----- executor 3 signal number : 48
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2326, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 41
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2326, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2326, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 62, 67, 0
execute_one time: 0, 129
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 45, 130, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1430, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 39, 132, 0
before receive testcase: 0 0
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 43, 132, 0
----- executor 2 signal number : 1062
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7773
----- executor 2 executes write_coverage_signal cov->size 3908, flag collect 0
----- executor 2 signal number : 427
----- executor 2 executes write_coverage_signal cov->size 30058, flag collect 0
----- executor 2 signal number : 4984
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1856
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1704
executor 2 server cover_cnt 9 output_pos_value 19288
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:21 wg wait finish
2023/03/27 22:39:21 ------ all executors finish execution
2023/03/27 22:39:21 exec time: 175
2023/03/27 22:39:21 ----- PS len: 4
time breakdown 2: 39, 139, 0
2023/03/27 22:39:21 [CLIENT] executor 3 has 15 replies
2023/03/27 22:39:21 fuzzer receive 204 signal and 0 cover from executor 3
2023/03/27 22:39:21 [SERVER] executor 0 has 0 replies
2023/03/27 22:39:21 [SERVER] executor 2 has 9 replies
before receive testcase: 0 0
2023/03/27 22:39:21 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 1062 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 412 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 96 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 7773 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 427 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 154 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 4984 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 1856 signal and 0 cover from userspace component
2023/03/27 22:39:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 1704 signal and 0 cover from userspace component
2023/03/27 22:39:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:21 ----- no new client coverage: false, true
2023/03/27 22:39:21 mutate testcase with failures
2023/03/27 22:39:21 ----- mutateArg()
2023/03/27 22:39:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:21 prog length: 3
2023/03/27 22:39:21 HasCrashFail:false HasNetFail:false
22:39:21 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file1\x00', 0x7ac01, 0x4000000)
setxattr$security_selinux(&(0x7f0000000000)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000200)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x0)
sync()
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 488
remove dir: /root/cephfs-client/dfs-0-513
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-514 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-514
receive_execute: 12, 17
receive_execute: 3, 18
receive_execute: 9, 19
receive_execute: 12, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2330, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2330, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 356, pid 2330, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 356, flag collect 0
----- executor 3 signal number : 146
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 433, 2, 0
execute_one time: 1, 435
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 2852, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1154
----- executor 0 executes write_coverage_signal cov->size 1573, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 0 signal number : 282
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 268
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 16769, flag collect 0
----- executor 2 signal number : 1370
----- executor 2 executes write_coverage_signal cov->size 3318, flag collect 0
----- executor 0 signal number : 485
----- executor 0 executes write_coverage_signal cov->size 1022, flag collect 0
----- executor 0 signal number : 391
executor 0 server cover_cnt 8 output_pos_value 2695
time breakdown 3: 30, 437, 0
before receive testcase: 0 0
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 635
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
----- executor 2 signal number : 2106
----- executor 2 executes write_coverage_signal cov->size 19037, flag collect 0
----- executor 2 signal number : 1908
----- executor 2 executes write_coverage_signal cov->size 1083, flag collect 0
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 289
----- executor 2 executes write_coverage_signal cov->size 8003, flag collect 0
time breakdown 0: 28, 440, 0
before receive testcase: 0 0
----- executor 2 signal number : 2623
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 29, 438, 0
before receive testcase: 0 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 5064, flag collect 0
----- executor 2 signal number : 680
executor 2 server cover_cnt 11 output_pos_value 10272
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:21 wg wait finish
2023/03/27 22:39:21 ------ all executors finish execution
2023/03/27 22:39:21 exec time: 462
2023/03/27 22:39:21 ----- PS len: 4
2023/03/27 22:39:21 [CLIENT] executor 3 has 3 replies
2023/03/27 22:39:21 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:39:21 fuzzer receive 146 signal and 0 cover from executor 3
2023/03/27 22:39:21 [SERVER] executor 0 has 8 replies
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 1154 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 282 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 268 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 485 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 0 receive 391 signal and 0 cover from userspace component
2023/03/27 22:39:21 [SERVER] executor 1 has 0 replies
2023/03/27 22:39:21 [SERVER] executor 2 has 11 replies
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 1370 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 635 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 2106 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 1908 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 289 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 2623 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/27 22:39:21 ------- fuzzer executor 2 receive 680 signal and 0 cover from userspace component
time breakdown 2: 21, 443, 0
before receive testcase: 0 0
2023/03/27 22:39:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:39:21 ----- no new client coverage: false, true
2023/03/27 22:39:21 mutate testcase with failures
2023/03/27 22:39:21 ----- insertCall()
2023/03/27 22:39:21 ----- generateCall 2341 lchown lchown
2023/03/27 22:39:21 ----- insertCall()
2023/03/27 22:39:21 ----- generateCall 2781 readlinkat readlinkat
2023/03/27 22:39:21 ----- insertCall()
2023/03/27 22:39:21 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/27 22:39:21 ----- insertCall()
2023/03/27 22:39:21 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/27 22:39:21 ----- insertCall()
2023/03/27 22:39:21 ----- generateCall 2458 open open
2023/03/27 22:39:21 ----- insertCall()
2023/03/27 22:39:21 ----- generateCall 3764 symlink symlink
2023/03/27 22:39:21 ----- mutateArg()
2023/03/27 22:39:21 ----- mutateArg()
2023/03/27 22:39:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:39:21 prog length: 11
2023/03/27 22:39:21 HasCrashFail:false HasNetFail:false
22:39:21 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x7ac01, 0x0)
open(&(0x7f0000000500)='./file1\x00', 0x112300, 0x14b)
lsetxattr$security_smack_transmute(&(0x7f0000000000)='.\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x0)
r1 = openat(r0, &(0x7f0000000280)='./file1\x00', 0x10100, 0x8a)
readlinkat(r1, &(0x7f00000002c0)='./file1\x00', &(0x7f0000000300)=""/124, 0x7c)
lsetxattr$security_ima(&(0x7f0000000380)='./file1\x00', &(0x7f00000003c0), &(0x7f0000000400)=@md5={0x1, "6334ee3bc507ecdb71fd9e73c56b2079"}, 0x11, 0x0)
lsetxattr(&(0x7f0000000440)='./file1\x00', &(0x7f00000005c0)=ANY=[@ANYBLOB="24067dfb98a6f89849f6722e00000000ab2a69c6cc40455057ecfd246f7d1896371f6cae612d71971dd50ef1f850f66d8c1e0d55d51b99ffb28373af982804571ec1dbd1c4b500cbd8aea24e0597f0219efc0fd298bda1413ba7fe11a0e180a965e098fa955e9948de2201d49f1173ec4222e8e471f8bf7c51936ffc091f9e423a86d0a27d9ab60f2f0943b066b092596a6f5c2dba269e76284ba394cd214df045649a6210689c3d6e"], &(0x7f00000004c0)='security.ima\x00', 0xd, 0x2)
fstat(r0, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
symlink(&(0x7f0000000540)='./file1\x00', &(0x7f0000000580)='./file1\x00')
lchown(&(0x7f0000000100)='./file1\x00', r2, r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2304
remove dir: /root/cephfs-client/dfs-0-514
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 4
-----finish removing dir
receive_execute: 9, 5
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-515 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-515
receive_execute: 10, 6
receive_execute: 4, 5
receive_execute: 7, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 423, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 228, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 228, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 126
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 237, pid 2333, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 237, flag collect 0
----- executor 3 signal number : 72
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 5, 8, 0
execute_one time: 0, 13
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 14, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 582, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
executor 1 write_server_output
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 1248, flag collect 0
----- executor 0 signal number : 735
----- executor 0 executes write_coverage_signal cov->size 1022, flag collect 0
----- executor 0 signal number : 459
executor 0 server cover_cnt 3 output_pos_value 1272
----- executor 2 signal number : 1413
----- executor 2 executes write_coverage_signal cov->size 15351, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 968
----- executor 2 executes write_coverage_signal cov->size 27134, flag collect 0
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 18, 0
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 6767
----- executor 2 executes write_coverage_signal cov->size 14291, flag collect 0
----- executor 2 signal number : 3105
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 21882, flag collect 0
----- executor 2 signal number : 1176
----- executor 2 executes write_coverage_signal cov->size 29006, flag collect 0
time breakdown 1: 14, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 1458
executor 2 server cover_cnt 8 output_pos_value 14982
2023/03/27 22:39:21 for select break: 1
2023/03/27 22:39:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:39:21 wg wait finish
2023/03/27 22:39:21 --
VM DIAGNOSIS:
22:39:20  Registers:
info registers vcpu 0
RAX=ffffffff81d3b3f0 RBX=0000000000000000 RCX=0000000000000001 RDX=ff1100026562e7e0
RSI=0000000000000087 RDI=00000000003e9a0e RBP=ffffffff82619280 RSP=ffffffff82607ea0
R8 =00000000003e9a0d R9 =0000000000000000 R10=ff11000108e87e78 R11=0000000000000001
R12=ffffffff82619280 R13=ffffffff82619280 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81d3b3fb RFL=00000202 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffc88 CR3=000000010ee9c003 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=ffffffffffffffffffffffffffffffff XMM03=ffffffffffffffffffffffffffffffff
XMM04=00000000000000000000000000000000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=00007ffff71c3083 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032ee RFL=00000203 [------C] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=000000010521e006 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000001f70000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
