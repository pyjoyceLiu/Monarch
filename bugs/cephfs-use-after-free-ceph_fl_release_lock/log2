essfully
current dir: executor 3: /root/cephfs-client/dfs-0-481
receive_execute: 5, 27
receive_execute: 1, 27
receive_execute: 4, 27
receive_execute: 5, 26
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 621, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 263
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 383, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 383, flag collect 0
----- executor 3 signal number : 89
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2199, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2199, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 0
----- executor 3 signal number : 530
----- completed 6
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 0, 10
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17247, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1309
----- executor 2 executes write_coverage_signal cov->size 516, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13497, flag collect 0
time breakdown 3: 32, 11, 0
before receive testcase: 0 1
----- executor 2 signal number : 1005
----- executor 2 executes write_coverage_signal cov->size 29955, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 12, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 7525
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 22445, flag collect 0
----- executor 2 signal number : 1105
----- executor 2 executes write_coverage_signal cov->size 13995, flag collect 0
----- executor 2 signal number : 3474
executor 2 server cover_cnt 7 output_pos_value 14510
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 42
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 6 replies
2023/03/27 12:06:20 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 263 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 530 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
time breakdown 2: 28, 15, 0
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 7 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1309 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1005 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 7525 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1105 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3474 signal and 0 cover from userspace component
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2462 openat openat
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 7
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file0\x00', 0xe703, 0x0)
r2 = fcntl$dupfd(r1, 0x0, r0)
openat(r2, &(0x7f0000000040)='./file1\x00', 0x428000, 0x40)
r3 = dup2(r1, r0)
fsetxattr$trusted_overlay_redirect(r3, &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x3)
fsync(r0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1072
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-481
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-482 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-482
receive_execute: 8, 10
receive_execute: 5, 10
receive_execute: 9, 10
receive_execute: 6, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 289
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2202, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2202, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 120, pid 2202, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 3 signal number : 61
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 181, pid 2202, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 181, flag collect 0
----- executor 3 signal number : 108
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11198, flag collect 0
----- executor 2 signal number : 1313
----- executor 2 executes write_coverage_signal cov->size 514, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13862, flag collect 0
----- executor 2 signal number : 1008
----- executor 2 executes write_coverage_signal cov->size 18029, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 5791
----- executor 2 executes write_coverage_signal cov->size 1769, flag collect 0
----- executor 2 signal number : 315
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28264, flag collect 0
----- executor 2 signal number : 1925
----- executor 2 executes write_coverage_signal cov->size 16758, flag collect 0
----- executor 2 signal number : 4249
executor 2 server cover_cnt 8 output_pos_value 14696
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 15, 14, 0
time breakdown 3: 19, 10, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 28
2023/03/27 12:06:20 ----- PS len: 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 18, 17, 0
2023/03/27 12:06:20 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 289 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1313 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1008 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5791 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 315 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1925 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 4249 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3967 truncate truncate
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 5
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0xe703, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
getdents(r0, &(0x7f00000001c0)=""/194, 0xc2)
truncate(&(0x7f00000000c0)='./file0\x00', 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/cephfs-client/dfs-0-482
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-483 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-483
receive_execute: 9, 8
receive_execute: 8, 8
receive_execute: 4, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
receive_execute: 0, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 289
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 501, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 501, flag collect 0
----- executor 3 signal number : 12
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 505, pid 2206, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 505, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 11, 10, 0
execute_one time: 1, 21
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24939, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 17, 23, 0
before receive testcase: 0 0
time breakdown 1: 8, 25, 0
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1326
----- executor 2 executes write_coverage_signal cov->size 1055, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1056
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7177
----- executor 2 executes write_coverage_signal cov->size 4119, flag collect 0
----- executor 2 signal number : 374
----- executor 2 executes write_coverage_signal cov->size 1326, flag collect 0
----- executor 2 signal number : 161
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2010
----- executor 2 executes write_coverage_signal cov->size 27612, flag collect 0
----- executor 2 signal number : 5540
executor 2 server cover_cnt 8 output_pos_value 17738
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 37
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 289 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
time breakdown 2: 12, 29, 0
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1326 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1056 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 7177 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 374 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 161 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 2010 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5540 signal and 0 cover from userspace component
time breakdown 0: 16, 24, 0
before receive testcase: 0 1
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 121 chmod chmod
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 7
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000140)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
open$dir(&(0x7f0000000700)='./file0\x00', 0x111040, 0x40)
chmod(&(0x7f00000001c0)='./file0\x00', 0x2a)
r0 = open(&(0x7f0000000040)='./file0\x00', 0x0, 0x10)
fchmod(r0, 0x8707983954862d20)
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x4, 0x1)
lchown(&(0x7f0000000100)='./file0\x00', 0xee01, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1088
remove dir: /root/cephfs-client/dfs-0-483
remove dir time 18
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-484 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-484
receive_execute: 8, 19
receive_execute: 8, 18
receive_execute: 3, 19
receive_execute: 8, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
----- executor 3 write_call_output, size 477, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 2209, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 158
----- completed 7
execute_one loop: 0, 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 2, 0
execute_one time: 1, 4
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7988, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1283
----- executor 2 executes write_coverage_signal cov->size 380, flag collect 0
----- executor 2 signal number : 67
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 20294, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 5180
----- executor 2 executes write_coverage_signal cov->size 713, flag collect 0
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 18558, flag collect 0
----- executor 2 signal number : 595
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 11, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7418
time breakdown 3: 27, 8, 0
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 22, 11, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 38
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:20 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1283 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5180 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 595 signal and 0 cover from userspace component
time breakdown 0: 27, 19, 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2458 open open
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2458 open open
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2458 open open
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 13
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x549880, 0x24)
r1 = open(&(0x7f0000000040)='./file0\x00', 0x2800, 0x27)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
flock(r0, 0x1)
r2 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
flock(r2, 0x6)
r3 = dup2(r0, r2)
r4 = fcntl$dupfd(r1, 0x0, r0)
dup2(r3, r4)
open(&(0x7f00000000c0)='./file0\x00', 0x101000, 0x0)
r5 = dup(r2)
dup2(r0, r5)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1776
remove dir: /root/cephfs-client/dfs-0-484
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-485 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-485
receive_execute: 13, 11
receive_execute: 10, 11
receive_execute: 2, 11
receive_execute: 9, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2212, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 2212, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 22
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 2212, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 352, pid 2212, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 352, flag collect 0
----- executor 3 signal number : 31
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2212, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2212, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2212, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 2, 0
execute_one time: 1, 5
time breakdown 3: 24, 7, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19214, flag collect 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1316
----- executor 2 executes write_coverage_signal cov->size 713, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 13, 8, 0
before receive testcase: 0 1
time breakdown 1: 21, 8, 0
before receive testcase: 0 1
----- executor 2 signal number : 6417
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 532
executor 2 server cover_cnt 5 output_pos_value 8352
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 21
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 13 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
time breakdown 2: 20, 10, 0
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1316 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 6417 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 532 signal and 0 cover from userspace component
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2375 mkdirat$binderfs mkdirat$binderfs
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2858 sendfile sendfile
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 6
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
sendfile(r0, 0xffffffffffffffff, 0x0, 0x1000)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs2\x00', 0x1ff)
mkdir(&(0x7f00000000c0)='./file0\x00', 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000140)='./file0/file0\x00', &(0x7f0000000040)='security.SMACK64MMAP\x00', &(0x7f0000000180)={'./binderfs2\x00]\xd3\xe1]\xaf\x9f\xca4@\xf8R\xcf\xe1\x90\x17\x9f\xf5\xc4~5\xb6$K\xf7\xe6R\xb0|\xdf$\n\x82G\x8d_\xd2\xb1\a\x80\xe1'}, 0x35, 0x1)
lchown(&(0x7f0000000080)='./file0\x00', 0xee01, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/cephfs-client/dfs-0-485
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-486 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-486
receive_execute: 5, 13
receive_execute: 2, 13
receive_execute: 5, 12
receive_execute: 4, 13
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2216, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2216, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 2216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 405
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 2216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 32
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 88
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 4
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6392, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1270
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 20094, flag collect 0
----- executor 2 signal number : 5226
----- executor 2 executes write_coverage_signal cov->size 14226, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 546
executor 2 server cover_cnt 4 output_pos_value 7122
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 6, 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 20
time breakdown 2: 15, 7, 0
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 6 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 405 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 12:06:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 2 has 4 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1270 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 3: 18, 4, 0
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5226 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 546 signal and 0 cover from userspace component
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2458 open open
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 6
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
open(&(0x7f0000000180)='./file0\x00', 0x10000, 0x2)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000140)='./file0\x00', 0x1, 0x14)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), 0x0, 0x0, 0x3)
lgetxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='trusted.overlay.impure\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1112
remove dir: /root/cephfs-client/dfs-0-486
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-487 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-487
receive_execute: 5, 15
receive_execute: 2, 15
receive_execute: 3, 15
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
receive_execute: 4, 14
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 2219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 98
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 682, pid 2219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 682, flag collect 0
----- executor 3 signal number : 165
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 2219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 508, pid 2219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 508, flag collect 0
----- executor 3 signal number : 61
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 0, 0
execute_one time: 1, 12
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 14, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 22215, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13615, flag collect 0
----- executor 2 signal number : 998
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 16, 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 8562
----- executor 2 executes write_coverage_signal cov->size 13302, flag collect 0
----- executor 2 signal number : 666
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 22593, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1247
----- executor 2 executes write_coverage_signal cov->size 16835, flag collect 0
----- executor 2 signal number : 3723
executor 2 server cover_cnt 8 output_pos_value 16680
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 34
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 6 replies
2023/03/27 12:06:20 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 165 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 998 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 8562 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 666 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 17, 19, 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1247 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3723 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2462 openat openat
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2343 link link
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 5
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x121000, 0x20)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000100)='./binderfs2\x00', 0x1ff)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0/file0\x00')
link(&(0x7f0000000080)='./file0/file0\x00', &(0x7f00000000c0)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 744
remove dir: /root/cephfs-client/dfs-0-487
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-488 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-488
receive_execute: 10, 8
receive_execute: 9, 7
receive_execute: 8, 8
receive_execute: 3, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 2222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 2222, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 3
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 7, 0
time breakdown 0: 16, 7, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 15
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1270 signal and 0 cover from userspace component
2023/03/27 12:06:20 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5216 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 288 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 548 signal and 0 cover from userspace component
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 2 signal number : 1270
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 20078, flag collect 0
----- executor 2 signal number : 5216
----- executor 2 executes write_coverage_signal cov->size 1021, flag collect 0
----- executor 2 signal number : 288
----- executor 2 executes write_coverage_signal cov->size 14226, flag collect 0
----- executor 2 signal number : 548
executor 2 server cover_cnt 5 output_pos_value 7405
time breakdown 2: 11, 7, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
time breakdown 3: 18, 5, 0
before receive testcase: 0 1
2023/03/27 12:06:20 ----- generateCall 3761 stat stat
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3761 stat stat
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2808 removexattr removexattr
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 18
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x1, 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x0, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000140)='./file1/../file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x7)
stat(&(0x7f0000000500)='./file1\x00', &(0x7f0000000540))
stat(&(0x7f0000000280)='./file1\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f00000005c0)=ANY=[@ANYBLOB="02000000010000000000000002000300", @ANYRES32=0xee01, @ANYBLOB="02000000", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=r1, @ANYBLOB="02000100", @ANYRES32, @ANYBLOB="02000300", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32, @ANYBLOB="02000700", @ANYRES32, @ANYBLOB="02000400", @ANYRES32=0x0, @ANYBLOB="02000200444a62984b7a224cf87c03bc6eff842f26a28fa9f9032e0aaa641c938bfef31af1d6f3f093c33043b528f676ea04cb761dcd4e5515c68c35eaa7965513b3974cf5d701883bd8dcdf53b0fb11cf24511b3d764db1acf2044ffb7368331172765a671e8a75c852b85016b1e54b08c2727c77a1ed442310cf17aa1388e08302a0b49e458103876d5ca29e0becc10133950eb0fe36bb4df3e32d1751a6b5201779da9783ee6aca684bc81a761b5605fa59d47e5fde9284929ac6890d5b83e06a60add1ff878e7d22591894eadb07c651816ada", @ANYRES32=0xee01, @ANYBLOB="02000900", @ANYRES32=r2, @ANYBLOB="040002000000000008000500", @ANYRES32=0xee00, @ANYBLOB="08000500", @ANYRES32=0xee00, @ANYBLOB="08000300", @ANYRES32=0x0, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="10000100000000002000030000000000"], 0x94, 0x2)
r3 = dup(r0)
removexattr(&(0x7f0000000800)='\x00', &(0x7f0000000840)=@known='trusted.overlay.impure\x00')
r4 = open(&(0x7f0000000440)='./file2\x00', 0x901, 0x102)
fstat(r4, &(0x7f0000000480))
getdents(r3, 0x0, 0x0)
stat(&(0x7f0000000740)='./file2\x00', &(0x7f0000000780))
linkat(r3, &(0x7f00000000c0)='./file1/../file0\x00', 0xffffffffffffffff, &(0x7f0000000100)='./file0\x00', 0x1000)
fsetxattr$user(r0, &(0x7f0000000000), &(0x7f0000000080)='\x00', 0x1, 0x2)
getdents(r3, &(0x7f0000002300)=""/4100, 0x1004)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4248
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-488
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-489 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-489
receive_execute: 5, 30
receive_execute: 3, 30
receive_execute: 1, 30
receive_execute: 3, 30
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 42
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 23
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 3
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 85
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 4
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2225, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 2225, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 105
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2225, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 10, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12106, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 380, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6822, flag collect 0
----- executor 2 signal number : 983
----- executor 2 executes write_coverage_signal cov->size 27274, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 11, 0
----- executor 2 signal number : 6959
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 21880, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 1515
----- executor 2 executes write_coverage_signal cov->size 10543, flag collect 0
----- executor 2 signal number : 2419
executor 2 server cover_cnt 7 output_pos_value 13260
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 43
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 18 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 33, 13, 0
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 7 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1292 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 983 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 6959 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1515 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 2419 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- splice()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 20
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000440))
mkdir(&(0x7f0000000040)='./file3\x00', 0x0)
mkdir(&(0x7f0000000040)='./file3\x00', 0x38)
setxattr$security_ima(&(0x7f00000005c0)='./file1/file0\x00', &(0x7f0000000740), &(0x7f0000000b80)=ANY=[@ANYRES64=0x0, @ANYRESDEC=0x0], 0xb, 0x2)
chmod(&(0x7f00000003c0)='.\x00', 0x0)
lsetxattr$security_evm(&(0x7f0000000140)='./file0\x00', &(0x7f0000000ac0), &(0x7f0000000b00)=ANY=[@ANYBLOB="00ef2c2ee7d367b58e97170aa610f200b585abd8ce7e00c7be7a618ef35a9de01954c638822bbff1806546319631609e50407558663d48cfe3cdb083af6f6b7fd0bab52babebb9fa64af55"], 0xb, 0x1)
setxattr$security_selinux(&(0x7f00000006c0)='./file1/file0\x00', &(0x7f0000000a80), &(0x7f00000002c0)='system_u:object_r:auth_cache_t:s0\x00', 0x22, 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
r0 = open(&(0x7f0000000480)='./file2\x00', 0x442, 0x0)
setxattr$security_evm(&(0x7f0000000400)='.\x00', &(0x7f0000000340), &(0x7f0000000bc0)=ANY=[@ANYRES32=r0, @ANYRES64, @ANYRES16=r0, @ANYRESHEX, @ANYRES64=r0, @ANYRESHEX, @ANYRESDEC=r0], 0x12, 0x2)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000680)='./file0\x00', &(0x7f0000000080), &(0x7f0000000700)='./file1\x00', 0xfffffffffffffdca, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000000500)='./file1/../file0\x00', &(0x7f0000000540), &(0x7f0000000580), 0x2, 0x0)
rename(&(0x7f0000000600)='./file4\x00', &(0x7f0000000380)='./file4\x00')
unlink(&(0x7f0000000800)='./file0\x00')
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_metadata(&(0x7f0000000000)='\x00', &(0x7f0000000200), &(0x7f0000001500)="", 0x1001, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0)='security.SMACK64IPIN\x00', &(0x7f0000000c40)=ANY=[@ANYBLOB="767dc208ef2339e13ccb45339605e66672d7e8b3fc8ae9ccb1ec67ddbe407be2be6d12dc9e5f6b57eb6a5db7c97faa6b1507ca2821704adeb076cfd4471d6d192cdd26ad4053e31566cbd702d4d25275cbc23da409b8841e52e5a6cec28e63110b2fe403026eb5befc5238e318f34b69dfa3c34d5a96c2097bd77dea621faea2fd083261ec7aa197cd789123f7053982e209e3e2e0a2fa915495233d21a75368e9461a2be0a8e5011a9819e54d21ca0e732c7b804c559086143e8d347c"], 0x2, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000001c0)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000940)='./file0\x00', &(0x7f0000000980), &(0x7f00000009c0), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000a00)='./file3\x00', &(0x7f0000000300), &(0x7f0000000640)=@md5={0x1, "e9e03c5eb521232cba82108cc8ffa4b8"}, 0x11, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9048
remove dir: /root/cephfs-client/dfs-0-489
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-490 successfully
receive_execute: 5, 13
receive_execute: 6, 14
current dir: executor 3: /root/cephfs-client/dfs-0-490
receive_execute: 8, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 2
receive_execute: 6, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 327, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 327, flag collect 0
----- executor 3 signal number : 90
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 605, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 605, flag collect 0
----- executor 3 signal number : 113
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 504, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 504, flag collect 0
----- executor 3 signal number : 138
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 97
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 2, 0
execute_one time: 1, 12
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 14, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13293, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1299
----- executor 2 executes write_coverage_signal cov->size 510, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 20, 14, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 7026
----- executor 2 executes write_coverage_signal cov->size 2456, flag collect 0
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 18432, flag collect 0
----- executor 2 signal number : 657
executor 2 server cover_cnt 5 output_pos_value 9407
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 31
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 20 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 29 signal and 0 cover from executor 3
time breakdown 2: 19, 16, 0
2023/03/27 12:06:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 138 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1299 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 7026 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 657 signal and 0 cover from userspace component
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2809 rename rename
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3970 unlink unlink
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 6
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0xef)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)='./file0\x00')
unlink(&(0x7f0000000100)='./file1/file0\x00')
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f00000003c0)='./binderfs2\x00', 0x1ff)
open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x10)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 760
remove dir: /root/cephfs-client/dfs-0-490
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-491 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-491
receive_execute: 6, 25
receive_execute: 3, 25
receive_execute: 5, 26
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
receive_execute: 5, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2232, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 55
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 31, 5, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6380, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 5, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 30, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 1270
----- executor 2 executes write_coverage_signal cov->size 254, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 20072, flag collect 0
----- executor 2 signal number : 5207
----- executor 2 executes write_coverage_signal cov->size 340, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 14226, flag collect 0
----- executor 2 signal number : 547
executor 2 server cover_cnt 5 output_pos_value 7348
2023/03/27 12:06:20 for select break: 1
time breakdown 2: 28, 7, 0
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 32
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 6 replies
before receive testcase: 0 0
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1270 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5207 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 547 signal and 0 cover from userspace component
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 3
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={0x0, 0xfb, 0x51, 0x3, 0x4a, "903c0ea7430f9a3b6d8b9757006edd3f", "c0dfa98873a5fa74892867791e6c0259c4e47b4217b12a5bda0a7e05a774322462a3b2e197eec5cd66e9ec2b21889be397a3ff93546786070b56177f"}, 0x51, 0x1)
removexattr(&(0x7f0000000480)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.impure\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/cephfs-client/dfs-0-491
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-492 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-492
receive_execute: 5, 12
receive_execute: 4, 13
receive_execute: 3, 12
receive_execute: 3, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 219, pid 2235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 219, flag collect 0
----- executor 3 signal number : 17
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
time breakdown 3: 17, 4, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4244, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11693, flag collect 0
----- executor 2 signal number : 4901
----- executor 2 executes write_coverage_signal cov->size 2820, flag collect 0
----- executor 2 signal number : 326
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 530
executor 2 server cover_cnt 5 output_pos_value 7102
time breakdown 1: 17, 5, 0
time breakdown 0: 16, 5, 0
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 19
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 3 replies
2023/03/27 12:06:20 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
time breakdown 2: 15, 6, 0
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 4901 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 326 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 216 fdatasync fdatasync
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 8
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
link(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
r1 = open(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
r2 = dup2(r0, r1)
r3 = dup(r0)
fdatasync(r3)
write$binfmt_misc(r0, &(0x7f00000015c0)={'syz1'}, 0x4)
write(r2, &(0x7f00000005c0)="", 0xffd)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5128
remove dir: /root/cephfs-client/dfs-0-492
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-493 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-493
receive_execute: 6, 10
receive_execute: 4, 10
receive_execute: 4, 10
receive_execute: 4, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 571, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2238, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2238, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2238, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 2238, write pid:-2126826171
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1328, pid 2238, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1328, flag collect 0
----- executor 3 signal number : 979
----- completed 7
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 1155, pid 2238, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1155, flag collect 0
----- executor 3 signal number : 23
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 22, 1, 0
execute_one time: 1, 23
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13879, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15806, flag collect 0
----- executor 2 signal number : 987
----- executor 2 executes write_coverage_signal cov->size 28493, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 26, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 26, 0
before receive testcase: 0 0
time breakdown 3: 16, 24, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 39
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 8 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 7076 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 372 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1850 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3736 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 979 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 23 signal and 0 cover from executor 3
----- executor 2 signal number : 7076
----- executor 2 executes write_coverage_signal cov->size 3545, flag collect 0
----- executor 2 signal number : 372
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1850
----- executor 2 executes write_coverage_signal cov->size 15990, flag collect 0
----- executor 2 signal number : 3736
executor 2 server cover_cnt 8 output_pos_value 15522
time breakdown 2: 14, 29, 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2343 link link
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 7
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
link(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180)='./file1/file0\x00')
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
getdents(r0, &(0x7f0000000280)=""/102, 0x66)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(r1, &(0x7f0000000380)=""/69, 0x45)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/cephfs-client/dfs-0-493
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-494 successfully
receive_execute: 4, 8
current dir: executor 3: /root/cephfs-client/dfs-0-494
receive_execute: 9, 8
receive_execute: 7, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 7, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2241, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2241, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 95, pid 2241, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 3 signal number : 52
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 2
execute_one time: 1, 9
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 13, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 15, 13, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12953, flag collect 0
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
----- executor 2 signal number : 989
----- executor 2 executes write_coverage_signal cov->size 26571, flag collect 0
----- executor 2 signal number : 6654
----- executor 2 executes write_coverage_signal cov->size 3458, flag collect 0
----- executor 2 signal number : 356
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18355, flag collect 0
----- executor 2 signal number : 811
----- executor 2 executes write_coverage_signal cov->size 18618, flag collect 0
----- executor 2 signal number : 3828
executor 2 server cover_cnt 8 output_pos_value 14022
time breakdown 3: 17, 12, 0
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 25
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 989 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 6654 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 811 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3828 signal and 0 cover from userspace component
time breakdown 2: 12, 17, 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2373 mkdir mkdir
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2810 renameat renameat
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 171 dup2 dup2
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 231 fsetxattr fsetxattr
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 15
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x101000, 0x96)
symlinkat(&(0x7f0000000200)='./file1\x00', r0, &(0x7f0000000240)='./file1/file0\x00')
fsetxattr$smack_xattr_label(r0, &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f0000000080), 0x1, 0x2)
setxattr$incfs_metadata(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)="67e0a0ed477d1c39a80e80b7d5e0d583e5fa8f9eca35351446c3bae77791b06e9bb261eb3ab2772dbbec04f2a55a3c1a9ecf653a14df7da205ade8c46b5bb36bf23a62fbfc8173db6cd2ab0cf22981b6261469ed", 0x54, 0x1)
r1 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x10000, 0x60)
fsync(r1)
fcntl$F_SET_FILE_RW_HINT(r0, 0x40e, &(0x7f0000000280)=0x1)
lsetxattr$system_posix_acl(&(0x7f0000000380)='./file1\x00', &(0x7f00000003c0)='system.posix_acl_default\x00', &(0x7f0000000400)=ANY=[@ANYBLOB="02000000010004000000000002000000", @ANYRESHEX=r0, @ANYBLOB="040002000000000008000000", @ANYRES32=0x0, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee01, @ANYBLOB="08000300", @ANYRES32=0xee01, @ANYBLOB="08000400", @ANYRES32=0xee00, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB="08000600", @ANYRES32, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB='\x00\a\x00\x00', @ANYRES32=0xee01, @ANYBLOB='\x00', @ANYRES32=0x0, @ANYBLOB="1000000000000a6a6dcf881cb7020000000000"], 0x74, 0xde421032f91df0c3)
mkdir(&(0x7f00000002c0)='./file0\x00', 0x8)
r2 = dup(r1)
renameat(r2, &(0x7f0000000300)='./file0/file0\x00', r1, &(0x7f0000000340)='./file0\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000600), &(0x7f0000000640), 0x2, 0x0)
r3 = dup(r1)
dup2(r0, r3)
fsetxattr(r1, &(0x7f00000004c0)=@known='com.apple.FinderInfo\x00', &(0x7f0000000500)='trusted.overlay.opaque\x00', 0x17, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3680
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-494
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 7, 18
receive_execute: 2, 19
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-495 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-495
receive_execute: 8, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 7, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 515, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 136
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2245, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 0, 5
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8717, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1290
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 9586, flag collect 0
2023/03/27 12:06:20 for select break: 1
----- executor 2 signal number : 989
----- executor 2 executes write_coverage_signal cov->size 18505, flag collect 0
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 12, 0
----- executor 2 signal number : 6122
----- executor 2 executes write_coverage_signal cov->size 1431, flag collect 0
----- executor 2 signal number : 303
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12164, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 14, 0
----- executor 2 signal number : 770
----- executor 2 executes write_coverage_signal cov->size 11174, flag collect 0
time breakdown 3: 27, 11, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 2706
executor 2 server cover_cnt 8 output_pos_value 12275
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 33
2023/03/27 12:06:20 ----- PS len: 4
before receive testcase: 0 0
2023/03/27 12:06:20 [CLIENT] executor 3 has 15 replies
2023/03/27 12:06:20 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
time breakdown 2: 21, 15, 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1290 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 989 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 6122 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 303 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 770 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 2706 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 122 chown chown
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 8
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1cbbc0, 0xcc)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=ANY=[], 0x16, 0x0)
fstat(r0, &(0x7f0000000840)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000800)='./file0\x00', r1, 0x0)
fstat(r0, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
chown(&(0x7f0000000040)='./file0\x00', r2, 0xee01)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-495
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 5, 12
receive_execute: 5, 13
receive_execute: 7, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
remove dir time 6
-----finish removing dir
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-496 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-496
receive_execute: 9, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2250, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2250, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2250, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2250, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 2250, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2250, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 475, pid 2250, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 475, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 591, pid 2250, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 591, flag collect 0
----- executor 3 signal number : 17
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 1, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 3, 0
execute_one time: 1, 13
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1349
----- executor 2 executes write_coverage_signal cov->size 1463, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28263, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 19, 17, 0
time breakdown 1: 18, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 1048
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 21, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 7066
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1554
----- executor 2 executes write_coverage_signal cov->size 26886, flag collect 0
----- executor 2 signal number : 5643
executor 2 server cover_cnt 8 output_pos_value 16763
before receive testcase: 0 0
time breakdown 2: 17, 22, 0
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 35
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 8 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1349 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1048 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 7066 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1554 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5643 signal and 0 cover from userspace component
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 5
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), 0x0, 0x0, 0x0)
fcntl$lock(r0, 0x0, &(0x7f0000000000)={0x2, 0x3, 0xfc, 0x7})
listxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=""/154, 0x9a)
setxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1128
remove dir: /root/cephfs-client/dfs-0-496
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-497 successfully
receive_execute: 4, 7
current dir: executor 3: /root/cephfs-client/dfs-0-497
receive_execute: 11, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 2253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 160
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
receive_execute: 7, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 2253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 12
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 221, pid 2253, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 221, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 6, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 6, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4198, flag collect 0
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11709, flag collect 0
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 526
executor 2 server cover_cnt 4 output_pos_value 6773
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 14
2023/03/27 12:06:20 ----- PS len: 4
time breakdown 2: 11, 7, 0
2023/03/27 12:06:20 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 2 has 4 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 526 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:20 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
time breakdown 3: 18, 5, 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 171 dup2 dup2
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 204 fcntl$getflags fcntl$getflags
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 251 ftruncate ftruncate
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 251 ftruncate ftruncate
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 12
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file1\x00', 0x121041, 0x0)
lseek(r0, 0xffffffffffffffff, 0x0)
r1 = open$dir(&(0x7f0000000200)='./file1\x00', 0x48002, 0x1)
ftruncate(r1, 0x6)
r2 = openat(r0, &(0x7f0000000140)='./file1\x00', 0x0, 0x3)
r3 = open(&(0x7f0000000180)='./file1\x00', 0x101000, 0x1)
r4 = dup2(r3, r0)
dup2(r2, r4)
setxattr$incfs_metadata(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)="7571e227103e676e24d95aae2c69b62ad5fae22678ca4c6d1da3e9ca1331e44ecb6ceae927804b9d86233c02e403bed4332a10c99e03cdc4a1b559e87020d54eeb469e688f97b54922c8dc25c45452ebb35463e6ae12580115b0f03e0d5cbe2d34e3af832261bd65921536dfb28dbc87919bec8c07601e20d59536e3c50e5b50a2b59e57b2b3f6d2bc781dbc1f6aff918213d697eee02a34251aed09457673738978801dc851fbde3616f441a0e58580154d4291b4fba5b0c3354e3c01", 0xbd, 0x6)
fcntl$getflags(r0, 0xb)
r5 = openat(r4, &(0x7f0000000240)='./file1/file0\x00', 0x2043, 0x1)
ftruncate(r5, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1904
remove dir: /root/cephfs-client/dfs-0-497
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-498 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-498
receive_execute: 4, 11
receive_execute: 2, 11
receive_execute: 3, 12
receive_execute: 3, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 2256, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 35
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 190, pid 2256, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 190, flag collect 0
----- executor 3 signal number : 147
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2256, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2256, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2256, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2256, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 12047, flag collect 0
----- executor 2 signal number : 5014
----- executor 2 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 548
time breakdown 1: 15, 5, 0
before receive testcase: 0 0
time breakdown 0: 14, 6, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7146
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 13, 7, 0
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 18
2023/03/27 12:06:20 ----- PS len: 4
before receive testcase: 0 0
2023/03/27 12:06:20 [CLIENT] executor 3 has 12 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5014 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 548 signal and 0 cover from userspace component
time breakdown 3: 15, 5, 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 7
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r1, 0x26, &(0x7f0000000100)={0x1, 0x0, 0x0, 0x3})
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
r2 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r2, r1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1272
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-498
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-499 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-499
receive_execute: 5, 15
receive_execute: 3, 15
receive_execute: 3, 15
receive_execute: 3, 15
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 620, pid 2259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2259, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2259, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 10
----- completed 6
execute_one loop: 0, 0, 4
----- executor 3 write_call_output, size 659, pid 2259, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 36
----- completed 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 65, 1, 0
execute_one time: 0, 66
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18524, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1318
----- executor 2 executes write_coverage_signal cov->size 608, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10290, flag collect 0
----- executor 2 signal number : 990
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 18, 68, 0
before receive testcase: 0 1
time breakdown 0: 18, 70, 0
before receive testcase: 0 1
----- executor 2 signal number : 7273
----- executor 2 executes write_coverage_signal cov->size 1781, flag collect 0
----- executor 2 signal number : 317
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19798, flag collect 0
time breakdown 3: 20, 67, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1677
----- executor 2 executes write_coverage_signal cov->size 11967, flag collect 0
----- executor 2 signal number : 2870
executor 2 server cover_cnt 8 output_pos_value 14543
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 89
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1318 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 990 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 7273 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 317 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1677 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 2870 signal and 0 cover from userspace component
time breakdown 2: 18, 71, 0
before receive testcase: 0 1
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 2
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file0\x00', 0x10042, 0x0)
getxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='system.posix_acl_default\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 368
remove dir: /root/cephfs-client/dfs-0-499
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-500 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-500
receive_execute: 5, 9
receive_execute: 9, 10
receive_execute: 7, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2264, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 8, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 485, pid 2264, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 199
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
cover_reset in execute_call
execute_one time: 0, 5
time breakdown 3: 19, 6, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 7, 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 7, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6190, flag collect 0
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 254, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15998, flag collect 0
----- executor 2 signal number : 5476
----- executor 2 executes write_coverage_signal cov->size 6831, flag collect 0
----- executor 2 signal number : 557
executor 2 server cover_cnt 4 output_pos_value 7393
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 18
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 2 replies
2023/03/27 12:06:20 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 199 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 4 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 15, 8, 0
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5476 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 557 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/27 12:06:20 ----- generateCall 2782 readv readv
2023/03/27 12:06:20 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/27 12:06:20 ----- generateCall 2462 openat openat
2023/03/27 12:06:20 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
before receive testcase: 0 0
2023/03/27 12:06:20 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/27 12:06:20 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/27 12:06:20 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/27 12:06:20 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 12:06:20 ----- generateCall 204 fcntl$getflags fcntl$getflags
2023/03/27 12:06:20 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/27 12:06:20 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/27 12:06:20 ----- generateCall 2810 renameat renameat
2023/03/27 12:06:20 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/27 12:06:20 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:20 map[./file0:true]
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 20
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000000)={{0x7f, 0x45, 0x4c, 0x46, 0x9, 0x8, 0x7, 0xbf, 0x2, 0x3, 0x3e, 0x5, 0x7c, 0x40, 0x3da, 0x2, 0xdaf5, 0x38, 0x1, 0x7fff, 0xffc1, 0x76dc}, [{0x4, 0x200, 0x100000001, 0xfff, 0x3, 0xa7, 0x4, 0x800}], "5d48ef3ebf5acca158d4c6da7ef2052a2189230f7fc78b4d553c72a229563cfb5e0a1c3338688d11e6e30e620fb91ad807144aebab84767ae037832d18386cd6c7cb08d9f37918a36399b1b79f32d45d49448e83d5734edfead3040e030d343b5ac31224c9b29652e8ed5dcb05d7d25f4cd2c7a3ec0a5a36318979d3745b59344c33332921e58d8b92ec9cb2ea54b955b1bf2145a85c9439d7c855475962d0", ['\x00']}, 0x217)
readv(0xffffffffffffffff, &(0x7f0000001580)=[{&(0x7f0000000240)=""/145, 0x91}, {&(0x7f0000000300)=""/4096, 0x1000}, {&(0x7f0000001300)=""/169, 0xa9}, {&(0x7f00000013c0)=""/22, 0x16}, {&(0x7f0000001400)=""/49, 0x31}, {&(0x7f0000001440)}, {&(0x7f0000001480)=""/225, 0xe1}], 0x7)
fcntl$setown(0xffffffffffffffff, 0x8, 0x0)
r0 = openat(0xffffffffffffffff, &(0x7f0000001600)='./file0\x00', 0x0, 0x1)
fsetxattr$security_ima(r0, &(0x7f0000001640), &(0x7f0000001680)=@sha1={0x1, "92c61849082ec89c6576230445699539b69b5a82"}, 0x15, 0x2)
fsetxattr$user(0xffffffffffffffff, &(0x7f00000016c0), &(0x7f0000001700)='#-\x00', 0x3, 0x2)
r1 = open(&(0x7f0000001740)='./file0\x00', 0x440200, 0x5)
fcntl$getownex(r0, 0x10, &(0x7f0000001780)={0x0, <r2=>0x0})
fcntl$setown(r1, 0x8, r2)
fsetxattr$security_ima(r1, &(0x7f00000017c0), &(0x7f0000001800)=@sha1={0x1, "9b173e3fd133c8d77b38adb6959c9292be21162b"}, 0x15, 0x2)
r3 = fcntl$dupfd(r0, 0x0, r0)
fcntl$getflags(0xffffffffffffffff, 0x1)
fcntl$getownex(r3, 0x10, &(0x7f0000001840)={0x0, <r4=>0x0})
stat(&(0x7f00000018c0)='./file0\x00', &(0x7f0000001900)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
stat(&(0x7f0000001980)='./file0\x00', &(0x7f00000019c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fstat(r3, &(0x7f0000001a40)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
fsetxattr$system_posix_acl(r1, &(0x7f0000001880)='system.posix_acl_access\x00', &(0x7f0000001ac0)={{}, {}, [{0x2, 0x4, r5}, {0x2, 0x5, 0xffffffffffffffff}, {0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x4, r6}, {0x8, 0x1, r7}, {0x8, 0x4, 0xffffffffffffffff}], {0x10, 0x4}, {0x20, 0x2}}, 0x54, 0x0)
renameat(r1, &(0x7f0000001b40)='./file0\x00', r3, &(0x7f0000001b80)='./file0\x00')
fcntl$setown(r0, 0x8, r2)
fcntl$lock(0xffffffffffffffff, 0x25, &(0x7f0000001c00)={0x2, 0x4, 0x6, 0x6, r4})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7016
remove dir: /root/cephfs-client/dfs-0-500
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-501 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-501
receive_execute: 5, 23
receive_execute: 3, 23
receive_execute: 4, 23
receive_execute: 5, 23
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_one time: 1, 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2266, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 0, 5
cover_reset in execute_call
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 585, flag collect 0
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 3309, flag collect 0
time breakdown 3: 28, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 653
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 3 output_pos_value 1115
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 31
2023/03/27 12:06:20 ----- PS len: 4
time breakdown 1: 27, 8, 0
2023/03/27 12:06:20 [CLIENT] executor 3 has 20 replies
time breakdown 2: 26, 8, 0
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 2 has 3 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 653 signal and 0 cover from userspace component
time breakdown 0: 28, 8, 0
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 5
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
setxattr$system_posix_acl(&(0x7f0000000080)='./file1\x00', &(0x7f0000000100)='system.posix_acl_default\x00', &(0x7f0000000140)={{}, {0x1, 0x6}, [{0x2, 0x4, 0xffffffffffffffff}], {0x4, 0x5}, [{0x8, 0x4, 0xee00}], {0x10, 0x7}, {0x20, 0x2}}, 0x34, 0x2)
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x1456c1, 0x0)
write$binfmt_misc(r0, 0x0, 0x10000000000)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x52000, 0x80)
fcntl$lock(r1, 0x5, &(0x7f0000000040)={0x0, 0x0, 0x3, 0xffffffff})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1752
remove dir: /root/cephfs-client/dfs-0-501
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-502 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-502
receive_execute: 1, 7
receive_execute: 3, 7
receive_execute: 1, 7
receive_execute: 1, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 85, pid 2269, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 665, pid 2269, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 665, flag collect 0
----- executor 3 signal number : 473
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 910, pid 2269, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 3 signal number : 518
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2269, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2269, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 0, 7
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 10, 8, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 9340, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12388, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 992
----- executor 2 executes write_coverage_signal cov->size 14646, flag collect 0
----- executor 2 signal number : 5417
----- executor 2 executes write_coverage_signal cov->size 2143, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 20429, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 1636
----- executor 2 executes write_coverage_signal cov->size 17578, flag collect 0
----- executor 2 signal number : 3526
executor 2 server cover_cnt 8 output_pos_value 13271
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8, 12, 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 21
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 473 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 518 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 992 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5417 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1636 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3526 signal and 0 cover from userspace component
time breakdown 0: 8, 14, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 5
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
faccessat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x1)
fsync(r0)
fsetxattr(r0, &(0x7f0000000040)=ANY=[@ANYBLOB="bf79272500"/14], &(0x7f0000000100)='\'\\&!.--{:/\x006\xc8/\xf9\f\x9d\xb0\xa2@\"D2G\xf1\xb9\xfd\xeb\x13\xaa', 0xffffffffffffff2a, 0x0)
dup(r0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 704
remove dir: /root/cephfs-client/dfs-0-502
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-503 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-503
receive_execute: 8, 17
receive_execute: 7, 16
receive_execute: 2, 17
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 2273, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2273, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 202, pid 2273, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 202, flag collect 0
----- executor 3 signal number : 137
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2273, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2273, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 0, 7
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 10, 0
before receive testcase: 0 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 10, 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 29
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:20 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1297 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 5803 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 127 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 772 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 2906 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6718, flag collect 0
----- executor 2 signal number : 1297
----- executor 2 executes write_coverage_signal cov->size 254, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 7711, flag collect 0
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 14770, flag collect 0
----- executor 2 signal number : 5803
----- executor 2 executes write_coverage_signal cov->size 367, flag collect 0
----- executor 2 signal number : 127
----- executor 2 executes write_coverage_signal cov->size 1427, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 11185, flag collect 0
----- executor 2 signal number : 772
----- executor 2 executes write_coverage_signal cov->size 10562, flag collect 0
----- executor 2 signal number : 2906
executor 2 server cover_cnt 9 output_pos_value 12295
time breakdown 2: 20, 12, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:20 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:20 prog length: 10
2023/03/27 12:06:20 HasCrashFail:false HasNetFail:false
12:06:20 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(0x0, &(0x7f0000000240), 0x0, 0x0, 0x4)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
link(&(0x7f0000000040)='./file2\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
link(0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x4)
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x100)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 25, 9, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1424
remove dir: /root/cephfs-client/dfs-0-503
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-504 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-504
receive_execute: 6, 13
receive_execute: 3, 13
receive_execute: 5, 13
receive_execute: 5, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
output_pos: 1, output_pos_value 1
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
executor 0, execute_one inner time: 0, 0, 0
----- executor 3 signal number : 0
----- completed 1
execute_one time: 1, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 475, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 475, flag collect 0
----- executor 3 signal number : 54
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2276, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 2, 0
execute_one time: 1, 7
time breakdown 3: 19, 9, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10268, flag collect 0
executor 1 write_server_output
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 2 signal number : 67
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 10, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6733
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 452
----- executor 2 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 766
executor 2 server cover_cnt 6 output_pos_value 9601
time breakdown 0: 18, 11, 0
before receive testcase: 0 1
2023/03/27 12:06:20 for select break: 1
2023/03/27 12:06:20 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:20 wg wait finish
2023/03/27 12:06:20 ------ all executors finish execution
2023/03/27 12:06:20 exec time: 26
2023/03/27 12:06:20 ----- PS len: 4
2023/03/27 12:06:20 [CLIENT] executor 3 has 10 replies
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:20 [SERVER] executor 2 has 6 replies
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:20 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 6733 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 452 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/27 12:06:20 ------- fuzzer executor 2 receive 766 signal and 0 cover from userspace component
2023/03/27 12:06:20 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:20 ----- no new client coverage: false, true
2023/03/27 12:06:20 mutate testcase with failures
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 222 fremovexattr fremovexattr
2023/03/27 12:06:20 ----- insertCall()
2023/03/27 12:06:20 ----- generateCall 2462 openat openat
2023/03/27 12:06:20 ----- mutateArg()
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 5
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x400, 0x30)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
r1 = dup2(r0, r0)
fremovexattr(r1, &(0x7f0000000000)=@known='trusted.overlay.impure\x00')
lseek(r1, 0x7f, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 720
remove dir: /root/cephfs-client/dfs-0-504
time breakdown 2: 16, 13, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-505 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-505
receive_execute: 7, 27
receive_execute: 3, 27
receive_execute: 6, 27
receive_execute: 5, 27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 2280, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 103
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 2280, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 2, 3
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4198, flag collect 0
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 12350, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4985
----- executor 2 executes write_coverage_signal cov->size 346, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 6533, flag collect 0
time breakdown 3: 34, 18, 0
before receive testcase: 0 1
----- executor 2 signal number : 557
executor 2 server cover_cnt 5 output_pos_value 7129
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 19, 0
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 33, 21, 0
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 51
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 4985 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 557 signal and 0 cover from userspace component
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 216 fdatasync fdatasync
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2343 link link
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 11
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000100)='./file1\x00')
r0 = open(&(0x7f0000000200)='./file0/file0\x00', 0x101000, 0x26)
r1 = openat(r0, &(0x7f00000000c0)='./file1\x00', 0x1433e3, 0x0)
write$binfmt_misc(r1, &(0x7f0000000080)=ANY=[], 0x4)
r2 = open(&(0x7f0000000080)='./file1\x00', 0x1090c0, 0x21)
fchown(r2, 0xffffffffffffffff, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)='./file0\x00')
fdatasync(r1)
r3 = open(&(0x7f0000000140)='./file1\x00', 0x2000, 0x118)
fdatasync(r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 30, 24, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1408
remove dir: /root/cephfs-client/dfs-0-505
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 16
-----finish removing dir
receive_execute: 7, 20
receive_execute: 3, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-506 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-506
receive_execute: 8, 20
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 507, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 400
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 80
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 56
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 2283, write pid:-2126826171
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 7, 0
execute_one time: 0, 9
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 28, 10, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1341
----- executor 2 executes write_coverage_signal cov->size 669, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 9543, flag collect 0
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 12, 0
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7919
----- executor 2 executes write_coverage_signal cov->size 2473, flag collect 0
----- executor 2 signal number : 348
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1174
----- executor 2 executes write_coverage_signal cov->size 15303, flag collect 0
----- executor 2 signal number : 3439
executor 2 server cover_cnt 8 output_pos_value 15307
time breakdown 0: 27, 12, 0
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 35
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 11 replies
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1341 signal and 0 cover from userspace component
time breakdown 2: 22, 15, 0
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 7919 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 348 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1174 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 3439 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 3761 stat stat
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 13
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x2, 0x128)
symlink(&(0x7f0000000180)='./file0\x00', &(0x7f0000000280)='./file0\x00')
r1 = openat(r0, &(0x7f0000000140)='./file0\x00', 0x402983, 0x0)
fstat(r1, &(0x7f0000000200))
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x200, 0x52)
setxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)='system_u:object_r:kmsg_device_t:s0\x00', 0x23, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
fcntl$getown(r0, 0x9)
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2032
remove dir: /root/cephfs-client/dfs-0-506
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-507 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-507
receive_execute: 9, 14
receive_execute: 7, 14
receive_execute: 4, 14
receive_execute: 7, 14
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 577, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 3 signal number : 47
----- completed 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 567, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 567, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 52
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 557, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 557, flag collect 0
----- executor 3 signal number : 84
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 36
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 26, 10, 0
execute_one time: 0, 36
executor 0 write_server_output
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1341
----- executor 2 executes write_coverage_signal cov->size 1596, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 23, 38, 0
before receive testcase: 0 1
time breakdown 1: 21, 39, 0
before receive testcase: 0 0
----- executor 2 signal number : 1059
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 40, 0
before receive testcase: 0 0
----- executor 2 signal number : 7139
----- executor 2 executes write_coverage_signal cov->size 5169, flag collect 0
----- executor 2 signal number : 406
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2087
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6820
executor 2 server cover_cnt 8 output_pos_value 18950
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 58
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 13 replies
2023/03/27 12:06:21 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 47 signal and 0 cover from executor 3
time breakdown 2: 18, 44, 0
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1341 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1059 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 7139 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 406 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 2087 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 6820 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2343 link link
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 17
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f00000002c0)='./file2\x00', 0x8, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x131140, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$setsig(r1, 0xa, 0x6)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
fchown(r0, 0xee00, 0xffffffffffffffff)
read(r1, &(0x7f0000000300)=""/66, 0x42)
open$dir(&(0x7f0000000380)='./file3\x00', 0x30000, 0x15c)
fcntl$getown(r0, 0x9)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
r2 = open$dir(&(0x7f0000000440)='./file1\x00', 0x10002, 0x81)
fcntl$getownex(r2, 0x10, &(0x7f0000000480))
unlink(&(0x7f0000000000)='./file2\x00')
r3 = open(&(0x7f00000001c0)='./file0\x00', 0x1, 0x4)
fcntl$getownex(r3, 0x10, &(0x7f0000000500))
link(&(0x7f00000003c0)='./file2\x00', &(0x7f00000004c0)='./file0\x00')
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2544
remove dir: /root/cephfs-client/dfs-0-507
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-508 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-508
receive_execute: 10, 16
receive_execute: 3, 16
receive_execute: 8, 16
executor 2 before execute_one
executor 3 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 150
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 28
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 538, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 538, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 9, 17
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 434, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 388, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 3 signal number : 93
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 2289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 132
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 9, 3, 0
execute_one time: 1, 12
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27196, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1362
----- executor 2 executes write_coverage_signal cov->size 961, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10537, flag collect 0
----- executor 2 signal number : 971
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 26, 15, 0
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7331
----- executor 2 executes write_coverage_signal cov->size 683, flag collect 0
time breakdown 0: 24, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 257
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 26, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 828
----- executor 2 executes write_coverage_signal cov->size 15700, flag collect 0
----- executor 2 signal number : 3016
executor 2 server cover_cnt 8 output_pos_value 13860
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 35
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 17 replies
2023/03/27 12:06:21 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1362 signal and 0 cover from userspace component
time breakdown 2: 19, 20, 0
before receive testcase: 0 0
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 971 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 7331 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 828 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 3016 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 20
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r1 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0x3c)
symlinkat(&(0x7f00000002c0)='./file0\x00', r1, &(0x7f0000000340)='./file0\x00')
r2 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
lsetxattr$security_capability(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v2={0x2000000, [{0xffff, 0x5}, {0x9418, 0x7}]}, 0x14, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x7f, 0xbab0})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
open$dir(&(0x7f00000001c0)='./file0\x00', 0x121202, 0xfb4aab02ca7a8b90)
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x1, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
r4 = dup(r0)
fcntl$lock(r4, 0x6, &(0x7f00000004c0)={0x2, 0x1, 0x81, 0xfffffffffffffffb})
open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
mkdir(&(0x7f00000003c0)='./file0\x00', 0x80)
dup2(r2, r2)
write$binfmt_elf64(r3, &(0x7f0000002300)=ANY=[@ANYBLOB="7f454c4604070802010000000000000003003e0002000000160100000000000040000000000000000d010000000000000800000012ab380001000010030001800200000006000000020000000000000001000000000000000400000000000000080000000000000008000000000000030000000000000060579368a74ecde7bc701d7ce6f70be5199295f4fb39ca04b9522915990d8f2c9befc2419c871960fc1897d6a1d6570cf471c8a412c36ff772679693e5bd5e0ec1baee315fc31a9b2daac5efb52a7a65d4cf5665c6a81004f2588dab315c389b7e8aa724345a4113a60c4b46109641add87a830d0e2389cf7e6b116f9cedfec69c8d6bbb6a54ede2a1cf88c337b52dcd3cab0740c4ada727ca45a9a872d09a2b45472f76f6ca4a1564f1bfbdd0472fadd37c60f6227141ac05014565e9c1eb0c910c45fcdb36bf24b07503c8cb8ab0fbe0cca33adeac86f88859a574d8570723111b9555dcaff1157e6c96535a4f7eba88ea8a73b35f8cfa52c0aa7ed09be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001eafd402e9167deb8b38c368f9106c976476fbe61cca57512e564a40e7a1e1af554a94044a23ad330794d5078da6e7df197d855bc327847f85d95b19fab37db8463eafa26f77470694fc4f42af401682cbd6b09d9147f352c321f7b5d845b1f0c9b20081cd31356bf7029a99cd003ebf0d03d280018bbfbd0ce6d91513db134213e99a4b3778fb69b7457d55bf93a80d040818b19c7cf174f25d38943227af02124d312881f1c4efb959e789aaea231e72d68f906a80462c89142fb3c46893b844373209045ea4b83c4f27771a4331ad8eb3571d37ede7434857701b3c3b87b34564bab5d60e8e280b285cddcb891a2668ec697034f4b5c7d5eda3d7aa1e90659e6cf10ef6ed48bdff91d8b80984d733"], 0xb6a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7064
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-508
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-509 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-509
receive_execute: 9, 15
receive_execute: 3, 15
receive_execute: 6, 16
receive_execute: 5, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 127
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 120
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 757, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 757, flag collect 0
----- executor 3 signal number : 111
----- completed 10
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 580, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 580, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 200, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 200, flag collect 0
----- executor 3 signal number : 6
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 2292, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 5
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 510, pid 2292, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 510, flag collect 0
----- executor 3 signal number : 244
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 9, 0
execute_one time: 1, 23
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 24, 26, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1354
----- executor 2 executes write_coverage_signal cov->size 1390, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 27, 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 1060
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7965
----- executor 2 executes write_coverage_signal cov->size 5146, flag collect 0
----- executor 2 signal number : 434
----- executor 2 executes write_coverage_signal cov->size 1341, flag collect 0
----- executor 2 signal number : 183
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2048
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 6766
executor 2 server cover_cnt 8 output_pos_value 19904
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 49
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 20 replies
2023/03/27 12:06:21 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
time breakdown 2: 18, 33, 0
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 120 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 5 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:06:21 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1354 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1060 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 7965 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 434 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 183 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 2048 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 6766 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 244 signal and 0 cover from executor 3
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 20
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x0, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x602042, 0x18)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x0, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000480)={0x0, 0x0, 0x4000005, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r5})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r6, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3864
remove dir: /root/cephfs-client/dfs-0-509
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-510 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-510
receive_execute: 11, 7
receive_execute: 4, 7
receive_execute: 9, 7
receive_execute: 10, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2295, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 138
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 2295, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 3
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 2
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2295, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 9, 3, 1
execute_one time: 1, 13
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 18, 15, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 29954, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1352
----- executor 2 executes write_coverage_signal cov->size 1037, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15042, flag collect 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 17, 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 27
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 20 replies
2023/03/27 12:06:21 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1352 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 995 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 7491 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 407 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1996 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 3559 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
----- executor 2 signal number : 995
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7491
----- executor 2 executes write_coverage_signal cov->size 5121, flag collect 0
----- executor 2 signal number : 407
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1996
----- executor 2 executes write_coverage_signal cov->size 15822, flag collect 0
----- executor 2 signal number : 3559
executor 2 server cover_cnt 8 output_pos_value 15896
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 138 signal and 0 cover from executor 3
time breakdown 2: 11, 20, 0
before receive testcase: 0 0
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2341 lchown lchown
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2750 pwritev pwritev
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 4200 writev writev
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 194 fchmod fchmod
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 170 dup dup
time breakdown 0: 17, 18, 0
before receive testcase: 0 0
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 16
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
lsetxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x0)
fstat(r0, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f00000000c0)='./file0/file0\x00', r1, r2)
r3 = dup(r0)
r4 = dup2(r0, r0)
fchmod(r4, 0x100)
r5 = openat(r3, &(0x7f0000000340)='./file0/file0\x00', 0x620041, 0x148)
write$binfmt_misc(r5, &(0x7f0000000380)=ANY=[@ANYBLOB="73797a314ed578ed3db821483fac67fc81fbcd3178f884ef72f2b6dff488db57a7d30fb78cefef16e534c250f62ae7892bc4ef554820063a0a3d0a91f1bcf041d0ff75c8e3cab90d2904bec7694416d2776e59647de2dd4e1dfd5b32bdc09ead50f1a8cd7cc5ce460d845144e0223fafa9f2eb7ebca540b9235c"], 0x86)
lseek(r3, 0x0, 0x4)
r6 = open(&(0x7f0000000200)='./file0/file0\x00', 0x200000, 0xc4)
r7 = open(&(0x7f00000006c0)='./file0/file0\x00', 0x8000, 0x40)
dup(r7)
pwritev(r6, &(0x7f0000000300)=[{&(0x7f0000000240)="3aba4238d4688f418ca55a140a36fc25a1488936abe79609f4c1b6be0555e03faa82477641ab06f9fea48b8705470c989bd467ea0af89ad48ac8a340bb0d19c356f194a69f3d9b1047722849848d67b3bdb9029917d168a8cfe84b8832deb6e99a249774022acda56ff5b9b198e8ddb8ee8bd307", 0x74}, {&(0x7f00000002c0)="645089ee4e94e2b930ba39bcbc05a4dbcccc8da2ddd11d5417", 0x19}], 0x2, 0x8001, 0xffff2fe8)
writev(r5, &(0x7f0000000740)=[{&(0x7f0000000440)="b1ee98337dd27b30ad4ccd58f2f9e532156fbab3f31dcb23a65a088fd273087fee41a3bdc9655eabda0bd708129f0e6287b4c1daefb1f0ae97c69eea7c495816dac543309877742c25e7fee1d8b9c899e7647d156f80cd643d7c79e5ab8c4f62a6b3582641f8786356", 0x69}, {&(0x7f00000004c0)="25924c00487360fef21353c0c89ebbaab1d73c9dda06929e8cce0e95d2bc9a7d222bbbae15f8077d66faced44d7947d50afce09e5ee2f73c3b2ec6f51f69d6cf5f1a8acb4b3f2cf3067c676d1c0f92ba5285d6abf49ed1852dacc03d15a991cc516ae5f1e1c1207f2ac544ae48bc0bb707c31821db5a1fb5089b55bb665df966218f5c161655a56bb1c808233d912ec48234d26ee656ba2e5b7d9b0cca9f508936943102f96ffd7c1b37e2ee0efb66b73a144c7ae88f90ea4be709a024f21c0a376157aba4ab917d073baaaf725a21ce3a31e968aa5130837a87", 0xda}, {&(0x7f00000005c0)="420829d7b4824e2b1dd122f5e930381e253124b6534148638372661e4130fd85432328fed53270ff", 0x28}, {&(0x7f0000000600)="ae5aef1fa2412922b2f742c3b7907155fe60dad3e9ea373a49ba88fd224334c5fbe67c873b4f1770686cf522cff8aac7ac1de65aa566a80e56279510a54043cc75f0da7f9b7bd2c3dba63ea17ed3fb24ae332c616bdd76bf8b4b36598e7c4733c624fb20", 0x64}, {&(0x7f0000000680)="f767ea35c60d975b39", 0x9}], 0x5)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3840
remove dir: /root/cephfs-client/dfs-0-510
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-511 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-511
receive_execute: 9, 8
receive_execute: 4, 8
receive_execute: 6, 9
receive_execute: 6, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 619, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 156
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2299, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2299, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 80, pid 2299, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 80, flag collect 0
----- executor 3 signal number : 56
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 2299, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 7
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 5
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 17, 6, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11708, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 6, 0
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 1383, flag collect 0
----- executor 2 signal number : 311
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7095
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 8, 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 17
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 16 replies
2023/03/27 12:06:21 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 12, 9, 0
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 311 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2374 mkdirat mkdirat
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2462 openat openat
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 11
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000001300)='./file0\x00', 0x28084, 0x0)
mkdirat(r0, &(0x7f0000000080)='./file0\x00', 0x156)
openat(r0, &(0x7f0000000100)='./file0\x00', 0x620402, 0x106)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x100, 0xe0)
r2 = dup2(r1, r1)
write$binfmt_misc(r2, &(0x7f0000000040)={'syz1', "c233899c1e933d14f527565661d42ab1c36ec8e98f"}, 0x19)
open$dir(&(0x7f0000000140)='./file0\x00', 0x400080, 0x28)
lseek(r1, 0x2, 0x1)
r3 = dup2(r1, r0)
ftruncate(r3, 0x100000001)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x42582, 0x42)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1568
remove dir: /root/cephfs-client/dfs-0-511
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-512 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-512
receive_execute: 5, 10
receive_execute: 5, 11
receive_execute: 2, 11
receive_execute: 1, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 425, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 366
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
executor 2 write_server_output
time breakdown 3: 16, 6, 0
executor 1 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
----- executor 2 executes write_coverage_signal cov->size 2427, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 302
executor 2 server cover_cnt 4 output_pos_value 3553
time breakdown 0: 12, 8, 0
before receive testcase: 0 1
time breakdown 2: 13, 9, 0
before receive testcase: 0 1
time breakdown 1: 15, 9, 0
before receive testcase: 0 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 24
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 11 replies
2023/03/27 12:06:21 fuzzer receive 366 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 2 has 4 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 302 signal and 0 cover from userspace component
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 3
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
open(&(0x7f0000000780)='./file1\x00', 0x250041, 0xa8)
r0 = open$dir(&(0x7f0000000280)='./file1\x00', 0x109840, 0x0)
fchmod(r0, 0xb1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/cephfs-client/dfs-0-512
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-513 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-513
receive_execute: 6, 4
receive_execute: 6, 5
receive_execute: 9, 5
receive_execute: 7, 4
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 85, pid 2305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 2305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 470
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2305, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 82
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11720, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 11, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 4913
----- executor 2 executes write_coverage_signal cov->size 333, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7038
2023/03/27 12:06:21 for select break: 1
2023/03/27 12:06:21 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:21 wg wait finish
2023/03/27 12:06:21 ------ all executors finish execution
2023/03/27 12:06:21 exec time: 12
2023/03/27 12:06:21 ----- PS len: 4
2023/03/27 12:06:21 [CLIENT] executor 3 has 3 replies
2023/03/27 12:06:21 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/27 12:06:21 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/27 12:06:21 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:21 [SERVER] executor 1 has 0 replies
time breakdown 2: 10, 8, 0
2023/03/27 12:06:21 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 4913 signal and 0 cover from userspace component
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:21 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
time breakdown 0: 11, 6, 0
2023/03/27 12:06:21 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:21 ----- no new client coverage: false, true
2023/03/27 12:06:21 mutate testcase with failures
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 3766 sync sync
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 2346 listxattr listxattr
2023/03/27 12:06:21 ----- insertCall()
2023/03/27 12:06:21 ----- generateCall 3766 sync sync
2023/03/27 12:06:21 ----- mutateArg()
2023/03/27 12:06:21 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:21 prog length: 7
2023/03/27 12:06:21 HasCrashFail:false HasNetFail:false
12:06:21 ---executing program 0:
---
---
---
sync()
sync()
mkdir(&(0x7f0000000000)='./file1\x00', 0x180)
setxattr$security_ima(&(0x7f00000000c0)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000200)=@v1={0x2, "34cc21ae70de222d9b3ec09f9b4c108add49"}, 0x13, 0x2)
stat(&(0x7f0000000100)='./file1\x00', &(0x7f0000000380))
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffffff, &(0x7f0000000080)='./file1\x00')
listxattr(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)=""/221, 0xdd)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 14, 4, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 920
remove dir: /root/cephfs-client/dfs-0-513
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-514 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-514
receive_execute: 5, 11
receive_execute: 3, 12
receive_execute: 1, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 1779, pid 2308, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 1779, flag collect 0
----- executor 3 signal number : 216
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 2308, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 2308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 347
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 265, pid 2308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 265, flag collect 0
----- executor 3 signal number : 131
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 23
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 121, pid 2308, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 121, flag collect 0
----- executor 3 signal number : 11
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 50, 0
execute_one time: 1, 64
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 16, 2657, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 24298, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1422
----- executor 2 executes write_coverage_signal cov->size 15630, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5688
----- executor 2 executes write_coverage_signal cov->size 1192, flag collect 0
----- executor 2 signal number : 259
----- executor 2 executes write_coverage_signal cov->size 21886, flag collect 0
----- executor 2 signal number : 2551
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 3991, flag collect 0
----- executor 2 signal number : 346
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 911
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 15, 2657, 0
before receive testcase: 0 0
----- executor 2 signal number : 1099
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 834
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4309
----- executor 2 executes write_coverage_signal cov->size 1152, flag collect 0
----- executor 2 signal number : 7
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 2677
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:24 fuzzer receive 216 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 347 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
executor 2 server cover_cnt 15 output_pos_value 18721
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
time breakdown 2: 13, 2666, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 2 has 15 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1422 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5688 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 259 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 2551 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 346 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 911 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1099 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 834 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4309 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2458 open open
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3761 stat stat
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 7
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000140))
open(&(0x7f0000000080)='./file0\x00', 0x400402, 0x80)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x5c1ac2, 0x102)
rmdir(&(0x7f0000000040)='./file0\x00')
truncate(&(0x7f0000000100)='./file1/file0\x00', 0x6d35)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
open$dir(&(0x7f0000000200)='./file1\x00', 0x20040, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 848
remove dir: /root/cephfs-client/dfs-0-514
executor 1: prog_data_offset 1320, prog_size 8
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 12, 2659, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-515 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-515
receive_execute: 14, 25
receive_execute: 5, 25
receive_execute: 13, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one time: 1, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 445
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 12, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
time breakdown 3: 39, 4, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1263
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 11529, flag collect 0
----- executor 2 signal number : 4887
----- executor 2 executes write_coverage_signal cov->size 710, flag collect 0
----- executor 2 signal number : 276
----- executor 2 executes write_coverage_signal cov->size 17103, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 37, 6, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 977
----- executor 2 executes write_coverage_signal cov->size 6254, flag collect 0
----- executor 2 signal number : 555
executor 2 server cover_cnt 7 output_pos_value 9033
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 32
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:24 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 7 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1263 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4887 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 276 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 977 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 555 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 445 signal and 0 cover from executor 3
before receive testcase: 0 0
time breakdown 2: 30, 8, 0
before receive testcase: 0 0
time breakdown 1: 38, 7, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 6
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x1456c1, 0x0)
write$binfmt_misc(r0, 0x0, 0x10000000000)
write(r0, &(0x7f0000000000)='3', 0x1)
r1 = dup2(r0, 0xffffffffffffffff)
fcntl$addseals(r1, 0x409, 0x0)
write$binfmt_elf64(r0, &(0x7f0000000100)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40}, [{}]}, 0x78)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1984
remove dir: /root/cephfs-client/dfs-0-515
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 4, 38
mkdir time 14
executor 3 create dir /root/cephfs-client/dfs-0-516 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-516
receive_execute: 4, 39
receive_execute: 4, 38
receive_execute: 2, 39
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 910, pid 2316, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 3 signal number : 518
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 1094, pid 2316, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1094, flag collect 0
----- executor 3 signal number : 455
----- completed 3
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2316, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2316, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1075, pid 2316, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1075, flag collect 0
----- executor 3 signal number : 8
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 29, 1, 0
execute_one time: 0, 30
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 43, 31, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 10362, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1283
----- executor 2 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 19595, flag collect 0
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 42, 34, 0
----- executor 2 signal number : 5870
----- executor 2 executes write_coverage_signal cov->size 1122, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1468
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1427
----- executor 2 executes write_coverage_signal cov->size 5726, flag collect 0
----- executor 2 signal number : 1602
executor 2 server cover_cnt 9 output_pos_value 13065
before receive testcase: 0 0
time breakdown 1: 42, 35, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 77
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 6 replies
2023/03/27 12:06:24 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 518 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1283 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 455 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
time breakdown 2: 41, 38, 0
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5870 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1468 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1427 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1602 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 4
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
fstat(r0, &(0x7f0000000140))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 464
remove dir: /root/cephfs-client/dfs-0-516
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-517 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-517
receive_execute: 10, 27
receive_execute: 3, 27
receive_execute: 7, 26
receive_execute: 8, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 620, pid 2319, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2319, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 2319, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2319, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 39
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 39, 0
execute_one time: 1, 59
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 25179, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1350
----- executor 2 executes write_coverage_signal cov->size 925, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 35, 62, 0
before receive testcase: 0 1
----- executor 2 signal number : 1025
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 37, 61, 0
before receive testcase: 0 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7214
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 258
----- executor 2 executes write_coverage_signal cov->size 1770, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 1322, flag collect 0
----- executor 2 signal number : 130
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1423
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1721
----- executor 2 executes write_coverage_signal cov->size 23495, flag collect 0
time breakdown 1: 33, 64, 0
before receive testcase: 0 0
----- executor 2 signal number : 5427
executor 2 server cover_cnt 10 output_pos_value 18964
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 95
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 4 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
time breakdown 2: 30, 68, 0
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 2 has 10 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1350 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1025 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7214 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 258 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 130 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1423 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1721 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5427 signal and 0 cover from userspace component
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 222 fremovexattr fremovexattr
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 8
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
faccessat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x1)
fsync(r0)
fsetxattr(r0, &(0x7f0000000200)=ANY=[@ANYBLOB="73797374656d2e404e7b16210fa921b3d84d1b1d0ee1d31026fa8e60f1296a3a876ad05645b94dfd97021c7787a47589589c3bdfe876b5daa9965b28f48a09ec5f88372be310125076d6e161da57ef5ad971158b92c0da12281e41e50e8ac0c8b8c5df89e4d5e6eb637fcf43bcbba1c8e969fc38042b0306174d9036d304ce7063cc0823ab894596ba52983d01e1609cfe0ea6b4aa2472826146a6e4d1338967cdf07cdb71ba91f5f40461f89c359c27cd60"], &(0x7f00000000c0)='\'\\&!.--{:/\x00', 0xb, 0x0)
r1 = dup(r0)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0xa000, 0x40)
fsetxattr$trusted_overlay_nlink(r2, &(0x7f0000000140), &(0x7f0000000180)={'L-', 0x7fff}, 0x16, 0x4)
fremovexattr(r1, &(0x7f00000002c0)=ANY=[@ANYBLOB="737931d8c68a2e65642e6f7665726c61792e6e6c696e6b00dd7c00911d35505f943f79c714835914dc8454ccc601bcc621053aada45eef3c590a19c8e4f41de6b43a22efc5063fae344de3e35328d10cc8c846b7e780f3eccdbe83e35538cc74c629b4cb625830972b38be37835bbab9eecadabd28c4db800fb8f8b4c30ef9c7cdb6a4d457b5a3dab5c52995ce1585273ae08155e64eb7af64cba899e3ccba3c91aeac2632d16d49389afd022bbdd4d57a6823547407c1e1142b1a28d0b36f23652a351e7d5dd2a252052d204e7522c5647dc3e50d28ebdaa6"])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1648
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-517
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-518 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-518
receive_execute: 11, 30
receive_execute: 4, 30
receive_execute: 8, 31
receive_execute: 10, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 620, pid 2322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 202, pid 2322, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 202, flag collect 0
----- executor 3 signal number : 137
----- completed 3
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 7, pid 2322, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 3 signal number : 7
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2322, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2322, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 31, pid 2322, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 30, 0, 0
execute_one time: 3, 31
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6844, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1296
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 41, 35, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1029
----- executor 2 executes write_coverage_signal cov->size 14681, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5799
time breakdown 0: 40, 37, 0
----- executor 2 executes write_coverage_signal cov->size 726, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 282
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 705
----- executor 2 executes write_coverage_signal cov->size 12583, flag collect 0
----- executor 2 signal number : 761
----- executor 2 executes write_coverage_signal cov->size 9701, flag collect 0
----- executor 2 signal number : 2728
executor 2 server cover_cnt 9 output_pos_value 12698
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 72
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 8 replies
time breakdown 2: 34, 41, 0
2023/03/27 12:06:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 fuzzer receive 137 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1296 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1029 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5799 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 282 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 705 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 761 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 2728 signal and 0 cover from userspace component
time breakdown 1: 39, 37, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- splice()
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 8
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f00000002c0)='./file0\x00', 0x0)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r1 = open(&(0x7f00000001c0)='./file1\x00', 0x121041, 0x0)
lsetxattr$security_selinux(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:ssh_exec_t:s0\x00', 0x20, 0x0)
write$binfmt_script(r1, &(0x7f0000000440)=ANY=[@ANYBLOB="37436bd0fc39945595da58d789080ff25df6aa09c82341555f2d043a77261ee38a412f0867688ff23b62d375fc0a2bc15d28321f4fcbde25d6cab6b65532f5bc47756c141f5aee81ef845fbf398b55f3bf578269547819bb244bf484a03d9e5ab8cd6a350084352da5679ecd28a32c7e15c10a923ffaa9589d57d0bed987470d79da2a469e932e5f57306a28bdab0e6d1d6ed2c31839ee4f7e1d7e89f84e18f22f4584760385894b54ba207a9a0e12ecaabe9d280b69ef295ab4d3066bc51b7daeb074ad4d7d200c26123c1ee13ddbd8dc1aba4380547a2d2918aff6e1ccc446fb13129ace70d30000000000000000000a5629315c44dc56889b0e2920b1f23283b86fd82ba829f77b0079e4a0571dd3dbdd7733e25cc91cdbcbd63116a3841365cebfe3b5eb1fa40cfc37586b3538ca0a6a307ba9bc0d8d18a64bcbdb993176350ebebbd0ade54f114ef64bae9adf120c3caabf5fba42641e04cabf1ed01316c7b50938fbc611914a4e36e9c10bcad662b4b3f994cbe30e85de60b256eec6f1d4e174b7d1cb8cd0758f1c20f7ca43090bcb8ed705a1198033acbdafe2a19970cafef5751a5094efb46077e42504e200"/447, @ANYRESDEC=0x0, @ANYRES64, @ANYRESHEX, @ANYRESHEX=r1], 0x1012)
truncate(&(0x7f0000000040)='./file1\x00', 0x0)
open(&(0x7f0000000380)='./file1\x00', 0x100, 0x8)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000040)='security.SMACK64IPIN\x00', 0x0, 0x0, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1976
remove dir: /root/cephfs-client/dfs-0-518
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 18
executor 3 create dir /root/cephfs-client/dfs-0-519 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-519
receive_execute: 9, 34
receive_execute: 7, 33
receive_execute: 6, 34
receive_execute: 3, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 507, pid 2325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 400
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 2325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 79
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 2325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 132
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
----- executor 3 write_call_output, size 1363, pid 2325, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1363, flag collect 0
----- executor 3 signal number : 954
----- completed 5
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 95
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 391, pid 2325, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 391, flag collect 0
----- executor 3 signal number : 34
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 170, pid 2325, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 170, flag collect 0
----- executor 3 signal number : 12
----- completed 8
execute_one loop: 0, 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 39
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 39, 0
execute_one time: 0, 62
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 20417, flag collect 0
executor 0 write_server_output
time breakdown 3: 43, 64, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1356
----- executor 2 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 40, 66, 0
----- executor 2 signal number : 1068
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7745
----- executor 2 executes write_coverage_signal cov->size 3894, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1613
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 13711, flag collect 0
----- executor 2 signal number : 3017
executor 2 server cover_cnt 9 output_pos_value 16671
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 37, 69, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 103
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 8 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1356 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1068 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7745 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1613 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3017 signal and 0 cover from userspace component
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
time breakdown 1: 40, 70, 0
before receive testcase: 0 0
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2809 rename rename
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2809 rename rename
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3970 unlink unlink
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 11
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
rename(&(0x7f0000000240)='./file0\x00', &(0x7f0000000300)='./file2\x00')
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000040)='./file3\x00', &(0x7f0000000080)='./file4\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file3\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
unlink(&(0x7f0000000380)='./file1\x00')
chown(&(0x7f0000000340)='./file3\x00', 0x0, 0xee01)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1568
remove dir: /root/cephfs-client/dfs-0-519
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-520 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-520
receive_execute: 4, 32
receive_execute: 10, 29
receive_execute: 9, 33
receive_execute: 3, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 637, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 637, flag collect 0
----- executor 3 signal number : 173
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 147
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
----- executor 3 write_call_output, size 438, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2328, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 39
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 22, 55, 0
execute_one time: 0, 78
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1448
----- executor 2 executes write_coverage_signal cov->size 1995, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 81, 0
before receive testcase: 0 0
----- executor 2 signal number : 1034
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 42, 79, 0
before receive testcase: 0 0
----- executor 2 signal number : 7609
----- executor 2 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 2 signal number : 82
----- executor 2 executes write_coverage_signal cov->size 9040, flag collect 0
----- executor 2 signal number : 503
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1939
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 785
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6454
executor 2 server cover_cnt 10 output_pos_value 19958
time breakdown 1: 37, 84, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 122
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 11 replies
2023/03/27 12:06:24 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 173 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 27 signal and 0 cover from executor 3
time breakdown 2: 36, 90, 0
2023/03/27 12:06:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 10 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1448 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1034 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7609 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 503 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1939 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 785 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 6454 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 10
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000140)=@known='com.apple.system.Security\x00', &(0x7f0000000180)=""/65, 0x41)
fcntl$lock(r1, 0x6, &(0x7f0000000100)={0x1})
r2 = open$dir(&(0x7f0000000000)='./file0\x00', 0x400400, 0x0)
r3 = fcntl$getown(r0, 0x9)
fcntl$lock(r2, 0x25, &(0x7f0000000040)={0x0, 0x3, 0x6, 0x1ff, r3})
r4 = open(&(0x7f0000000480)='./file0\x00', 0x0, 0x0)
fcntl$lock(r4, 0x24, &(0x7f00000004c0))
fcntl$lock(r1, 0x24, &(0x7f0000000200)={0x2, 0x2, 0x4, 0x80, r3})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2200
remove dir: /root/cephfs-client/dfs-0-520
remove dir time 36
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-521 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-521
receive_execute: 4, 37
receive_execute: 9, 37
receive_execute: 14, 38
receive_execute: 13, 37
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 620, pid 2332, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2332, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2332, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 2332, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2332, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2332, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2332, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2332, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 2332, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 12
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2332, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 52, 8, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13839, flag collect 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1316
----- executor 2 executes write_coverage_signal cov->size 579, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 31870, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 50, 10, 0
----- executor 2 signal number : 1097
----- executor 2 executes write_coverage_signal cov->size 29980, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6796
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 17255, flag collect 0
----- executor 2 signal number : 1278
----- executor 2 executes write_coverage_signal cov->size 21919, flag collect 0
----- executor 2 signal number : 1248
----- executor 2 executes write_coverage_signal cov->size 11788, flag collect 0
before receive testcase: 0 0
time breakdown 1: 46, 10, 0
before receive testcase: 0 1
----- executor 2 signal number : 2783
executor 2 server cover_cnt 8 output_pos_value 14614
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 52
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 10 replies
2023/03/27 12:06:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1316 signal and 0 cover from userspace component
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1097 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 6796 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 41, 15, 0
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1278 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1248 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 2783 signal and 0 cover from userspace component
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 248 fstat fstat
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 9
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
fstat(0xffffffffffffffff, &(0x7f0000000240))
setxattr$security_ima(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000100)=@sha1={0x1, "eeafab93ebc406a00355f680f889a50c75802f32"}, 0x15, 0x1)
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
fremovexattr(r0, &(0x7f00000000c0)=@known='security.selinux\x00')
open$dir(&(0x7f0000000140)='./file0\x00', 0x8280, 0x140)
open(&(0x7f0000000400)='./file0\x00', 0x422083, 0x4a)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x400840, 0x2d)
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x1)
fchown(r1, 0xffffffffffffffff, 0xee01)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1504
remove dir: /root/cephfs-client/dfs-0-521
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-522 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-522
receive_execute: 9, 16
receive_execute: 7, 15
receive_execute: 3, 16
receive_execute: 8, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 2336, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_one time: 0, 1
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 657, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 470
executor 1, execute_one inner time: 0, 0, 0
----- completed 3
execute_one time: 2, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 2336, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 129
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 565, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 3 signal number : 130
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 40
----- completed 8
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2336, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 2, 0
execute_one time: 1, 12
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 14, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26103, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1363
----- executor 2 executes write_coverage_signal cov->size 860, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1053
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 15, 0
----- executor 2 signal number : 7575
----- executor 2 executes write_coverage_signal cov->size 1035, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 8488, flag collect 0
----- executor 2 signal number : 843
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1700
----- executor 2 executes write_coverage_signal cov->size 14271, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3610
time breakdown 1: 22, 18, 0
before receive testcase: 0 0
executor 2 server cover_cnt 9 output_pos_value 16538
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 37
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 9 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
time breakdown 2: 19, 21, 0
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 2 has 9 replies
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1363 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1053 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7575 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 843 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1700 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3610 signal and 0 cover from userspace component
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 248 fstat fstat
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2458 open open
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2458 open open
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 204 fcntl$getflags fcntl$getflags
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 171 dup2 dup2
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2341 lchown lchown
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3761 stat stat
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 16
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fstat(r0, &(0x7f0000000040)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
fcntl$lock(r0, 0x7, &(0x7f0000000a00))
fcntl$lock(r0, 0x24, &(0x7f0000000000)={0x1})
fcntl$getown(0xffffffffffffffff, 0x9)
r3 = open(&(0x7f00000000c0)='.\x00', 0x600640, 0x0)
fcntl$getflags(r3, 0x408)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300))
fcntl$F_SET_RW_HINT(r3, 0x40c, &(0x7f0000000200)=0x4)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
fcntl$lock(r0, 0x7, &(0x7f0000000240)={0x0, 0x3, 0x1, 0xfffffffffffffffd, r4})
r5 = open(&(0x7f0000000100)='./file0\x00', 0x0, 0x52ebaeb7e9d942da)
lchown(&(0x7f00000001c0)='./file0\x00', r1, r2)
r6 = openat(r0, &(0x7f0000000140)='./file0\x00', 0x1712c0, 0x16c)
dup2(r5, r6)
open$dir(&(0x7f0000000180)='./file0\x00', 0x0, 0x154)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2696
remove dir: /root/cephfs-client/dfs-0-522
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-523 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-523
receive_execute: 10, 19
receive_execute: 3, 19
receive_execute: 7, 19
receive_execute: 5, 19
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2340, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2340, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 2340, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 13
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 30
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 29, 14, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14452, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1319
----- executor 2 executes write_coverage_signal cov->size 579, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 30339, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 15, 0
----- executor 2 signal number : 6363
----- executor 2 executes write_coverage_signal cov->size 2670, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 8969, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 593
executor 2 server cover_cnt 6 output_pos_value 8685
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 36
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 6 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1319 signal and 0 cover from userspace component
2023/03/27 12:06:24 [CLIENT] executor 3 has 16 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 6363 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 593 signal and 0 cover from userspace component
time breakdown 2: 22, 17, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 170 dup dup
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 541 ioctl ioctl
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2782 readv readv
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 19
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000440)="b076d6f5e18fb72669d2b06734")
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
fsetxattr(r0, &(0x7f0000000140)=@known='trusted.syz\x00', &(0x7f00000001c0)='\xbe\xe9\x00', 0x3, 0x0)
readv(r0, &(0x7f0000000240)=[{&(0x7f0000000580)=""/75, 0x4b}], 0x1)
fremovexattr(r0, &(0x7f0000000200)=@known='trusted.overlay.metacopy\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0x0)
unlink(&(0x7f0000000000)='./file1\x00')
setxattr$trusted_overlay_origin(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x0)
llistxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=""/63, 0x3f)
truncate(&(0x7f0000000540)='./file0\x00', 0x1)
r1 = dup2(r0, r0)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000480), &(0x7f00000004c0)={'U+', 0x8}, 0x16, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x1)
dup(0xffffffffffffffff)
fstat(r1, &(0x7f0000000680)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000700)='./file1\x00', &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000007c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
setxattr$system_posix_acl(&(0x7f0000000600)='./file0/file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f0000000840)={{}, {0x1, 0x4}, [{0x2, 0x4, r2}, {0x2, 0x6, 0xffffffffffffffff}], {0x4, 0x6}, [{0x8, 0x0, r3}, {0x8, 0x0, 0xffffffffffffffff}, {0x8, 0x3, r4}, {0x8, 0x4}, {0x8, 0x1, 0xffffffffffffffff}], {0x10, 0x6}, {0x20, 0x2}}, 0x5c, 0x2)
lsetxattr$security_ima(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400), &(0x7f0000000500)=ANY=[@ANYBLOB="04320af596597c9f99be8836a51b000000000000003e00"/37], 0x10, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4792
remove dir: /root/cephfs-client/dfs-0-523
remove dir time 8
-----finish removing dir
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-524 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-524
receive_execute: 2, 13
receive_execute: 2, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 5, 14
receive_execute: 3, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2344, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 476
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 180, pid 2344, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 3 signal number : 130
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- completed 3
execute_one loop: 0, 0, 1
execute_one time: 2, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 191, pid 2344, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 3 signal number : 156
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2344, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 17
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 102
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 123, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 123, flag collect 0
----- executor 3 signal number : 12
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 500, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 500, flag collect 0
----- executor 3 signal number : 72
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 465, pid 2344, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 465, flag collect 0
----- executor 3 signal number : 95
----- completed 12
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 2344, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 35
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2344, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 22, 0
execute_one time: 1, 35
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 19, 38, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1344
----- executor 2 executes write_coverage_signal cov->size 1418, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 25628, flag collect 0
----- executor 2 signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 41, 0
before receive testcase: 0 0
----- executor 2 signal number : 8603
----- executor 2 executes write_coverage_signal cov->size 7554, flag collect 0
----- executor 2 signal number : 506
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1221
----- executor 2 executes write_coverage_signal cov->size 23450, flag collect 0
----- executor 2 signal number : 3882
executor 2 server cover_cnt 8 output_pos_value 16686
time breakdown 1: 18, 39, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 57
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 19 replies
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 476 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1344 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 15, 44, 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1035 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 8603 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 506 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1221 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 102 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:06:24 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 72 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3882 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2341 lchown lchown
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3970 unlink unlink
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 122 chown chown
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 9
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x149)
listxattr(&(0x7f0000000300)='./file0\x00', 0x0, 0x0)
lchown(&(0x7f0000000140)='./file0\x00', 0xee00, 0xee01)
chown(&(0x7f0000000340)='./file0\x00', 0xee01, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
open$dir(&(0x7f0000000180)='./file0\x00', 0x101500, 0x20)
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x4, 0x1)
setxattr$trusted_overlay_opaque(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x6)
symlinkat(&(0x7f00000001c0)='./file0/../file0\x00', r0, &(0x7f0000000200)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1560
remove dir: /root/cephfs-client/dfs-0-524
remove dir time 5
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-525 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-525
receive_execute: 8, 7
receive_execute: 6, 7
receive_execute: 3, 7
receive_execute: 6, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 423, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2348, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 15, 4, 0
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1957, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
----- executor 2 executes write_coverage_signal cov->size 340, flag collect 0
----- executor 2 signal number : 240
executor 2 server cover_cnt 4 output_pos_value 3491
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 5, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 6, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 13
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 9 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 2 has 4 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
time breakdown 2: 10, 6, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 258 getdents getdents
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2458 open open
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 7
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f00000002c0)='./file0\x00', 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x1, 0x20)
setxattr$incfs_size(&(0x7f0000000140)='./file0/file0\x00', &(0x7f0000000180), &(0x7f00000001c0)=0x80000001, 0x8, 0x2)
getdents(r0, &(0x7f0000000200)=""/137, 0x89)
setxattr$incfs_metadata(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x400002, 0x108)
open$dir(&(0x7f0000000000)='./file0\x00', 0x800, 0x7e)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1192
remove dir: /root/cephfs-client/dfs-0-525
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 1
-----finish removing dir
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-526 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-526
receive_execute: 3, 2
receive_execute: 2, 2
receive_execute: 2, 2
receive_execute: 2, 2
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 139
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 47
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 5, 5, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4163, flag collect 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11348, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4687
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 12124, flag collect 0
----- executor 2 signal number : 566
executor 2 server cover_cnt 5 output_pos_value 6606
time breakdown 1: 4, 7, 0
before receive testcase: 0 1
time breakdown 2: 4, 7, 0
before receive testcase: 0 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 4, 7, 0
before receive testcase: 0 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 10
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:24 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4687 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 566 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2374 mkdirat mkdirat
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 258 getdents getdents
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 248 fstat fstat
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 6
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000080)='./file0\x00', 0x121040, 0x1c7)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x1, 0x0)
getdents(r1, &(0x7f0000000040)=""/8, 0x8)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x180)
pwritev(r1, &(0x7f00000005c0)=[{&(0x7f0000000440)="0cb7", 0x2}], 0x1, 0xffffffff, 0x0)
fstat(r0, &(0x7f0000000140))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/cephfs-client/dfs-0-526
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-527 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-527
receive_execute: 5, 13
receive_execute: 3, 13
receive_execute: 2, 13
receive_execute: 3, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2354, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2354, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2354, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2354, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 956, pid 2354, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 956, flag collect 0
----- executor 3 signal number : 369
----- completed 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2354, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 0, 0
execute_one time: 2, 18
time breakdown 3: 18, 21, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10722, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14105, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1002
----- executor 2 executes write_coverage_signal cov->size 17048, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
time breakdown 0: 16, 22, 0
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 5596
----- executor 2 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 27665, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
----- executor 2 signal number : 1860
----- executor 2 executes write_coverage_signal cov->size 12917, flag collect 0
----- executor 2 signal number : 3149
executor 2 server cover_cnt 8 output_pos_value 13231
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 38
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 6 replies
2023/03/27 12:06:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1288 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 1: 15, 23, 0
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1002 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5596 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1860 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3149 signal and 0 cover from userspace component
time breakdown 2: 16, 26, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 171 dup2 dup2
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 131 close close
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 248 fstat fstat
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2782 readv readv
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 10
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x2000, 0x9)
readv(0xffffffffffffffff, &(0x7f00000000c0)=[{&(0x7f00000001c0)=""/224, 0xe0}], 0x1)
r1 = open(&(0x7f00000002c0)='./file0\x00', 0x8842, 0x60)
r2 = fcntl$dupfd(r1, 0x0, 0xffffffffffffffff)
fstat(r2, &(0x7f0000000140))
r3 = dup2(r0, 0xffffffffffffffff)
r4 = dup2(0xffffffffffffffff, r3)
close(r4)
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
getxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='system.posix_acl_default\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1320
remove dir: /root/cephfs-client/dfs-0-527
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-528 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-528
receive_execute: 9, 20
receive_execute: 4, 20
receive_execute: 18, 7
receive_execute: 8, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 30
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2357, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
time breakdown 3: 29, 6, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4252, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11968, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5003
----- executor 2 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 547
executor 2 server cover_cnt 5 output_pos_value 7136
time breakdown 2: 24, 8, 0
before receive testcase: 0 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 29
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [CLIENT] executor 3 has 10 replies
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5003 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 547 signal and 0 cover from userspace component
time breakdown 1: 25, 8, 0
before receive testcase: 0 0
time breakdown 0: 28, 7, 0
before receive testcase: 0 1
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 7
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x50500, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r1, &(0x7f0000000140)='./file1\x00')
getdents(r1, &(0x7f0000000280)=""/102, 0x66)
getdents(r0, &(0x7f0000000180)=""/173, 0xad)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file1\x00', &(0x7f0000000240), &(0x7f0000000300), 0x2, 0x3)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1112
remove dir: /root/cephfs-client/dfs-0-528
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 13
executor 3 create dir /root/cephfs-client/dfs-0-529 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-529
receive_execute: 4, 24
receive_execute: 6, 24
receive_execute: 2, 24
receive_execute: 4, 25
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 2360, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 396
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2360, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2360, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 473, pid 2360, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 473, flag collect 0
----- executor 3 signal number : 38
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2360, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 173
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 104, pid 2360, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 104, flag collect 0
----- executor 3 signal number : 58
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 562, pid 2360, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 562, flag collect 0
----- executor 3 signal number : 84
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 1, 8
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17344, flag collect 0
----- executor 2 signal number : 1318
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4939, flag collect 0
----- executor 2 signal number : 981
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 26, 12, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7826
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 13312, flag collect 0
----- executor 2 signal number : 628
----- executor 2 executes write_coverage_signal cov->size 9987, flag collect 0
----- executor 2 signal number : 1670
executor 2 server cover_cnt 8 output_pos_value 12526
time breakdown 3: 30, 10, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 41
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1318 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 981 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7826 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 28, 16, 0
before receive testcase: 0 0
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 628 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1670 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 396 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 173 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 5
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r1 = dup(r0)
write$binfmt_elf64(r1, &(0x7f0000000100)={{0x7f, 0x45, 0x4c, 0x46, 0x2, 0x5, 0x29, 0xfc, 0x6, 0x3, 0x6, 0x0, 0xa3, 0x40, 0x16a, 0x200, 0x3, 0x38, 0x1, 0x22f, 0x1f, 0xfb}, [{0x2, 0x80, 0x5, 0x1, 0x3, 0x4, 0x4, 0x528}, {0x7, 0x8000, 0x3, 0x3ff, 0xff, 0x400, 0x3, 0x200}], "961b37b54e7949c7b305cb7139052bd57e669b237e776fbd698c0ffd133df5e52a0ce31e67f6181f8a98d9b34a8e554cfc4630fb729c165917618b466cea6604980bf8dad4e840cb36cfe81bad5c6455a9223ec473ad5615999276cf38c16f7b1b32f9dbb1dd5823943ecfcc1d48a2048c1e511afa5574e84b99515227cfa7342e4a5e2255b2490fd5a49a8a36c9a5bcc074bf3a72cd78cc39f2ccc2e247d5f17275ef12412ece304ddda16b5aa7e7779570dc48b80aa05d50e1c64a18bbcff2d8618814165e6cca174c38b3", ['\x00']}, 0x27c)
close(r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2568
remove dir: /root/cephfs-client/dfs-0-529
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-530 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-530
receive_execute: 9, 13
receive_execute: 3, 13
receive_execute: 7, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
receive_execute: 7, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 5, 0
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 4109, flag collect 0
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11368, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 4688
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
----- executor 2 signal number : 521
executor 2 server cover_cnt 5 output_pos_value 6568
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 16, 8, 0
before receive testcase: 0 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 22
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 4688 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
2023/03/27 12:06:24 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:24 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 21, 5, 0
before receive testcase: 0 1
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- mutateArg()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2462 openat openat
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 7
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0, 0x10)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file1\x00')
r0 = open(&(0x7f0000000500)='./file0\x00', 0x30440, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000580)='./file0\x00', &(0x7f0000000440), &(0x7f0000000180)=ANY=[@ANYRESDEC, @ANYRES32=0x0, @ANYRES16, @ANYRES64, @ANYRES32=r0, @ANYRES64=r0, @ANYBLOB="2dd8e800002082585121740700a946e5a2", @ANYRES64, @ANYRES16=r0], 0x5c, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0, 0x0, 0x3)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
stat(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1744
remove dir: /root/cephfs-client/dfs-0-530
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-531 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-531
receive_execute: 6, 14
receive_execute: 6, 14
receive_execute: 3, 14
receive_execute: 5, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 473, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 473, flag collect 0
----- executor 3 signal number : 140
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 637, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 637, flag collect 0
----- executor 3 signal number : 160
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 99
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 421, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 421, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 554, pid 2366, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 554, flag collect 0
----- executor 3 signal number : 29
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 15, 5, 0
execute_one time: 1, 20
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 22, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27329, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1321
----- executor 2 executes write_coverage_signal cov->size 1215, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15150, flag collect 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1002
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 19, 23, 0
----- executor 2 signal number : 7908
----- executor 2 executes write_coverage_signal cov->size 1072, flag collect 0
----- executor 2 signal number : 299
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 20, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 1228
----- executor 2 executes write_coverage_signal cov->size 22918, flag collect 0
----- executor 2 signal number : 3738
executor 2 server cover_cnt 8 output_pos_value 15591
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 41
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:06:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1321 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1002 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 7908 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 299 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1228 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3738 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
time breakdown 2: 17, 27, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 220 flock flock
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 16
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
ftruncate(0xffffffffffffffff, 0x7ff)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file0\x00', 0x171942, 0x2)
fsetxattr$security_ima(r0, &(0x7f00000002c0), &(0x7f0000000300)=@ng={0x4, 0x7}, 0x2, 0x0)
sync()
sync()
r1 = fcntl$dupfd(r0, 0x0, r0)
flock(r1, 0xb)
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x180)
open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
sync()
setxattr$incfs_size(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=0x6618, 0x8, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=@known='trusted.overlay.redirect\x00', &(0x7f0000000240)=""/43, 0x2b)
open(&(0x7f0000000480)='./file0\x00', 0x2, 0x40)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2000
remove dir: /root/cephfs-client/dfs-0-531
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-532 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-532
receive_execute: 9, 13
receive_execute: 4, 12
receive_execute: 8, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 8, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 546, pid 2370, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 546, flag collect 0
----- executor 3 signal number : 299
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 2370, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2370, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2370, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 2370, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 750, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 750, flag collect 0
----- executor 3 signal number : 209
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 853, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 853, flag collect 0
----- executor 3 signal number : 52
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 499, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 499, flag collect 0
----- executor 3 signal number : 10
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 375, pid 2370, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 375, flag collect 0
----- executor 3 signal number : 9
----- completed 13
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 56
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 215, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 3 signal number : 13
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 2370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 31
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 10, 0
execute_one time: 0, 26
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 30, 0
before receive testcase: 0 0
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1404
----- executor 2 executes write_coverage_signal cov->size 1273, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 20, 30, 0
time breakdown 3: 22, 28, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 signal number : 5960
----- executor 2 executes write_coverage_signal cov->size 367, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 3767, flag collect 0
----- executor 2 signal number : 371
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1872
----- executor 2 executes write_coverage_signal cov->size 31590, flag collect 0
----- executor 2 signal number : 6027
2023/03/27 12:06:24 for select break: 1
2023/03/27 12:06:24 --------- executor 2 receive reply, reply.done 1
executor 2 server cover_cnt 9 output_pos_value 16901
2023/03/27 12:06:24 wg wait finish
2023/03/27 12:06:24 ------ all executors finish execution
2023/03/27 12:06:24 exec time: 48
2023/03/27 12:06:24 ----- PS len: 4
2023/03/27 12:06:24 [CLIENT] executor 3 has 16 replies
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 299 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 209 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:24 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:24 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 12:06:24 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 12:06:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1035 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 5960 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 371 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 1872 signal and 0 cover from userspace component
2023/03/27 12:06:24 ------- fuzzer executor 2 receive 6027 signal and 0 cover from userspace component
time breakdown 2: 16, 36, 0
before receive testcase: 0 0
2023/03/27 12:06:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:24 ----- no new client coverage: false, true
2023/03/27 12:06:24 mutate testcase with failures
2023/03/27 12:06:24 ----- splice()
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2374 mkdirat mkdirat
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 171 dup2 dup2
2023/03/27 12:06:24 ----- insertCall()
2023/03/27 12:06:24 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/27 12:06:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:24 prog length: 10
2023/03/27 12:06:24 HasCrashFail:false HasNetFail:false
12:06:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file0\x00', 0x1, 0x191)
dup2(r0, 0xffffffffffffffff)
open(&(0x7f0000000780)='./file1\x00', 0x12040, 0x0)
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
lsetxattr$security_smack_transmute(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x4, 0x3)
r1 = open$dir(&(0x7f0000000080)='./file0\x00', 0x101000, 0x52)
mkdirat(r1, &(0x7f00000000c0)='./file0\x00', 0x34)
chmod(&(0x7f0000000000)='./file0\x00', 0x0)
r2 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xace02, 0x0)
read(r2, &(0x7f0000000000)=""/115, 0x73)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-532
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-533 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-533
receive_execute: 11, 13
receive_execute: 4, 13
receive_execute: 9, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 224
----- completed 3
execute_one loop: 0, 0, 1
receive_execute: 9, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 61
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 526, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 526, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 13
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 165, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 165, flag collect 0
----- executor 3 signal number : 44
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1106, pid 2375, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1106, flag collect 0
----- executor 3 signal number : 197
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 949, pid 2375, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 949, flag collect 0
----- executor 3 signal number : 623
----- completed 10
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 1, 0
execute_one time: 0, 24
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24725, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 26, 0
time breakdown 3: 24, 25, 0
before receive testcase: 0 0
time breakdown 1: 22, 26, 0
before receive testcase: 0 0
----- executor 2 signal number : 1311
----- executor 2 executes write_coverage_signal cov->size 4424, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1076
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7718
----- executor 2 executes write_coverage_signal cov->size 3125, flag collect 0
----- executor 2 signal number : 374
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2619
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1897
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1178
----- executor 2 executes write_coverage_signal cov->size 20921, flag collect 0
----- executor 2 signal number : 4458
----- executor 2 executes write_coverage_signal cov->size 382, flag collect 0
----- executor 2 signal number : 12
executor 2 server cover_cnt 11 output_pos_value 20749
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 50
2023/03/27 12:06:25 ----- PS len: 4
time breakdown 2: 17, 37, 0
2023/03/27 12:06:25 [CLIENT] executor 3 has 10 replies
2023/03/27 12:06:25 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 224 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 12:06:25 [SERVER] executor 2 has 11 replies
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1311 signal and 0 cover from userspace component
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 44 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 197 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1076 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 623 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 7718 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 374 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 2619 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1897 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1178 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 4458 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- no new client coverage: false, true
2023/03/27 12:06:25 mutate testcase with failures
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:06:25 ----- mutateArg()
2023/03/27 12:06:25 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:25 prog length: 14
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x38041, 0x12)
fstat(r0, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000300)='./file0/file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fchown(r0, r1, r2)
symlink(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)='./file0\x00')
r3 = openat(r0, &(0x7f0000000040)='./file0\x00', 0x101000, 0x190)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
removexattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100)=@known='security.selinux\x00')
r4 = open$dir(&(0x7f0000000080)='./file0\x00', 0x8002, 0x80)
fcntl$lock(r4, 0x26, &(0x7f0000000100)={0x0, 0x0, 0x2})
r5 = dup2(r4, r3)
fcntl$setstatus(r5, 0x4, 0x42400)
open$dir(&(0x7f0000000240)='./file0/file0\x00', 0x40, 0x10)
fcntl$dupfd(r4, 0x0, r4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2216
remove dir: /root/cephfs-client/dfs-0-533
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 33
-----finish removing dir
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-534 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-534
receive_execute: 5, 40
receive_execute: 17, 40
receive_execute: 16, 40
receive_execute: 16, 40
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 621, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 98
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 687, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 687, flag collect 0
----- executor 3 signal number : 168
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2378, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 36
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2378, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2378, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2378, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 1
execute_one time: 0, 10
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 21261, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1382
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1126
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:25 for select break: 1
time breakdown 0: 56, 13, 0
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 8569
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 31458, flag collect 0
time breakdown 3: 57, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 2012
----- executor 2 executes write_coverage_signal cov->size 15645, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 786
----- executor 2 executes write_coverage_signal cov->size 2728, flag collect 0
----- executor 2 signal number : 1015
executor 2 server cover_cnt 9 output_pos_value 14996
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 45, 16, 0
before receive testcase: 0 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 56
2023/03/27 12:06:25 ----- PS len: 4
2023/03/27 12:06:25 [CLIENT] executor 3 has 14 replies
2023/03/27 12:06:25 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 2 has 9 replies
time breakdown 1: 56, 17, 0
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1382 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1126 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 8569 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 2012 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 786 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1015 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- no new client coverage: false, true
2023/03/27 12:06:25 ----- enqueue testcases with server coveraged
2023/03/27 12:06:25 prog length: 14
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x38041, 0x12)
fstat(r0, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000300)='./file0/file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fchown(r0, r1, r2)
symlink(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)='./file0\x00')
r3 = openat(r0, &(0x7f0000000040)='./file0\x00', 0x101000, 0x190)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
removexattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100)=@known='security.selinux\x00')
r4 = open$dir(&(0x7f0000000080)='./file0\x00', 0x8002, 0x80)
fcntl$lock(r4, 0x26, &(0x7f0000000100)={0x0, 0x0, 0x2})
r5 = dup2(r4, r3)
fcntl$setstatus(r5, 0x4, 0x42400)
open$dir(&(0x7f0000000240)='./file0/file0\x00', 0x40, 0x10)
fcntl$dupfd(r4, 0x0, r4)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2216
remove dir: /root/cephfs-client/dfs-0-534
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 14
executor 3 create dir /root/cephfs-client/dfs-0-535 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-535
receive_execute: 12, 36
receive_execute: 5, 37
receive_execute: 10, 36
receive_execute: 7, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 617, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 617, flag collect 1
----- executor 3 cover number : 472, signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2383, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 1
----- executor 3 cover number : 56, signal number : 31
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2383, write pid:-2127102047
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 1
----- executor 3 cover number : 56, signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2383, write pid:-2127102047
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 1
----- executor 3 cover number : 56, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 1
----- executor 3 cover number : 326, signal number : 99
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 1
----- executor 3 cover number : 451, signal number : 168
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2383, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 1
----- executor 3 cover number : 275, signal number : 36
----- completed 10
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2383, write pid:-2126981270
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2383, write pid:-2126981270
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 1
----- executor 3 cover number : 56, signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2383, write pid:-2127102047
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 19, 0
execute_one time: 1, 19
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 48, 22, 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15899, flag collect 1
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 46, 23, 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
----- executor 2 cover number : 1096, signal number : 1378
----- executor 2 executes write_coverage_signal cov->size 610, flag collect 1
----- executor 2 cover number : 64, signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
before receive testcase: 0 0
time breakdown 1: 42, 23, 0
before receive testcase: 0 0
----- executor 2 cover number : 1169, signal number : 1075
----- executor 2 executes write_coverage_signal cov->size 32543, flag collect 1
----- executor 2 cover number : 6254, signal number : 8716
----- executor 2 executes write_coverage_signal cov->size 1389, flag collect 1
----- executor 2 cover number : 260, signal number : 301
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 26724, flag collect 1
----- executor 2 cover number : 661, signal number : 1126
----- executor 2 executes write_coverage_signal cov->size 28486, flag collect 1
----- executor 2 cover number : 1463, signal number : 1275
----- executor 2 executes write_coverage_signal cov->size 7359, flag collect 1
----- executor 2 cover number : 1733, signal number : 1581
executor 2 server cover_cnt 9 output_pos_value 28256
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 85
2023/03/27 12:06:25 ----- PS len: 4
2023/03/27 12:06:25 [CLIENT] executor 3 has 14 replies
2023/03/27 12:06:25 fuzzer receive 498 signal and 472 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 43, 49, 0
before receive testcase: 0 0
2023/03/27 12:06:25 fuzzer receive 31 signal and 56 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:25 fuzzer receive 0 signal and 56 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1378 signal and 1096 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 56 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 99 signal and 326 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 168 signal and 451 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 69 signal and 64 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1075 signal and 1169 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 8716 signal and 6254 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 301 signal and 260 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1126 signal and 661 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 36 signal and 275 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1275 signal and 1463 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1581 signal and 1733 cover from userspace component
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 56 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- triage return due to empty signal extra
2023/03/27 12:06:25 mutate testcase with failures
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 2343 link link
2023/03/27 12:06:25 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:25 prog length: 2
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs2\x00', 0x1ff)
link(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/cephfs-client/dfs-0-535
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-536 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-536
receive_execute: 31, 15
receive_execute: 4, 15
receive_execute: 29, 15
receive_execute: 29, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 515, pid 2385, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 405
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2385, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 46, 3, 0
executor 2 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 4168, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 195, flag collect 0
----- executor 2 signal number : 65
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 2785, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 11330, flag collect 0
----- executor 2 signal number : 4668
2023/03/27 12:06:25 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 8740, flag collect 0
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 44, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 561
executor 2 server cover_cnt 5 output_pos_value 6892
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 19, 6, 0
before receive testcase: 0 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 22
2023/03/27 12:06:25 ----- PS len: 4
2023/03/27 12:06:25 [CLIENT] executor 3 has 2 replies
2023/03/27 12:06:25 fuzzer receive 405 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 2 has 5 replies
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 4668 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 561 signal and 0 cover from userspace component
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- no new client coverage: false, true
2023/03/27 12:06:25 mutate testcase with failures
2023/03/27 12:06:25 ----- mutateArg()
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 2458 open open
2023/03/27 12:06:25 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:25 prog length: 5
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
r1 = open(&(0x7f0000000040)='./file1\x00', 0x402, 0x8c)
open(&(0x7f0000000100)='./file1\x00', 0x208a520ef6463fd8, 0x2)
fcntl$lock(r1, 0x25, &(0x7f0000000080)={0x0, 0x4, 0x7, 0x3ff, 0xffffffffffffffff})
write$binfmt_misc(r0, &(0x7f0000000000)=ANY=[@ANYRESDEC=r0], 0x400000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/cephfs-client/dfs-0-536
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 44, 7, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 11
executor 3 create dir /root/cephfs-client/dfs-0-537 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-537
receive_execute: 3, 50
receive_execute: 4, 51
receive_execute: 6, 50
receive_execute: 2, 51
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 2387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2387, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 84650, pid 2387, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 84650, flag collect 0
----- executor 3 signal number : 910
----- completed 5
execute_one loop: 0, 0, 29
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 30, 5, 0
execute_one time: 1, 35
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18685, flag collect 0
----- executor 2 signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 28553, flag collect 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 55, 39, 0
before receive testcase: 0 1
time breakdown 3: 56, 37, 0
before receive testcase: 0 0
----- executor 2 signal number : 6017
----- executor 2 executes write_coverage_signal cov->size 1121, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 53, 38, 0
before receive testcase: 0 1
----- executor 2 signal number : 1469
----- executor 2 executes write_coverage_signal cov->size 28485, flag collect 0
----- executor 2 signal number : 1302
----- executor 2 executes write_coverage_signal cov->size 6281, flag collect 0
----- executor 2 signal number : 1595
executor 2 server cover_cnt 9 output_pos_value 13096
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 96
2023/03/27 12:06:25 ----- PS len: 4
2023/03/27 12:06:25 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:25 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 2 has 9 replies
2023/03/27 12:06:25 fuzzer receive 910 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1288 signal and 0 cover from userspace component
time breakdown 2: 53, 45, 0
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1035 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 6017 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1469 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1302 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1595 signal and 0 cover from userspace component
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- no new client coverage: false, true
2023/03/27 12:06:25 mutate testcase with failures
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 248 fstat fstat
2023/03/27 12:06:25 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:25 prog length: 5
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
fstat(r0, &(0x7f0000000000))
r1 = dup(r0)
lseek(r1, 0x0, 0x0)
fcntl$setstatus(r1, 0x4, 0x2800)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 552
remove dir: /root/cephfs-client/dfs-0-537
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-538 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-538
receive_execute: 3, 12
receive_execute: 10, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
receive_execute: 12, 14
receive_execute: 10, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2390, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2390, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2390, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 2390, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2390, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 26, 6, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4294, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11574, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 6775
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 8, 0
before receive testcase: 0 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 10, 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 23
2023/03/27 12:06:25 ----- PS len: 4
2023/03/27 12:06:25 [CLIENT] executor 3 has 5 replies
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 2 has 4 replies
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
time breakdown 2: 15, 11, 0
2023/03/27 12:06:25 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 12:06:25 mutate testcase with failures
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/27 12:06:25 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:25 prog length: 2
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000001140)=ANY=[@ANYBLOB=""], 0x1009, 0x3)
openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x108840, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4656
remove dir: /root/cephfs-client/dfs-0-538
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 11
executor 3 create dir /root/cephfs-client/dfs-0-539 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-539
receive_execute: 2, 35
receive_execute: 6, 35
receive_execute: 3, 36
receive_execute: 4, 36
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2393, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 653, pid 2393, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 653, flag collect 0
----- executor 3 signal number : 469
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 41, 4, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4420, flag collect 0
----- executor 2 signal number : 1274
----- executor 2 executes write_coverage_signal cov->size 226, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 3969, flag collect 0
----- executor 2 signal number : 495
----- executor 2 executes write_coverage_signal cov->size 11500, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4883
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 12008, flag collect 0
----- executor 2 signal number : 1438
executor 2 server cover_cnt 6 output_pos_value 8184
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 6, 0
before receive testcase: 0 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 40, 7, 0
before receive testcase: 0 0
2023/03/27 12:06:25 for select break: 1
2023/03/27 12:06:25 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:06:25 wg wait finish
2023/03/27 12:06:25 ------ all executors finish execution
2023/03/27 12:06:25 exec time: 47
2023/03/27 12:06:25 ----- PS len: 4
2023/03/27 12:06:25 [CLIENT] executor 3 has 2 replies
2023/03/27 12:06:25 [SERVER] executor 0 has 0 replies
2023/03/27 12:06:25 [SERVER] executor 1 has 0 replies
2023/03/27 12:06:25 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:06:25 fuzzer receive 469 signal and 0 cover from executor 3
2023/03/27 12:06:25 [SERVER] executor 2 has 6 replies
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1274 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 37, 11, 0
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 495 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 4883 signal and 0 cover from userspace component
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:06:25 ------- fuzzer executor 2 receive 1438 signal and 0 cover from userspace component
2023/03/27 12:06:25 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:06:25 ----- no new client coverage: false, true
2023/03/27 12:06:25 mutate testcase with failures
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 2341 lchown lchown
2023/03/27 12:06:25 ----- insertCall()
2023/03/27 12:06:25 ----- generateCall 2458 open open
2023/03/27 12:06:25 ----- mutateArg()
2023/03/27 12:06:25 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:06:25 prog length: 10
2023/03/27 12:06:25 HasCrashFail:false HasNetFail:false
12:06:25 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file0\x00', 0x121040, 0x0)
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000080)='./file0\x00', r1, 0xffffffffffffffff)
r2 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r3 = fcntl$dupfd(r0, 0x406, r2)
flock(r3, 0x2)
flock(r2, 0x1)
fcntl$lock(r3, 0x24, &(0x7f0000000040)={0x0, 0x3, 0x7ff, 0x1, 0xffffffffffffffff})
open(&(0x7f0000000180)='./file0\x00', 0x341a00, 0x1)
flock(r2, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1456
remove dir: /root/cephfs-client/dfs-0-539
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-540 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-540
receive_execute: 8, 24
receive_execute: 2, 23
receive_execute: 7, 23
receive_execute: 6, 23
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2395, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2395, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2395, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2395, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2395, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2395, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 111
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2395, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2395, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 219, pid 2395, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 219, flag collect 0
----- executor 3 signal number : 1
----- completed 9
----- executor 3 write_call_output, size 224, pid 2395, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 0
----- completed 10
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83336, 51, 1
execute_one time: 0, 83388
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 32, 83390, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1523
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 29, 83391, 0
before receive testcase: 0 0
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1192
----- executor 2 executes write_coverage_signal cov->size 20089, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 688
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 30, 83392, 0
before receive testcase: 0 0
----- executor 2 signal number : 6765
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 765
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4894
----- executor 2 executes write_coverage_signal cov->size 29320, flag collect 0
----- executor 2 signal number : 1813
----- executor 2 executes write_coverage_signal cov->size 2461, flag collect 0
----- executor 2 signal number : 170
----- executor 2 executes write_coverage_signal cov->size 4108, flag collect 0
----- executor 2 signal number : 327
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 492
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1703
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1248
----- executor 2 executes write_coverage_signal cov->size 30944, flag collect 0
----- executor 2 signal number : 4434
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 11
executor 2 server cover_cnt 17 output_pos_value 26204
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:48 wg wait finish
2023/03/27 12:07:48 ------ all executors finish execution
2023/03/27 12:07:48 exec time: 83424
2023/03/27 12:07:48 ----- PS len: 4
2023/03/27 12:07:48 [CLIENT] executor 3 has 10 replies
time breakdown 2: 26, 83400, 0
2023/03/27 12:07:48 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:48 [SERVER] executor 2 has 17 replies
before receive testcase: 0 0
2023/03/27 12:07:48 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1523 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1192 signal and 0 cover from userspace component
2023/03/27 12:07:48 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 688 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 6765 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 765 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 4894 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1813 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 170 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 327 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1703 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1248 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 4434 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/27 12:07:48 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:48 ----- no new client coverage: false, true
2023/03/27 12:07:48 mutate testcase with failures
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 258 getdents getdents
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 171 dup2 dup2
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 198 fcntl$F_GET_FILE_RW_HINT fcntl$F_GET_FILE_RW_HINT
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 12:07:48 ----- mutateArg()
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 248 fstat fstat
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- mutateArg()
2023/03/27 12:07:48 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:48 prog length: 20
2023/03/27 12:07:48 HasCrashFail:false HasNetFail:false
12:07:48 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x10001, 0x0)
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r2 = fcntl$dupfd(r0, 0x0, r1)
fstat(r2, &(0x7f0000000780))
setxattr$security_evm(&(0x7f0000000240)='./file1\x00', &(0x7f0000000800), &(0x7f00000003c0)=ANY=[@ANYRESDEC=r2], 0x98, 0x1)
r3 = dup(r1)
symlinkat(&(0x7f00000001c0)='./file1\x00', r3, &(0x7f0000000200)='./file1\x00')
r4 = dup2(r1, r1)
mkdirat(r4, &(0x7f0000000280)='./file0\x00', 0x0)
getdents(r1, &(0x7f0000000100)=""/171, 0xab)
getdents(r0, &(0x7f00000002c0)=""/133, 0x85)
fstat(r4, &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, <r5=>0x0, <r6=>0x0})
lsetxattr$system_posix_acl(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500)='system.posix_acl_access\x00', &(0x7f00000005c0)={{}, {0x1, 0x4}, [], {0x4, 0x1}, [{0x8, 0x1, 0xee01}, {0x8, 0x0, 0xee01}, {0x8, 0x0, r6}], {0x10, 0x3}, {0x20, 0x6}}, 0x3c, 0x2)
r7 = open(&(0x7f0000000080)='./file0\x00', 0x101003, 0x0)
dup2(r3, r7)
fcntl$F_GET_FILE_RW_HINT(r3, 0x40d, &(0x7f0000000480))
lsetxattr$trusted_overlay_opaque(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700), &(0x7f0000000740), 0x2, 0x0)
r8 = open(&(0x7f0000000600)='./file1\x00', 0xc2, 0x88)
fsetxattr$security_capability(r8, &(0x7f0000000640), &(0x7f0000000680)=@v3={0x3000000, [{0x800, 0x7}, {0x4, 0x7}], r5}, 0x18, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4304
remove dir: /root/cephfs-client/dfs-0-540
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-541 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-541
receive_execute: 17, 12
receive_execute: 7, 12
receive_execute: 16, 12
receive_execute: 16, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 511, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 108
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 84
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 126
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 433, pid 2401, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 3 signal number : 117
----- completed 11
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 42, pid 2401, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 3 signal number : 23
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 771, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 771, flag collect 0
----- executor 3 signal number : 87
----- completed 14
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 4
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2401, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 4, 0
execute_one time: 1, 22
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 29, 25, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30670, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 25, 0
----- executor 2 signal number : 1365
----- executor 2 executes write_coverage_signal cov->size 1156, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 21264, flag collect 0
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 26, 0
before receive testcase: 0 0
----- executor 2 signal number : 1014
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7808
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1041
----- executor 2 executes write_coverage_signal cov->size 29542, flag collect 0
----- executor 2 signal number : 4718
executor 2 server cover_cnt 7 output_pos_value 16039
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:48 wg wait finish
2023/03/27 12:07:48 ------ all executors finish execution
2023/03/27 12:07:48 exec time: 45
2023/03/27 12:07:48 ----- PS len: 4
2023/03/27 12:07:48 [CLIENT] executor 3 has 20 replies
2023/03/27 12:07:48 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 12:07:48 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:48 [SERVER] executor 2 has 7 replies
2023/03/27 12:07:48 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1365 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1014 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 7808 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1041 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 4718 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:48 ----- no new client coverage: false, true
2023/03/27 12:07:48 mutate testcase with failures
2023/03/27 12:07:48 ----- insertCall()
2023/03/27 12:07:48 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 12:07:48 ----- mutateArg()
2023/03/27 12:07:48 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:48 prog length: 20
2023/03/27 12:07:48 HasCrashFail:false HasNetFail:false
12:07:48 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
stat(&(0x7f0000000540)='./file1/file0/file0\x00', &(0x7f0000000780))
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:ldconfig_exec_t:s0\x00', 0x25, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000001200)='./file0\x00', &(0x7f0000001240), 0x0, 0x0, 0x0)
mkdir(&(0x7f0000000000)='./file0/file0\x00', 0x1ce)
stat(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
rename(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000500)='./file1/file0\x00')
fstat(0xffffffffffffffff, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f00000003c0)='\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$trusted_overlay_opaque(&(0x7f0000000580)='./file1/file0/file0\x00', &(0x7f0000000800), &(0x7f0000000840), 0x2, 0x4)
r3 = open$dir(&(0x7f00000005c0)='./file0\x00', 0x100, 0x1c)
fcntl$getownex(r3, 0x10, &(0x7f0000000600))
stat(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
setxattr$system_posix_acl(&(0x7f0000000200)='./file0/file0\x00', &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f0000000700)=ANY=[@ANYBLOB="02000000010001000000000002000300", @ANYRES32=r0, @ANYBLOB="02000500", @ANYRES32, @ANYBLOB="02000000", @ANYRES32=0xee00, @ANYBLOB="040002000000000008000100", @ANYRES32=r1, @ANYBLOB="08000100", @ANYRES32, @ANYBLOB="08000200", @ANYRES32=0x0, @ANYBLOB="08000300", @ANYRES32=0x0, @ANYBLOB="00000000ff93bf93271a5e474047f80000000000", @ANYRES32=r2, @ANYBLOB="08000200", @ANYRES32=r4, @ANYBLOB="10000300000000002000030000000000"], 0x6c, 0x3)
unlink(&(0x7f0000000080)='./file0/file0\x00')
removexattr(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000480)=ANY=[@ANYBLOB="bbec39eec96594c6a2b7decf94a106e618c2721bc3a0023c75752344ff"])
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4168
remove dir: /root/cephfs-client/dfs-0-541
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 20, 31, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-542 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-542
receive_execute: 3, 16
receive_execute: 10, 16
receive_execute: 9, 15
receive_execute: 9, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 221, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 221, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 757, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 757, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 462, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 462, flag collect 0
----- executor 3 signal number : 100
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 6
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 724, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 724, flag collect 0
----- executor 3 signal number : 73
----- completed 9
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 23
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 826, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 826, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 221, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 221, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 47
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 2406, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 20, 0
execute_one time: 0, 46
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1343
----- executor 2 executes write_coverage_signal cov->size 1853, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 24, 49, 0
before receive testcase: 0 0
time breakdown 0: 25, 49, 0
before receive testcase: 0 0
----- executor 2 signal number : 1017
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 26, 48, 0
before receive testcase: 0 0
----- executor 2 signal number : 6951
----- executor 2 executes write_coverage_signal cov->size 16072, flag collect 0
----- executor 2 signal number : 610
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1552
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6021
executor 2 server cover_cnt 8 output_pos_value 17590
2023/03/27 12:07:48 for select break: 1
2023/03/27 12:07:48 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:48 wg wait finish
2023/03/27 12:07:48 ------ all executors finish execution
2023/03/27 12:07:48 exec time: 72
2023/03/27 12:07:48 ----- PS len: 4
2023/03/27 12:07:48 [CLIENT] executor 3 has 20 replies
2023/03/27 12:07:48 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:48 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:48 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:48 [SERVER] executor 2 has 8 replies
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1343 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1017 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 6951 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 610 signal and 0 cover from userspace component
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 1552 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/27 12:07:48 ------- fuzzer executor 2 receive 6021 signal and 0 cover from userspace component
2023/03/27 12:07:48 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:07:48 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 19, 56, 0
before receive testcase: 0 0
2023/03/27 12:07:48 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:48 ----- no new client coverage: false, true
2023/03/27 12:07:48 mutate testcase with failures
2023/03/27 12:07:48 ----- mutateArg()
2023/03/27 12:07:48 ----- mutateArg()
2023/03/27 12:07:48 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:48 prog length: 19
2023/03/27 12:07:48 HasCrashFail:false HasNetFail:false
12:07:48 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(0x0, &(0x7f0000000240), 0x0, 0x0, 0x4)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
mkdir(&(0x7f0000000400)='./file4\x00', 0x8b)
open(&(0x7f0000000280)='./file3\x00', 0x48400, 0x0)
r0 = open$dir(&(0x7f0000000700)='./file2\x00', 0x200000, 0x86)
fcntl$setsig(r0, 0xa, 0x10000002f)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
lsetxattr$security_selinux(&(0x7f0000000040)='./file2\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:agp_device_t:s0\x00', 0x22, 0x2)
link(0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
r1 = open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x4)
listxattr(&(0x7f00000004c0)='./file2\x00', &(0x7f0000000500)=""/161, 0xa1)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file2\x00')
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
mkdir(&(0x7f0000000300)='./file4\x00', 0x100)
symlinkat(&(0x7f0000000640)='./file3\x00', r1, &(0x7f00000006c0)='./file4\x00')
setxattr$security_ima(&(0x7f0000000340)='./file3\x00', &(0x7f0000000380), &(0x7f00000003c0)=@sha1={0x1, "92ab0cb66e07c390e73891ba9724cf1bf0a2d7e4"}, 0x15, 0x3)
open$dir(&(0x7f0000000680)='./file2\x00', 0x20000, 0x158)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3048
remove dir: /root/cephfs-client/dfs-0-542
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 11, 19
receive_execute: 17, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 18, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
remove dir time 18
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-543 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-543
receive_execute: 19, 19
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 111
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 682, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 682, flag collect 0
----- executor 3 signal number : 59
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2409, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 55
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 10, 13, 0
execute_one time: 1, 23
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 38, 25, 0
----- executor 2 executes write_coverage_signal cov->size 2763, flag collect 0
----- executor 2 signal number : 1378
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1060
----- executor 2 executes write_coverage_signal cov->size 1497, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 37, 27, 0
before receive testcase: 0 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 715
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7262
----- executor 2 executes write_coverage_signal cov->size 10757, flag collect 0
----- executor 2 signal number : 2039
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 425
----- executor 2 executes write_coverage_signal cov->size 4873, flag collect 0
----- executor 2 signal number : 434
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 945
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 37, 27, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 7096
executor 2 server cover_cnt 11 output_pos_value 21461
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 52
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 19 replies
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 11 replies
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1378 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1060 signal and 0 cover from userspace component
time breakdown 2: 30, 32, 0
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 715 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 7262 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 2039 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 425 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 434 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 945 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 7096 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 29 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 12
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
fsetxattr(r0, &(0x7f0000000140)=@known='trusted.syz\x00', &(0x7f00000001c0)='\xbe\xe9\x00', 0x3, 0x0)
fremovexattr(r0, &(0x7f0000000200)=@known='trusted.overlay.metacopy\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0x0)
unlink(&(0x7f0000000240)='./file0\x00')
setxattr$trusted_overlay_origin(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x0)
llistxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=""/63, 0x3f)
truncate(&(0x7f0000000500)='./file1\x00', 0x9)
r1 = dup2(r0, r0)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000480), &(0x7f00000004c0)={'U+', 0x8}, 0x16, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400), &(0x7f0000000440)=ANY=[@ANYBLOB="041098e325f82b53a747df0000004e"], 0x10, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2320
remove dir: /root/cephfs-client/dfs-0-543
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-544 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-544
receive_execute: 9, 16
receive_execute: 3, 16
receive_execute: 8, 16
receive_execute: 9, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 180, pid 2414, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 3 signal number : 130
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2414, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 17
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 102
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 495, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 495, flag collect 0
----- executor 3 signal number : 54
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 435, pid 2414, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 435, flag collect 0
----- executor 3 signal number : 130
----- completed 10
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 3, 0
execute_one time: 1, 11
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 13, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 14, 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 25, 14, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27947, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 961, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17696, flag collect 0
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8100
----- executor 2 executes write_coverage_signal cov->size 2258, flag collect 0
----- executor 2 signal number : 375
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1833
----- executor 2 executes write_coverage_signal cov->size 16204, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3431
executor 2 server cover_cnt 8 output_pos_value 16213
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 35
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
time breakdown 2: 19, 19, 0
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 8 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 8100 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 375 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1833 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 3431 signal and 0 cover from userspace component
2023/03/27 12:07:49 [CLIENT] executor 3 has 12 replies
2023/03/27 12:07:49 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2809 rename rename
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2373 mkdir mkdir
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 10
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file0\x00', 0x69779dcc6f08534d)
r0 = open$dir(&(0x7f00000001c0)='./file4\x00', 0x0, 0x10a)
fcntl$lock(r0, 0x26, &(0x7f0000000280)={0x0, 0x3, 0x9, 0x2000000000000000})
rename(0x0, 0x0)
mkdir(&(0x7f0000000240)='./file1\x00', 0x74)
mkdir(&(0x7f0000000000)='./file0\x00', 0x0)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
rename(&(0x7f0000000180)='./file0/file0\x00', &(0x7f0000000140)='./file0/file0\x00')
rename(&(0x7f0000000040)='./file4\x00', &(0x7f00000000c0)='./file0/file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
remove dir: /root/cephfs-client/dfs-0-544
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-545 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-545
receive_execute: 11, 5
receive_execute: 9, 5
receive_execute: 4, 6
receive_execute: 8, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 111
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 2418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 0, 12
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10526, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1279
----- executor 2 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32509, flag collect 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 14, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 6208
----- executor 2 executes write_coverage_signal cov->size 2532, flag collect 0
----- executor 2 signal number : 336
----- executor 2 executes write_coverage_signal cov->size 21342, flag collect 0
----- executor 2 signal number : 611
executor 2 server cover_cnt 5 output_pos_value 8517
time breakdown 3: 16, 13, 0
before receive testcase: 0 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 16, 0
before receive testcase: 0 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 22
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 10 replies
2023/03/27 12:07:49 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 5 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1279 signal and 0 cover from userspace component
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 6208 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 336 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 4 signal and 0 cover from executor 3
time breakdown 2: 10, 16, 0
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 611 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2458 open open
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 10
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000080)='./file2\x00', &(0x7f0000000240)='security.SMACK64EXEC\x00', &(0x7f0000000300)={','}, 0x2, 0x3)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
open(&(0x7f0000000040)='./file3\x00', 0x8102, 0x8)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file3\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
chown(&(0x7f0000000340)='./file3\x00', 0x0, 0xee01)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1632
remove dir: /root/cephfs-client/dfs-0-545
remove dir time 18
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-546 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-546
receive_execute: 6, 19
receive_execute: 3, 19
receive_execute: 4, 19
receive_execute: 3, 19
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 265, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 265, flag collect 0
----- executor 3 signal number : 129
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 139
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 97
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 43
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 550, pid 2421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 550, flag collect 0
----- executor 3 signal number : 116
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 12, 0
execute_one time: 1, 23
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 25, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 23, 26, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1395
----- executor 2 executes write_coverage_signal cov->size 2109, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32444, flag collect 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 27, 0
before receive testcase: 0 0
----- executor 2 signal number : 1015
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7581
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 87
----- executor 2 executes write_coverage_signal cov->size 6642, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 800
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6635
executor 2 server cover_cnt 9 output_pos_value 18069
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 52
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 10 replies
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
time breakdown 2: 22, 33, 0
2023/03/27 12:07:49 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 43 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 116 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 2 has 9 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1395 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1015 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 7581 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 87 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 800 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 6635 signal and 0 cover from userspace component
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 9
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000400)='./file1\x00')
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r2 = dup2(r1, r1)
mkdirat(r2, &(0x7f0000000280)='./file0\x00', 0x0)
r3 = open$dir(&(0x7f0000000000)='./file1\x00', 0x400382, 0x80)
getdents(r3, &(0x7f0000000300)=""/98, 0x62)
getdents(r3, &(0x7f0000000440)=""/4096, 0x1000)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-546
remove dir time 12
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-547 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-547
receive_execute: 3, 14
receive_execute: 11, 14
receive_execute: 10, 14
receive_execute: 10, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2425, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 5, 2, 0
execute_one time: 1, 7
time breakdown 3: 25, 9, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10137, flag collect 0
executor 0 write_server_output
2023/03/27 12:07:49 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 382, flag collect 0
----- executor 2 signal number : 67
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 30354, flag collect 0
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 5944
2023/03/27 12:07:49 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 1795, flag collect 0
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 20426, flag collect 0
time breakdown 1: 24, 9, 0
----- executor 2 signal number : 592
executor 2 server cover_cnt 5 output_pos_value 8241
before receive testcase: 0 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 26
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 9 replies
2023/03/27 12:07:49 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 5 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
time breakdown 2: 17, 12, 0
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 5944 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 592 signal and 0 cover from userspace component
time breakdown 0: 24, 12, 0
before receive testcase: 0 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2458 open open
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 20
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f00000002c0)='./file2\x00', 0x8, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$setsig(r1, 0xa, 0x6)
fstat(r0, &(0x7f0000000680))
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000640)='./file2\x00')
r2 = open(&(0x7f00000005c0)='./file2\x00', 0x880, 0x22)
rename(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)='./file2\x00')
read(r1, &(0x7f0000000300)=""/66, 0x42)
open$dir(&(0x7f0000000380)='./file3\x00', 0x0, 0x8)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
open(&(0x7f00000001c0)='./file2\x00', 0x1, 0x4)
open$dir(&(0x7f00000003c0)='./file0\x00', 0x501080, 0x2)
open$dir(&(0x7f0000000600)='./file4\x00', 0x80, 0x2)
dup(0xffffffffffffffff)
r3 = fcntl$dupfd(r2, 0x406, r1)
dup2(r3, r3)
readlinkat(r1, 0xfffffffffffffffc, &(0x7f00000004c0)=""/111, 0x6f)
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2912
remove dir: /root/cephfs-client/dfs-0-547
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 3, 19
receive_execute: 3, 19
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-548 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-548
receive_execute: 6, 19
receive_execute: 3, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 150
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 30
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 538, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 538, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 94
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 432, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 432, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2428, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 1, 14
cover_reset in execute_call
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 22, 18, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 31603, flag collect 0
time breakdown 3: 25, 17, 0
before receive testcase: 0 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 18, 0
----- executor 2 signal number : 1425
----- executor 2 executes write_coverage_signal cov->size 1288, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12866, flag collect 0
----- executor 2 signal number : 970
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7358
----- executor 2 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 2 signal number : 94
----- executor 2 executes write_coverage_signal cov->size 5708, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 829
----- executor 2 executes write_coverage_signal cov->size 17981, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3456
executor 2 server cover_cnt 9 output_pos_value 14688
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 43
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 20 replies
2023/03/27 12:07:49 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 2 has 9 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1425 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 970 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 7358 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 94 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 829 signal and 0 cover from userspace component
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 3456 signal and 0 cover from userspace component
time breakdown 2: 22, 24, 0
before receive testcase: 0 0
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 171 dup2 dup2
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 4
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lseek(r1, 0x0, 0x0)
dup2(r0, r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
remove dir: /root/cephfs-client/dfs-0-548
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-549 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-549
receive_execute: 3, 14
receive_execute: 10, 14
receive_execute: 5, 14
receive_execute: 9, 14
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 2435, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2435, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 24, 5, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 11634, flag collect 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 4895
----- executor 2 executes write_coverage_signal cov->size 348, flag collect 0
----- executor 2 signal number : 247
----- executor 2 executes write_coverage_signal cov->size 7360, flag collect 0
----- executor 2 signal number : 570
executor 2 server cover_cnt 5 output_pos_value 7053
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 23
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 5 replies
2023/03/27 12:07:49 [CLIENT] executor 3 has 4 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 18 signal and 0 cover from executor 3
time breakdown 2: 17, 8, 0
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4895 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 247 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 570 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 6
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0/file0\x00', 0x18740, 0x13c)
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
open$dir(&(0x7f0000000400)='./file0\x00', 0x0, 0x0)
stat(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$system_posix_acl(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000280)={{}, {0x1, 0x4}, [{0x2, 0x4, 0xffffffffffffffff}, {0x2, 0x7, r0}], {0x4, 0x4}, [{0x8, 0x1, 0xee00}, {0x8, 0x6, 0xee00}, {0x8, 0x1, r1}], {0x10, 0x3}, {0x20, 0x4}}, 0x4c, 0x3)
---

end of program
time breakdown 1: 19, 8, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2136
remove dir: /root/cephfs-client/dfs-0-549
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-550 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-550
receive_execute: 6, 10
receive_execute: 3, 10
receive_execute: 3, 10
receive_execute: 5, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2438, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2438, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 493
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2438, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 111
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2438, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2438, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2438, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 0, 11
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 12, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 8228, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 20240, flag collect 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 13, 14, 0
time breakdown 0: 15, 13, 0
----- executor 2 signal number : 5675
----- executor 2 executes write_coverage_signal cov->size 2814, flag collect 0
----- executor 2 signal number : 348
----- executor 2 executes write_coverage_signal cov->size 7944, flag collect 0
----- executor 2 signal number : 578
executor 2 server cover_cnt 5 output_pos_value 7969
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 26
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 6 replies
2023/03/27 12:07:49 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 493 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 5 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 5675 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 348 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 578 signal and 0 cover from userspace component
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 12:07:49 fuzzer receive 19 signal and 0 cover from executor 3
time breakdown 2: 13, 15, 0
before receive testcase: 0 0
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2458 open open
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 4
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000040)='./file0\x00', 0x1c9bc0, 0x157)
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v1={0x1000000, [{0x5, 0xd8c}]}, 0xc, 0x298a51ccae5caab)
open(&(0x7f0000000140)='./file0\x00', 0x109040, 0x10)
lchown(&(0x7f0000000100)='./file0\x00', 0xffffffffffffffff, 0xee01)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 776
remove dir: /root/cephfs-client/dfs-0-550
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-551 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-551
receive_execute: 5, 15
receive_execute: 0, 15
receive_execute: 2, 15
receive_execute: 2, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2442, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2442, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2442, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2442, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 140
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4253, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 195, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11640, flag collect 0
----- executor 2 signal number : 4898
----- executor 2 executes write_coverage_signal cov->size 354, flag collect 0
----- executor 2 signal number : 247
----- executor 2 executes write_coverage_signal cov->size 8077, flag collect 0
----- executor 2 signal number : 574
executor 2 server cover_cnt 5 output_pos_value 7062
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 17, 7, 0
before receive testcase: 0 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 17, 8, 0
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 23
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 4 replies
2023/03/27 12:07:49 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 2 has 5 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4898 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 247 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 574 signal and 0 cover from userspace component
time breakdown 1: 15, 7, 0
time breakdown 3: 20, 4, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 2458 open open
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 3761 stat stat
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 5
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x2)
stat(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200))
open(&(0x7f0000000100)='./file0\x00', 0x8000, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/cephfs-client/dfs-0-551
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-552 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-552
receive_execute: 0, 12
receive_execute: 6, 11
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
receive_execute: 0, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 2445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 79
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 575, pid 2445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 3 signal number : 178
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 7, 0
execute_one time: 1, 12
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 20092, flag collect 0
----- executor 2 signal number : 1312
----- executor 2 executes write_coverage_signal cov->size 681, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10678, flag collect 0
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 8015
----- executor 2 executes write_coverage_signal cov->size 4398, flag collect 0
----- executor 2 signal number : 427
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1026
----- executor 2 executes write_coverage_signal cov->size 20651, flag collect 0
time breakdown 3: 17, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 4545
time breakdown 0: 10, 15, 0
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 16411
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 31
2023/03/27 12:07:49 ----- PS len: 4
time breakdown 2: 14, 19, 0
2023/03/27 12:07:49 [CLIENT] executor 3 has 5 replies
before receive testcase: 0 1
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 8 replies
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1312 signal and 0 cover from userspace component
2023/03/27 12:07:49 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 8015 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 427 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1026 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4545 signal and 0 cover from userspace component
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:07:49 ----- mutateArg()
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 8
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x7, &(0x7f0000000a00))
r1 = openat(0xffffffffffffffff, &(0x7f00000000c0)='./file0\x00', 0x20080, 0x1c0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x20000, 0x100)
r2 = dup2(r1, r1)
fcntl$getownex(r0, 0x10, &(0x7f0000000000)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x0, &(0x7f0000000040)={0x1, 0x4, 0x800, 0x566, r3})
fcntl$lock(r0, 0x6, &(0x7f0000000080)={0x2, 0x0, 0x0, 0x9})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1696
remove dir: /root/cephfs-client/dfs-0-552
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-553 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-553
receive_execute: 10, 12
receive_execute: 5, 12
receive_execute: 7, 12
receive_execute: 9, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2448, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2448, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2448, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2448, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2448, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2448, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2448, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 2448, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 9
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 2
execute_one time: 1, 6
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 22, 8, 0
----- executor 2 executes write_coverage_signal cov->size 14145, flag collect 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1302
----- executor 2 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 31181, flag collect 0
time breakdown 0: 21, 9, 0
before receive testcase: 0 1
----- executor 2 signal number : 6401
----- executor 2 executes write_coverage_signal cov->size 3890, flag collect 0
time breakdown 1: 19, 10, 0
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 366
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 539
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 23
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 8 replies
2023/03/27 12:07:49 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 6 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1302 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 6401 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 366 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 539 signal and 0 cover from userspace component
executor 2 server cover_cnt 6 output_pos_value 8698
time breakdown 2: 17, 11, 0
before receive testcase: 0 0
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 5
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000480)='./file2\x00', 0x442, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file2\x00', 0x0, 0x0)
r2 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
fcntl$setstatus(r2, 0x4, 0x2800)
flock(r1, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 616
remove dir: /root/cephfs-client/dfs-0-553
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-554 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-554
receive_execute: 5, 15
receive_execute: 2, 15
receive_execute: 4, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2452, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
receive_execute: 3, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 20, 7, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10762, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1297
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 25067, flag collect 0
2023/03/27 12:07:49 for select break: 1
time breakdown 1: 19, 8, 0
2023/03/27 12:07:49 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 0: 19, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 6230
----- executor 2 executes write_coverage_signal cov->size 3541, flag collect 0
----- executor 2 signal number : 367
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 558
executor 2 server cover_cnt 6 output_pos_value 8542
2023/03/27 12:07:49 for select break: 1
2023/03/27 12:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:07:49 wg wait finish
2023/03/27 12:07:49 ------ all executors finish execution
2023/03/27 12:07:49 exec time: 27
2023/03/27 12:07:49 ----- PS len: 4
2023/03/27 12:07:49 [CLIENT] executor 3 has 5 replies
2023/03/27 12:07:49 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:07:49 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 12:07:49 [SERVER] executor 0 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 1 has 0 replies
2023/03/27 12:07:49 [SERVER] executor 2 has 6 replies
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 1297 signal and 0 cover from userspace component
time breakdown 2: 17, 11, 0
before receive testcase: 0 0
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 6230 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 367 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:07:49 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/27 12:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:07:49 ----- no new client coverage: false, true
2023/03/27 12:07:49 mutate testcase with failures
2023/03/27 12:07:49 ----- insertCall()
2023/03/27 12:07:49 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:07:49 prog length: 14
2023/03/27 12:07:49 HasCrashFail:false HasNetFail:false
12:07:49 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$lock(r1, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x60)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x1, 0x2, 0xff, 0x40})
r3 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r4 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r4, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x40000})
fcntl$lock(r4, 0x6, &(0x7f0000000080)={0x0, 0x2, 0x7f14, 0x9})
flock(r3, 0x6)
r5 = open$dir(&(0x7f0000000140)='./file0\x00', 0x442800, 0x62)
fcntl$lock(r5, 0x24, &(0x7f0000000180)={0x2, 0x1, 0x3, 0x100000001, 0xffffffffffffffff})
dup2(r0, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2944
remove dir: /root/cephfs-client/dfs-0-554
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-555 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-555
receive_execute: 7, 12
receive_execute: 3, 12
receive_execute: 5, 12
receive_execute: 6, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2455, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2455, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2455, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2455, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 2455, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2455, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 12
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2455, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2455, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2455, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 222, pid 2455, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 222, flag collect 0
----- executor 3 signal number : 9
----- completed 14
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83340, 3, 1
execute_one time: 0, 83345
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 19, 83347, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1523
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 83349, 0
before receive testcase: 0 0
----- executor 2 signal number : 1172
----- executor 2 executes write_coverage_signal cov->size 23994, flag collect 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 17, 83351, 0
before receive testcase: 0 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7453
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 749
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4554
----- executor 2 executes write_coverage_signal cov->size 29320, flag collect 0
----- executor 2 signal number : 1823
----- executor 2 executes write_coverage_signal cov->size 2431, flag collect 0
----- executor 2 signal number : 165
----- executor 2 executes write_coverage_signal cov->size 6719, flag collect 0
----- executor 2 signal number : 405
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 996
----- executor 2 executes write_coverage_signal cov->size 69, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2361
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1634
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4172
----- executor 2 executes write_coverage_signal cov->size 520, flag collect 0
----- executor 2 signal number : 13
executor 2 server cover_cnt 17 output_pos_value 27927
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:12 wg wait finish
2023/03/27 12:09:12 ------ all executors finish execution
2023/03/27 12:09:12 exec time: 83372
2023/03/27 12:09:12 ----- PS len: 4
2023/03/27 12:09:12 [CLIENT] executor 3 has 14 replies
2023/03/27 12:09:12 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 2 has 17 replies
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1523 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1172 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 7453 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 749 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 4554 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1823 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 405 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 996 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 2361 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1634 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 4172 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 1 has 0 replies
time breakdown 2: 15, 83360, 0
before receive testcase: 0 1
2023/03/27 12:09:12 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:12 ----- no new client coverage: false, true
2023/03/27 12:09:12 mutate testcase with failures
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 2462 openat openat
2023/03/27 12:09:12 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:12 prog length: 4
2023/03/27 12:09:12 HasCrashFail:false HasNetFail:false
12:09:12 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x2)
openat(0xffffffffffffffff, &(0x7f0000000100)='./file0/../file0\x00', 0x240, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 728
remove dir: /root/cephfs-client/dfs-0-555
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
receive_execute: 6, 9
receive_execute: 17, 9
receive_execute: 16, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-556 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-556
receive_execute: 19, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 2461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 79
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 575, pid 2461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 3 signal number : 178
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 10, 0
execute_one time: 0, 14
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19004, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:09:12 for select break: 1
----- executor 2 signal number : 1344
----- executor 2 executes write_coverage_signal cov->size 709, flag collect 0
2023/03/27 12:09:12 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10678, flag collect 0
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 16, 0
before receive testcase: 0 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 8022
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 20299, flag collect 0
----- executor 2 signal number : 4473
executor 2 server cover_cnt 7 output_pos_value 15910
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:12 wg wait finish
2023/03/27 12:09:12 ------ all executors finish execution
2023/03/27 12:09:12 exec time: 29
2023/03/27 12:09:12 ----- PS len: 4
2023/03/27 12:09:12 [CLIENT] executor 3 has 4 replies
2023/03/27 12:09:12 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 1 has 0 replies
2023/03/27 12:09:12 fuzzer receive 79 signal and 0 cover from executor 3
time breakdown 2: 15, 20, 0
2023/03/27 12:09:12 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 2 has 7 replies
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1344 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 8022 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 4473 signal and 0 cover from userspace component
time breakdown 3: 28, 14, 0
before receive testcase: 0 1
2023/03/27 12:09:12 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:12 ----- no new client coverage: false, true
2023/03/27 12:09:12 mutate testcase with failures
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/27 12:09:12 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:12 prog length: 13
2023/03/27 12:09:12 HasCrashFail:false HasNetFail:false
12:09:12 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000240)='./file2\x00', &(0x7f0000000340), &(0x7f0000000380)='\x00', 0x1, 0x1)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
stat(&(0x7f00000004c0)='./file3\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000600)='./file3\x00', &(0x7f0000000640)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='system.posix_acl_default\x00', &(0x7f00000006c0)={{}, {0x1, 0x8}, [{0x2, 0x7, r1}, {0x2, 0x3, 0xee01}, {0x2, 0x6}, {0x2, 0x1, r2}, {0x2, 0x4, 0xffffffffffffffff}, {0x2, 0x2, r3}], {0x4, 0x3}, [{0x8, 0x4, 0xee01}], {0x10, 0x5}}, 0x5c, 0x4)
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file4\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file2\x00', 0x8, 0x2)
mkdir(&(0x7f0000000300)='./file4\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3584
remove dir: /root/cephfs-client/dfs-0-556
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-557 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-557
receive_execute: 9, 13
receive_execute: 3, 13
receive_execute: 7, 14
receive_execute: 7, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 166
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 139
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 139
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 24
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 2464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 6
----- completed 13
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 21, 23, 0
execute_one time: 1, 44
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1439
----- executor 2 executes write_coverage_signal cov->size 2176, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 46, 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 47, 0
----- executor 2 signal number : 1008
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7609
----- executor 2 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 769
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 22, 46, 0
before receive testcase: 0 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 5997
executor 2 server cover_cnt 8 output_pos_value 16999
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:12 wg wait finish
2023/03/27 12:09:12 ------ all executors finish execution
2023/03/27 12:09:12 exec time: 65
2023/03/27 12:09:12 ----- PS len: 4
2023/03/27 12:09:12 [CLIENT] executor 3 has 13 replies
2023/03/27 12:09:12 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 166 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 2 has 8 replies
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1439 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 16, 52, 0
before receive testcase: 0 0
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1008 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 7609 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 769 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 5997 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 1 has 0 replies
2023/03/27 12:09:12 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:12 ----- no new client coverage: false, true
2023/03/27 12:09:12 mutate testcase with failures
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 2458 open open
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 3967 truncate truncate
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 250 fsync fsync
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 2458 open open
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:12 prog length: 15
2023/03/27 12:09:12 HasCrashFail:false HasNetFail:false
12:09:12 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x6, &(0x7f0000000300)={0x0, 0x0, 0x18, 0x55, 0xffffffffffffffff})
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x80, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
fsync(r0)
getdents(r0, &(0x7f0000000280)=""/102, 0x66)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440), &(0x7f0000000480), 0x2, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180), &(0x7f0000000340)={'U+', 0x6}, 0x16, 0x3)
open(&(0x7f0000000240)='./file1\x00', 0x410300, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
truncate(&(0x7f0000000200)='./file1\x00', 0x7fffffff)
r2 = openat(r1, &(0x7f00000004c0)='./file1\x00', 0x400000, 0x0)
getdents(r2, &(0x7f00000001c0)=""/32, 0xb)
getdents(r1, &(0x7f0000000380)=""/69, 0x45)
open(&(0x7f0000000500)='./file1\x00', 0x1, 0x100)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2488
remove dir: /root/cephfs-client/dfs-0-557
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-558 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-558
receive_execute: 11, 16
receive_execute: 4, 17
receive_execute: 10, 16
receive_execute: 9, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 0, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 340, pid 2467, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 340, flag collect 0
----- executor 3 signal number : 164
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 2467, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 126
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 460, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 460, flag collect 0
----- executor 3 signal number : 61
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 566, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 566, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 95, pid 2467, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 3 signal number : 39
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2467, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 10, 5, 0
execute_one time: 0, 15
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24888, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1346
----- executor 2 executes write_coverage_signal cov->size 890, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14493, flag collect 0
----- executor 2 signal number : 997
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 18, 0
before receive testcase: 0 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 7606
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 30895, flag collect 0
----- executor 2 signal number : 1029
----- executor 2 executes write_coverage_signal cov->size 16540, flag collect 0
time breakdown 3: 27, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 3047
executor 2 server cover_cnt 7 output_pos_value 14117
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:12 wg wait finish
2023/03/27 12:09:12 ------ all executors finish execution
2023/03/27 12:09:12 exec time: 38
2023/03/27 12:09:12 ----- PS len: 4
2023/03/27 12:09:12 [CLIENT] executor 3 has 15 replies
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 1 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 2 has 7 replies
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1346 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 997 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 7606 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1029 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 3047 signal and 0 cover from userspace component
time breakdown 2: 21, 21, 0
before receive testcase: 0 1
2023/03/27 12:09:12 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:12 ----- no new client coverage: false, true
2023/03/27 12:09:12 mutate testcase with failures
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- splice()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- mutateArg()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:12 prog length: 20
2023/03/27 12:09:12 HasCrashFail:false HasNetFail:false
12:09:12 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=ANY=[@ANYBLOB="d08495160608af9b0000000000000004899d905b0000"], 0x16, 0x0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000340)='./file0\x00', 0x8)
lsetxattr$user(&(0x7f0000000040)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='+@\xd7\x00', 0x4, 0x0)
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
setxattr$security_capability(&(0x7f0000000580)='./file0/file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@v1={0x1000000, [{0x38, 0x4}]}, 0xc, 0x0)
stat(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380))
stat(&(0x7f0000000400)='./file1\x00', &(0x7f0000000640))
readlink(&(0x7f0000000500)='./file1\x00', &(0x7f0000000700)=""/94, 0x5e)
lsetxattr$system_posix_acl(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000180)='system.posix_acl_default\x00', &(0x7f0000000840)=ANY=[@ANYBLOB="02000000010004000000000002000200f2cacb0300b8454f2eff933446441391edaf98d1ff882afa76505641310014613616785f06b252b838f769996ef0e051a5367c5d843c6f350d8bc694b08108624308e28b1e30b778", @ANYBLOB="98cd01f0", @ANYBLOB="02000700", @ANYRES64=0x0, @ANYBLOB="0200020061242b47dc3e31c60bc49c4ac0e8d7129709ec948d625c7cbaa0676bee2eb5adb68c56f98d5b073cc0ed82dd7485f9b0784800ec2f48a52e0f4be13e6f691da4a6e08cd270", @ANYRESDEC, @ANYRESHEX, @ANYRES32=r1, @ANYBLOB='\x00m+\x00', @ANYRES32=r3, @ANYBLOB="040003000000000008000100", @ANYBLOB="c304453f18996acafe8b49603f0947c239c1cb86c843033784c2a3a969358839e412f3b2b4c53c", @ANYBLOB="088d0f0000379bb1837c57d7a300"/24, @ANYRES32=0x0, @ANYBLOB="08000600", @ANYRES32=r3, @ANYRES32=r2, @ANYRESHEX, @ANYBLOB="10000000000000002000020000000000"], 0x6c, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000540)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x1)
open$dir(&(0x7f0000000440)='./file0/file0\x00', 0xe703, 0x0)
chdir(&(0x7f0000000140)='./file0/file1\x00')
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
open$dir(&(0x7f0000000800)='./file0/file0\x00', 0x428003, 0x60)
fstat(r0, &(0x7f0000000240))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4456
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-558
remove dir time 16
-----finish removing dir
receive_execute: 5, 18
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-559 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-559
receive_execute: 10, 18
receive_execute: 8, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 9, 17
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 552, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 3 signal number : 12
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 608, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 608, flag collect 0
----- executor 3 signal number : 5
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2471, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 1
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 14, 0
execute_one time: 0, 35
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 28, 37, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1345
----- executor 2 executes write_coverage_signal cov->size 1985, flag collect 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 25, 39, 0
before receive testcase: 0 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 39, 0
before receive testcase: 0 0
----- executor 2 signal number : 1054
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7234
----- executor 2 executes write_coverage_signal cov->size 28402, flag collect 0
----- executor 2 signal number : 1036
----- executor 2 executes write_coverage_signal cov->size 1298, flag collect 0
----- executor 2 signal number : 148
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1984
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6540
executor 2 server cover_cnt 8 output_pos_value 19433
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:12 wg wait finish
2023/03/27 12:09:12 ------ all executors finish execution
2023/03/27 12:09:12 exec time: 64
2023/03/27 12:09:12 ----- PS len: 4
2023/03/27 12:09:12 [CLIENT] executor 3 has 20 replies
time breakdown 2: 23, 45, 0
2023/03/27 12:09:12 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 2 has 8 replies
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1345 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1054 signal and 0 cover from userspace component
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 7234 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1036 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 148 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1984 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 6540 signal and 0 cover from userspace component
2023/03/27 12:09:12 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:12 ----- no new client coverage: false, true
2023/03/27 12:09:12 mutate testcase with failures
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 258 getdents getdents
2023/03/27 12:09:12 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:12 prog length: 4
2023/03/27 12:09:12 HasCrashFail:false HasNetFail:false
12:09:12 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x1414c2, 0x1)
getdents(r0, &(0x7f0000000200)=""/4096, 0x1000)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1db940, 0x0)
getxattr(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)=@random={'os2.', '>m\xf4\x1f\r\xa5\xaf\xc8\xa9\xbc\"\xc9\x85\x11\xb5)\x00N\xdf)\x11~\x8e1\xaa\xa9\xb1\xc8\x1at\xc3g\xd4\xdc\x7fBF\xe1\xa3\xd8\xc7\xa0\xec\f\xbe-\xcd\xc8g\xf6\xbd\xbb\x91A\xf0\xe8\xb1\xdd\x8f|\x12\x99\x7fh\xf3\xe8\xd6\x95\x92:\x00\x00\x00\x00\x93\xa8-\x9d\xa7\xbb\x9et\a\xb8\xea\x850\x9c\xc6\xe0B2\xe0s$qX\xb1\xfd\xa1\x91\xd8\x1a\x81\xc3>\x93\x92\x0f\xa5?\xbd\n\x9b\x00\xdd\xcc.n88\x90.\xd5H3.\xa7\xb4\x85\a$LWI`c\xea^+\x1d\xc2j\b\x17\xee\xa4&:V\x81\x82\xe5\x9fPB\xb0\xda\x1e LzC\x8f\x05I\xe00\x8c\x14\xf2$\x10VY\xbe]\x8aJ\xc3\x8c\x17\xb3\x1e\x15\xf7\xf9$,\xe3\xdf%H\xcd;S\xfb\xaa\x06\xe3\x8c\x85q./\xa3R\xa1\xe8\xe6\x9c5JP\xa9\xa6)\xbf\x888\xc7_=PS\xb8s\xc46\xb8\xfb{\x00\xc2\xfe\x00m\xcb\xb6\xeb\xfe6\xbcx\"wv\"%\b\xaf\x90\xd7\xea\x1b\x84\xb9a\xcf\x96\xa1\x91{jm\xaei\xa3\x05{5\xef\\R\xc7\x8b%\xb3\x8d\f\xd2V\xbd'}, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/cephfs-client/dfs-0-559
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-560 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-560
receive_execute: 12, 7
receive_execute: 4, 7
receive_execute: 9, 7
receive_execute: 11, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 2476, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2476, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 598, pid 2476, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 598, flag collect 0
----- executor 3 signal number : 38
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 2476, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 136
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 2, 5
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 2 signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 23346, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6220
----- executor 2 executes write_coverage_signal cov->size 366, flag collect 0
----- executor 2 signal number : 124
----- executor 2 executes write_coverage_signal cov->size 1704, flag collect 0
----- executor 2 signal number : 301
----- executor 2 executes write_coverage_signal cov->size 12365, flag collect 0
----- executor 2 signal number : 594
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 11, 0
before receive testcase: 0 0
executor 2 server cover_cnt 6 output_pos_value 8610
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 12, 0
before receive testcase: 0 0
2023/03/27 12:09:12 for select break: 1
2023/03/27 12:09:12 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:09:12 wg wait finish
2023/03/27 12:09:12 ------ all executors finish execution
2023/03/27 12:09:12 exec time: 19
2023/03/27 12:09:12 ----- PS len: 4
2023/03/27 12:09:12 [CLIENT] executor 3 has 4 replies
2023/03/27 12:09:12 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:12 [SERVER] executor 1 has 0 replies
2023/03/27 12:09:12 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/27 12:09:12 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/27 12:09:12 [SERVER] executor 2 has 6 replies
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 1285 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 6220 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 124 signal and 0 cover from userspace component
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 301 signal and 0 cover from userspace component
time breakdown 1: 16, 12, 0
2023/03/27 12:09:12 ------- fuzzer executor 2 receive 594 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:09:12 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:12 ----- no new client coverage: false, true
time breakdown 3: 19, 9, 0
before receive testcase: 0 0
2023/03/27 12:09:12 mutate testcase with failures
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 220 flock flock
2023/03/27 12:09:12 ----- insertCall()
2023/03/27 12:09:12 ----- generateCall 121 chmod chmod
2023/03/27 12:09:12 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:12 prog length: 9
2023/03/27 12:09:12 HasCrashFail:false HasNetFail:false
12:09:12 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
r1 = dup(r0)
symlinkat(&(0x7f00000001c0)='./file1\x00', r1, &(0x7f0000000200)='./file1\x00')
r2 = dup2(r0, r0)
mkdirat(r2, &(0x7f0000000280)='./file0\x00', 0x0)
chmod(&(0x7f0000000000)='./file1\x00', 0x0)
flock(r2, 0xb)
fsync(r0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1088
remove dir: /root/cephfs-client/dfs-0-560
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-561 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-561
receive_execute: 5, 21
receive_execute: 2, 21
receive_execute: 3, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 21
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 165, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 165, flag collect 0
----- executor 3 signal number : 59
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2479, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 343, pid 2479, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 343, flag collect 0
----- executor 3 signal number : 157
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 26, 11, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 14034, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1313
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11627, flag collect 0
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 12, 0
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 989
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 24, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7156
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 25477, flag collect 0
----- executor 2 signal number : 849
----- executor 2 executes write_coverage_signal cov->size 15490, flag collect 0
----- executor 2 signal number : 3089
executor 2 server cover_cnt 8 output_pos_value 13498
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:13 wg wait finish
2023/03/27 12:09:13 ------ all executors finish execution
2023/03/27 12:09:13 exec time: 44
2023/03/27 12:09:13 ----- PS len: 4
2023/03/27 12:09:13 [CLIENT] executor 3 has 9 replies
2023/03/27 12:09:13 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 157 signal and 0 cover from executor 3
2023/03/27 12:09:13 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:13 [SERVER] executor 2 has 8 replies
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 1313 signal and 0 cover from userspace component
2023/03/27 12:09:13 [SERVER] executor 1 has 0 replies
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 23, 24, 0
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 989 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 7156 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 849 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 3089 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/27 12:09:13 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:13 ----- no new client coverage: false, true
2023/03/27 12:09:13 mutate testcase with failures
2023/03/27 12:09:13 ----- insertCall()
2023/03/27 12:09:13 ----- generateCall 2341 lchown lchown
2023/03/27 12:09:13 ----- mutateArg()
2023/03/27 12:09:13 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:13 prog length: 8
2023/03/27 12:09:13 HasCrashFail:false HasNetFail:false
12:09:13 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='./file0\x00', 0x12040, 0x0)
llistxattr(&(0x7f0000000040)='./file0\x00', 0x0, 0x4)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
fremovexattr(r0, &(0x7f0000000340)=@known='system.posix_acl_access\x00')
r1 = open(&(0x7f0000000200)='./file0\x00', 0x1, 0x135)
fstat(r1, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000140)='./file1\x00', r2, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/cephfs-client/dfs-0-561
remove dir time 34
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-562 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-562
receive_execute: 18, 37
receive_execute: 15, 39
receive_execute: 4, 38
receive_execute: 15, 39
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2483, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 429, pid 2483, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 429, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 2483, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 86
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2483, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 5
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 330, pid 2483, write pid:-2126518517
----- executor 3 executes write_coverage_signal cov->size 330, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2483, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 94
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 332, pid 2483, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 332, flag collect 0
----- executor 3 signal number : 20
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2483, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 6, 0
execute_one time: 1, 16
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26938, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 54, 19, 0
----- executor 2 signal number : 1430
----- executor 2 executes write_coverage_signal cov->size 833, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15233, flag collect 0
----- executor 2 signal number : 999
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 55, 19, 0
before receive testcase: 0 0
time breakdown 0: 54, 20, 0
before receive testcase: 0 1
----- executor 2 signal number : 7988
----- executor 2 executes write_coverage_signal cov->size 4494, flag collect 0
----- executor 2 signal number : 429
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1253
----- executor 2 executes write_coverage_signal cov->size 17863, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4199
executor 2 server cover_cnt 8 output_pos_value 16393
2023/03/27 12:09:13 for select break: 1
2023/03/27 12:09:13 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:09:13 wg wait finish
2023/03/27 12:09:13 ------ all executors finish execution
2023/03/27 12:09:13 exec time: 62
2023/03/27 12:09:13 ----- PS len: 4
2023/03/27 12:09:13 [CLIENT] executor 3 has 8 replies
2023/03/27 12:09:13 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 12:09:13 [SERVER] executor 0 has 0 replies
2023/03/27 12:09:13 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/27 12:09:13 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:09:13 [SERVER] executor 1 has 0 replies
2023/03/27 12:09:13 [SERVER] executor 2 has 8 replies
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 1430 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 42, 24, 0
before receive testcase: 0 0
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 999 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 7988 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 429 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 1253 signal and 0 cover from userspace component
2023/03/27 12:09:13 ------- fuzzer executor 2 receive 4199 signal and 0 cover from userspace component
2023/03/27 12:09:13 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:09:13 ----- no new client coverage: false, true
2023/03/27 12:09:13 mutate testcase with failures
2023/03/27 12:09:13 ----- insertCall()
2023/03/27 12:09:13 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:09:13 ----- mutateArg()
2023/03/27 12:09:13 ----- insertCall()
2023/03/27 12:09:13 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/27 12:09:13 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:09:13 prog length: 15
2023/03/27 12:09:13 HasCrashFail:false HasNetFail:false
12:09:13 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$lock(r1, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x60)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x1, 0x2, 0xff, 0x40})
r3 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r4 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r4, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x40000})
fcntl$lock(r4, 0x6, &(0x7f0000000080)={0x0, 0x2, 0x7f14, 0x9})
fcntl$getownex(r3, 0x10, &(0x7f0000000140)={0x0, <r5=>0x0})
fcntl$lock(r2, 0x0, &(0x7f00000001c0)={0x0, 0x1, 0x20, 0x5, r5})
fcntl$setpipe(r1, 0x407, 0x1)
flock(r3, 0x6)
dup2(r0, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3104
remove dir: /root/cephfs-client/dfs-0-562
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-563 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-563
receive_execute: 8, 11
receive_execute: 6, 11
receive_execute: 6, 11
receive_execute: 3, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 620, pid 2486, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2486, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2486, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2486, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2486, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 12
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2486, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 222, pid 2486, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 222, flag collect 0
----- executor 3 signal number : 9
----- completed 15
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83337, 3, 3
execute_one time: 1, 83343
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 83346, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1589
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1189
----- executor 2 executes write_coverage_signal cov->size 20879, flag collect 0
time breakdown 1: 17, 83347, 0
before receive testcase: 0 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 83349, 0
before receive testcase: 0 0
----- executor 2 signal number : 782
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7461
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 746
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4784
----- executor 2 executes write_coverage_signal cov->size 29320, flag collect 0
----- executor 2 signal number : 1785
----- executor 2 executes write_coverage_signal cov->size 2288, flag collect 0
----- executor 2 signal number : 163
----- executor 2 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 2 signal number : 335
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2212
----- executor 2 executes write_coverage_signal cov->size 69, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2596
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1483
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4627
----- executor 2 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 2 signal number : 14
executor 2 server cover_cnt 17 output_pos_value 29945
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:10:36 wg wait finish
2023/03/27 12:10:36 ------ all executors finish execution
2023/03/27 12:10:36 exec time: 83368
2023/03/27 12:10:36 ----- PS len: 4
2023/03/27 12:10:36 [CLIENT] executor 3 has 15 replies
2023/03/27 12:10:36 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:10:36 [SERVER] executor 0 has 0 replies
2023/03/27 12:10:36 [SERVER] executor 1 has 0 replies
2023/03/27 12:10:36 [SERVER] executor 2 has 17 replies
2023/03/27 12:10:36 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 1589 signal and 0 cover from userspace component
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 1189 signal and 0 cover from userspace component
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 782 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 7461 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 746 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 4784 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 1785 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 163 signal and 0 cover from userspace component
time breakdown 2: 14, 83357, 0
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 335 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 2212 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 2596 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 1483 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 4627 signal and 0 cover from userspace component
2023/03/27 12:10:36 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/27 12:10:36 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:10:36 ----- no new client coverage: false, true
2023/03/27 12:10:36 mutate testcase with failures
2023/03/27 12:10:36 ----- mutateArg()
2023/03/27 12:10:36 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:10:36 prog length: 2
2023/03/27 12:10:36 HasCrashFail:false HasNetFail:false
12:10:36 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f00000000c0)='./file0\x00', 0x141ac1, 0x0)
write$binfmt_misc(r0, &(0x7f00000015c0)={'syz1'}, 0x10000000000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 328
remove dir: /root/cephfs-client/dfs-0-563
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-564 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-564
receive_execute: 16, 13
receive_execute: 5, 13
receive_execute: 12, 13
receive_execute: 14, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2493, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2493, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 25, 5, 0
before receive testcase: 0 1
time breakdown 2: 18, 4, 0
before receive testcase: 0 1
time breakdown 1: 27, 6, 0
before receive testcase: 0 1
time breakdown 3: 29, 3, 0
before receive testcase: 0 1
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:10:36 for select break: 1
2023/03/27 12:10:36 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:10:36 wg wait finish
2023/03/27 12:10:36 ------ all executors finish execution
2023/03/27 12:10:36 exec time: 22
2023/03/27 12:10:36 ----- PS len: 4
2023/03/27 12:10:36 [CLIENT] executor 3 has 2 replies
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:10:36 [SERVER] executor 0 has 0 replies
2023/03/27 12:10:36 [SERVER] executor 1 has 0 replies
2023/03/27 12:10:36 [SERVER] executor 2 has 0 replies
2023/03/27 12:10:36 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:10:36 ----- no new client coverage: false, true
2023/03/27 12:10:36 mutate testcase with failures
2023/03/27 12:10:36 ----- mutateArg()
2023/03/27 12:10:36 ----- insertCall()
2023/03/27 12:10:36 ----- generateCall 170 dup dup
2023/03/27 12:10:36 ----- insertCall()
2023/03/27 12:10:36 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 12:10:36 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:10:36 prog length: 10
2023/03/27 12:10:36 HasCrashFail:false HasNetFail:false
12:10:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
r1 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r2 = fcntl$dupfd(r0, 0x406, r1)
flock(r2, 0x2)
r3 = dup(r0)
r4 = dup(r3)
flock(r1, 0x1)
fcntl$lock(r2, 0x24, &(0x7f0000000040)={0x0, 0x3, 0x7ff, 0x1, 0xffffffffffffffff})
flock(r1, 0x2)
fcntl$getown(r4, 0x9)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1272
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-564
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-565 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-565
receive_execute: 5, 5
receive_execute: 3, 6
receive_execute: 4, 6
receive_execute: 4, 5
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2495, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2495, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2495, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 2495, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 122
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2495, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2495, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2495, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2495, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 223, pid 2495, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 223, flag collect 0
----- executor 3 signal number : 1
----- completed 9
----- executor 3 write_call_output, size 228, pid 2495, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 228, flag collect 0
----- executor 3 signal number : 0
----- completed 10
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83336, 102, 1
execute_one time: 1, 83439
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 10, 83441, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10, 83443, 0
before receive testcase: 0 0
----- executor 2 signal number : 1533
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1220
----- executor 2 executes write_coverage_signal cov->size 18756, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 9, 83442, 0
before receive testcase: 0 0
----- executor 2 signal number : 836
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7067
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 741
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4334
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1765
----- executor 2 executes write_coverage_signal cov->size 2431, flag collect 0
----- executor 2 signal number : 165
----- executor 2 executes write_coverage_signal cov->size 13783, flag collect 0
----- executor 2 signal number : 684
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 499
----- executor 2 executes write_coverage_signal cov->size 66, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 12181, flag collect 0
----- executor 2 signal number : 2165
----- executor 2 executes write_coverage_signal cov->size 22987, flag collect 0
----- executor 2 signal number : 1332
----- executor 2 executes write_coverage_signal cov->size 18631, flag collect 0
----- executor 2 signal number : 3693
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 11
executor 2 server cover_cnt 17 output_pos_value 26224
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:11:59 wg wait finish
2023/03/27 12:11:59 ------ all executors finish execution
2023/03/27 12:11:59 exec time: 83460
2023/03/27 12:11:59 ----- PS len: 4
2023/03/27 12:11:59 [CLIENT] executor 3 has 10 replies
2023/03/27 12:11:59 [SERVER] executor 2 has 17 replies
time breakdown 2: 9, 83455, 0
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 1533 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 1220 signal and 0 cover from userspace component
2023/03/27 12:11:59 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:11:59 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 [SERVER] executor 1 has 0 replies
2023/03/27 12:11:59 [SERVER] executor 0 has 0 replies
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 836 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 7067 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 741 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 4334 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 1765 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 684 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 499 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 2165 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 1332 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 3693 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/27 12:11:59 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:11:59 ----- no new client coverage: false, true
2023/03/27 12:11:59 mutate testcase with failures
2023/03/27 12:11:59 ----- mutateArg()
2023/03/27 12:11:59 ----- insertCall()
2023/03/27 12:11:59 ----- generateCall 248 fstat fstat
2023/03/27 12:11:59 ----- insertCall()
2023/03/27 12:11:59 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:11:59 ----- insertCall()
2023/03/27 12:11:59 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 12:11:59 ----- mutateArg()
2023/03/27 12:11:59 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:11:59 prog length: 9
2023/03/27 12:11:59 HasCrashFail:false HasNetFail:false
12:11:59 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000780)='./file1\x00', 0x12040, 0x0)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0x0, 0x0)
open(&(0x7f00000000c0)='./file1\x00', 0x2, 0x0)
r2 = open(&(0x7f0000000080)='./file1\x00', 0x103800, 0x102)
fcntl$lock(r2, 0x25, &(0x7f0000000100)={0x1, 0x2, 0x40, 0x8001, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000240)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x4)
fstat(r0, &(0x7f0000000000))
setxattr$security_evm(0x0, 0x0, 0x0, 0x0, 0x0)
read(r1, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1536
remove dir: /root/cephfs-client/dfs-0-565
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-566 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-566
receive_execute: 18, 19
receive_execute: 4, 19
receive_execute: 16, 19
receive_execute: 17, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 440, pid 2504, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 440, flag collect 0
----- executor 3 signal number : 126
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15007, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1326
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8274, flag collect 0
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 983
----- executor 2 executes write_coverage_signal cov->size 22365, flag collect 0
time breakdown 0: 35, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 6498
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 17097, flag collect 0
----- executor 2 signal number : 1649
time breakdown 3: 37, 6, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 10560, flag collect 0
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2830
executor 2 server cover_cnt 7 output_pos_value 13378
time breakdown 1: 35, 7, 0
before receive testcase: 0 1
2023/03/27 12:11:59 for select break: 1
2023/03/27 12:11:59 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 23, 11, 0
2023/03/27 12:11:59 wg wait finish
before receive testcase: 0 0
2023/03/27 12:11:59 ------ all executors finish execution
2023/03/27 12:11:59 exec time: 30
2023/03/27 12:11:59 ----- PS len: 4
2023/03/27 12:11:59 [SERVER] executor 1 has 0 replies
2023/03/27 12:11:59 [SERVER] executor 2 has 7 replies
2023/03/27 12:11:59 [CLIENT] executor 3 has 9 replies
2023/03/27 12:11:59 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 12:11:59 [SERVER] executor 0 has 0 replies
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 1326 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 983 signal and 0 cover from userspace component
2023/03/27 12:11:59 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 6498 signal and 0 cover from userspace component
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/27 12:11:59 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/27 12:11:59 ------- fuzzer executor 2 receive 2830 signal and 0 cover from userspace component
2023/03/27 12:11:59 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:11:59 ----- no new client coverage: false, true
2023/03/27 12:11:59 mutate testcase with failures
2023/03/27 12:11:59 ----- insertCall()
2023/03/27 12:11:59 ----- generateCall 2350 lseek lseek
2023/03/27 12:11:59 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:11:59 prog length: 18
2023/03/27 12:11:59 HasCrashFail:false HasNetFail:false
12:11:59 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x20040, 0x100)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$lock(r2, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x60)
r4 = dup2(r1, r2)
lseek(r4, 0x8, 0x1)
fcntl$lock(r3, 0x26, &(0x7f0000000100)={0x1, 0x2, 0xff, 0x40})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r6 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r6, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x40000})
fcntl$lock(r6, 0x6, &(0x7f0000000080)={0x0, 0x2, 0x7f14, 0x9})
r7 = fcntl$dupfd(r3, 0x406, r6)
fcntl$getownex(r0, 0x10, &(0x7f0000000140)={0x0, <r8=>0x0})
fcntl$lock(r7, 0x25, &(0x7f0000000180)={0x0, 0x1, 0x6, 0xd7bc, r8})
flock(r5, 0x6)
dup2(r0, 0xffffffffffffffff)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3528
remove dir: /root/cephfs-client/dfs-0-566
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-567 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-567
receive_execute: 4, 8
receive_execute: 9, 8
receive_execute: 8, 8
receive_execute: 8, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2508, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2508, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2508, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2508, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2508, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 12
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2508, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 222, pid 2508, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 222, flag collect 0
----- executor 3 signal number : 9
----- completed 18
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83340, 54, 2
execute_one time: 1, 83396
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 83403, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 16, 83405, 0
before receive testcase: 0 0
time breakdown 0: 16, 83405, 0
before receive testcase: 0 0
----- executor 2 signal number : 1523
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1173
----- executor 2 executes write_coverage_signal cov->size 19295, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 816
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7299
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 645
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4159
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1849
----- executor 2 executes write_coverage_signal cov->size 2431, flag collect 0
----- executor 2 signal number : 165
----- executor 2 executes write_coverage_signal cov->size 8514, flag collect 0
----- executor 2 signal number : 437
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 490
----- executor 2 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 14340, flag collect 0
----- executor 2 signal number : 2239
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1591
----- executor 2 executes write_coverage_signal cov->size 15002, flag collect 0
----- executor 2 signal number : 3465
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 10
executor 2 server cover_cnt 17 output_pos_value 26040
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12, 83414, 0
before receive testcase: 0 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 83422
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 18 replies
2023/03/27 12:13:23 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 17 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1523 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1173 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 816 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 7299 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 645 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4159 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1849 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 437 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 490 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 2239 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1591 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 3465 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 258 getdents getdents
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 9
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x16d)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000840)=ANY=[], 0x16, 0x0)
listxattr(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000480)=""/21, 0x15)
r1 = open$dir(&(0x7f0000000180)='./file0\x00', 0x48000, 0x92)
fsetxattr$trusted_overlay_upper(r1, &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0xb6, 0x0, 0x82, "310c6fb6b72bd65ac540fe64234d3180", "88e24633d6982c577e4965431fe17e88f0a0f93dd77a5846c8d783c4aa13ad470d6556c176c3d0b4d90cb5c8d544dadfcedf53c171582b600cd12a0173d4cf4adb5e1f33153968976a2a4b056e64ba5e0a59218438ad8c61e53dce21db30de085e3130d9dce57fb3f321e95f4cdccb11568879a627e948d48e1f790a7d06cfa4f5430b7467385df2f35a12f63b019228ef27e9e6a833d489620f3acfdb4a50de5a"}, 0xb6, 0x6)
getdents(r0, &(0x7f0000000380)=""/223, 0xdf)
setxattr$trusted_overlay_nlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)={'L+', 0x4c0}, 0x16, 0x2)
open$dir(&(0x7f0000000300)='./file0\x00', 0x300, 0x4)
unlink(&(0x7f0000000340)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1992
remove dir: /root/cephfs-client/dfs-0-567
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-568 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-568
receive_execute: 17, 10
receive_execute: 6, 10
receive_execute: 15, 11
receive_execute: 15, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 119, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 119, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 220, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 569, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 569, flag collect 0
----- executor 3 signal number : 123
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 499, pid 2514, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 499, flag collect 0
----- executor 3 signal number : 29
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 8, 9, 0
execute_one time: 1, 17
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27383, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 917, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 22598, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 25, 20, 0
time breakdown 1: 26, 19, 0
----- executor 2 signal number : 1012
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7796
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 27, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 1954
----- executor 2 executes write_coverage_signal cov->size 22754, flag collect 0
before receive testcase: 0 0
before receive testcase: 0 1
----- executor 2 signal number : 4454
executor 2 server cover_cnt 7 output_pos_value 16712
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 35
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
time breakdown 2: 16, 25, 0
before receive testcase: 0 0
2023/03/27 12:13:23 [SERVER] executor 2 has 7 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1012 signal and 0 cover from userspace component
2023/03/27 12:13:23 [CLIENT] executor 3 has 9 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 7796 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1954 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4454 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 15
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
open$dir(0x0, 0x0, 0x100)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = open(&(0x7f0000000140)='./file4\x00', 0x100, 0x101)
link(&(0x7f0000000340)='./file0\x00', &(0x7f0000000180)='./file4\x00')
rename(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)='./file4\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
link(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000240)='./file1\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
mkdir(&(0x7f0000000300)='.\x00', 0x0)
fcntl$dupfd(r0, 0x406, r0)
r2 = openat(r1, &(0x7f0000000040)='./file0\x00', 0x40103, 0x4)
fstat(r2, &(0x7f0000000080))
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000100)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2024
remove dir: /root/cephfs-client/dfs-0-568
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-569 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-569
receive_execute: 10, 10
receive_execute: 7, 11
receive_execute: 9, 10
receive_execute: 4, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 91
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 860, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 860, flag collect 0
----- executor 3 signal number : 113
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 27
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 598, pid 2518, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 598, flag collect 0
----- executor 3 signal number : 3
----- completed 15
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 15, 19, 0
execute_one time: 1, 34
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 2033, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1016
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 39, 0
time breakdown 1: 18, 38, 0
before receive testcase: 0 0
----- executor 2 signal number : 7647
----- executor 2 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 8734, flag collect 0
time breakdown 3: 20, 37, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 869
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6399
executor 2 server cover_cnt 8 output_pos_value 18930
time breakdown 2: 14, 48, 0
before receive testcase: 0 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 66
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 15 replies
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:23 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1016 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 7647 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 869 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 6399 signal and 0 cover from userspace component
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 122 chown chown
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 4
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x100c1, 0x0)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
chown(&(0x7f0000000000)='./file1\x00', r1, r2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 600
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-569
remove dir time 37
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-570 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-570
receive_execute: 29, 38
receive_execute: 26, 38
receive_execute: 18, 38
receive_execute: 27, 38
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 1, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2522, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2522, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 148
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2522, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2522, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
cover_reset in execute_call
2023/03/27 12:13:23 for select break: 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6132, flag collect 0
----- executor 2 signal number : 1286
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 16309, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 5483
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 7376
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 64, 7, 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 56, 7, 0
before receive testcase: 0 0
time breakdown 3: 67, 5, 0
before receive testcase: 0 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 46
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 4 replies
2023/03/27 12:13:23 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 4 replies
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1286 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 5483 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
time breakdown 0: 65, 8, 0
before receive testcase: 0 0
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 10
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x40ac1, 0x0)
truncate(&(0x7f0000000200)='./file1\x00', 0x2000200)
lsetxattr$security_evm(&(0x7f0000000100)='./file1\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x1, 0x2)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x680, 0x13)
open(&(0x7f00000002c0)='./file1\x00', 0x20000, 0x28)
fstat(r1, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
symlinkat(&(0x7f0000000240)='./file1\x00', r0, &(0x7f0000000280)='./file1\x00')
unlink(&(0x7f00000000c0)='./file1\x00')
chown(&(0x7f0000000080)='./file1\x00', r2, 0xee00)
lgetxattr(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)=@known='com.apple.FinderInfo\x00', &(0x7f00000001c0)=""/38, 0x26)
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1616
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-570
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-571 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-571
receive_execute: 5, 19
receive_execute: 1, 18
receive_execute: 3, 19
receive_execute: 2, 19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 473
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 178
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 210, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 55
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 587, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 587, flag collect 0
----- executor 3 signal number : 95
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2525, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2525, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 496, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 496, flag collect 0
----- executor 3 signal number : 25
----- completed 8
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2525, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 6, 0
execute_one time: 0, 26
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28792, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1299
----- executor 2 executes write_coverage_signal cov->size 892, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 1110
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 24, 28, 0
before receive testcase: 0 0
----- executor 2 signal number : 8018
----- executor 2 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1905
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 19, 30, 0
before receive testcase: 0 0
----- executor 2 signal number : 5822
executor 2 server cover_cnt 8 output_pos_value 18531
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 53
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 10 replies
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 fuzzer receive 473 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1299 signal and 0 cover from userspace component
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1110 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 8018 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1905 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 5822 signal and 0 cover from userspace component
time breakdown 2: 22, 34, 0
before receive testcase: 0 0
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2814 rmdir rmdir
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2373 mkdir mkdir
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 8
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x3, &(0x7f00000001c0)={0x0, 0x0, 0x80})
mkdir(&(0x7f00000000c0)='./file0\x00', 0x100)
fstat(0xffffffffffffffff, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r0=>0x0, <r1=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000240)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee00, @ANYBLOB="02000600", @ANYRES32=r0, @ANYBLOB="040000000000000008000500", @ANYRES32=0xee01, @ANYBLOB="08000500", @ANYRES32, @ANYRES64=r0, @ANYRES32=r1, @ANYBLOB="10000200000000002000000000000000"], 0x4c, 0x3)
mkdir(&(0x7f0000000180)='./file0\x00', 0x18)
fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
lchown(&(0x7f0000000080)='./file0\x00', 0xee01, 0xffffffffffffffff)
rmdir(&(0x7f0000000200)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1768
remove dir: /root/cephfs-client/dfs-0-571
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 13
executor 3 create dir /root/cephfs-client/dfs-0-572 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-572
receive_execute: 10, 26
receive_execute: 8, 26
receive_execute: 4, 26
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 27
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 88
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 474, pid 2529, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 474, flag collect 0
----- executor 3 signal number : 42
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 0, 6
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10073, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 35, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 411, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 8167, flag collect 0
----- executor 2 signal number : 982
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 34, 9, 0
time breakdown 3: 36, 7, 0
before receive testcase: 0 1
----- executor 2 signal number : 7196
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32718, flag collect 0
----- executor 2 signal number : 1592
----- executor 2 executes write_coverage_signal cov->size 13915, flag collect 0
----- executor 2 signal number : 2765
before receive testcase: 0 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 39
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 8 replies
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 982 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 7196 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1592 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 2765 signal and 0 cover from userspace component
executor 2 server cover_cnt 8 output_pos_value 13927
time breakdown 2: 30, 13, 0
before receive testcase: 0 0
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2723 pread64 pread64
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2781 readlinkat readlinkat
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 13
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file4\x00', 0x139040, 0x40)
r1 = dup(r0)
r2 = fcntl$getown(r0, 0x9)
fsetxattr$security_selinux(r1, &(0x7f0000000200), &(0x7f0000000240)='system_u:object_r:dhcpc_state_t:s0\x00', 0x23, 0x1)
fcntl$lock(r1, 0x25, &(0x7f0000000040)={0x2, 0x4, 0x6, 0x1, r2})
r3 = fcntl$getown(r0, 0x9)
fcntl$lock(r0, 0x6, &(0x7f0000000280)={0x6274309e533af6c1, 0x0, 0xe44b, 0x10000, r3})
pread64(0xffffffffffffffff, &(0x7f0000000080)=""/164, 0xa4, 0x5)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
readlinkat(r1, &(0x7f00000002c0)='./file4\x00', &(0x7f0000000300)=""/192, 0xc0)
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
lgetxattr(&(0x7f00000004c0)='./file4\x00', &(0x7f0000000500)=@known='system.posix_acl_default\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2360
remove dir: /root/cephfs-client/dfs-0-572
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-573 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-573
receive_execute: 9, 14
receive_execute: 3, 14
receive_execute: 8, 14
receive_execute: 8, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2533, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 177
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 7, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6188, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15854, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 5477
----- executor 2 executes write_coverage_signal cov->size 6656, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 554
executor 2 server cover_cnt 4 output_pos_value 7391
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 25
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 13 replies
2023/03/27 12:13:23 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 4 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 5477 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 17, 11, 0
before receive testcase: 0 0
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 2
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={0x0, 0xfb, 0x3d, 0x1, 0x1, "6c37f985326ff58af45304ba0df565cc", "df16243f323d65b9e3733798d49154fd3a77c651d35ba6b9d446cd130cf12d4d256a1386f45f456c"}, 0x3d, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 720
remove dir: /root/cephfs-client/dfs-0-573
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-574 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-574
receive_execute: 6, 16
receive_execute: 4, 16
receive_execute: 6, 16
receive_execute: 3, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 477, pid 2536, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 530, pid 2536, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 215
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 22, 4, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7926, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1281
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17829, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5336
----- executor 2 executes write_coverage_signal cov->size 7077, flag collect 0
time breakdown 0: 22, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 572
executor 2 server cover_cnt 4 output_pos_value 7269
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 6, 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 22
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 2 replies
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 4 replies
2023/03/27 12:13:23 fuzzer receive 388 signal and 0 cover from executor 3
time breakdown 2: 19, 6, 0
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 fuzzer receive 215 signal and 0 cover from executor 3
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1281 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 5336 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 572 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2458 open open
2023/03/27 12:13:23 ----- removeCall()
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2809 rename rename
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 17
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
open(&(0x7f0000000380)='./file0\x00', 0x0, 0x1ae)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
r3 = fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x7, &(0x7f0000000a00))
r4 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
symlinkat(&(0x7f0000000440)='./file0\x00', r3, &(0x7f0000000480)='./file0\x00')
rename(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
fcntl$lock(r4, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x81, 0xbab0})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r4, 0x6, &(0x7f0000000200)={0x1, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3360
remove dir: /root/cephfs-client/dfs-0-574
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-575 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-575
receive_execute: 4, 30
receive_execute: 2, 30
receive_execute: 0, 29
receive_execute: 3, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2538, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2538, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 6
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2538, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2538, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 347, pid 2538, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 3 signal number : 28
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 4, 0
execute_one time: 1, 16
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 34, 18, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24402, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 19, 0
before receive testcase: 0 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 21, 0
----- executor 2 signal number : 1328
----- executor 2 executes write_coverage_signal cov->size 868, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 13998, flag collect 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8120
----- executor 2 executes write_coverage_signal cov->size 4906, flag collect 0
----- executor 2 signal number : 424
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 25243, flag collect 0
----- executor 2 signal number : 1250
----- executor 2 executes write_coverage_signal cov->size 16786, flag collect 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 signal number : 4044
executor 2 server cover_cnt 8 output_pos_value 16268
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 32, 26, 0
before receive testcase: 0 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 56
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 17 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1328 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 8120 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1250 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4044 signal and 0 cover from userspace component
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 12
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x2, 0x128)
symlink(&(0x7f0000000180)='./file0\x00', &(0x7f0000000280)='./file0\x00')
r1 = openat(r0, &(0x7f0000000140)='./file0\x00', 0x402983, 0x0)
fstat(r1, &(0x7f0000000200))
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c93c0, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x200, 0x52)
setxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)='system_u:object_r:kmsg_device_t:s0\x00', 0x23, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
fcntl$getown(r0, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1920
remove dir: /root/cephfs-client/dfs-0-575
remove dir time 17
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-576 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-576
receive_execute: 12, 20
receive_execute: 11, 20
receive_execute: 4, 20
receive_execute: 9, 21
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 567, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 567, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 52
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 557, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 557, flag collect 0
----- executor 3 signal number : 84
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2541, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 6, 0
execute_one time: 2, 21
cover_reset in execute_call
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 32, 25, 0
executor 1 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1349
----- executor 2 executes write_coverage_signal cov->size 1569, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 26, 0
before receive testcase: 0 0
----- executor 2 signal number : 1063
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7849
----- executor 2 executes write_coverage_signal cov->size 4562, flag collect 0
----- executor 2 signal number : 400
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6814
executor 2 server cover_cnt 8 output_pos_value 18984
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 53
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 12 replies
2023/03/27 12:13:23 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 24, 32, 0
before receive testcase: 0 0
2023/03/27 12:13:23 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1349 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1063 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 7849 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 400 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 6814 signal and 0 cover from userspace component
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
time breakdown 1: 30, 27, 0
before receive testcase: 0 0
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 3
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000140)='./file0\x00', 0x225c2, 0x0)
write$binfmt_script(r0, &(0x7f0000000380)={'#! ', './file1'}, 0xb)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000180)={0x0, 0xfb, 0xe9, 0x1, 0x1, "ab6b9e1f55ffa475962b3b4c68ecb7ed", "35f5b85a5bc6321174a8a472573f8a727a4d4f0fb8477582ac08b21ea1f76b08a2239b6b4cfde72639d0bd5669c1082440c6a6be8ed1e8d06a37a2736d8d1f86283f491999acf02faebed0524541291e82cd1604b9192ea683170b721939f795060bc99a3ca55bdaa4913266b2e615f655c8ae4693be0f30c01e4f70f7c04b85673a2dcdc097a5ee435772eab2f1ea82785338455084b3409ac47cfc9889c9c50c4afae7f891e656e5056759941f461750c1e5ff09440896c6122c9ec81e85c97e7316fb85d6350096d23b742ee6f6ad5f83ca15"}, 0xe9, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1120
remove dir: /root/cephfs-client/dfs-0-576
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-577 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-577
receive_execute: 11, 12
receive_execute: 4, 11
receive_execute: 8, 12
receive_execute: 10, 11
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 2544, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 2544, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 351
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2544, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 0, 7
time breakdown 3: 23, 8, 0
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 4292, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12503, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5087
----- executor 2 executes write_coverage_signal cov->size 1062, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 6717, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 579
executor 2 server cover_cnt 5 output_pos_value 7316
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 11, 0
before receive testcase: 0 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 24
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 3 replies
2023/03/27 12:13:23 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 351 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 5 replies
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 5087 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 579 signal and 0 cover from userspace component
time breakdown 2: 15, 13, 0
before receive testcase: 0 0
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3761 stat stat
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 248 fstat fstat
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2814 rmdir rmdir
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3764 symlink symlink
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2341 lchown lchown
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3764 symlink symlink
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3761 stat stat
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 12
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
rmdir(&(0x7f0000000240)='./file1\x00')
stat(&(0x7f0000000500)='./file1\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, <r0=>0x0, <r1=>0x0})
lchown(&(0x7f00000004c0)='./file0\x00', 0x0, r1)
symlink(&(0x7f00000005c0)='./file0\x00', &(0x7f0000000600)='./file1\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x2)
setxattr$system_posix_acl(&(0x7f0000000640)='./file0\x00', &(0x7f0000000700)='system.posix_acl_access\x00', &(0x7f0000000740)={{}, {0x1, 0x4}, [{0x2, 0x1, r0}], {0x4, 0x5}, [{0x8, 0x6, r1}], {0x10, 0x3}, {0x20, 0x4}}, 0x34, 0x2)
open$dir(&(0x7f0000000000)='./file0\x00', 0x38041, 0x0)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
stat(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0))
fstat(0xffffffffffffffff, &(0x7f00000001c0))
setxattr$system_posix_acl(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0)='system.posix_acl_access\x00', &(0x7f0000000300)=ANY=[@ANYBLOB="0200000001000000000000040000000000000010000000000000002000040000000000006fac07e9afca7b5b89da58a98216f8e9f8ea68dd952e6da6ab36077df2b9dbb3ce4218279d49990e5651359d871b6dee051089ec882430786b0f2c272e5d622034a9b060e58e17094a16d9e97eea88a9c6e9bd5900e38b67d824b7c4d3587795885237d31d9a4e89c3c265808e6f6edb7273a6c0610e0a2580e253efba25461578c9a58161a0f64a013725b5e175a596e1deaacd1229cc8837ef36083670d7bf6c35b004fa7264cf1dc2696cacf2244c886ba62c61b13400e860e4f452fc7e54223c5541c712cd1105e94672d1e49129d565a84d89a1abd9911826f206853c15f58a21c4c5c011288b4447da6ccc18a69f62f3fc7267e982c9d795658b4fcbe27d835504a4cd4099e1029467634d314c8aecd459041421364ee99d5ffe08d07ad6926224395227ae930e29084b3912f13e80ae90c0100168bcfebe58ff6f352de2960c069830d181fd8c81a697861e5ed55fb4d7e10ebfb02f6754baa62a7a1a2eda46b2d64afc97c184c03110b0b46f015b063129b0b31d3bac373e54dc749c"], 0x24, 0x0)
symlink(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3192
remove dir: /root/cephfs-client/dfs-0-577
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-578 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-578
receive_execute: 6, 20
receive_execute: 4, 20
receive_execute: 4, 19
receive_execute: 2, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- executor 3 signal number : 346
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 192
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 637, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 637, flag collect 0
----- executor 3 signal number : 149
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 33
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 224, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2547, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 3, 0
execute_one time: 1, 8
cover_reset in execute_call
time breakdown 3: 26, 11, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 21622, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1326
----- executor 2 executes write_coverage_signal cov->size 837, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 11, 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 6970
----- executor 2 executes write_coverage_signal cov->size 2031, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 24701, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 657
executor 2 server cover_cnt 5 output_pos_value 9352
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 35
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 12 replies
2023/03/27 12:13:23 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 5 replies
time breakdown 2: 22, 15, 0
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1326 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 6970 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 657 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 192 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 7
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
lsetxattr$security_ima(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180), &(0x7f0000000200)=@v1={0x2, "8f26b06504"}, 0x6, 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(r1, &(0x7f00000001c0)=""/61, 0x3d)
dup2(r0, r1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1144
remove dir: /root/cephfs-client/dfs-0-578
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-579 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-579
receive_execute: 7, 17
receive_execute: 3, 17
receive_execute: 4, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
receive_execute: 6, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2552, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2552, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 163
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2552, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2552, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2552, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 2552, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 101
----- completed 6
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 115, pid 2552, write pid:-2127004809
----- executor 3 executes write_coverage_signal cov->size 115, flag collect 0
----- executor 3 signal number : 81
----- completed 7
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 26, 1, 0
execute_one time: 1, 27
2023/03/27 12:13:23 for select break: 1
time breakdown 3: 24, 30, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16906, flag collect 0
executor 0 write_server_output
2023/03/27 12:13:23 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1336
----- executor 2 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11633, flag collect 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 31, 0
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 983
----- executor 2 executes write_coverage_signal cov->size 31561, flag collect 0
time breakdown 0: 23, 31, 0
----- executor 2 signal number : 7012
----- executor 2 executes write_coverage_signal cov->size 1829, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1756
----- executor 2 executes write_coverage_signal cov->size 19843, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4030
executor 2 server cover_cnt 8 output_pos_value 15532
2023/03/27 12:13:23 for select break: 1
2023/03/27 12:13:23 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:23 wg wait finish
2023/03/27 12:13:23 ------ all executors finish execution
2023/03/27 12:13:23 exec time: 54
2023/03/27 12:13:23 ----- PS len: 4
2023/03/27 12:13:23 [CLIENT] executor 3 has 7 replies
2023/03/27 12:13:23 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 163 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:23 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:23 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1336 signal and 0 cover from userspace component
2023/03/27 12:13:23 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/27 12:13:23 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 983 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 7012 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
time breakdown 2: 20, 36, 0
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 1756 signal and 0 cover from userspace component
2023/03/27 12:13:23 ------- fuzzer executor 2 receive 4030 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:23 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:23 ----- no new client coverage: false, true
2023/03/27 12:13:23 mutate testcase with failures
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 3970 unlink unlink
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:13:23 ----- mutateArg()
2023/03/27 12:13:23 ----- insertCall()
2023/03/27 12:13:23 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/27 12:13:23 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:23 prog length: 4
2023/03/27 12:13:23 HasCrashFail:false HasNetFail:false
12:13:23 ---executing program 0:
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000180)=ANY=[@ANYBLOB="2321202e2f666c653020ae2d7d20202340206b282b26272f26203a258a205b2b91ddfc7905ccce218632b7df83d6202327255d2026285d200ac313cb608bb236e4c18905a8ed2a"], 0x40)
open$dir(&(0x7f00000000c0)='./file0/file0\x00', 0x0, 0x40)
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
unlink(&(0x7f0000000000)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 592
remove dir: /root/cephfs-client/dfs-0-579
remove dir time 23
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-580 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-580
receive_execute: 11, 24
receive_execute: 3, 25
receive_execute: 9, 24
receive_execute: 8, 25
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2557, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2557, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2557, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 2557, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 56
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8324, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1278
----- executor 2 executes write_coverage_signal cov->size 382, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26791, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 33, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 6126
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 22068, flag collect 0
time breakdown 0: 33, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 649
executor 2 server cover_cnt 5 output_pos_value 8144
time breakdown 3: 35, 5, 0
before receive testcase: 0 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 34
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 4 replies
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 2 has 5 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1278 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 6126 signal and 0 cover from userspace component
time breakdown 2: 28, 9, 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 649 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2808 removexattr removexattr
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 20
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
removexattr(&(0x7f0000000800)='./file1\x00', &(0x7f0000000840)=@random={'user.', 'system.posix_acl_default\x00'})
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=ANY=[@ANYBLOB="d08495160608af9b00"/22], 0x16, 0x0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000340)='./file0\x00', 0x8)
lsetxattr$user(&(0x7f0000000040)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='+@\xd7\x00', 0x4, 0x0)
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$security_capability(&(0x7f0000000580)='./file0/file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@v1={0x1000000, [{0x38, 0x4}]}, 0xc, 0x0)
stat(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380))
stat(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
readlink(&(0x7f0000000500)='./file1\x00', &(0x7f0000000700)=""/94, 0x5e)
lsetxattr$system_posix_acl(&(0x7f00000004c0)='./file0/file1\x00', &(0x7f0000000180)='system.posix_acl_default\x00', &(0x7f0000000640)=ANY=[@ANYBLOB="02000000010004000000000002000200", @ANYBLOB="98cd01f1", @ANYBLOB="02000700", @ANYRES64=0x0, @ANYBLOB="02000200", @ANYRESDEC, @ANYBLOB="02000700", @ANYRES32=r1, @ANYBLOB='\x00m+\x00', @ANYRES32=r2, @ANYBLOB="040003000000000008000100", @ANYBLOB="c304453f18996acafe8b49603f0947c239c1cb86c843033784c2a3a969358839e412f3b2b4c53c", @ANYBLOB="088d0f0000379bb9833ef6eb289c6fef1e2177ff7c57d7a3", @ANYRES32=0x0, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB="08000300", @ANYRES32=r3, @ANYBLOB="1000000000000000200002000000afe1"], 0x6c, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000000540)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x1)
open$dir(&(0x7f0000000880)='./file0/file1\x00', 0x40e783, 0x48)
chdir(&(0x7f0000000140)='./file0/file1\x00')
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
fstat(r0, &(0x7f0000000240))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4368
remove dir: /root/cephfs-client/dfs-0-580
remove dir time 18
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-581 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-581
receive_execute: 7, 19
receive_execute: 3, 19
receive_execute: 4, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 12
----- completed 7
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 8
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 682, pid 2560, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 682, flag collect 0
----- executor 3 signal number : 49
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2560, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 1
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 19, 0
execute_one time: 1, 39
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 26, 41, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 24, 43, 0
before receive testcase: 0 0
----- executor 2 signal number : 1344
----- executor 2 executes write_coverage_signal cov->size 2116, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1108
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 25, 42, 0
before receive testcase: 0 1
----- executor 2 signal number : 7962
----- executor 2 executes write_coverage_signal cov->size 14500, flag collect 0
----- executor 2 signal number : 1741
----- executor 2 executes write_coverage_signal cov->size 6000, flag collect 0
----- executor 2 signal number : 427
----- executor 2 executes write_coverage_signal cov->size 1331, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1652
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7020
executor 2 server cover_cnt 10 output_pos_value 21688
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 66
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 10 replies
2023/03/27 12:13:24 [CLIENT] executor 3 has 20 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1344 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1108 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7962 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1741 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 427 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1652 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7020 signal and 0 cover from userspace component
time breakdown 2: 22, 47, 0
before receive testcase: 0 0
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2814 rmdir rmdir
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 4
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0x0, 0x0)
fstat(r0, &(0x7f00000001c0))
rmdir(&(0x7f0000000000)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 464
remove dir: /root/cephfs-client/dfs-0-581
remove dir time 21
-----finish removing dir
receive_execute: 5, 27
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-582 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-582
receive_execute: 11, 27
receive_execute: 9, 27
receive_execute: 9, 28
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2564, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2564, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 42, pid 2564, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 3 signal number : 23
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 470, pid 2564, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 470, flag collect 0
----- executor 3 signal number : 37
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 1, 6
cover_reset in execute_call
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 37, 10, 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10098, flag collect 0
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 693, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 25482, flag collect 0
----- executor 2 signal number : 1139
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6990
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 15895, flag collect 0
time breakdown 0: 36, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 2334
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 855
executor 2 server cover_cnt 7 output_pos_value 12696
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 41
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 4 replies
2023/03/27 12:13:24 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 7 replies
time breakdown 2: 32, 14, 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1139 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 6990 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 2334 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 855 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2809 rename rename
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 13
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000440), &(0x7f0000000640)=ANY=[@ANYBLOB="00fb0805b966a4767eafb7b597a94e0285d302006f418e4d976f65569a2de7127e784e23d278ba66f846acc6d88385625f2ba86b60e89295e9e5d394ad32520c26c9200d355493ba94e798fb5e0f14db008ccd09cf69cbcb3a2109a3bd9a3ea0c6960dcd31c82be43a0c39509140bd27979d8f99f25698dff77235c9f3681b92ad979ecc21181866bd045be89d7686efe2bbfd8ff9b671866276576396df79614224599bda924360d56b9d5de73612744b8a1ec6dac8bdb47cda31701d8efb0418e48ac639cfc7c1ac6035675229bc727c4806e48a790d4184da0dffabcc434c98daecc6333b839805b1d04b809c17848abed1467b7a019df51e80d0fc350a1333a123266576bec1c4545ffe83dad7309cbce556d0bb33a9b315867420109ba41e26fbf411d478ff9d3e7dec8dddb8bc433b2bc23435ef57d270a656387f1512837df377b140dc4030c6cc597dbe262aa99e815d9ea1f70a3c072b559300e302ec"], 0x108, 0x3)
open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000240)=@v2={0x2000000, [{0x9, 0xf18a}, {0x874, 0x80000000}]}, 0x14, 0x1)
lchown(&(0x7f0000000480)='./file0\x00', 0x0, 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x305, 0x41)
fgetxattr(r0, &(0x7f0000000100)=@known='system.advise\x00', &(0x7f0000000140)=""/83, 0x53)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x3)
rename(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500)='./file1\x00')
lsetxattr$security_capability(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f00000003c0)=@v2={0x2000000, [{0x9, 0x6}, {0x0, 0x2}]}, 0x14, 0x3)
stat(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340))
open$dir(&(0x7f0000000600)='./file0\x00', 0x40000, 0xa)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 38, 8, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3064
remove dir: /root/cephfs-client/dfs-0-582
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-583 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-583
receive_execute: 8, 21
receive_execute: 6, 21
receive_execute: 6, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
receive_execute: 3, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 471
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 59
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 457, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 3 signal number : 95
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 617, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 617, flag collect 0
----- executor 3 signal number : 115
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 823, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 823, flag collect 0
----- executor 3 signal number : 130
----- completed 6
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7, pid 2567, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 3 signal number : 6
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 210, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 37
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 215, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 3 signal number : 9
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2567, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 2
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 2, 13
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 29, 17, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28135, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 27, 18, 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 26, 19, 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 860, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 22189, flag collect 0
----- executor 2 signal number : 999
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7411
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 785
----- executor 2 executes write_coverage_signal cov->size 24654, flag collect 0
before receive testcase: 0 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 44
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 13 replies
2023/03/27 12:13:24 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 7 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
----- executor 2 signal number : 5122
executor 2 server cover_cnt 7 output_pos_value 15801
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 999 signal and 0 cover from userspace component
time breakdown 2: 24, 23, 0
before receive testcase: 0 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7411 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 785 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 5122 signal and 0 cover from userspace component
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 7
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file2\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x2, 0x3)
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
close(r0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1024
remove dir: /root/cephfs-client/dfs-0-583
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-584 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-584
receive_execute: 9, 11
receive_execute: 8, 11
receive_execute: 8, 10
receive_execute: 3, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 619, pid 2571, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 2571, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 92
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 618, pid 2571, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 466, pid 2571, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 466, flag collect 0
----- executor 3 signal number : 24
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2571, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2571, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 28, pid 2571, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 20, 0
execute_one time: 1, 29
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 20, 34, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1487
----- executor 2 executes write_coverage_signal cov->size 1756, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 19, 35, 0
time breakdown 1: 18, 36, 0
before receive testcase: 0 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7312
----- executor 2 executes write_coverage_signal cov->size 698, flag collect 0
----- executor 2 signal number : 89
----- executor 2 executes write_coverage_signal cov->size 13929, flag collect 0
----- executor 2 signal number : 625
----- executor 2 executes write_coverage_signal cov->size 8461, flag collect 0
----- executor 2 signal number : 1412
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 841
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5922
executor 2 server cover_cnt 9 output_pos_value 18789
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 52
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:13:24 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 92 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 9 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1487 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 24 signal and 0 cover from executor 3
time breakdown 2: 14, 41, 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7312 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 89 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 625 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1412 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 841 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 5922 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 3970 unlink unlink
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 6
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file4\x00')
lgetxattr(&(0x7f00000004c0)='./file4\x00', &(0x7f0000000500)=@known='system.posix_acl_default\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/cephfs-client/dfs-0-584
remove dir time 6
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-585 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-585
receive_execute: 11, 11
receive_execute: 4, 10
receive_execute: 10, 10
receive_execute: 10, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2574, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2574, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 185
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 2574, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2574, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 33
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2574, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 28
----- completed 5
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2574, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 6, 0
execute_one time: 0, 32
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27968, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 22, 34, 0
before receive testcase: 0 0
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 1116, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 18727, flag collect 0
----- executor 2 signal number : 989
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 37, 0
before receive testcase: 0 0
----- executor 2 signal number : 7641
----- executor 2 executes write_coverage_signal cov->size 3823, flag collect 0
----- executor 2 signal number : 382
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1640
----- executor 2 executes write_coverage_signal cov->size 31061, flag collect 0
----- executor 2 signal number : 6118
executor 2 server cover_cnt 8 output_pos_value 18269
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 49
time breakdown 1: 20, 36, 0
before receive testcase: 0 0
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 6 replies
2023/03/27 12:13:24 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
time breakdown 2: 14, 40, 0
before receive testcase: 0 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 989 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7641 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 382 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1640 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 6118 signal and 0 cover from userspace component
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2341 lchown lchown
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 3
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
chmod(&(0x7f0000000000)='./file0\x00', 0x0)
lchown(&(0x7f0000000080)='./file0\x00', 0x0, 0xee00)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 368
remove dir: /root/cephfs-client/dfs-0-585
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-586 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-586
receive_execute: 10, 12
receive_execute: 9, 12
receive_execute: 5, 12
receive_execute: 8, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2577, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2577, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 119
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 172, pid 2577, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 172, flag collect 0
----- executor 3 signal number : 12
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 22, 4, 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4163, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 11353, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4696
----- executor 2 executes write_coverage_signal cov->size 340, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
time breakdown 0: 20, 5, 0
before receive testcase: 0 0
time breakdown 1: 21, 5, 0
2023/03/27 12:13:24 for select break: 1
before receive testcase: 0 1
----- executor 2 signal number : 524
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 6802
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 19
before receive testcase: 0 0
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 3 replies
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 5 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 4696 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 524 signal and 0 cover from userspace component
time breakdown 2: 17, 7, 0
before receive testcase: 0 1
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2459 open$dir open$dir
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2458 open open
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 20
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
open$dir(&(0x7f00000003c0)='./file0\x00', 0x101000, 0x6bc4c49f9596d71f)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000440)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
open(&(0x7f0000000400)='./file0\x00', 0x400000, 0x4)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3640
remove dir: /root/cephfs-client/dfs-0-586
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
receive_execute: 3, 18
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-587 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-587
receive_execute: 6, 18
receive_execute: 5, 17
receive_execute: 6, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2580, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2580, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2580, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2580, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 344, pid 2580, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 3 signal number : 27
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
[ 1040.969248] ==================================================================
[ 1040.969965] BUG: KASAN: use-after-free in ceph_fl_release_lock+0x87/0x160
[ 1040.970560] Write of size 4 at addr ff1100010ca7df7c by task syz-executor/2580
[ 1040.971174] 
[ 1040.971313] CPU: 1 PID: 2580 Comm: syz-executor Tainted: G        W         5.15.0+ #9
[ 1040.971997] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[ 1040.972790] Call Trace:
[ 1040.973010]  dump_stack_lvl+0x34/0x44
[ 1040.973339]  print_address_description.constprop.0+0x21/0x140
[ 1040.973871]  ? ceph_fl_release_lock+0x87/0x160
[ 1040.974277]  ? ceph_fl_release_lock+0x87/0x160
[ 1040.974687]  kasan_report.cold+0x7f/0x11b
[ 1040.975186]  ? ceph_fl_release_lock+0x87/0x160
[ 1040.975609]  kasan_check_range+0x17c/0x1e0
[ 1040.975997]  ceph_fl_release_lock+0x87/0x160
[ 1040.976394]  locks_release_private+0x5a/0xb0
[ 1040.976796]  locks_dispose_list+0x31/0x50
[ 1040.977170]  posix_lock_inode+0x13e/0x7f0
[ 1040.977551]  locks_lock_inode_wait+0xb4/0x180
[ 1040.977960]  ceph_lock+0x3a1/0x550
[ 1040.978275]  locks_remove_posix+0xc6/0x150
[ 1040.978654]  filp_close+0x4c/0x60
[ 1040.978963]  __x64_sys_close+0x9/0x40
[ 1040.979300]  do_syscall_64+0x38/0x90
[ 1040.979622]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[ 1040.980065] RIP: 0033:0x7ffff732bd5b
cover_reset in execute_call
[ 1040.980388] Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2f 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
[ 1040.982091] RSP: 002b:00007fffffffe220 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
[ 1040.982571] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff732bd5b
[ 1040.983047] RDX: 0000018722fcc797 RSI: 0000000000000000 RDI: 0000000000000003
[ 1040.983578] RBP: 00007fffffffe250 R08: 0000000000000000 R09: 00000000001ec8f6
[ 1040.984221] R10: 0000000064218864 R11: 0000000000000293 R12: 00007ffff732e270
[ 1040.984848] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[ 1040.985495] 
[ 1040.985637] Allocated by task 2582:
[ 1040.986066] 
[ 1040.986173] Freed by task 2583:
[ 1040.986453] 
[ 1040.986584] The buggy address belongs to the object at ff1100010ca7df60
[ 1040.986584]  which belongs to the cache ceph_file_info of size 32
[ 1040.987612] The buggy address is located 28 bytes inside of
[ 1040.987612]  32-byte region [ff1100010ca7df60, ff1100010ca7df80)
[ 1040.988643] The buggy address belongs to the page:
[ 1040.989086] 
[ 1040.989223] Memory state around the buggy address:
[ 1040.989643]  ff1100010ca7de00: fc fc fa fb fb fb fc fc fa fb fb fb fc fc fa fb
[ 1040.990099]  ff1100010ca7de80: fb fb fc fc fa fb fb fb fc fc fa fb fb fb fc fc
[ 1040.990586] >ff1100010ca7df00: 00 00 00 00 fc fc 00 00 00 00 fc fc fa fb fb fb
[ 1040.991173]                                                                 ^
[ 1040.991768]  ff1100010ca7df80: fc fc 00 00 00 00 fc fc 00 00 00 00 fc fc fc fc
[ 1040.992352]  ff1100010ca7e000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
[ 1040.992967] ==================================================================
executor 3, execute_one inner time: 10, 1, 29
execute_one time: 1, 40
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26963, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1342
----- executor 2 executes write_coverage_signal cov->size 902, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13995, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1002
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 22, 44, 0
before receive testcase: 0 0
time breakdown 0: 23, 43, 0
before receive testcase: 0 0
----- executor 2 signal number : 7933
----- executor 2 executes write_coverage_signal cov->size 3741, flag collect 0
----- executor 2 signal number : 385
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27718, flag collect 0
time breakdown 3: 24, 42, 0
before receive testcase: 0 0
----- executor 2 signal number : 1988
----- executor 2 executes write_coverage_signal cov->size 13697, flag collect 0
----- executor 2 signal number : 3051
executor 2 server cover_cnt 8 output_pos_value 15797
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 65
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 20 replies
time breakdown 2: 21, 47, 0
2023/03/27 12:13:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1342 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 27 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1002 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7933 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 385 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1988 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 3051 signal and 0 cover from userspace component
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2462 openat openat
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 7
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000180)='./file1\x00', 0x3c102, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x40)
r2 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xace02, 0x0)
read(r2, 0x0, 0x0)
write$binfmt_misc(r1, 0x0, 0x0)
openat(r2, &(0x7f0000000040)='./file1\x00', 0x363201, 0x40)
write$binfmt_elf64(r0, &(0x7f00000007c0)=ANY=[@ANYBLOB="7f454c4602010801ffffffff0000000002000000030000002d000000000000004000000000000000de000000000000000200000007003800020000800300490f00000060ff7f000000040000000000000400000000000000010000000000000081000000000000000000000000000000060000000000000038d66a98da215c18c0a2957297549f9b759f1c5d6f218f29608c88d64836f29946832538f79d4bdfaf2268cd2d5dc49c0f24165b54b205abe4352fb23bc33e511c7f9ec2c9339c11b7c97f110c4416402a4738d01be4a4d4a3afd7f70e53c4ce13ddf4f359cf5eb4b31d7cbc21674ee23a19021c04525171416afa7f0bfe11d0bce2afbfe8db3ffbce7b04bc66daea9c2302660dd5c10d7b8afca74709e247595880b057e14bfd6f0c201d9f644ab58268d0146ec7b1701f81307b1c04f69fda782ad6f6c21bcffdd569e164be8277dc0d8c77e06d179de4ffb00d18e40535bc11fd5cedfd7a660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f9ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007ef00406e4fdd2ebf3ffac60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006a43971c6cb917f15ea2b6709e9ce47a78a81007d759a2c6a48fb32f1e9234bfe503c08960199fee68c57cb90047e09275150b0db37c1d0406150ee9cdaa3f25742ee7ada40c691b9ba70e739de3f3f88b477eef0cb5c22ba638b7c00c38da092ce5e015e19ecbbee2ddade65934"], 0x55f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2504
remove dir: /root/cephfs-client/dfs-0-587
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-588 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-588
receive_execute: 9, 17
receive_execute: 5, 17
receive_execute: 8, 17
receive_execute: 8, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 423, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2584, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1955, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1013
time breakdown 3: 26, 5, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4171, flag collect 0
----- executor 2 signal number : 2162
executor 2 server cover_cnt 3 output_pos_value 3249
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 6, 0
time breakdown 2: 22, 6, 0
before receive testcase: 0 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 24
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 7 replies
2023/03/27 12:13:24 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 3 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 2162 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 6
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x123740, 0x0)
r0 = open$dir(&(0x7f0000000200)='./file0\x00', 0x0, 0x0)
r1 = open(&(0x7f0000000480)='./file0\x00', 0x2, 0x0)
r2 = dup2(r1, r1)
r3 = dup2(r2, r0)
pwrite64(r3, &(0x7f0000000040)="fd", 0x1, 0x400040000000000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 840
remove dir: /root/cephfs-client/dfs-0-588
remove dir time 2
-----finish removing dir
time breakdown 0: 25, 6, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-589 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-589
receive_execute: 2, 5
receive_execute: 1, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 5
receive_execute: 2, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 2587, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2587, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2587, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2587, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 2587, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 25, pid 2587, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 25, flag collect 0
----- executor 3 signal number : 25
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 5, 1
execute_one time: 1, 9
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11492, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1290
----- executor 2 executes write_coverage_signal cov->size 350, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 16088, flag collect 0
----- executor 2 signal number : 1006
----- executor 2 executes write_coverage_signal cov->size 17040, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 5, 14, 0
time breakdown 3: 9, 12, 0
before receive testcase: 0 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 5671
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28208, flag collect 0
----- executor 2 signal number : 1868
----- executor 2 executes write_coverage_signal cov->size 22688, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4611
executor 2 server cover_cnt 7 output_pos_value 14540
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 22
2023/03/27 12:13:24 ----- PS len: 4
time breakdown 2: 7, 17, 0
2023/03/27 12:13:24 [CLIENT] executor 3 has 6 replies
2023/03/27 12:13:24 fuzzer receive 479 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 12:13:24 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 2 has 7 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1290 signal and 0 cover from userspace component
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1006 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 5671 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1868 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 4611 signal and 0 cover from userspace component
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 14
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
r1 = open$dir(&(0x7f0000000140)='./file0\x00', 0x0, 0x10)
fremovexattr(r0, &(0x7f0000000400)=@known='trusted.syz\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000480), &(0x7f0000000440)=ANY=[@ANYRES16=r1, @ANYRES16=r0, @ANYRESOCT=r0, @ANYRES64, @ANYRESDEC=r1], 0x16, 0x0)
r2 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x8, 0x0)
setxattr$security_selinux(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='system_u:object_r:dmesg_exec_t:s0\x00', 0x22, 0x1)
fcntl$notify(r2, 0x402, 0x14)
lsetxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=@random={'os2.', '%@u,+-)\x00'}, &(0x7f0000000300)='user.incfs.size\x00', 0x10, 0x2)
setxattr$user(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)='-/\x00', 0x3, 0x1)
dup(r2)
removexattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100)=@known='security.selinux\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2848
remove dir: /root/cephfs-client/dfs-0-589
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-590 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-590
receive_execute: 4, 9
receive_execute: 7, 9
receive_execute: 5, 9
receive_execute: 8, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2590, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 104
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 305, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 3 signal number : 23
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 555, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 555, flag collect 0
----- executor 3 signal number : 22
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 444, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 2590, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 5, 0
execute_one time: 1, 19
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 23, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 1456, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 25055, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1017
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 15, 24, 0
time breakdown 0: 16, 24, 0
before receive testcase: 0 1
----- executor 2 signal number : 7478
----- executor 2 executes write_coverage_signal cov->size 3806, flag collect 0
----- executor 2 signal number : 393
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1835
----- executor 2 executes write_coverage_signal cov->size 24266, flag collect 0
----- executor 2 signal number : 4797
executor 2 server cover_cnt 8 output_pos_value 17006
before receive testcase: 0 0
before receive testcase: 0 1
time breakdown 2: 13, 28, 0
before receive testcase: 0 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 46
2023/03/27 12:13:24 ----- PS len: 4
2023/03/27 12:13:24 [CLIENT] executor 3 has 14 replies
2023/03/27 12:13:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1017 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7478 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 393 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1835 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 4797 signal and 0 cover from userspace component
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 251 ftruncate ftruncate
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2341 lchown lchown
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2749 pwrite64 pwrite64
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- generateCall 2458 open open
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 11
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x145241, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x28202, 0x0)
write$binfmt_misc(r1, &(0x7f0000000540)=ANY=[@ANYBLOB="632167729ff0d59202b36e67ca3c8144e8d087b611d7c0a5bcfe98030bf40740e0ffe2f1b03493f0efa04085656142e4b33660f49f88a85d4e82afc55a1ead8422cffface88c917ec6bcd37b42d97c81fbe4b43d5c07bd77cd50d85bc67a24f4156f40c13da619f6c8904641da714a4fe748415d01ff2dd3c2a509880a81624df5463d35f8b31ccf4a955d0f6e5d467dfcb0d6757905d8ad9e89e0ae0de5b7ec0000000000001000d81348696f5564509c717b0605810bd10430fab0b871e17aa525b4cf74d9fee0fe9d9a958fd000073d83f0975191dd06c02ea61179d20f123d17611c54690ae9d9e32508f3e28607183564622a8fd6c0075a30553e46407509fd8d4b0dd6414de7ffc7fa67a1c15550e668ac15c3c23e3b12ad240a863169840ae40dc7abe87427484d5096d78b000295701ad02cf627fee78ec8496ce95dcba84dcf859f35aa0ca4daa453b74a44457004014f2400cdb3ff69f7adc963c22f05dcca9ca71967d192e5816c21104490bca51431a38110bef7a3071d1f6b88e25781d82691366b0afd85c7c53b8f123379bfd6faec74c051310f962b40f87a4e870ed8048c28c1430424834e72654a977226fa63ed6843ab50f690d7a0a4b8c49a8b13b21d79d8198d0f9f36e111a0dbee75fbd85b8e8c860ebfa2385dfd0b8407ee05f9bdb5ee7a2f3d8798bba1486807de329b5333fec43a55c309b44035594e9260f87fe3c02e701bb5bb29aa91717b741c176d6c5eaa74ddf4dcaf40b7bd3c71a4010bd04b5afa26859c1d4ba23d7c8ac9e87e6a587d5bb87bb06db2814ea7f349d66c145163c08f178e71877e9ddc6f9ccb32728a50c9880531c3b5b165f97349dc487cf8088f05ffb0a4b09d8a9db80403b56a3e716eb75b4c84c845760ca9b8a2df3e55da8cc22e95e0c6a3b405acfc07a8135553686ab3a1505868e6127117185519defd72102a4c65e14f72931e5a1730836d6eca91a09734c5d054c1880e2fe822217ac056163de514b0303a8ead2f2609eef657c7f93c66ae2a86a9b2e6d3f958e984a1d8342c1c4f6e88ea049f832dae7cab363eaed9f405cd279140f71d7d56be401bbcf9ad9b29c30c5122d89c136f2347ec07398fa1d412a67b8edaeff5544ddcad8db453b004680c608af0d89baebba1f8f0b96a3fcd5b7e3596"], 0x4)
lchown(&(0x7f0000000140)='./file1\x00', 0xee01, 0xffffffffffffffff)
ftruncate(r0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000180)='./file1\x00')
pwrite64(r1, &(0x7f00000001c0)="506688bd8e0218bd328e1a981d5e4f1abc2b16174ee1b4fc3246ce04f6acb987f193034fc36f49d3047e2dc234a8b454305836180ae65679588c85bddbdd0221a3c364b34e8329137daf4789d78f68a7a7a5d531c0bed78680aac8a5fcb77b8fb4b9205c2a9ae71a16bf5787353fb094a985ec2bcb0acf9ad0975aa9cb98e4c68aa41bf769327e2410fe36620211ea306198b43b43c9692491d474682efdbbb7e39aa7b3bdee9dd5037faaad30eec38e5fbc76b57a7eced4a72ba078d8c25153e2b861590f960772e979e49e45b17b59c4cb50cfff914f8ce2506a5e5d000636ae86f0bc7941408da1d5934c551b2307104b", 0xf2, 0x800)
writev(r0, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x1}], 0x1)
open(&(0x7f00000002c0)='./file1/file0\x00', 0x111001, 0x10)
r2 = fcntl$getown(r1, 0x9)
fcntl$setown(r0, 0x8, r2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2776
remove dir: /root/cephfs-client/dfs-0-590
remove dir time 20
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-591 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-591
receive_execute: 13, 23
receive_execute: 14, 23
receive_execute: 18, 23
receive_execute: 17, 23
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 2593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 186
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 384, pid 2593, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 3 signal number : 266
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 518, pid 2593, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 95
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2593, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 2593, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 50
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1927, pid 2593, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1927, flag collect 0
----- executor 3 signal number : 735
----- completed 8
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 19, 0
execute_one time: 1, 36
time breakdown 3: 41, 39, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26893, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 1 receive reply, reply.done 1
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1311
----- executor 2 executes write_coverage_signal cov->size 1020, flag collect 0
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 40, 41, 0
before receive testcase: 0 0
----- executor 2 signal number : 1069
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7429
----- executor 2 executes write_coverage_signal cov->size 2462, flag collect 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2028
----- executor 2 executes write_coverage_signal cov->size 32388, flag collect 0
time breakdown 1: 37, 41, 0
before receive testcase: 0 0
----- executor 2 signal number : 6602
executor 2 server cover_cnt 8 output_pos_value 18854
2023/03/27 12:13:24 for select break: 1
2023/03/27 12:13:24 --------- executor 2 receive reply, reply.done 1
2023/03/27 12:13:24 wg wait finish
2023/03/27 12:13:24 ------ all executors finish execution
2023/03/27 12:13:24 exec time: 70
2023/03/27 12:13:24 ----- PS len: 4
time breakdown 2: 36, 47, 0
2023/03/27 12:13:24 [CLIENT] executor 3 has 11 replies
2023/03/27 12:13:24 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 186 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 266 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 0 has 0 replies
2023/03/27 12:13:24 [SERVER] executor 2 has 8 replies
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1311 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 1069 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 7429 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 2028 signal and 0 cover from userspace component
2023/03/27 12:13:24 ------- fuzzer executor 2 receive 6602 signal and 0 cover from userspace component
2023/03/27 12:13:24 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 50 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 735 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 12:13:24 [SERVER] executor 1 has 0 replies
2023/03/27 12:13:24 fsMds: [map[] map[] map[] map[]]
2023/03/27 12:13:24 ----- no new client coverage: false, true
2023/03/27 12:13:24 mutate testcase with failures
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- insertCall()
2023/03/27 12:13:24 ----- mutateArg()
2023/03/27 12:13:24 HasCrashFail: false, .HasNetFail: false
2023/03/27 12:13:24 prog length: 20
2023/03/27 12:13:24 HasCrashFail:false HasNetFail:false
12:13:24 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x20040, 0x100)
r2 = fcntl$dupfd(r0, 0x0, r0)
fcntl$lock(r2, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x60)
fcntl$lock(r3, 0x26, &(0x7f0000000100)={0x1, 0x2, 0x20ff, 0x40})
r4 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r5 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r5, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x40000})
r6 = dup2(r4, r1)
r7 = fcntl$dupfd(r1, 0x406, r4)
fcntl$dupfd(r6, 0x0, r7)
fcntl$lock(r5, 0x6, &(0x7f0000000080)={0x0, 0x2, 0x7f14, 0x9})
r8 = fcntl$dupfd(r3, 0x406, r5)
fcntl$getownex(r7, 0x10, &(0x7f0000000200)={0x0, <r9=>0x0})
fcntl$lock(r8, 0x25, &(0x7f0000000180)={0x0, 0x1, 0x6, 0xd7bc, r9})
flock(r4, 0x6)
dup2(r0, 0xffffffffffffffff)
pread64(r8, &(0x7f0000000440)=""/201, 0xc9, 0x8)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3840
remove dir: /root/cephfs-client/dfs-0-591
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-592 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-592
receive_execute: 12, 12
receive_execute: 4, 12
receive_execute: 10, 12
receive_execute: 10, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2597, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2597, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2597, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2597, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 2597, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2597, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 12
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2597, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 205, pid 2597, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 205, flag collect 0
----- executor 3 signal number : 121
----- completed 19
execute_one loop: 0, 0, 1

VM DIAGNOSIS:
12:13:24  Registers:
info registers vcpu 0
RAX=ffffffff81d3b3f0 RBX=0000000000000000 RCX=0000000000000000 RDX=ff1100026562e7e0
RSI=ffffffff82607e30 RDI=000000000042d90e RBP=ffffffff82619280 RSP=ffffffff82607ea0
R8 =000000000042d90d R9 =0000000000000002 R10=000000000002d9c0 R11=0000000000000001
R12=ffffffff82619280 R13=ffffffff82619280 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81d3b3fb RFL=00000202 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=0000000116f24002 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=000000000000ff000000000000000000 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffff0000000000000000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032dc RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffc88 CR3=000000011310c006 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=000000000000024b0000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
